(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@T T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@T) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@88 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@88) (= (type $generated@@231) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@88)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@70))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@88) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@238 $generated@@237 $generated@@239) ($generated@@85 $generated@@238 $generated@@147 $generated@@239)))
 :pattern ( ($generated@@85 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@241 T@T) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@72 $generated@@241))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (= ($generated@@240 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert ($generated@@244 $generated@@151))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@161)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@70) (= (type $generated@@250) $generated@@70)) (= (type $generated@@251) $generated@@170)) (= (type $generated@@252) $generated@@170)) (= ($generated@@154 ($generated@@245 $generated@@251 $generated@@252) ($generated@@160 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@154 ($generated@@245 $generated@@251 $generated@@252) ($generated@@160 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) (= (type $generated@@254) $generated@@161)) (= ($generated@@167 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@167 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@258) $generated@@70)) (= ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@170) ($generated@@0 ($generated@@92 $generated@@257 $generated@@259))) ($generated@@246 $generated@@259 $generated@@258))
 :pattern ( ($generated@@92 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) ($generated@@0 ($generated@@92 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@92 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@170)) (= (type $generated@@273) $generated@@170)) (= (type $generated@@274) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@274)) (= ($generated@@85 ($generated@@245 $generated@@272 $generated@@273) ($generated@@160 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@85 ($generated@@245 $generated@@272 $generated@@273) ($generated@@160 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@75)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@161) (= ($generated@@159 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@161) ($generated@@159 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@170) (= (type $generated@@280) $generated@@170)) (= $generated@@278 ($generated@@245 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@159 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 19)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert ($generated@@244 $generated@@60))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@170)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@85 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@295) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@296) $generated@@170)) (= (type $generated@@297) $generated@@70)) ($generated@@143 $generated@@294 $generated@@295)) ($generated@@269 $generated@@296 $generated@@297 $generated@@294)) ($generated@@269 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@143 $generated@@294 $generated@@295) ($generated@@269 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@301) $generated@@70)) ($generated@@143 $generated@@298 $generated@@299)) ($generated@@85 $generated@@300 $generated@@301 $generated@@298)) ($generated@@85 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@143 $generated@@298 $generated@@299) ($generated@@85 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@303) $generated@@88)) (=> (and (and ($generated@@152 $generated@@302) (and (not (= $generated@@303 $generated@@148)) (= ($generated@@153 $generated@@303) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@151) $generated@@46 $generated@@302)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@151))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@87 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@90 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@87 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@92 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 20)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@92 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@92 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 21)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@87 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@348) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@346 $generated@@347 $generated@@348)) (and ($generated@@143 $generated@@347 $generated@@348) (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@73 (type $generated@@350))))
 (=> (and (and (= (type $generated@@349) $generated@@88) (= (type $generated@@350) ($generated@@72 $generated@@351))) (not ($generated@@244 $generated@@350))) (= ($generated@@94 ($generated@@92 $generated@@347 $generated@@349) $generated@@350) ($generated@@94 ($generated@@92 $generated@@348 $generated@@349) $generated@@350))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@348 $generated@@349) $generated@@350))
))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@90 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@87 $generated@@353 $generated@@2)) (= ($generated@@176 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@92 $generated@@352 $generated@@354))) (<= ($generated ($generated@@92 $generated@@352 $generated@@354)) ($generated@@304 $generated@@352))))
 :pattern ( ($generated@@92 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@176 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@170) ($generated@@246 $generated@@358 $generated@@147)) (and (= ($generated@@289 ($generated@@355 $generated@@88 $generated@@358)) $generated@@358) ($generated@@154 ($generated@@355 $generated@@88 $generated@@358) $generated@@147)))
 :pattern ( ($generated@@246 $generated@@358 $generated@@147))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@170) ($generated@@246 $generated@@359 $generated@@237)) (and (= ($generated@@289 ($generated@@355 $generated@@88 $generated@@359)) $generated@@359) ($generated@@154 ($generated@@355 $generated@@88 $generated@@359) $generated@@237)))
 :pattern ( ($generated@@246 $generated@@359 $generated@@237))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@88) (= ($generated@@154 $generated@@360 $generated@@237)  (and ($generated@@154 $generated@@360 $generated@@147) (not (= $generated@@360 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@360 $generated@@237))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@314 (type $generated@@361))))
(let (($generated@@363 ($generated@@313 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@312 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@311 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@310 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@314 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@87 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@314 (type $generated@@368))))
(let (($generated@@370 ($generated@@313 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@312 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@311 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@92 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@332 (type $generated@@372))))
(let (($generated@@374 ($generated@@331 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@330 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@329 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@328 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@332 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@87 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@332 (type $generated@@379))))
(let (($generated@@381 ($generated@@331 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@330 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@329 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@92 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@384) $generated@@70)) (= ($generated@@154 $generated@@383 ($generated@@175 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@383 $generated@@385)))) ($generated@@246 $generated@@385 $generated@@384))
 :pattern ( ($generated@@92 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@154 $generated@@383 ($generated@@175 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@387) $generated@@70)) (= (type $generated@@388) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@386 ($generated@@255 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@170) ($generated@@0 ($generated@@92 $generated@@386 $generated@@389))) ($generated@@269 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@92 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@85 $generated@@386 ($generated@@255 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@391) $generated@@70)) (= (type $generated@@392) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@390 ($generated@@260 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@170) ($generated@@0 ($generated@@92 $generated@@390 $generated@@393))) ($generated@@269 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@92 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@85 $generated@@390 ($generated@@260 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@92 ($generated@@305 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@92 ($generated@@305 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@314 (type $generated@@399))))
(let (($generated@@401 ($generated@@313 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@87 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@403) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@92 ($generated@@310 $generated@@402) ($generated@@168 ($generated@@355 $generated@@161 $generated@@403)))) (= ($generated@@92 ($generated@@397 $generated@@402) ($generated@@168 ($generated@@355 $generated@@161 $generated@@403))) ($generated@@169 ($generated@@355 $generated@@161 $generated@@403))))))
 :pattern ( ($generated@@92 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@332 (type $generated@@407))))
(let (($generated@@409 ($generated@@331 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@87 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@411) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@410) ($generated@@168 ($generated@@355 $generated@@161 $generated@@411)))) (= ($generated@@92 ($generated@@405 $generated@@410) ($generated@@168 ($generated@@355 $generated@@161 $generated@@411))) ($generated@@169 ($generated@@355 $generated@@161 $generated@@411))))))
 :pattern ( ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@313 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@312 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@92 ($generated@@365 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@92 ($generated@@310 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@92 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@412) $generated@@416))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@92 ($generated@@365 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@331 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@330 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@92 ($generated@@376 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@92 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@417) $generated@@421))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@425) $generated@@429))) (and ($generated@@269 ($generated@@92 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@269 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@85 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@70)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@433) $generated@@437))) (and ($generated@@269 ($generated@@92 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@269 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@439) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@438 $generated@@440))) (and ($generated@@143 $generated@@438 $generated@@439) ($generated@@143 $generated@@439 $generated@@440))) ($generated@@143 $generated@@438 $generated@@440))
 :pattern ( ($generated@@143 $generated@@438 $generated@@439) ($generated@@143 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@T) ) (! (= (type ($generated@@441 $generated@@442)) ($generated@@87 $generated@@442 $generated@@4))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@332 (type $generated@@443))))
(let (($generated@@445 ($generated@@331 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@330 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@329 $generated@@445 $generated@@444)) (= ($generated@@328 $generated@@443) ($generated@@441 $generated@@445))))))
 :pattern ( ($generated@@328 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@332 (type $generated@@446))))
(let (($generated@@448 ($generated@@331 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@330 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@329 $generated@@448 $generated@@447)) (= ($generated@@376 $generated@@446) ($generated@@441 $generated@@447))))))
 :pattern ( ($generated@@376 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@332 (type $generated@@449))))
(let (($generated@@451 ($generated@@331 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@330 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@329 $generated@@451 $generated@@450)) (= ($generated@@404 $generated@@449) ($generated@@441 $generated@@170))))))
 :pattern ( ($generated@@404 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@314 (type $generated@@452))))
(let (($generated@@454 ($generated@@313 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@312 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@311 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@170) (= (type $generated@@456) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@396 $generated@@452) ($generated@@289 ($generated@@245 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@396 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@332 (type $generated@@457))))
(let (($generated@@459 ($generated@@331 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@330 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@329 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@170) (= (type $generated@@461) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@404 $generated@@457) ($generated@@289 ($generated@@245 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@76)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@T) ) (!  (=> (and (= (type $generated@@464) $generated@@76) (= (type $generated@@465) $generated@@74)) (and (= ($generated@@462 ($generated@@240 $generated@@466 $generated@@464 $generated@@465)) $generated@@464) (= ($generated@@83 ($generated@@240 $generated@@466 $generated@@464 $generated@@465)) $generated@@465)))
 :pattern ( ($generated@@240 $generated@@466 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@170) ($generated@@246 $generated@@467 $generated@@46)) (and (= ($generated@@289 ($generated@@355 $generated@@2 $generated@@467)) $generated@@467) ($generated@@154 ($generated@@355 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@170) ($generated@@246 $generated@@468 $generated@@47)) (and (= ($generated@@289 ($generated@@355 $generated@@3 $generated@@468)) $generated@@468) ($generated@@154 ($generated@@355 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@170) ($generated@@246 $generated@@469 $generated@@44)) (and (= ($generated@@289 ($generated@@355 $generated@@4 $generated@@469)) $generated@@469) ($generated@@154 ($generated@@355 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 22))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@170) ($generated@@246 $generated@@471 $generated@@45)) (and (= ($generated@@289 ($generated@@355 $generated@@470 $generated@@471)) $generated@@471) ($generated@@154 ($generated@@355 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@246 ($generated@@289 $generated@@472) $generated@@473) ($generated@@154 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@246 ($generated@@289 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@90 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@87 $generated@@475 $generated@@2)) (<= 0 ($generated@@304 $generated@@474))))
 :pattern ( ($generated@@304 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@284 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@283 $generated@@477)) (<= 0 ($generated@@282 $generated@@476))))
 :pattern ( ($generated@@282 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@422 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@422 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@81 ($generated@@422 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@430 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@430 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@430 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@430 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@81 ($generated@@430 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (= ($generated@@275 ($generated@@245 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@245 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@160 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@160 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@160 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@160 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@170) (= (type $generated@@509) $generated@@170)) (= ($generated@@168 ($generated@@245 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@245 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@170) (= (type $generated@@511) $generated@@170)) (= ($generated@@169 ($generated@@245 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@245 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@284 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@283 $generated@@170)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@282 $generated@@518))) ($generated@@269 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@85 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@86 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@86 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@255 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@255 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@81 ($generated@@255 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@260 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@260 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@81 ($generated@@260 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@175 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@175 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@81 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@355 $generated@@541 ($generated@@289 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@289 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@154 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@542) $generated@@545))) (and ($generated@@246 ($generated@@92 ($generated@@397 $generated@@542) $generated@@545) $generated@@544) ($generated@@246 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@542) $generated@@545))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@154 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@154 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@546) $generated@@549))) (and ($generated@@246 ($generated@@92 ($generated@@405 $generated@@546) $generated@@549) $generated@@548) ($generated@@246 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@546) $generated@@549))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@154 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@170) (= (type $generated@@553) $generated@@170)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@245 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@245 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@170) (= (type $generated@@555) $generated@@170)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@245 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@245 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@170) (= (type $generated@@557) $generated@@70)) (= (type $generated@@558) $generated@@70)) ($generated@@246 $generated@@556 ($generated@@422 $generated@@557 $generated@@558))) (and (= ($generated@@289 ($generated@@355 ($generated@@312 $generated@@170 $generated@@170) $generated@@556)) $generated@@556) ($generated@@154 ($generated@@355 ($generated@@312 $generated@@170 $generated@@170) $generated@@556) ($generated@@422 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@246 $generated@@556 ($generated@@422 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@170) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) $generated@@70)) ($generated@@246 $generated@@559 ($generated@@430 $generated@@560 $generated@@561))) (and (= ($generated@@289 ($generated@@355 ($generated@@330 $generated@@170 $generated@@170) $generated@@559)) $generated@@559) ($generated@@154 ($generated@@355 ($generated@@330 $generated@@170 $generated@@170) $generated@@559) ($generated@@430 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@246 $generated@@559 ($generated@@430 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@170)) ($generated@@246 $generated@@564 ($generated@@160 $generated@@562 $generated@@563))) (and (= ($generated@@289 ($generated@@355 $generated@@161 $generated@@564)) $generated@@564) ($generated@@154 ($generated@@355 $generated@@161 $generated@@564) ($generated@@160 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@246 $generated@@564 ($generated@@160 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@92 ($generated@@441 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@92 ($generated@@441 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@550 ($generated@@289 $generated@@571)) ($generated@@551 $generated@@571)))
 :pattern ( ($generated@@550 ($generated@@289 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@246 $generated@@572 ($generated@@86 0))) (and (= ($generated@@289 ($generated@@355 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@246 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@246 $generated@@573 ($generated@@255 $generated@@574))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@255 $generated@@574))))
 :pattern ( ($generated@@246 $generated@@573 ($generated@@255 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@246 $generated@@575 ($generated@@260 $generated@@576))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@260 $generated@@576))))
 :pattern ( ($generated@@246 $generated@@575 ($generated@@260 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@246 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@246 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@246 $generated@@579 ($generated@@512 $generated@@580))) (and (= ($generated@@289 ($generated@@355 ($generated@@283 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@355 ($generated@@283 $generated@@170) $generated@@579) ($generated@@512 $generated@@580))))
 :pattern ( ($generated@@246 $generated@@579 ($generated@@512 $generated@@580)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@237) $generated@@66))
(assert (= ($generated@@567 $generated@@237) $generated@@68))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@581 $generated@@584)))) ($generated@@269 $generated@@584 $generated@@582 $generated@@583))
 :pattern ( ($generated@@92 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@161) (= (type $generated@@586) $generated@@70)) (= (type $generated@@587) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@587) (and ($generated@@159 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@70) ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@269 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@269 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@161) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@591) (and ($generated@@159 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@70) ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@269 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@269 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@170)) (= ($generated@@245 ($generated@@265 $generated@@593) ($generated@@265 $generated@@594)) ($generated@@265 ($generated@@245 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@593) ($generated@@265 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@289 ($generated@@265 $generated@@595)) ($generated@@265 ($generated@@289 $generated@@595)))
 :pattern ( ($generated@@289 ($generated@@265 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@284 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@283 $generated@@597)) (= ($generated@@282 $generated@@596) 0)) (= $generated@@596 ($generated@@281 $generated@@597))))
 :pattern ( ($generated@@282 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@87 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@304 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@304 $generated@@598) ($generated ($generated@@92 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@304 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@603) $generated@@2)) ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@605) $generated@@3)) ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@607) $generated@@4)) ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@609) $generated@@470)) ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@170)) ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@283 $generated@@170)) (= (type $generated@@613) $generated@@70)) (= ($generated@@154 $generated@@612 ($generated@@512 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@282 $generated@@612))) ($generated@@246 ($generated@@513 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@513 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@154 $generated@@612 ($generated@@512 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@283 $generated@@170)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@282 $generated@@616))) (< ($generated@@551 ($generated@@355 $generated@@161 ($generated@@513 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@551 ($generated@@355 $generated@@161 ($generated@@513 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@619) $generated@@70)) (= (type $generated@@620) $generated@@70)) ($generated@@154 $generated@@618 ($generated@@422 $generated@@619 $generated@@620))) (and (and ($generated@@154 ($generated@@310 $generated@@618) ($generated@@255 $generated@@619)) ($generated@@154 ($generated@@365 $generated@@618) ($generated@@255 $generated@@620))) ($generated@@154 ($generated@@396 $generated@@618) ($generated@@255 ($generated@@160 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@154 $generated@@618 ($generated@@422 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@154 $generated@@621 ($generated@@430 $generated@@622 $generated@@623))) (and (and ($generated@@154 ($generated@@328 $generated@@621) ($generated@@260 $generated@@622)) ($generated@@154 ($generated@@376 $generated@@621) ($generated@@260 $generated@@623))) ($generated@@154 ($generated@@404 $generated@@621) ($generated@@260 ($generated@@160 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@154 $generated@@621 ($generated@@430 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@154 $generated@@624 $generated@@46))
 :pattern ( ($generated@@154 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@154 $generated@@625 $generated@@47))
 :pattern ( ($generated@@154 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@154 $generated@@626 $generated@@44))
 :pattern ( ($generated@@154 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@470) ($generated@@154 $generated@@627 $generated@@45))
 :pattern ( ($generated@@154 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@170) ($generated@@154 $generated@@628 $generated@@48))
 :pattern ( ($generated@@154 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@T T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@T) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@88 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@88) (= (type $generated@@231) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@88)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@70))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@88) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@238 $generated@@237 $generated@@239) ($generated@@85 $generated@@238 $generated@@147 $generated@@239)))
 :pattern ( ($generated@@85 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@241 T@T) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@72 $generated@@241))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (= ($generated@@240 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert ($generated@@244 $generated@@151))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@161)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@70) (= (type $generated@@250) $generated@@70)) (= (type $generated@@251) $generated@@170)) (= (type $generated@@252) $generated@@170)) (= ($generated@@154 ($generated@@245 $generated@@251 $generated@@252) ($generated@@160 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@154 ($generated@@245 $generated@@251 $generated@@252) ($generated@@160 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) (= (type $generated@@254) $generated@@161)) (= ($generated@@167 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@167 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@258) $generated@@70)) (= ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@170) ($generated@@0 ($generated@@92 $generated@@257 $generated@@259))) ($generated@@246 $generated@@259 $generated@@258))
 :pattern ( ($generated@@92 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) ($generated@@0 ($generated@@92 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@92 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@170)) (= (type $generated@@273) $generated@@170)) (= (type $generated@@274) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@274)) (= ($generated@@85 ($generated@@245 $generated@@272 $generated@@273) ($generated@@160 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@85 ($generated@@245 $generated@@272 $generated@@273) ($generated@@160 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@75)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@161) (= ($generated@@159 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@161) ($generated@@159 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@170) (= (type $generated@@280) $generated@@170)) (= $generated@@278 ($generated@@245 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@159 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 19)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert ($generated@@244 $generated@@60))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@170)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@85 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@295) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@296) $generated@@170)) (= (type $generated@@297) $generated@@70)) ($generated@@143 $generated@@294 $generated@@295)) ($generated@@269 $generated@@296 $generated@@297 $generated@@294)) ($generated@@269 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@143 $generated@@294 $generated@@295) ($generated@@269 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@301) $generated@@70)) ($generated@@143 $generated@@298 $generated@@299)) ($generated@@85 $generated@@300 $generated@@301 $generated@@298)) ($generated@@85 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@143 $generated@@298 $generated@@299) ($generated@@85 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@303) $generated@@88)) (=> (and (and ($generated@@152 $generated@@302) (and (not (= $generated@@303 $generated@@148)) (= ($generated@@153 $generated@@303) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@151) $generated@@46 $generated@@302)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@151))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@87 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@90 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@87 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@92 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 20)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@92 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@92 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 21)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@87 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@348) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@346 $generated@@347 $generated@@348)) (and ($generated@@143 $generated@@347 $generated@@348) (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@73 (type $generated@@350))))
 (=> (and (and (= (type $generated@@349) $generated@@88) (= (type $generated@@350) ($generated@@72 $generated@@351))) (not ($generated@@244 $generated@@350))) (= ($generated@@94 ($generated@@92 $generated@@347 $generated@@349) $generated@@350) ($generated@@94 ($generated@@92 $generated@@348 $generated@@349) $generated@@350))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@348 $generated@@349) $generated@@350))
))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@90 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@87 $generated@@353 $generated@@2)) (= ($generated@@176 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@92 $generated@@352 $generated@@354))) (<= ($generated ($generated@@92 $generated@@352 $generated@@354)) ($generated@@304 $generated@@352))))
 :pattern ( ($generated@@92 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@176 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@170) ($generated@@246 $generated@@358 $generated@@147)) (and (= ($generated@@289 ($generated@@355 $generated@@88 $generated@@358)) $generated@@358) ($generated@@154 ($generated@@355 $generated@@88 $generated@@358) $generated@@147)))
 :pattern ( ($generated@@246 $generated@@358 $generated@@147))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@170) ($generated@@246 $generated@@359 $generated@@237)) (and (= ($generated@@289 ($generated@@355 $generated@@88 $generated@@359)) $generated@@359) ($generated@@154 ($generated@@355 $generated@@88 $generated@@359) $generated@@237)))
 :pattern ( ($generated@@246 $generated@@359 $generated@@237))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@88) (= ($generated@@154 $generated@@360 $generated@@237)  (and ($generated@@154 $generated@@360 $generated@@147) (not (= $generated@@360 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@360 $generated@@237))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@314 (type $generated@@361))))
(let (($generated@@363 ($generated@@313 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@312 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@311 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@310 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@314 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@87 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@314 (type $generated@@368))))
(let (($generated@@370 ($generated@@313 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@312 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@311 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@92 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@332 (type $generated@@372))))
(let (($generated@@374 ($generated@@331 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@330 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@329 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@328 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@332 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@87 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@332 (type $generated@@379))))
(let (($generated@@381 ($generated@@331 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@330 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@329 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@92 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@384) $generated@@70)) (= ($generated@@154 $generated@@383 ($generated@@175 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@383 $generated@@385)))) ($generated@@246 $generated@@385 $generated@@384))
 :pattern ( ($generated@@92 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@154 $generated@@383 ($generated@@175 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@387) $generated@@70)) (= (type $generated@@388) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@386 ($generated@@255 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@170) ($generated@@0 ($generated@@92 $generated@@386 $generated@@389))) ($generated@@269 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@92 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@85 $generated@@386 ($generated@@255 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@391) $generated@@70)) (= (type $generated@@392) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@390 ($generated@@260 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@170) ($generated@@0 ($generated@@92 $generated@@390 $generated@@393))) ($generated@@269 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@92 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@85 $generated@@390 ($generated@@260 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@92 ($generated@@305 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@92 ($generated@@305 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@314 (type $generated@@399))))
(let (($generated@@401 ($generated@@313 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@87 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@403) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@92 ($generated@@310 $generated@@402) ($generated@@168 ($generated@@355 $generated@@161 $generated@@403)))) (= ($generated@@92 ($generated@@397 $generated@@402) ($generated@@168 ($generated@@355 $generated@@161 $generated@@403))) ($generated@@169 ($generated@@355 $generated@@161 $generated@@403))))))
 :pattern ( ($generated@@92 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@332 (type $generated@@407))))
(let (($generated@@409 ($generated@@331 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@87 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@411) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@410) ($generated@@168 ($generated@@355 $generated@@161 $generated@@411)))) (= ($generated@@92 ($generated@@405 $generated@@410) ($generated@@168 ($generated@@355 $generated@@161 $generated@@411))) ($generated@@169 ($generated@@355 $generated@@161 $generated@@411))))))
 :pattern ( ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@313 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@312 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@92 ($generated@@365 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@92 ($generated@@310 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@92 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@412) $generated@@416))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@92 ($generated@@365 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@331 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@330 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@92 ($generated@@376 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@92 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@417) $generated@@421))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@425) $generated@@429))) (and ($generated@@269 ($generated@@92 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@269 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@85 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@70)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@433) $generated@@437))) (and ($generated@@269 ($generated@@92 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@269 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@439) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@438 $generated@@440))) (and ($generated@@143 $generated@@438 $generated@@439) ($generated@@143 $generated@@439 $generated@@440))) ($generated@@143 $generated@@438 $generated@@440))
 :pattern ( ($generated@@143 $generated@@438 $generated@@439) ($generated@@143 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@T) ) (! (= (type ($generated@@441 $generated@@442)) ($generated@@87 $generated@@442 $generated@@4))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@332 (type $generated@@443))))
(let (($generated@@445 ($generated@@331 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@330 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@329 $generated@@445 $generated@@444)) (= ($generated@@328 $generated@@443) ($generated@@441 $generated@@445))))))
 :pattern ( ($generated@@328 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@332 (type $generated@@446))))
(let (($generated@@448 ($generated@@331 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@330 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@329 $generated@@448 $generated@@447)) (= ($generated@@376 $generated@@446) ($generated@@441 $generated@@447))))))
 :pattern ( ($generated@@376 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@332 (type $generated@@449))))
(let (($generated@@451 ($generated@@331 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@330 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@329 $generated@@451 $generated@@450)) (= ($generated@@404 $generated@@449) ($generated@@441 $generated@@170))))))
 :pattern ( ($generated@@404 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@314 (type $generated@@452))))
(let (($generated@@454 ($generated@@313 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@312 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@311 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@170) (= (type $generated@@456) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@396 $generated@@452) ($generated@@289 ($generated@@245 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@396 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@332 (type $generated@@457))))
(let (($generated@@459 ($generated@@331 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@330 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@329 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@170) (= (type $generated@@461) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@404 $generated@@457) ($generated@@289 ($generated@@245 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@76)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@T) ) (!  (=> (and (= (type $generated@@464) $generated@@76) (= (type $generated@@465) $generated@@74)) (and (= ($generated@@462 ($generated@@240 $generated@@466 $generated@@464 $generated@@465)) $generated@@464) (= ($generated@@83 ($generated@@240 $generated@@466 $generated@@464 $generated@@465)) $generated@@465)))
 :pattern ( ($generated@@240 $generated@@466 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@170) ($generated@@246 $generated@@467 $generated@@46)) (and (= ($generated@@289 ($generated@@355 $generated@@2 $generated@@467)) $generated@@467) ($generated@@154 ($generated@@355 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@170) ($generated@@246 $generated@@468 $generated@@47)) (and (= ($generated@@289 ($generated@@355 $generated@@3 $generated@@468)) $generated@@468) ($generated@@154 ($generated@@355 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@170) ($generated@@246 $generated@@469 $generated@@44)) (and (= ($generated@@289 ($generated@@355 $generated@@4 $generated@@469)) $generated@@469) ($generated@@154 ($generated@@355 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 22))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@170) ($generated@@246 $generated@@471 $generated@@45)) (and (= ($generated@@289 ($generated@@355 $generated@@470 $generated@@471)) $generated@@471) ($generated@@154 ($generated@@355 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@246 ($generated@@289 $generated@@472) $generated@@473) ($generated@@154 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@246 ($generated@@289 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@90 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@87 $generated@@475 $generated@@2)) (<= 0 ($generated@@304 $generated@@474))))
 :pattern ( ($generated@@304 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@284 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@283 $generated@@477)) (<= 0 ($generated@@282 $generated@@476))))
 :pattern ( ($generated@@282 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@422 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@422 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@81 ($generated@@422 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@430 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@430 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@430 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@430 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@81 ($generated@@430 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (= ($generated@@275 ($generated@@245 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@245 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@160 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@160 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@160 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@160 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@170) (= (type $generated@@509) $generated@@170)) (= ($generated@@168 ($generated@@245 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@245 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@170) (= (type $generated@@511) $generated@@170)) (= ($generated@@169 ($generated@@245 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@245 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@284 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@283 $generated@@170)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@282 $generated@@518))) ($generated@@269 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@85 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@86 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@86 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@255 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@255 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@81 ($generated@@255 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@260 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@260 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@81 ($generated@@260 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@175 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@175 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@81 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@355 $generated@@541 ($generated@@289 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@289 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@154 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@542) $generated@@545))) (and ($generated@@246 ($generated@@92 ($generated@@397 $generated@@542) $generated@@545) $generated@@544) ($generated@@246 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@542) $generated@@545))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@154 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@154 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@546) $generated@@549))) (and ($generated@@246 ($generated@@92 ($generated@@405 $generated@@546) $generated@@549) $generated@@548) ($generated@@246 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@546) $generated@@549))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@154 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@170) (= (type $generated@@553) $generated@@170)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@245 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@245 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@170) (= (type $generated@@555) $generated@@170)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@245 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@245 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@170) (= (type $generated@@557) $generated@@70)) (= (type $generated@@558) $generated@@70)) ($generated@@246 $generated@@556 ($generated@@422 $generated@@557 $generated@@558))) (and (= ($generated@@289 ($generated@@355 ($generated@@312 $generated@@170 $generated@@170) $generated@@556)) $generated@@556) ($generated@@154 ($generated@@355 ($generated@@312 $generated@@170 $generated@@170) $generated@@556) ($generated@@422 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@246 $generated@@556 ($generated@@422 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@170) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) $generated@@70)) ($generated@@246 $generated@@559 ($generated@@430 $generated@@560 $generated@@561))) (and (= ($generated@@289 ($generated@@355 ($generated@@330 $generated@@170 $generated@@170) $generated@@559)) $generated@@559) ($generated@@154 ($generated@@355 ($generated@@330 $generated@@170 $generated@@170) $generated@@559) ($generated@@430 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@246 $generated@@559 ($generated@@430 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@170)) ($generated@@246 $generated@@564 ($generated@@160 $generated@@562 $generated@@563))) (and (= ($generated@@289 ($generated@@355 $generated@@161 $generated@@564)) $generated@@564) ($generated@@154 ($generated@@355 $generated@@161 $generated@@564) ($generated@@160 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@246 $generated@@564 ($generated@@160 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@92 ($generated@@441 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@92 ($generated@@441 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@550 ($generated@@289 $generated@@571)) ($generated@@551 $generated@@571)))
 :pattern ( ($generated@@550 ($generated@@289 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@246 $generated@@572 ($generated@@86 0))) (and (= ($generated@@289 ($generated@@355 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@246 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@246 $generated@@573 ($generated@@255 $generated@@574))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@255 $generated@@574))))
 :pattern ( ($generated@@246 $generated@@573 ($generated@@255 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@246 $generated@@575 ($generated@@260 $generated@@576))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@260 $generated@@576))))
 :pattern ( ($generated@@246 $generated@@575 ($generated@@260 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@246 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@246 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@246 $generated@@579 ($generated@@512 $generated@@580))) (and (= ($generated@@289 ($generated@@355 ($generated@@283 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@355 ($generated@@283 $generated@@170) $generated@@579) ($generated@@512 $generated@@580))))
 :pattern ( ($generated@@246 $generated@@579 ($generated@@512 $generated@@580)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@237) $generated@@66))
(assert (= ($generated@@567 $generated@@237) $generated@@68))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@581 $generated@@584)))) ($generated@@269 $generated@@584 $generated@@582 $generated@@583))
 :pattern ( ($generated@@92 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@161) (= (type $generated@@586) $generated@@70)) (= (type $generated@@587) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@587) (and ($generated@@159 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@70) ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@269 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@269 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@161) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@591) (and ($generated@@159 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@70) ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@269 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@269 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@170)) (= ($generated@@245 ($generated@@265 $generated@@593) ($generated@@265 $generated@@594)) ($generated@@265 ($generated@@245 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@593) ($generated@@265 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@289 ($generated@@265 $generated@@595)) ($generated@@265 ($generated@@289 $generated@@595)))
 :pattern ( ($generated@@289 ($generated@@265 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@284 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@283 $generated@@597)) (= ($generated@@282 $generated@@596) 0)) (= $generated@@596 ($generated@@281 $generated@@597))))
 :pattern ( ($generated@@282 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@87 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@304 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@304 $generated@@598) ($generated ($generated@@92 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@304 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@603) $generated@@2)) ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@605) $generated@@3)) ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@607) $generated@@4)) ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@609) $generated@@470)) ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@170)) ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@283 $generated@@170)) (= (type $generated@@613) $generated@@70)) (= ($generated@@154 $generated@@612 ($generated@@512 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@282 $generated@@612))) ($generated@@246 ($generated@@513 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@513 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@154 $generated@@612 ($generated@@512 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@283 $generated@@170)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@282 $generated@@616))) (< ($generated@@551 ($generated@@355 $generated@@161 ($generated@@513 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@551 ($generated@@355 $generated@@161 ($generated@@513 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@619) $generated@@70)) (= (type $generated@@620) $generated@@70)) ($generated@@154 $generated@@618 ($generated@@422 $generated@@619 $generated@@620))) (and (and ($generated@@154 ($generated@@310 $generated@@618) ($generated@@255 $generated@@619)) ($generated@@154 ($generated@@365 $generated@@618) ($generated@@255 $generated@@620))) ($generated@@154 ($generated@@396 $generated@@618) ($generated@@255 ($generated@@160 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@154 $generated@@618 ($generated@@422 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@154 $generated@@621 ($generated@@430 $generated@@622 $generated@@623))) (and (and ($generated@@154 ($generated@@328 $generated@@621) ($generated@@260 $generated@@622)) ($generated@@154 ($generated@@376 $generated@@621) ($generated@@260 $generated@@623))) ($generated@@154 ($generated@@404 $generated@@621) ($generated@@260 ($generated@@160 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@154 $generated@@621 ($generated@@430 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@154 $generated@@624 $generated@@46))
 :pattern ( ($generated@@154 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@154 $generated@@625 $generated@@47))
 :pattern ( ($generated@@154 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@154 $generated@@626 $generated@@44))
 :pattern ( ($generated@@154 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@470) ($generated@@154 $generated@@627 $generated@@45))
 :pattern ( ($generated@@154 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@170) ($generated@@154 $generated@@628 $generated@@48))
 :pattern ( ($generated@@154 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@629) ($generated@@183 $generated@@88 $generated@@4)) (= (type $generated@@630) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@632) $generated@@88)) (= (type $generated@@633) $generated@@88)) (= (type $generated@@634) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@636) $generated@@88)) (= (type $generated@@638) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@640  (=> (and (and (= $generated@@629 ($generated@@182 $generated@@148 $generated@@630 $generated@@60 false)) (= $generated@@631 ($generated ($generated@@94 ($generated@@92 $generated@@630 $generated@@632) $generated@@151)))) (and (not (= $generated@@633 $generated@@148)) (and ($generated@@154 $generated@@633 $generated@@237) ($generated@@85 $generated@@633 $generated@@237 $generated@@630)))) (=> (and (and (and ($generated@@152 $generated@@634) ($generated@@635 $generated@@634)) (and (not (= $generated@@636 $generated@@148)) (and ($generated@@154 $generated@@636 $generated@@237) ($generated@@85 $generated@@636 $generated@@237 $generated@@634)))) (and (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@630 $generated@@636) $generated@@60))) (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@88) (=> (and (not (= $generated@@641 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@630 $generated@@641) $generated@@60))) (= ($generated@@92 $generated@@634 $generated@@641) ($generated@@92 $generated@@630 $generated@@641))))
 :pattern ( ($generated@@92 $generated@@634 $generated@@641))
))) (and ($generated@@143 $generated@@630 $generated@@634) (= (ControlFlow 0 2) (- 0 1))))) true))))
(let (($generated@@642  (=> (and ($generated@@152 $generated@@630) ($generated@@635 $generated@@630)) (=> (and (and (and (not (= $generated@@632 $generated@@148)) (and ($generated@@154 $generated@@632 $generated@@237) ($generated@@85 $generated@@632 $generated@@237 $generated@@630))) (=> $generated@@637 (and ($generated@@154 $generated@@638 $generated@@237) ($generated@@85 $generated@@638 $generated@@237 $generated@@630)))) (and (= 1 $generated@@639) (= (ControlFlow 0 3) 2))) $generated@@640))))
$generated@@642)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
