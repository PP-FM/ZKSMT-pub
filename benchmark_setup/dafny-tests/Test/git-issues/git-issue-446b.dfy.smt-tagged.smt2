(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@157 (T@U Int) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@262 (T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Bool)
(declare-fun $generated@@294 (T@U T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (T@U T@U) Bool)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@T) T@U)
(declare-fun $generated@@356 (T@T T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@494 () T@T)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@78) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85)) $generated@@78)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@86)) $generated@@68)
 :pattern ( ($generated@@81 $generated@@86))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and (= (type $generated@@87) $generated@@68) (= (type $generated@@88) $generated@@68)) (= (type $generated@@89) $generated@@78)) (or ($generated@@79 $generated@@87 $generated@@88 $generated@@89) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@89 ($generated@@81 $generated@@87)) ($generated@@82 $generated@@89))))) ($generated@@80 ($generated@@77 $generated@@87 $generated@@88 $generated@@89) ($generated@@81 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@69)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@78) (= (type $generated@@156) $generated@@78)) (and ($generated@@151 $generated@@155) ($generated@@151 $generated@@156))) (= ($generated@@150 $generated@@155 $generated@@156) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@155))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@156))
)))
(assert  (and (and (and (and (forall (($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@164)) 16)) (forall (($generated@@165 T@T) ) (! (= ($generated@@163 ($generated@@159 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165))
))) (forall (($generated@@166 T@U) ($generated@@167 Int) ) (! (let (($generated@@168 ($generated@@163 (type $generated@@166))))
(= (type ($generated@@157 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@157 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@158 $generated@@169)) $generated@@78)
 :pattern ( ($generated@@158 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@162 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (= (type $generated@@172) ($generated@@159 $generated@@153)) (=> (and (<= 0 $generated@@173) (< $generated@@173 ($generated@@160 $generated@@172))) (< ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@172 $generated@@173))) ($generated@@161 ($generated@@158 $generated@@172)))))
 :pattern ( ($generated@@157 $generated@@172 $generated@@173) ($generated@@158 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@80 $generated@@174 ($generated@@93 0)))
 :pattern ( ($generated@@80 $generated@@174 ($generated@@93 0)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@177 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@68) (= (type $generated@@180) $generated@@68)) (= (type $generated@@181) $generated@@78)) ($generated@@80 $generated@@181 ($generated@@176 $generated@@179 $generated@@180))) ($generated@@175 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181) ($generated@@80 $generated@@181 ($generated@@176 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@153)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@153)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@78) (= (type $generated@@188) $generated@@78)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@68)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@193) $generated@@68)) ($generated@@80 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@80 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 17)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@95 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@71 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@95) (= (type $generated@@244) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@245) ($generated@@70 $generated@@4))) (= (type $generated@@247) $generated@@95)) (= (type $generated@@248) ($generated@@70 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@196 $generated@@95 $generated@@4))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@71 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@95) (= (type $generated@@256) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@257) ($generated@@70 $generated@@4))) (= (type $generated@@259) $generated@@95)) (= (type $generated@@260) ($generated@@70 $generated@@261))) (= ($generated@@0 ($generated@@194 ($generated@@250 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@194 ($generated@@250 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@78)
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@153)) (= (type $generated@@269) $generated@@153)) (= ($generated@@80 ($generated@@262 $generated@@268 $generated@@269) ($generated@@176 $generated@@266 $generated@@267))  (and ($generated@@263 $generated@@268 $generated@@266) ($generated@@263 $generated@@269 $generated@@267))))
 :pattern ( ($generated@@80 ($generated@@262 $generated@@268 $generated@@269) ($generated@@176 $generated@@266 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@78) (= (type $generated@@271) $generated@@78)) (= ($generated@@182 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@182 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@78) (= (type $generated@@273) $generated@@78)) (= ($generated@@150 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@150 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@68)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@277) $generated@@68)) (= ($generated@@80 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@153) ($generated@@0 ($generated@@99 $generated@@276 $generated@@278))) ($generated@@263 $generated@@278 $generated@@277))
 :pattern ( ($generated@@99 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@80 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@282) $generated@@68)) (= ($generated@@80 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@153) ($generated@@0 ($generated@@99 $generated@@281 $generated@@283))) ($generated@@263 $generated@@283 $generated@@282))
 :pattern ( ($generated@@99 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@80 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@284 $generated@@285)) $generated@@286))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= ($generated@@284 $generated@@287) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@159 $generated@@153))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) $generated@@68) (= (type $generated@@291) $generated@@68)) (= (type $generated@@292) $generated@@78)) (or ($generated@@79 $generated@@290 $generated@@291 ($generated@@284 $generated@@292)) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@292 ($generated@@81 $generated@@290)) ($generated@@0 ($generated@@284 ($generated@@11 ($generated@@82 ($generated@@284 $generated@@292))))))))) (= ($generated@@77 $generated@@290 $generated@@291 ($generated@@284 $generated@@292)) ($generated@@284 ($generated@@158 ($generated@@284 ($generated@@288 ($generated@@284 $generated@@292)))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@290 $generated@@291 ($generated@@284 $generated@@292)))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) $generated@@68) (= (type $generated@@296) $generated@@68)) (= (type $generated@@297) $generated@@153)) (= (type $generated@@298) $generated@@153)) (= (type $generated@@299) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@293 $generated@@299)) (= ($generated@@92 ($generated@@262 $generated@@297 $generated@@298) ($generated@@176 $generated@@295 $generated@@296) $generated@@299)  (and ($generated@@294 $generated@@297 $generated@@295 $generated@@299) ($generated@@294 $generated@@298 $generated@@296 $generated@@299))))
 :pattern ( ($generated@@92 ($generated@@262 $generated@@297 $generated@@298) ($generated@@176 $generated@@295 $generated@@296) $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@72)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@78) (= ($generated@@175 $generated@@302) (= ($generated@@300 $generated@@302) $generated@@61)))
 :pattern ( ($generated@@175 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@78) (= ($generated@@151 $generated@@303) (= ($generated@@300 $generated@@303) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@78) (= ($generated@@82 $generated@@304) (= ($generated@@300 $generated@@304) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@163 (type $generated@@306))))
 (=> (and (= (type $generated@@306) ($generated@@159 $generated@@308)) (= (type $generated@@307) ($generated@@159 $generated@@308))) (= ($generated@@305 $generated@@306 $generated@@307)  (and (= ($generated@@160 $generated@@306) ($generated@@160 $generated@@307)) (forall (($generated@@309 Int) ) (!  (=> (and (<= 0 $generated@@309) (< $generated@@309 ($generated@@160 $generated@@306))) (= ($generated@@157 $generated@@306 $generated@@309) ($generated@@157 $generated@@307 $generated@@309)))
 :pattern ( ($generated@@157 $generated@@306 $generated@@309))
 :pattern ( ($generated@@157 $generated@@307 $generated@@309))
))))))
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@78) ($generated@@175 $generated@@310)) (exists (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (and (and (= (type $generated@@311) $generated@@153) (= (type $generated@@312) $generated@@153)) (= $generated@@310 ($generated@@262 $generated@@311 $generated@@312)))
 :no-pattern (type $generated@@311)
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@175 $generated@@310))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@159 $generated@@314))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@T) ) (! (= ($generated@@160 ($generated@@313 $generated@@315)) 0)
 :pattern ( ($generated@@313 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@78)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@78) ($generated@@151 $generated@@318)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@153) (= $generated@@318 ($generated@@316 $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@151 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@78) ($generated@@82 $generated@@320)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) ($generated@@159 $generated@@153)) (= $generated@@320 ($generated@@158 $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
)))
 :pattern ( ($generated@@82 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@153)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@68) (= (type $generated@@326) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@294 ($generated@@322 $generated@@324) $generated@@325 $generated@@326) ($generated@@92 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@294 ($generated@@322 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@329 T@T) ) (! (= (type ($generated@@328 $generated@@329)) ($generated@@94 $generated@@329 $generated@@2))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@97 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@94 $generated@@331 $generated@@2)) (and (= (= ($generated@@327 $generated@@330) 0) (= $generated@@330 ($generated@@328 $generated@@331))) (=> (not (= ($generated@@327 $generated@@330) 0)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) (< 0 ($generated ($generated@@99 $generated@@330 $generated@@332))))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@73)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@68) (and (= ($generated@@90 ($generated@@81 $generated@@335)) $generated@@64) (= ($generated@@333 ($generated@@81 $generated@@335)) $generated@@67)))
 :pattern ( ($generated@@81 $generated@@335))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 18)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@94 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@99 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@99 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert  (and (and (and (and (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (= ($generated@@1 ($generated@@356 $generated@@359 $generated@@360)) 19)) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@356 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@358 ($generated@@356 $generated@@363 $generated@@364)) $generated@@364)
 :pattern ( ($generated@@356 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@357 (type $generated@@365))))
(= (type ($generated@@354 $generated@@365)) ($generated@@94 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@365))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= (type ($generated@@355 $generated@@367 $generated@@368)) ($generated@@356 $generated@@367 $generated@@368))
 :pattern ( ($generated@@355 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@T) ) (! (let (($generated@@371 (type $generated@@369)))
 (not ($generated@@0 ($generated@@99 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369))))
 :pattern ( (let (($generated@@371 (type $generated@@369)))
($generated@@99 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@97 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@94 $generated@@373 $generated@@2)) (= ($generated@@190 $generated@@372) (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@373) (and (<= 0 ($generated ($generated@@99 $generated@@372 $generated@@374))) (<= ($generated ($generated@@99 $generated@@372 $generated@@374)) ($generated@@327 $generated@@372))))
 :pattern ( ($generated@@99 $generated@@372 $generated@@374))
)))))
 :pattern ( ($generated@@190 $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@78) (= (type $generated@@376) $generated@@78)) (and ($generated@@82 $generated@@375) ($generated@@82 $generated@@376))) (= ($generated@@150 $generated@@375 $generated@@376) ($generated@@305 ($generated@@288 $generated@@375) ($generated@@288 $generated@@376))))
 :pattern ( ($generated@@150 $generated@@375 $generated@@376) ($generated@@82 $generated@@375))
 :pattern ( ($generated@@150 $generated@@375 $generated@@376) ($generated@@82 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@340 (type $generated@@377))))
(let (($generated@@379 ($generated@@339 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@338 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@337 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@99 ($generated@@336 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@336 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@340 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@94 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@340 (type $generated@@384))))
(let (($generated@@386 ($generated@@339 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@338 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@337 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@99 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@358 (type $generated@@388))))
(let (($generated@@390 ($generated@@357 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@356 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@355 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@99 ($generated@@354 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@354 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@358 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@94 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@358 (type $generated@@395))))
(let (($generated@@397 ($generated@@357 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@356 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@355 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@99 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@400) $generated@@68)) (= ($generated@@80 $generated@@399 ($generated@@189 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@399 $generated@@401)))) ($generated@@263 $generated@@401 $generated@@400))
 :pattern ( ($generated@@99 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@80 $generated@@399 ($generated@@189 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) $generated@@68) (= (type $generated@@403) $generated@@153)) (= (type $generated@@404) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@293 $generated@@404)) (= ($generated@@92 ($generated@@316 $generated@@403) ($generated@@81 $generated@@402) $generated@@404) ($generated@@294 $generated@@403 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@403) ($generated@@81 $generated@@402) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (= (type ($generated@@405 $generated@@406)) $generated@@68)
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@407) $generated@@78) (= (type $generated@@408) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@293 $generated@@408) (and ($generated@@82 $generated@@407) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@68) ($generated@@92 $generated@@407 ($generated@@81 $generated@@409) $generated@@408))
 :pattern ( ($generated@@92 $generated@@407 ($generated@@81 $generated@@409) $generated@@408))
))))) ($generated@@92 ($generated@@288 $generated@@407) ($generated@@405 $generated@@45) $generated@@408))
 :pattern ( ($generated@@92 ($generated@@288 $generated@@407) ($generated@@405 $generated@@45) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) $generated@@68) (= (type $generated@@411) ($generated@@159 $generated@@153))) (= (type $generated@@412) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@293 $generated@@412)) (= ($generated@@92 ($generated@@158 $generated@@411) ($generated@@81 $generated@@410) $generated@@412) ($generated@@92 $generated@@411 ($generated@@405 $generated@@45) $generated@@412)))
 :pattern ( ($generated@@92 ($generated@@158 $generated@@411) ($generated@@81 $generated@@410) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@414) $generated@@68)) (= (type $generated@@415) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@413 ($generated@@274 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@153) ($generated@@0 ($generated@@99 $generated@@413 $generated@@416))) ($generated@@294 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@99 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@92 $generated@@413 ($generated@@274 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@417 ($generated@@279 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@153) ($generated@@0 ($generated@@99 $generated@@417 $generated@@420))) ($generated@@294 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@99 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@92 $generated@@417 ($generated@@279 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@99 ($generated@@328 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@99 ($generated@@328 $generated@@422) $generated@@421)))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@340 (type $generated@@426))))
(let (($generated@@428 ($generated@@339 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@94 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@338 $generated@@153 $generated@@153)) (= (type $generated@@430) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@99 ($generated@@336 $generated@@429) ($generated@@183 ($generated@@162 $generated@@78 $generated@@430)))) (= ($generated@@99 ($generated@@424 $generated@@429) ($generated@@183 ($generated@@162 $generated@@78 $generated@@430))) ($generated@@184 ($generated@@162 $generated@@78 $generated@@430))))))
 :pattern ( ($generated@@99 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@431 $generated@@433))
)) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@358 (type $generated@@434))))
(let (($generated@@436 ($generated@@357 (type $generated@@434))))
(= (type ($generated@@432 $generated@@434)) ($generated@@94 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@432 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@356 $generated@@153 $generated@@153)) (= (type $generated@@438) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@431 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@99 ($generated@@354 $generated@@437) ($generated@@183 ($generated@@162 $generated@@78 $generated@@438)))) (= ($generated@@99 ($generated@@432 $generated@@437) ($generated@@183 ($generated@@162 $generated@@78 $generated@@438))) ($generated@@184 ($generated@@162 $generated@@78 $generated@@438))))))
 :pattern ( ($generated@@99 ($generated@@431 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(let (($generated@@442 ($generated@@339 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@338 $generated@@442 $generated@@441)) (= ($generated@@0 ($generated@@99 ($generated@@381 $generated@@439) $generated@@440)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) (and ($generated@@0 ($generated@@99 ($generated@@336 $generated@@439) $generated@@443)) (= $generated@@440 ($generated@@99 ($generated@@424 $generated@@439) $generated@@443))))
 :pattern ( ($generated@@99 ($generated@@336 $generated@@439) $generated@@443))
 :pattern ( ($generated@@99 ($generated@@424 $generated@@439) $generated@@443))
))))))
 :pattern ( ($generated@@99 ($generated@@381 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@357 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@356 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@99 ($generated@@392 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@99 ($generated@@354 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@99 ($generated@@432 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@99 ($generated@@354 $generated@@444) $generated@@448))
 :pattern ( ($generated@@99 ($generated@@432 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@99 ($generated@@392 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@68)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@338 $generated@@153 $generated@@153)) (= (type $generated@@453) $generated@@68)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@336 $generated@@452) $generated@@456))) (and ($generated@@294 ($generated@@99 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@294 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@99 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@99 ($generated@@336 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@92 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@356 $generated@@153 $generated@@153)) (= (type $generated@@461) $generated@@68)) (= (type $generated@@462) $generated@@68)) (= (type $generated@@463) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@354 $generated@@460) $generated@@464))) (and ($generated@@294 ($generated@@99 ($generated@@432 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@294 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@99 ($generated@@432 $generated@@460) $generated@@464))
 :pattern ( ($generated@@99 ($generated@@354 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@92 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@465) $generated@@68) (= (type $generated@@466) $generated@@78)) ($generated@@80 $generated@@466 ($generated@@81 $generated@@465))) (or ($generated@@151 $generated@@466) ($generated@@82 $generated@@466)))
 :pattern ( ($generated@@82 $generated@@466) ($generated@@80 $generated@@466 ($generated@@81 $generated@@465)))
 :pattern ( ($generated@@151 $generated@@466) ($generated@@80 $generated@@466 ($generated@@81 $generated@@465)))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@163 (type $generated@@467))))
 (=> (and (and (= (type $generated@@467) ($generated@@159 $generated@@469)) (= (type $generated@@468) ($generated@@159 $generated@@469))) ($generated@@305 $generated@@467 $generated@@468)) (= $generated@@467 $generated@@468)))
 :pattern ( ($generated@@305 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@94 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@358 (type $generated@@472))))
(let (($generated@@474 ($generated@@357 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@356 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@355 $generated@@474 $generated@@473)) (= ($generated@@354 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@354 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@358 (type $generated@@475))))
(let (($generated@@477 ($generated@@357 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@356 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@355 $generated@@477 $generated@@476)) (= ($generated@@392 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@392 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@358 (type $generated@@478))))
(let (($generated@@480 ($generated@@357 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@356 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@355 $generated@@480 $generated@@479)) (= ($generated@@431 $generated@@478) ($generated@@470 $generated@@153))))))
 :pattern ( ($generated@@431 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@340 (type $generated@@481))))
(let (($generated@@483 ($generated@@339 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@338 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@337 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@153) (= (type $generated@@485) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@423 $generated@@481) ($generated@@322 ($generated@@262 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@423 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@358 (type $generated@@486))))
(let (($generated@@488 ($generated@@357 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@356 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@355 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@153) (= (type $generated@@490) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@431 $generated@@486) ($generated@@322 ($generated@@262 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@431 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@153) ($generated@@263 $generated@@491 $generated@@46)) (and (= ($generated@@322 ($generated@@162 $generated@@2 $generated@@491)) $generated@@491) ($generated@@80 ($generated@@162 $generated@@2 $generated@@491) $generated@@46)))
 :pattern ( ($generated@@263 $generated@@491 $generated@@46))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@153) ($generated@@263 $generated@@492 $generated@@47)) (and (= ($generated@@322 ($generated@@162 $generated@@3 $generated@@492)) $generated@@492) ($generated@@80 ($generated@@162 $generated@@3 $generated@@492) $generated@@47)))
 :pattern ( ($generated@@263 $generated@@492 $generated@@47))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@153) ($generated@@263 $generated@@493 $generated@@44)) (and (= ($generated@@322 ($generated@@162 $generated@@4 $generated@@493)) $generated@@493) ($generated@@80 ($generated@@162 $generated@@4 $generated@@493) $generated@@44)))
 :pattern ( ($generated@@263 $generated@@493 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@494) 20))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@153) ($generated@@263 $generated@@495 $generated@@45)) (and (= ($generated@@322 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495) ($generated@@80 ($generated@@162 $generated@@494 $generated@@495) $generated@@45)))
 :pattern ( ($generated@@263 $generated@@495 $generated@@45))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@263 ($generated@@322 $generated@@496) $generated@@497) ($generated@@80 $generated@@496 $generated@@497)))
 :pattern ( ($generated@@263 ($generated@@322 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@97 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@94 $generated@@499 $generated@@2)) (<= 0 ($generated@@327 $generated@@498))))
 :pattern ( ($generated@@327 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@163 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@159 $generated@@501)) (<= 0 ($generated@@160 $generated@@500))))
 :pattern ( ($generated@@160 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@502 ($generated@@449 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@449 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@506 ($generated@@449 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@449 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@90 ($generated@@449 $generated@@510 $generated@@511)) $generated@@58))
 :pattern ( ($generated@@449 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@457 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@457 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@457 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@457 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@90 ($generated@@457 $generated@@520 $generated@@521)) $generated@@59))
 :pattern ( ($generated@@457 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@153) (= (type $generated@@523) $generated@@153)) (= ($generated@@300 ($generated@@262 $generated@@522 $generated@@523)) $generated@@61))
 :pattern ( ($generated@@262 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@68) (= (type $generated@@527) $generated@@68)) (= ($generated@@524 ($generated@@176 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@176 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@528 ($generated@@176 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@176 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@153) (= (type $generated@@533) $generated@@153)) (= ($generated@@183 ($generated@@262 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@262 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@153) (= (type $generated@@535) $generated@@153)) (= ($generated@@184 ($generated@@262 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@262 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@159 $generated@@153)) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@536 ($generated@@405 $generated@@537) $generated@@538) (forall (($generated@@539 Int) ) (!  (=> (and (<= 0 $generated@@539) (< $generated@@539 ($generated@@160 $generated@@536))) ($generated@@294 ($generated@@157 $generated@@536 $generated@@539) $generated@@537 $generated@@538))
 :pattern ( ($generated@@157 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@92 $generated@@536 ($generated@@405 $generated@@537) $generated@@538))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@78)) (or ($generated@@79 $generated@@540 $generated@@541 $generated@@542) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@542 ($generated@@81 $generated@@540)) ($generated@@82 $generated@@542))))) (= ($generated@@77 $generated@@540 $generated@@541 $generated@@542) ($generated@@158 ($generated@@288 $generated@@542))))
 :pattern ( ($generated@@77 $generated@@540 $generated@@541 $generated@@542))
))))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@543 ($generated@@93 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@93 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@545 ($generated@@274 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@274 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@90 ($generated@@274 $generated@@548)) $generated@@54))
 :pattern ( ($generated@@274 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@549 ($generated@@279 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@279 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@90 ($generated@@279 $generated@@552)) $generated@@55))
 :pattern ( ($generated@@279 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@68) (= ($generated@@553 ($generated@@189 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@189 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@68) (= ($generated@@90 ($generated@@189 $generated@@556)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@557 ($generated@@405 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@405 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@90 ($generated@@405 $generated@@560)) $generated@@57))
 :pattern ( ($generated@@405 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@153) (= ($generated@@300 ($generated@@316 $generated@@561)) $generated@@63))
 :pattern ( ($generated@@316 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@81 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@81 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@153) (= ($generated@@152 ($generated@@316 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@316 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) ($generated@@159 $generated@@153)) (= ($generated@@300 ($generated@@158 $generated@@566)) $generated@@65))
 :pattern ( ($generated@@158 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) ($generated@@159 $generated@@153)) (= ($generated@@288 ($generated@@158 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@158 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
(= ($generated@@162 $generated@@569 ($generated@@322 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@322 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@338 $generated@@153 $generated@@153)) (= (type $generated@@571) $generated@@68)) (= (type $generated@@572) $generated@@68)) (= ($generated@@80 $generated@@570 ($generated@@449 $generated@@571 $generated@@572)) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@336 $generated@@570) $generated@@573))) (and ($generated@@263 ($generated@@99 ($generated@@424 $generated@@570) $generated@@573) $generated@@572) ($generated@@263 $generated@@573 $generated@@571)))
 :pattern ( ($generated@@99 ($generated@@424 $generated@@570) $generated@@573))
 :pattern ( ($generated@@99 ($generated@@336 $generated@@570) $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@449 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@356 $generated@@153 $generated@@153)) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@68)) (= ($generated@@80 $generated@@574 ($generated@@457 $generated@@575 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@354 $generated@@574) $generated@@577))) (and ($generated@@263 ($generated@@99 ($generated@@432 $generated@@574) $generated@@577) $generated@@576) ($generated@@263 $generated@@577 $generated@@575)))
 :pattern ( ($generated@@99 ($generated@@432 $generated@@574) $generated@@577))
 :pattern ( ($generated@@99 ($generated@@354 $generated@@574) $generated@@577))
))))
 :pattern ( ($generated@@80 $generated@@574 ($generated@@457 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@68) (= (type $generated@@579) $generated@@153)) (= ($generated@@80 ($generated@@316 $generated@@579) ($generated@@81 $generated@@578)) ($generated@@263 $generated@@579 $generated@@578)))
 :pattern ( ($generated@@80 ($generated@@316 $generated@@579) ($generated@@81 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@153) (= (type $generated@@582) $generated@@153)) (< ($generated@@580 $generated@@581) ($generated@@161 ($generated@@262 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@262 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@153) (= (type $generated@@584) $generated@@153)) (< ($generated@@580 $generated@@584) ($generated@@161 ($generated@@262 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@262 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@153) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) ($generated@@263 $generated@@585 ($generated@@449 $generated@@586 $generated@@587))) (and (= ($generated@@322 ($generated@@162 ($generated@@338 $generated@@153 $generated@@153) $generated@@585)) $generated@@585) ($generated@@80 ($generated@@162 ($generated@@338 $generated@@153 $generated@@153) $generated@@585) ($generated@@449 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@263 $generated@@585 ($generated@@449 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@153) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) $generated@@68)) ($generated@@263 $generated@@588 ($generated@@457 $generated@@589 $generated@@590))) (and (= ($generated@@322 ($generated@@162 ($generated@@356 $generated@@153 $generated@@153) $generated@@588)) $generated@@588) ($generated@@80 ($generated@@162 ($generated@@356 $generated@@153 $generated@@153) $generated@@588) ($generated@@457 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@263 $generated@@588 ($generated@@457 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@68) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) $generated@@153)) ($generated@@263 $generated@@593 ($generated@@176 $generated@@591 $generated@@592))) (and (= ($generated@@322 ($generated@@162 $generated@@78 $generated@@593)) $generated@@593) ($generated@@80 ($generated@@162 $generated@@78 $generated@@593) ($generated@@176 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@263 $generated@@593 ($generated@@176 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@153) (< ($generated@@580 $generated@@594) ($generated@@161 ($generated@@316 $generated@@594))))
 :pattern ( ($generated@@316 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) ($generated@@159 $generated@@153)) (< ($generated@@595 $generated@@596) ($generated@@161 ($generated@@158 $generated@@596))))
 :pattern ( ($generated@@158 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@78) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@293 $generated@@599) (and ($generated@@151 $generated@@597) ($generated@@92 $generated@@597 ($generated@@81 $generated@@598) $generated@@599)))) ($generated@@294 ($generated@@152 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@294 ($generated@@152 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (not ($generated@@0 ($generated@@99 ($generated@@470 $generated@@601) $generated@@600))))
 :pattern ( (let (($generated@@601 (type $generated@@600)))
($generated@@99 ($generated@@470 $generated@@601) $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@68) (= (type $generated@@603) $generated@@68)) (and (= ($generated@@90 ($generated@@176 $generated@@602 $generated@@603)) $generated@@62) (= ($generated@@333 ($generated@@176 $generated@@602 $generated@@603)) $generated@@66)))
 :pattern ( ($generated@@176 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@78) (= ($generated@@580 ($generated@@322 $generated@@604)) ($generated@@161 $generated@@604)))
 :pattern ( ($generated@@580 ($generated@@322 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@153) ($generated@@263 $generated@@605 ($generated@@93 0))) (and (= ($generated@@322 ($generated@@162 $generated@@2 $generated@@605)) $generated@@605) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@605) ($generated@@93 0))))
 :pattern ( ($generated@@263 $generated@@605 ($generated@@93 0)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@153) (= (type $generated@@607) $generated@@68)) ($generated@@263 $generated@@606 ($generated@@274 $generated@@607))) (and (= ($generated@@322 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@606)) $generated@@606) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@606) ($generated@@274 $generated@@607))))
 :pattern ( ($generated@@263 $generated@@606 ($generated@@274 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@153) (= (type $generated@@609) $generated@@68)) ($generated@@263 $generated@@608 ($generated@@279 $generated@@609))) (and (= ($generated@@322 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@608)) $generated@@608) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@608) ($generated@@279 $generated@@609))))
 :pattern ( ($generated@@263 $generated@@608 ($generated@@279 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@153) (= (type $generated@@611) $generated@@68)) ($generated@@263 $generated@@610 ($generated@@189 $generated@@611))) (and (= ($generated@@322 ($generated@@162 ($generated@@94 $generated@@153 $generated@@2) $generated@@610)) $generated@@610) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@2) $generated@@610) ($generated@@189 $generated@@611))))
 :pattern ( ($generated@@263 $generated@@610 ($generated@@189 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@153) (= (type $generated@@613) $generated@@68)) ($generated@@263 $generated@@612 ($generated@@405 $generated@@613))) (and (= ($generated@@322 ($generated@@162 ($generated@@159 $generated@@153) $generated@@612)) $generated@@612) ($generated@@80 ($generated@@162 ($generated@@159 $generated@@153) $generated@@612) ($generated@@405 $generated@@613))))
 :pattern ( ($generated@@263 $generated@@612 ($generated@@405 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@68) (= (type $generated@@615) $generated@@153)) ($generated@@263 $generated@@615 ($generated@@81 $generated@@614))) (and (= ($generated@@322 ($generated@@162 $generated@@78 $generated@@615)) $generated@@615) ($generated@@80 ($generated@@162 $generated@@78 $generated@@615) ($generated@@81 $generated@@614))))
 :pattern ( ($generated@@263 $generated@@615 ($generated@@81 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) ($generated@@159 $generated@@153))) (= ($generated@@80 ($generated@@158 $generated@@617) ($generated@@81 $generated@@616)) ($generated@@80 $generated@@617 ($generated@@405 $generated@@45))))
 :pattern ( ($generated@@80 ($generated@@158 $generated@@617) ($generated@@81 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@618) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@618 ($generated@@189 $generated@@619) $generated@@620) (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@618 $generated@@621)))) ($generated@@294 $generated@@621 $generated@@619 $generated@@620))
 :pattern ( ($generated@@99 $generated@@618 $generated@@621))
))))
 :pattern ( ($generated@@92 $generated@@618 ($generated@@189 $generated@@619) $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@78) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@293 $generated@@624) (and ($generated@@175 $generated@@622) (exists (($generated@@625 T@U) ) (!  (and (= (type $generated@@625) $generated@@68) ($generated@@92 $generated@@622 ($generated@@176 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@92 $generated@@622 ($generated@@176 $generated@@623 $generated@@625) $generated@@624))
))))) ($generated@@294 ($generated@@183 $generated@@622) $generated@@623 $generated@@624))
 :pattern ( ($generated@@294 ($generated@@183 $generated@@622) $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@78) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@293 $generated@@628) (and ($generated@@175 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@68) ($generated@@92 $generated@@626 ($generated@@176 $generated@@629 $generated@@627) $generated@@628))
 :pattern ( ($generated@@92 $generated@@626 ($generated@@176 $generated@@629 $generated@@627) $generated@@628))
))))) ($generated@@294 ($generated@@184 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@294 ($generated@@184 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@153) (= (type $generated@@631) $generated@@153)) (= ($generated@@262 ($generated@@284 $generated@@630) ($generated@@284 $generated@@631)) ($generated@@284 ($generated@@262 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@262 ($generated@@284 $generated@@630) ($generated@@284 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@153) (= ($generated@@316 ($generated@@284 $generated@@632)) ($generated@@284 ($generated@@316 $generated@@632))))
 :pattern ( ($generated@@316 ($generated@@284 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) ($generated@@159 $generated@@153)) (= ($generated@@158 ($generated@@284 $generated@@633)) ($generated@@284 ($generated@@158 $generated@@633))))
 :pattern ( ($generated@@158 ($generated@@284 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (! (= ($generated@@322 ($generated@@284 $generated@@634)) ($generated@@284 ($generated@@322 $generated@@634)))
 :pattern ( ($generated@@322 ($generated@@284 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 ($generated@@163 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@159 $generated@@636)) (= ($generated@@160 $generated@@635) 0)) (= $generated@@635 ($generated@@313 $generated@@636))))
 :pattern ( ($generated@@160 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@638)))
 (=> (and (and (= (type $generated@@637) ($generated@@94 $generated@@640 $generated@@2)) (= (type $generated@@639) $generated@@2)) (<= 0 ($generated $generated@@639))) (= ($generated@@327 ($generated@@100 $generated@@637 $generated@@638 $generated@@639)) (+ (- ($generated@@327 $generated@@637) ($generated ($generated@@99 $generated@@637 $generated@@638))) ($generated $generated@@639)))))
 :pattern ( ($generated@@327 ($generated@@100 $generated@@637 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@642) $generated@@2)) ($generated@@92 $generated@@642 $generated@@46 $generated@@641))
 :pattern ( ($generated@@92 $generated@@642 $generated@@46 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@644) $generated@@3)) ($generated@@92 $generated@@644 $generated@@47 $generated@@643))
 :pattern ( ($generated@@92 $generated@@644 $generated@@47 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@646) $generated@@4)) ($generated@@92 $generated@@646 $generated@@44 $generated@@645))
 :pattern ( ($generated@@92 $generated@@646 $generated@@44 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@648) $generated@@494)) ($generated@@92 $generated@@648 $generated@@45 $generated@@647))
 :pattern ( ($generated@@92 $generated@@648 $generated@@45 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@650) $generated@@153)) ($generated@@92 $generated@@650 $generated@@48 $generated@@649))
 :pattern ( ($generated@@92 $generated@@650 $generated@@48 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@159 $generated@@153)) (= (type $generated@@652) $generated@@68)) (= ($generated@@80 $generated@@651 ($generated@@405 $generated@@652)) (forall (($generated@@653 Int) ) (!  (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@160 $generated@@651))) ($generated@@263 ($generated@@157 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@157 $generated@@651 $generated@@653))
))))
 :pattern ( ($generated@@80 $generated@@651 ($generated@@405 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 Int) ) (!  (=> (= (type $generated@@654) ($generated@@159 $generated@@153)) (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@160 $generated@@654))) (< ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@654 $generated@@655))) ($generated@@595 $generated@@654))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@654 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@338 $generated@@153 $generated@@153)) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) $generated@@68)) ($generated@@80 $generated@@656 ($generated@@449 $generated@@657 $generated@@658))) (and (and ($generated@@80 ($generated@@336 $generated@@656) ($generated@@274 $generated@@657)) ($generated@@80 ($generated@@381 $generated@@656) ($generated@@274 $generated@@658))) ($generated@@80 ($generated@@423 $generated@@656) ($generated@@274 ($generated@@176 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@80 $generated@@656 ($generated@@449 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@356 $generated@@153 $generated@@153)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) $generated@@68)) ($generated@@80 $generated@@659 ($generated@@457 $generated@@660 $generated@@661))) (and (and ($generated@@80 ($generated@@354 $generated@@659) ($generated@@279 $generated@@660)) ($generated@@80 ($generated@@392 $generated@@659) ($generated@@279 $generated@@661))) ($generated@@80 ($generated@@431 $generated@@659) ($generated@@279 ($generated@@176 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@80 $generated@@659 ($generated@@457 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@2) ($generated@@80 $generated@@662 $generated@@46))
 :pattern ( ($generated@@80 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@3) ($generated@@80 $generated@@663 $generated@@47))
 :pattern ( ($generated@@80 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@4) ($generated@@80 $generated@@664 $generated@@44))
 :pattern ( ($generated@@80 $generated@@664 $generated@@44))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@494) ($generated@@80 $generated@@665 $generated@@45))
 :pattern ( ($generated@@80 $generated@@665 $generated@@45))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@153) ($generated@@80 $generated@@666 $generated@@48))
 :pattern ( ($generated@@80 $generated@@666 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 (T@U) Bool)
(declare-fun $generated@@673 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@667) ($generated@@196 $generated@@95 $generated@@4)) (= (type $generated@@668) $generated@@95)) (= (type $generated@@669) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@670) $generated@@78)) (= (type $generated@@671) ($generated@@196 $generated@@95 $generated@@4))) (= (type $generated@@673) $generated@@68)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@674  (=> (and (= $generated@@667 ($generated@@250 $generated@@668 $generated@@669 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@82 $generated@@670))))
(let (($generated@@675 true))
(let (($generated@@676  (=> (and (= $generated@@671 ($generated@@195 $generated@@668 $generated@@669 $generated@@60 false)) ($generated@@82 $generated@@670)) (and (=> (= (ControlFlow 0 4) 1) $generated@@675) (=> (= (ControlFlow 0 4) 3) $generated@@674)))))
(let (($generated@@677  (=> (and ($generated@@293 $generated@@669) ($generated@@672 $generated@@669)) (=> (and (and ($generated@@80 $generated@@670 ($generated@@81 $generated@@673)) ($generated@@92 $generated@@670 ($generated@@81 $generated@@673) $generated@@669)) (and (= 2 $generated@@76) (= (ControlFlow 0 5) 4))) $generated@@676))))
$generated@@677)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@161 (T@U Int) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@165 (T@U) Int)
(declare-fun $generated@@166 (T@T T@U) T@U)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U) Bool)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@198 (T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@200 (T@T T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (Int) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) Bool)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@T) T@U)
(declare-fun $generated@@362 (T@T T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@T) T@U)
(declare-fun $generated@@507 () T@T)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@78) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85)) $generated@@78)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@86)) $generated@@68)
 :pattern ( ($generated@@81 $generated@@86))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and (= (type $generated@@87) $generated@@68) (= (type $generated@@88) $generated@@68)) (= (type $generated@@89) $generated@@78)) (or ($generated@@79 $generated@@87 $generated@@88 $generated@@89) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@89 ($generated@@81 $generated@@87)) ($generated@@82 $generated@@89))))) ($generated@@80 ($generated@@77 $generated@@87 $generated@@88 $generated@@89) ($generated@@81 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@69)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@152) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@95) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@78) (= (type $generated@@160) $generated@@78)) (and ($generated@@155 $generated@@159) ($generated@@155 $generated@@160))) (= ($generated@@154 $generated@@159 $generated@@160) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160) ($generated@@155 $generated@@159))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160) ($generated@@155 $generated@@160))
)))
(assert  (and (and (and (and (forall (($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@168)) 16)) (forall (($generated@@169 T@T) ) (! (= ($generated@@167 ($generated@@163 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 Int) ) (! (let (($generated@@172 ($generated@@167 (type $generated@@170))))
(= (type ($generated@@161 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@161 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@162 $generated@@173)) $generated@@78)
 :pattern ( ($generated@@162 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@U) ) (! (= (type ($generated@@166 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ) (!  (=> (= (type $generated@@176) ($generated@@163 $generated@@157)) (=> (and (<= 0 $generated@@177) (< $generated@@177 ($generated@@164 $generated@@176))) (< ($generated@@165 ($generated@@166 $generated@@78 ($generated@@161 $generated@@176 $generated@@177))) ($generated@@165 ($generated@@162 $generated@@176)))))
 :pattern ( ($generated@@161 $generated@@176 $generated@@177) ($generated@@162 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@80 $generated@@178 ($generated@@93 0)))
 :pattern ( ($generated@@80 $generated@@178 ($generated@@93 0)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@181 $generated@@182)) $generated@@68)
 :pattern ( ($generated@@180 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (and (= (type $generated@@183) $generated@@68) (= (type $generated@@184) $generated@@68)) (= (type $generated@@185) $generated@@78)) ($generated@@80 $generated@@185 ($generated@@180 $generated@@183 $generated@@184))) ($generated@@179 $generated@@185))
 :pattern ( ($generated@@179 $generated@@185) ($generated@@80 $generated@@185 ($generated@@180 $generated@@183 $generated@@184)))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@157)
 :pattern ( ($generated@@187 $generated@@189))
)) (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@157)
 :pattern ( ($generated@@188 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) $generated@@78) (= (type $generated@@192) $generated@@78)) true) (= ($generated@@186 $generated@@191 $generated@@192)  (and (= ($generated@@187 $generated@@191) ($generated@@187 $generated@@192)) (= ($generated@@188 $generated@@191) ($generated@@188 $generated@@192)))))
 :pattern ( ($generated@@186 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@68)
 :pattern ( ($generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@197) $generated@@68)) ($generated@@80 $generated@@196 ($generated@@193 $generated@@197))) ($generated@@194 $generated@@196))
 :pattern ( ($generated@@80 $generated@@196 ($generated@@193 $generated@@197)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (= ($generated@@1 ($generated@@200 $generated@@204 $generated@@205)) 17)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@206 $generated@@207)) $generated@@206)
 :pattern ( ($generated@@200 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@202 ($generated@@200 $generated@@208 $generated@@209)) $generated@@209)
 :pattern ( ($generated@@200 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@202 (type $generated@@210))))
(= (type ($generated@@198 $generated@@210 $generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@198 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(let (($generated@@219 (type $generated@@215)))
(= (type ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@200 $generated@@219 $generated@@218))))
 :pattern ( ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@202 (type $generated@@220))))
 (=> (= (type $generated@@223) $generated@@224) (= ($generated@@198 ($generated@@203 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@221 $generated@@222) $generated@@223)))
 :weight 0
))) (and (and (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@198 ($generated@@203 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@198 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@198 ($generated@@203 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@198 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or true (= ($generated@@198 ($generated@@203 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@198 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@200 $generated@@95 $generated@@4))
 :pattern ( ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@71 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@95) (= (type $generated@@248) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@249) ($generated@@70 $generated@@4))) (= (type $generated@@251) $generated@@95)) (= (type $generated@@252) ($generated@@70 $generated@@253))) (= ($generated@@0 ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@256 $generated@@257)) $generated@@78)
 :pattern ( ($generated@@254 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@68) (= (type $generated@@259) $generated@@68)) (= (type $generated@@260) $generated@@157)) (= (type $generated@@261) $generated@@157)) (= ($generated@@80 ($generated@@254 $generated@@260 $generated@@261) ($generated@@180 $generated@@258 $generated@@259))  (and ($generated@@255 $generated@@260 $generated@@258) ($generated@@255 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@80 ($generated@@254 $generated@@260 $generated@@261) ($generated@@180 $generated@@258 $generated@@259)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@68) (= (type $generated@@265) $generated@@78)) (or ($generated@@263 $generated@@264 $generated@@265) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@265 ($generated@@81 $generated@@264))))) (= ($generated@@262 $generated@@264 $generated@@265) ($generated@@82 $generated@@265)))
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@78) (= (type $generated@@267) $generated@@78)) (= ($generated@@186 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@186 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@78) (= (type $generated@@269) $generated@@78)) (= ($generated@@154 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@154 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@68)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@273) $generated@@68)) (= ($generated@@80 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@157) ($generated@@0 ($generated@@99 $generated@@272 $generated@@274))) ($generated@@255 $generated@@274 $generated@@273))
 :pattern ( ($generated@@99 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@80 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@68)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@278) $generated@@68)) (= ($generated@@80 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@157) ($generated@@0 ($generated@@99 $generated@@277 $generated@@279))) ($generated@@255 $generated@@279 $generated@@278))
 :pattern ( ($generated@@99 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@80 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 Int) ) (! (= ($generated@@280 $generated@@281) $generated@@281)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@163 $generated@@157))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) $generated@@68)) (= (type $generated@@290) $generated@@78)) (or ($generated@@79 $generated@@288 $generated@@289 ($generated@@282 $generated@@290)) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@290 ($generated@@81 $generated@@288)) ($generated@@0 ($generated@@282 ($generated@@11 ($generated@@82 ($generated@@282 $generated@@290))))))))) (= ($generated@@77 $generated@@288 $generated@@289 ($generated@@282 $generated@@290)) ($generated@@282 ($generated@@162 ($generated@@282 ($generated@@286 ($generated@@282 $generated@@290)))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@288 $generated@@289 ($generated@@282 $generated@@290)))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@68) (= (type $generated@@294) $generated@@68)) (= (type $generated@@295) $generated@@157)) (= (type $generated@@296) $generated@@157)) (= (type $generated@@297) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@291 $generated@@297)) (= ($generated@@92 ($generated@@254 $generated@@295 $generated@@296) ($generated@@180 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@295 $generated@@296) ($generated@@180 $generated@@293 $generated@@294) $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@72)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@78) (= ($generated@@179 $generated@@300) (= ($generated@@298 $generated@@300) $generated@@61)))
 :pattern ( ($generated@@179 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@78) (= ($generated@@155 $generated@@301) (= ($generated@@298 $generated@@301) $generated@@63)))
 :pattern ( ($generated@@155 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@78) (= ($generated@@82 $generated@@302) (= ($generated@@298 $generated@@302) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@167 (type $generated@@304))))
 (=> (and (= (type $generated@@304) ($generated@@163 $generated@@306)) (= (type $generated@@305) ($generated@@163 $generated@@306))) (= ($generated@@303 $generated@@304 $generated@@305)  (and (= ($generated@@164 $generated@@304) ($generated@@164 $generated@@305)) (forall (($generated@@307 Int) ) (!  (=> (and (<= 0 $generated@@307) (< $generated@@307 ($generated@@164 $generated@@304))) (= ($generated@@161 $generated@@304 $generated@@307) ($generated@@161 $generated@@305 $generated@@307)))
 :pattern ( ($generated@@161 $generated@@304 $generated@@307))
 :pattern ( ($generated@@161 $generated@@305 $generated@@307))
))))))
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@78) ($generated@@179 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@157) (= (type $generated@@310) $generated@@157)) (= $generated@@308 ($generated@@254 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@179 $generated@@308))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@163 $generated@@312))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@T) ) (! (= ($generated@@164 ($generated@@311 $generated@@313)) 0)
 :pattern ( ($generated@@311 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@78)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@78) ($generated@@155 $generated@@316)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@157) (= $generated@@316 ($generated@@314 $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@155 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@78) ($generated@@82 $generated@@318)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) ($generated@@163 $generated@@157)) (= $generated@@318 ($generated@@162 $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@82 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@157)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@68) (= (type $generated@@324) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@292 ($generated@@320 $generated@@322) $generated@@323 $generated@@324) ($generated@@92 $generated@@322 $generated@@323 $generated@@324)))
 :pattern ( ($generated@@292 ($generated@@320 $generated@@322) $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@325) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@326) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@327) $generated@@157)) (= (type $generated@@328) $generated@@68)) ($generated@@150 $generated@@325 $generated@@326)) ($generated@@292 $generated@@327 $generated@@328 $generated@@325)) ($generated@@292 $generated@@327 $generated@@328 $generated@@326))
 :pattern ( ($generated@@150 $generated@@325 $generated@@326) ($generated@@292 $generated@@327 $generated@@328 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@329) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@330) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@332) $generated@@68)) ($generated@@150 $generated@@329 $generated@@330)) ($generated@@92 $generated@@331 $generated@@332 $generated@@329)) ($generated@@92 $generated@@331 $generated@@332 $generated@@330))
 :pattern ( ($generated@@150 $generated@@329 $generated@@330) ($generated@@92 $generated@@331 $generated@@332 $generated@@329))
)))
(assert (forall (($generated@@335 T@T) ) (! (= (type ($generated@@334 $generated@@335)) ($generated@@94 $generated@@335 $generated@@2))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@97 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@94 $generated@@337 $generated@@2)) (and (= (= ($generated@@333 $generated@@336) 0) (= $generated@@336 ($generated@@334 $generated@@337))) (=> (not (= ($generated@@333 $generated@@336) 0)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) (< 0 ($generated ($generated@@99 $generated@@336 $generated@@338))))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@73)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@68) (and (= ($generated@@90 ($generated@@81 $generated@@341)) $generated@@64) (= ($generated@@339 ($generated@@81 $generated@@341)) $generated@@67)))
 :pattern ( ($generated@@81 $generated@@341))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 18)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@94 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert  (and (and (and (and (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (= ($generated@@1 ($generated@@362 $generated@@365 $generated@@366)) 19)) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@362 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@364 ($generated@@362 $generated@@369 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@362 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@363 (type $generated@@371))))
(= (type ($generated@@360 $generated@@371)) ($generated@@94 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@371))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= (type ($generated@@361 $generated@@373 $generated@@374)) ($generated@@362 $generated@@373 $generated@@374))
 :pattern ( ($generated@@361 $generated@@373 $generated@@374))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@T) ) (! (let (($generated@@377 (type $generated@@375)))
 (not ($generated@@0 ($generated@@99 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375))))
 :pattern ( (let (($generated@@377 (type $generated@@375)))
($generated@@99 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@378) $generated@@68) (= (type $generated@@379) $generated@@78)) (or ($generated@@263 $generated@@378 $generated@@379) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@379 ($generated@@81 $generated@@378))))) true)
 :pattern ( ($generated@@262 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@97 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@94 $generated@@381 $generated@@2)) (= ($generated@@194 $generated@@380) (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@381) (and (<= 0 ($generated ($generated@@99 $generated@@380 $generated@@382))) (<= ($generated ($generated@@99 $generated@@380 $generated@@382)) ($generated@@333 $generated@@380))))
 :pattern ( ($generated@@99 $generated@@380 $generated@@382))
)))))
 :pattern ( ($generated@@194 $generated@@380))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@383) $generated@@68) (= (type $generated@@384) $generated@@78)) (or ($generated@@263 $generated@@383 ($generated@@282 $generated@@384)) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@384 ($generated@@81 $generated@@383))))) (= ($generated@@262 $generated@@383 ($generated@@282 $generated@@384)) ($generated@@0 ($generated@@282 ($generated@@11 ($generated@@82 ($generated@@282 $generated@@384)))))))
 :weight 3
 :pattern ( ($generated@@262 $generated@@383 ($generated@@282 $generated@@384)))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@385) $generated@@78) (= (type $generated@@386) $generated@@78)) (and ($generated@@82 $generated@@385) ($generated@@82 $generated@@386))) (= ($generated@@154 $generated@@385 $generated@@386) ($generated@@303 ($generated@@286 $generated@@385) ($generated@@286 $generated@@386))))
 :pattern ( ($generated@@154 $generated@@385 $generated@@386) ($generated@@82 $generated@@385))
 :pattern ( ($generated@@154 $generated@@385 $generated@@386) ($generated@@82 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@346 (type $generated@@387))))
(let (($generated@@389 ($generated@@345 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@344 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@343 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@342 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@346 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@94 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@346 (type $generated@@394))))
(let (($generated@@396 ($generated@@345 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@344 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@343 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@99 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@364 (type $generated@@398))))
(let (($generated@@400 ($generated@@363 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@362 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@361 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@99 ($generated@@360 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@360 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@364 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@94 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@364 (type $generated@@405))))
(let (($generated@@407 ($generated@@363 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@362 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@361 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@99 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@410) $generated@@68)) (= ($generated@@80 $generated@@409 ($generated@@193 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@157) (< 0 ($generated ($generated@@99 $generated@@409 $generated@@411)))) ($generated@@255 $generated@@411 $generated@@410))
 :pattern ( ($generated@@99 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@193 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) $generated@@68) (= (type $generated@@413) $generated@@157)) (= (type $generated@@414) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@291 $generated@@414)) (= ($generated@@92 ($generated@@314 $generated@@413) ($generated@@81 $generated@@412) $generated@@414) ($generated@@292 $generated@@413 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@413) ($generated@@81 $generated@@412) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (= (type ($generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@417) $generated@@78) (= (type $generated@@418) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@291 $generated@@418) (and ($generated@@82 $generated@@417) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@68) ($generated@@92 $generated@@417 ($generated@@81 $generated@@419) $generated@@418))
 :pattern ( ($generated@@92 $generated@@417 ($generated@@81 $generated@@419) $generated@@418))
))))) ($generated@@92 ($generated@@286 $generated@@417) ($generated@@415 $generated@@45) $generated@@418))
 :pattern ( ($generated@@92 ($generated@@286 $generated@@417) ($generated@@415 $generated@@45) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) $generated@@68) (= (type $generated@@421) ($generated@@163 $generated@@157))) (= (type $generated@@422) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@291 $generated@@422)) (= ($generated@@92 ($generated@@162 $generated@@421) ($generated@@81 $generated@@420) $generated@@422) ($generated@@92 $generated@@421 ($generated@@415 $generated@@45) $generated@@422)))
 :pattern ( ($generated@@92 ($generated@@162 $generated@@421) ($generated@@81 $generated@@420) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@423 ($generated@@270 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@157) ($generated@@0 ($generated@@99 $generated@@423 $generated@@426))) ($generated@@292 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@99 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@92 $generated@@423 ($generated@@270 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@427) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@427 ($generated@@275 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@157) ($generated@@0 ($generated@@99 $generated@@427 $generated@@430))) ($generated@@292 $generated@@430 $generated@@428 $generated@@429))
 :pattern ( ($generated@@99 $generated@@427 $generated@@430))
))))
 :pattern ( ($generated@@92 $generated@@427 ($generated@@275 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(= ($generated ($generated@@99 ($generated@@334 $generated@@432) $generated@@431)) 0))
 :pattern ( (let (($generated@@432 (type $generated@@431)))
($generated@@99 ($generated@@334 $generated@@432) $generated@@431)))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@94 $generated@@157 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@346 (type $generated@@436))))
(let (($generated@@438 ($generated@@345 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@94 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@440) $generated@@157)) (= ($generated@@0 ($generated@@99 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@439) ($generated@@187 ($generated@@166 $generated@@78 $generated@@440)))) (= ($generated@@99 ($generated@@434 $generated@@439) ($generated@@187 ($generated@@166 $generated@@78 $generated@@440))) ($generated@@188 ($generated@@166 $generated@@78 $generated@@440))))))
 :pattern ( ($generated@@99 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@94 $generated@@157 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@364 (type $generated@@444))))
(let (($generated@@446 ($generated@@363 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@94 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@448) $generated@@157)) (= ($generated@@0 ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@99 ($generated@@360 $generated@@447) ($generated@@187 ($generated@@166 $generated@@78 $generated@@448)))) (= ($generated@@99 ($generated@@442 $generated@@447) ($generated@@187 ($generated@@166 $generated@@78 $generated@@448))) ($generated@@188 ($generated@@166 $generated@@78 $generated@@448))))))
 :pattern ( ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@345 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@344 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@99 ($generated@@391 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@99 ($generated@@434 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@449) $generated@@453))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@363 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@362 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@99 ($generated@@402 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@99 ($generated@@360 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@99 ($generated@@442 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@99 ($generated@@360 $generated@@454) $generated@@458))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@99 ($generated@@402 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@463) $generated@@68)) (= (type $generated@@464) $generated@@68)) (= (type $generated@@465) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@462) $generated@@466))) (and ($generated@@292 ($generated@@99 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@292 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@92 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@360 $generated@@470) $generated@@474))) (and ($generated@@292 ($generated@@99 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@292 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@99 ($generated@@360 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@78)) ($generated@@80 $generated@@476 ($generated@@81 $generated@@475))) (or ($generated@@155 $generated@@476) ($generated@@82 $generated@@476)))
 :pattern ( ($generated@@82 $generated@@476) ($generated@@80 $generated@@476 ($generated@@81 $generated@@475)))
 :pattern ( ($generated@@155 $generated@@476) ($generated@@80 $generated@@476 ($generated@@81 $generated@@475)))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@167 (type $generated@@477))))
 (=> (and (and (= (type $generated@@477) ($generated@@163 $generated@@479)) (= (type $generated@@478) ($generated@@163 $generated@@479))) ($generated@@303 $generated@@477 $generated@@478)) (= $generated@@477 $generated@@478)))
 :pattern ( ($generated@@303 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@480) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@481) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@482) ($generated@@94 $generated@@95 $generated@@96))) (not (= $generated@@480 $generated@@482))) (and ($generated@@150 $generated@@480 $generated@@481) ($generated@@150 $generated@@481 $generated@@482))) ($generated@@150 $generated@@480 $generated@@482))
 :pattern ( ($generated@@150 $generated@@480 $generated@@481) ($generated@@150 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@T) ) (! (= (type ($generated@@483 $generated@@484)) ($generated@@94 $generated@@484 $generated@@4))
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@364 (type $generated@@485))))
(let (($generated@@487 ($generated@@363 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@362 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@361 $generated@@487 $generated@@486)) (= ($generated@@360 $generated@@485) ($generated@@483 $generated@@487))))))
 :pattern ( ($generated@@360 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@364 (type $generated@@488))))
(let (($generated@@490 ($generated@@363 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@362 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@361 $generated@@490 $generated@@489)) (= ($generated@@402 $generated@@488) ($generated@@483 $generated@@489))))))
 :pattern ( ($generated@@402 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@364 (type $generated@@491))))
(let (($generated@@493 ($generated@@363 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@362 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@361 $generated@@493 $generated@@492)) (= ($generated@@441 $generated@@491) ($generated@@483 $generated@@157))))))
 :pattern ( ($generated@@441 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@346 (type $generated@@494))))
(let (($generated@@496 ($generated@@345 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@344 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@343 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@157) (= (type $generated@@498) $generated@@157)) ($generated@@0 ($generated@@99 ($generated@@433 $generated@@494) ($generated@@320 ($generated@@254 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@433 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@364 (type $generated@@499))))
(let (($generated@@501 ($generated@@363 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@362 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@361 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@157) (= (type $generated@@503) $generated@@157)) ($generated@@0 ($generated@@99 ($generated@@441 $generated@@499) ($generated@@320 ($generated@@254 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@441 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@157) ($generated@@255 $generated@@504 $generated@@46)) (and (= ($generated@@320 ($generated@@166 $generated@@2 $generated@@504)) $generated@@504) ($generated@@80 ($generated@@166 $generated@@2 $generated@@504) $generated@@46)))
 :pattern ( ($generated@@255 $generated@@504 $generated@@46))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@157) ($generated@@255 $generated@@505 $generated@@47)) (and (= ($generated@@320 ($generated@@166 $generated@@3 $generated@@505)) $generated@@505) ($generated@@80 ($generated@@166 $generated@@3 $generated@@505) $generated@@47)))
 :pattern ( ($generated@@255 $generated@@505 $generated@@47))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@157) ($generated@@255 $generated@@506 $generated@@44)) (and (= ($generated@@320 ($generated@@166 $generated@@4 $generated@@506)) $generated@@506) ($generated@@80 ($generated@@166 $generated@@4 $generated@@506) $generated@@44)))
 :pattern ( ($generated@@255 $generated@@506 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@507) 20))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@157) ($generated@@255 $generated@@508 $generated@@45)) (and (= ($generated@@320 ($generated@@166 $generated@@507 $generated@@508)) $generated@@508) ($generated@@80 ($generated@@166 $generated@@507 $generated@@508) $generated@@45)))
 :pattern ( ($generated@@255 $generated@@508 $generated@@45))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@255 ($generated@@320 $generated@@509) $generated@@510) ($generated@@80 $generated@@509 $generated@@510)))
 :pattern ( ($generated@@255 ($generated@@320 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@97 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@94 $generated@@512 $generated@@2)) (<= 0 ($generated@@333 $generated@@511))))
 :pattern ( ($generated@@333 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@167 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@163 $generated@@514)) (<= 0 ($generated@@164 $generated@@513))))
 :pattern ( ($generated@@164 $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@515 ($generated@@459 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@459 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@519 ($generated@@459 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@459 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@90 ($generated@@459 $generated@@523 $generated@@524)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@467 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@467 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@467 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@90 ($generated@@467 $generated@@533 $generated@@534)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@157) (= (type $generated@@536) $generated@@157)) (= ($generated@@298 ($generated@@254 $generated@@535 $generated@@536)) $generated@@61))
 :pattern ( ($generated@@254 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@537 ($generated@@180 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@180 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (= ($generated@@541 ($generated@@180 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@180 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) (= (type $generated@@546) $generated@@157)) (= ($generated@@187 ($generated@@254 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@254 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@157) (= (type $generated@@548) $generated@@157)) (= ($generated@@188 ($generated@@254 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@254 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@163 $generated@@157)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@549 ($generated@@415 $generated@@550) $generated@@551) (forall (($generated@@552 Int) ) (!  (=> (and (<= 0 $generated@@552) (< $generated@@552 ($generated@@164 $generated@@549))) ($generated@@292 ($generated@@161 $generated@@549 $generated@@552) $generated@@550 $generated@@551))
 :pattern ( ($generated@@161 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@92 $generated@@549 ($generated@@415 $generated@@550) $generated@@551))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@68) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@78)) (or ($generated@@79 $generated@@553 $generated@@554 $generated@@555) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@555 ($generated@@81 $generated@@553)) ($generated@@82 $generated@@555))))) (= ($generated@@77 $generated@@553 $generated@@554 $generated@@555) ($generated@@162 ($generated@@286 $generated@@555))))
 :pattern ( ($generated@@77 $generated@@553 $generated@@554 $generated@@555))
))))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@556 ($generated@@93 $generated@@557)) $generated@@557)
 :pattern ( ($generated@@93 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@558 ($generated@@270 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@270 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@90 ($generated@@270 $generated@@561)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@275 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@275 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@90 ($generated@@275 $generated@@565)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@193 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@193 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@90 ($generated@@193 $generated@@569)) $generated@@56))
 :pattern ( ($generated@@193 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@415 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@415 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@90 ($generated@@415 $generated@@573)) $generated@@57))
 :pattern ( ($generated@@415 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@157) (= ($generated@@298 ($generated@@314 $generated@@574)) $generated@@63))
 :pattern ( ($generated@@314 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@575 ($generated@@81 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@81 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@157) (= ($generated@@156 ($generated@@314 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@314 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) ($generated@@163 $generated@@157)) (= ($generated@@298 ($generated@@162 $generated@@579)) $generated@@65))
 :pattern ( ($generated@@162 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) ($generated@@163 $generated@@157)) (= ($generated@@286 ($generated@@162 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@162 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
(= ($generated@@166 $generated@@582 ($generated@@320 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@320 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) $generated@@68)) (= ($generated@@80 $generated@@583 ($generated@@459 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@583) $generated@@586))) (and ($generated@@255 ($generated@@99 ($generated@@434 $generated@@583) $generated@@586) $generated@@585) ($generated@@255 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@583) $generated@@586))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@80 $generated@@583 ($generated@@459 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) (= ($generated@@80 $generated@@587 ($generated@@467 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@360 $generated@@587) $generated@@590))) (and ($generated@@255 ($generated@@99 ($generated@@442 $generated@@587) $generated@@590) $generated@@589) ($generated@@255 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@587) $generated@@590))
 :pattern ( ($generated@@99 ($generated@@360 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@80 $generated@@587 ($generated@@467 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@68) (= (type $generated@@592) $generated@@157)) (= ($generated@@80 ($generated@@314 $generated@@592) ($generated@@81 $generated@@591)) ($generated@@255 $generated@@592 $generated@@591)))
 :pattern ( ($generated@@80 ($generated@@314 $generated@@592) ($generated@@81 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@157) (= (type $generated@@595) $generated@@157)) (< ($generated@@593 $generated@@594) ($generated@@165 ($generated@@254 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@254 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@157) (= (type $generated@@597) $generated@@157)) (< ($generated@@593 $generated@@597) ($generated@@165 ($generated@@254 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@254 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@157) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@255 $generated@@598 ($generated@@459 $generated@@599 $generated@@600))) (and (= ($generated@@320 ($generated@@166 ($generated@@344 $generated@@157 $generated@@157) $generated@@598)) $generated@@598) ($generated@@80 ($generated@@166 ($generated@@344 $generated@@157 $generated@@157) $generated@@598) ($generated@@459 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@255 $generated@@598 ($generated@@459 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@157) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@255 $generated@@601 ($generated@@467 $generated@@602 $generated@@603))) (and (= ($generated@@320 ($generated@@166 ($generated@@362 $generated@@157 $generated@@157) $generated@@601)) $generated@@601) ($generated@@80 ($generated@@166 ($generated@@362 $generated@@157 $generated@@157) $generated@@601) ($generated@@467 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@255 $generated@@601 ($generated@@467 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@157)) ($generated@@255 $generated@@606 ($generated@@180 $generated@@604 $generated@@605))) (and (= ($generated@@320 ($generated@@166 $generated@@78 $generated@@606)) $generated@@606) ($generated@@80 ($generated@@166 $generated@@78 $generated@@606) ($generated@@180 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@255 $generated@@606 ($generated@@180 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@157) (< ($generated@@593 $generated@@607) ($generated@@165 ($generated@@314 $generated@@607))))
 :pattern ( ($generated@@314 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) ($generated@@163 $generated@@157)) (< ($generated@@608 $generated@@609) ($generated@@165 ($generated@@162 $generated@@609))))
 :pattern ( ($generated@@162 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@78) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@291 $generated@@612) (and ($generated@@155 $generated@@610) ($generated@@92 $generated@@610 ($generated@@81 $generated@@611) $generated@@612)))) ($generated@@292 ($generated@@156 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@292 ($generated@@156 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
 (not ($generated@@0 ($generated@@99 ($generated@@483 $generated@@614) $generated@@613))))
 :pattern ( (let (($generated@@614 (type $generated@@613)))
($generated@@99 ($generated@@483 $generated@@614) $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@68) (= (type $generated@@616) $generated@@68)) (and (= ($generated@@90 ($generated@@180 $generated@@615 $generated@@616)) $generated@@62) (= ($generated@@339 ($generated@@180 $generated@@615 $generated@@616)) $generated@@66)))
 :pattern ( ($generated@@180 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@78) (= ($generated@@593 ($generated@@320 $generated@@617)) ($generated@@165 $generated@@617)))
 :pattern ( ($generated@@593 ($generated@@320 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@157) ($generated@@255 $generated@@618 ($generated@@93 0))) (and (= ($generated@@320 ($generated@@166 $generated@@2 $generated@@618)) $generated@@618) ($generated@@80 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@618) ($generated@@93 0))))
 :pattern ( ($generated@@255 $generated@@618 ($generated@@93 0)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@157) (= (type $generated@@620) $generated@@68)) ($generated@@255 $generated@@619 ($generated@@270 $generated@@620))) (and (= ($generated@@320 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@619)) $generated@@619) ($generated@@80 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@619) ($generated@@270 $generated@@620))))
 :pattern ( ($generated@@255 $generated@@619 ($generated@@270 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@157) (= (type $generated@@622) $generated@@68)) ($generated@@255 $generated@@621 ($generated@@275 $generated@@622))) (and (= ($generated@@320 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@621)) $generated@@621) ($generated@@80 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@621) ($generated@@275 $generated@@622))))
 :pattern ( ($generated@@255 $generated@@621 ($generated@@275 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@157) (= (type $generated@@624) $generated@@68)) ($generated@@255 $generated@@623 ($generated@@193 $generated@@624))) (and (= ($generated@@320 ($generated@@166 ($generated@@94 $generated@@157 $generated@@2) $generated@@623)) $generated@@623) ($generated@@80 ($generated@@166 ($generated@@94 $generated@@157 $generated@@2) $generated@@623) ($generated@@193 $generated@@624))))
 :pattern ( ($generated@@255 $generated@@623 ($generated@@193 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@157) (= (type $generated@@626) $generated@@68)) ($generated@@255 $generated@@625 ($generated@@415 $generated@@626))) (and (= ($generated@@320 ($generated@@166 ($generated@@163 $generated@@157) $generated@@625)) $generated@@625) ($generated@@80 ($generated@@166 ($generated@@163 $generated@@157) $generated@@625) ($generated@@415 $generated@@626))))
 :pattern ( ($generated@@255 $generated@@625 ($generated@@415 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@68) (= (type $generated@@628) $generated@@157)) ($generated@@255 $generated@@628 ($generated@@81 $generated@@627))) (and (= ($generated@@320 ($generated@@166 $generated@@78 $generated@@628)) $generated@@628) ($generated@@80 ($generated@@166 $generated@@78 $generated@@628) ($generated@@81 $generated@@627))))
 :pattern ( ($generated@@255 $generated@@628 ($generated@@81 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@68) (= (type $generated@@630) ($generated@@163 $generated@@157))) (= ($generated@@80 ($generated@@162 $generated@@630) ($generated@@81 $generated@@629)) ($generated@@80 $generated@@630 ($generated@@415 $generated@@45))))
 :pattern ( ($generated@@80 ($generated@@162 $generated@@630) ($generated@@81 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@631 ($generated@@193 $generated@@632) $generated@@633) (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@157) (< 0 ($generated ($generated@@99 $generated@@631 $generated@@634)))) ($generated@@292 $generated@@634 $generated@@632 $generated@@633))
 :pattern ( ($generated@@99 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@92 $generated@@631 ($generated@@193 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@78) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@291 $generated@@637) (and ($generated@@179 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@68) ($generated@@92 $generated@@635 ($generated@@180 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@92 $generated@@635 ($generated@@180 $generated@@636 $generated@@638) $generated@@637))
))))) ($generated@@292 ($generated@@187 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@292 ($generated@@187 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@78) (= (type $generated@@640) $generated@@68)) (= (type $generated@@641) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@291 $generated@@641) (and ($generated@@179 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@68) ($generated@@92 $generated@@639 ($generated@@180 $generated@@642 $generated@@640) $generated@@641))
 :pattern ( ($generated@@92 $generated@@639 ($generated@@180 $generated@@642 $generated@@640) $generated@@641))
))))) ($generated@@292 ($generated@@188 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@292 ($generated@@188 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@157) (= (type $generated@@644) $generated@@157)) (= ($generated@@254 ($generated@@282 $generated@@643) ($generated@@282 $generated@@644)) ($generated@@282 ($generated@@254 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@254 ($generated@@282 $generated@@643) ($generated@@282 $generated@@644)))
)))
(assert (forall (($generated@@645 Int) ) (! (= ($generated@@320 ($generated@@8 ($generated@@280 $generated@@645))) ($generated@@282 ($generated@@320 ($generated@@8 $generated@@645))))
 :pattern ( ($generated@@320 ($generated@@8 ($generated@@280 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@157) (= ($generated@@314 ($generated@@282 $generated@@646)) ($generated@@282 ($generated@@314 $generated@@646))))
 :pattern ( ($generated@@314 ($generated@@282 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) ($generated@@163 $generated@@157)) (= ($generated@@162 ($generated@@282 $generated@@647)) ($generated@@282 ($generated@@162 $generated@@647))))
 :pattern ( ($generated@@162 ($generated@@282 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (! (= ($generated@@320 ($generated@@282 $generated@@648)) ($generated@@282 ($generated@@320 $generated@@648)))
 :pattern ( ($generated@@320 ($generated@@282 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@167 (type $generated@@649))))
 (=> (and (= (type $generated@@649) ($generated@@163 $generated@@650)) (= ($generated@@164 $generated@@649) 0)) (= $generated@@649 ($generated@@311 $generated@@650))))
 :pattern ( ($generated@@164 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@652)))
 (=> (and (and (= (type $generated@@651) ($generated@@94 $generated@@654 $generated@@2)) (= (type $generated@@653) $generated@@2)) (<= 0 ($generated $generated@@653))) (= ($generated@@333 ($generated@@100 $generated@@651 $generated@@652 $generated@@653)) (+ (- ($generated@@333 $generated@@651) ($generated ($generated@@99 $generated@@651 $generated@@652))) ($generated $generated@@653)))))
 :pattern ( ($generated@@333 ($generated@@100 $generated@@651 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@656) $generated@@2)) ($generated@@92 $generated@@656 $generated@@46 $generated@@655))
 :pattern ( ($generated@@92 $generated@@656 $generated@@46 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@658) $generated@@3)) ($generated@@92 $generated@@658 $generated@@47 $generated@@657))
 :pattern ( ($generated@@92 $generated@@658 $generated@@47 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@660) $generated@@4)) ($generated@@92 $generated@@660 $generated@@44 $generated@@659))
 :pattern ( ($generated@@92 $generated@@660 $generated@@44 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@662) $generated@@507)) ($generated@@92 $generated@@662 $generated@@45 $generated@@661))
 :pattern ( ($generated@@92 $generated@@662 $generated@@45 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@664) $generated@@157)) ($generated@@92 $generated@@664 $generated@@48 $generated@@663))
 :pattern ( ($generated@@92 $generated@@664 $generated@@48 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@163 $generated@@157)) (= (type $generated@@666) $generated@@68)) (= ($generated@@80 $generated@@665 ($generated@@415 $generated@@666)) (forall (($generated@@667 Int) ) (!  (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@164 $generated@@665))) ($generated@@255 ($generated@@161 $generated@@665 $generated@@667) $generated@@666))
 :pattern ( ($generated@@161 $generated@@665 $generated@@667))
))))
 :pattern ( ($generated@@80 $generated@@665 ($generated@@415 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@163 $generated@@157)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@164 $generated@@668))) (< ($generated@@165 ($generated@@166 $generated@@78 ($generated@@161 $generated@@668 $generated@@669))) ($generated@@608 $generated@@668))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@78 ($generated@@161 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@80 $generated@@670 ($generated@@459 $generated@@671 $generated@@672))) (and (and ($generated@@80 ($generated@@342 $generated@@670) ($generated@@270 $generated@@671)) ($generated@@80 ($generated@@391 $generated@@670) ($generated@@270 $generated@@672))) ($generated@@80 ($generated@@433 $generated@@670) ($generated@@270 ($generated@@180 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@80 $generated@@670 ($generated@@459 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@80 $generated@@673 ($generated@@467 $generated@@674 $generated@@675))) (and (and ($generated@@80 ($generated@@360 $generated@@673) ($generated@@275 $generated@@674)) ($generated@@80 ($generated@@402 $generated@@673) ($generated@@275 $generated@@675))) ($generated@@80 ($generated@@441 $generated@@673) ($generated@@275 ($generated@@180 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@80 $generated@@673 ($generated@@467 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@80 $generated@@676 $generated@@46))
 :pattern ( ($generated@@80 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@80 $generated@@677 $generated@@47))
 :pattern ( ($generated@@80 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@80 $generated@@678 $generated@@44))
 :pattern ( ($generated@@80 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@507) ($generated@@80 $generated@@679 $generated@@45))
 :pattern ( ($generated@@80 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@157) ($generated@@80 $generated@@680 $generated@@48))
 :pattern ( ($generated@@80 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 (T@U) Bool)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@682) $generated@@78) (= (type $generated@@689) $generated@@78)) (= (type $generated@@692) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@698) $generated@@78)) (= (type $generated@@683) $generated@@78)) (= (type $generated@@686) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@687) $generated@@78)) (= (type $generated@@684) $generated@@78)) (= (type $generated@@691) $generated@@78)) (= (type $generated@@694) $generated@@78)) (= (type $generated@@695) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@697) $generated@@95)) (= (type $generated@@700) ($generated@@200 $generated@@95 $generated@@4))) (= (type $generated@@701) $generated@@78)) (= (type $generated@@703) $generated@@78)) (= (type $generated@@704) $generated@@78)) (= (type $generated@@705) $generated@@78)) (= (type $generated@@706) $generated@@78)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@707  (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@681 ($generated@@280 (- 0 2)))) (=> (= $generated@@681 ($generated@@280 (- 0 2))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@82 $generated@@682))))))
(let (($generated@@708  (=> (and (not ($generated@@262 $generated@@46 $generated@@683)) (= $generated@@684 ($generated@@282 ($generated@@314 ($generated@@320 ($generated@@8 ($generated@@280 0))))))) (=> (and (and (= $generated@@685 ($generated@@280 4)) (= $generated@@681 $generated@@685)) (and (= $generated@@682 $generated@@684) (= (ControlFlow 0 8) 2))) $generated@@707))))
(let (($generated@@709  (=> (and ($generated@@262 $generated@@46 $generated@@683) ($generated@@92 $generated@@683 ($generated@@81 $generated@@46) $generated@@686)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@82 $generated@@683)) (=> ($generated@@82 $generated@@683) (=> (and ($generated@@79 $generated@@46 $generated@@46 $generated@@683) ($generated@@79 $generated@@46 $generated@@46 $generated@@683)) (=> (and (and (= $generated@@687 ($generated@@77 $generated@@46 $generated@@46 $generated@@683)) (= $generated@@681 $generated@@688)) (and (= $generated@@682 $generated@@687) (= (ControlFlow 0 6) 2))) $generated@@707)))))))
(let (($generated@@710  (=> (not ($generated@@262 $generated@@46 $generated@@689)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (= $generated@@690 ($generated@@280 3))) (=> (= $generated@@690 ($generated@@280 3)) (=> (and (and ($generated@@80 $generated@@691 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@691 ($generated@@81 $generated@@46) $generated@@692)) (= $generated@@693 ($generated@@280 (- 0 1)))) (=> (and (and (and (and ($generated@@80 $generated@@694 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@694 ($generated@@81 $generated@@46) $generated@@695)) (and ($generated@@291 $generated@@686) ($generated@@696 $generated@@686))) (and (and ($generated@@80 $generated@@683 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@683 ($generated@@81 $generated@@46) $generated@@686)) (and (=> (<= ($generated@@280 0) $generated@@693) ($generated@@155 $generated@@683)) (=> (<= ($generated@@280 0) $generated@@693) (= ($generated ($generated@@166 $generated@@2 ($generated@@156 $generated@@683))) $generated@@693))))) (and (and (and (=> (<= ($generated@@280 0) $generated@@693) (= $generated@@688 (+ (+ $generated@@693 $generated@@693) $generated@@693))) (=> (< $generated@@693 0) ($generated@@82 $generated@@683))) (and (=> (< $generated@@693 0) (= $generated@@688 (+ $generated@@693 $generated@@693))) (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@95) (=> (and (not (= $generated@@711 $generated@@697)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@692 $generated@@711) $generated@@60))) (= ($generated@@99 $generated@@686 $generated@@711) ($generated@@99 $generated@@692 $generated@@711))))
 :pattern ( ($generated@@99 $generated@@686 $generated@@711))
)))) (and (and ($generated@@150 $generated@@692 $generated@@686) ($generated@@92 $generated@@683 ($generated@@81 $generated@@46) $generated@@686)) (and ($generated@@263 $generated@@46 $generated@@683) ($generated@@263 $generated@@46 $generated@@683))))) (and (=> (= (ControlFlow 0 9) 6) $generated@@709) (=> (= (ControlFlow 0 9) 8) $generated@@708)))))))))
(let (($generated@@712  (=> (and ($generated@@262 $generated@@46 $generated@@689) ($generated@@92 $generated@@689 ($generated@@81 $generated@@46) $generated@@692)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@82 $generated@@689)) (=> ($generated@@82 $generated@@689) (=> (and ($generated@@79 $generated@@46 $generated@@46 $generated@@689) ($generated@@79 $generated@@46 $generated@@46 $generated@@689)) (=> (and (and (= $generated@@698 ($generated@@77 $generated@@46 $generated@@46 $generated@@689)) (= $generated@@681 $generated@@699)) (and (= $generated@@682 $generated@@698) (= (ControlFlow 0 4) 2))) $generated@@707)))))))
(let (($generated@@713  (=> (= $generated@@700 ($generated@@199 $generated@@697 $generated@@695 $generated@@60 false)) (=> (and (and ($generated@@80 $generated@@701 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@701 ($generated@@81 $generated@@46) $generated@@695)) (= $generated@@702 ($generated@@280 1))) (=> (and (and (and (and ($generated@@80 $generated@@703 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@703 ($generated@@81 $generated@@46) $generated@@695)) (and ($generated@@291 $generated@@692) ($generated@@696 $generated@@692))) (and (and ($generated@@80 $generated@@689 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@689 ($generated@@81 $generated@@46) $generated@@692)) (and (=> (<= ($generated@@280 0) $generated@@702) ($generated@@155 $generated@@689)) (=> (<= ($generated@@280 0) $generated@@702) (= ($generated ($generated@@166 $generated@@2 ($generated@@156 $generated@@689))) $generated@@702))))) (and (and (and (=> (<= ($generated@@280 0) $generated@@702) (= $generated@@690 (+ (+ $generated@@702 $generated@@702) $generated@@702))) (=> (< $generated@@702 0) ($generated@@82 $generated@@689))) (and (=> (< $generated@@702 0) (= $generated@@690 (+ $generated@@702 $generated@@702))) (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@95) (=> (and (not (= $generated@@714 $generated@@697)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@695 $generated@@714) $generated@@60))) (= ($generated@@99 $generated@@692 $generated@@714) ($generated@@99 $generated@@695 $generated@@714))))
 :pattern ( ($generated@@99 $generated@@692 $generated@@714))
)))) (and (and ($generated@@150 $generated@@695 $generated@@692) ($generated@@92 $generated@@689 ($generated@@81 $generated@@46) $generated@@692)) (and ($generated@@263 $generated@@46 $generated@@689) ($generated@@263 $generated@@46 $generated@@689))))) (and (=> (= (ControlFlow 0 11) 4) $generated@@712) (=> (= (ControlFlow 0 11) 9) $generated@@710)))))))
(let (($generated@@715  (=> (and (and (and (and ($generated@@291 $generated@@695) ($generated@@696 $generated@@695)) (and ($generated@@80 $generated@@704 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@704 ($generated@@81 $generated@@46) $generated@@695))) (and (and ($generated@@80 $generated@@705 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@705 ($generated@@81 $generated@@46) $generated@@695)) true)) (and (and (and ($generated@@80 $generated@@706 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@706 ($generated@@81 $generated@@46) $generated@@695)) true) (and (= 3 $generated@@76) (= (ControlFlow 0 12) 11)))) $generated@@713)))
$generated@@715))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@161 (T@U Int) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@165 (T@U) Int)
(declare-fun $generated@@166 (T@T T@U) T@U)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U) Bool)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@198 (T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@200 (T@T T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (Int) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@U T@U) Bool)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@T) T@U)
(declare-fun $generated@@362 (T@T T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@T) T@U)
(declare-fun $generated@@507 () T@T)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@78) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85)) $generated@@78)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@86)) $generated@@68)
 :pattern ( ($generated@@81 $generated@@86))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and (= (type $generated@@87) $generated@@68) (= (type $generated@@88) $generated@@68)) (= (type $generated@@89) $generated@@78)) (or ($generated@@79 $generated@@87 $generated@@88 $generated@@89) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@89 ($generated@@81 $generated@@87)) ($generated@@82 $generated@@89))))) ($generated@@80 ($generated@@77 $generated@@87 $generated@@88 $generated@@89) ($generated@@81 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@69)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@152) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@95) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@78) (= (type $generated@@160) $generated@@78)) (and ($generated@@155 $generated@@159) ($generated@@155 $generated@@160))) (= ($generated@@154 $generated@@159 $generated@@160) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160) ($generated@@155 $generated@@159))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160) ($generated@@155 $generated@@160))
)))
(assert  (and (and (and (and (forall (($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@168)) 16)) (forall (($generated@@169 T@T) ) (! (= ($generated@@167 ($generated@@163 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 Int) ) (! (let (($generated@@172 ($generated@@167 (type $generated@@170))))
(= (type ($generated@@161 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@161 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@162 $generated@@173)) $generated@@78)
 :pattern ( ($generated@@162 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@U) ) (! (= (type ($generated@@166 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ) (!  (=> (= (type $generated@@176) ($generated@@163 $generated@@157)) (=> (and (<= 0 $generated@@177) (< $generated@@177 ($generated@@164 $generated@@176))) (< ($generated@@165 ($generated@@166 $generated@@78 ($generated@@161 $generated@@176 $generated@@177))) ($generated@@165 ($generated@@162 $generated@@176)))))
 :pattern ( ($generated@@161 $generated@@176 $generated@@177) ($generated@@162 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@80 $generated@@178 ($generated@@93 0)))
 :pattern ( ($generated@@80 $generated@@178 ($generated@@93 0)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@181 $generated@@182)) $generated@@68)
 :pattern ( ($generated@@180 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (and (= (type $generated@@183) $generated@@68) (= (type $generated@@184) $generated@@68)) (= (type $generated@@185) $generated@@78)) ($generated@@80 $generated@@185 ($generated@@180 $generated@@183 $generated@@184))) ($generated@@179 $generated@@185))
 :pattern ( ($generated@@179 $generated@@185) ($generated@@80 $generated@@185 ($generated@@180 $generated@@183 $generated@@184)))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@157)
 :pattern ( ($generated@@187 $generated@@189))
)) (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@157)
 :pattern ( ($generated@@188 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) $generated@@78) (= (type $generated@@192) $generated@@78)) true) (= ($generated@@186 $generated@@191 $generated@@192)  (and (= ($generated@@187 $generated@@191) ($generated@@187 $generated@@192)) (= ($generated@@188 $generated@@191) ($generated@@188 $generated@@192)))))
 :pattern ( ($generated@@186 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@68)
 :pattern ( ($generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@197) $generated@@68)) ($generated@@80 $generated@@196 ($generated@@193 $generated@@197))) ($generated@@194 $generated@@196))
 :pattern ( ($generated@@80 $generated@@196 ($generated@@193 $generated@@197)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (= ($generated@@1 ($generated@@200 $generated@@204 $generated@@205)) 17)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@206 $generated@@207)) $generated@@206)
 :pattern ( ($generated@@200 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@202 ($generated@@200 $generated@@208 $generated@@209)) $generated@@209)
 :pattern ( ($generated@@200 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@202 (type $generated@@210))))
(= (type ($generated@@198 $generated@@210 $generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@198 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(let (($generated@@219 (type $generated@@215)))
(= (type ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@200 $generated@@219 $generated@@218))))
 :pattern ( ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@202 (type $generated@@220))))
 (=> (= (type $generated@@223) $generated@@224) (= ($generated@@198 ($generated@@203 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@221 $generated@@222) $generated@@223)))
 :weight 0
))) (and (and (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@198 ($generated@@203 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@198 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@198 ($generated@@203 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@198 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or true (= ($generated@@198 ($generated@@203 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@198 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@200 $generated@@95 $generated@@4))
 :pattern ( ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@71 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@95) (= (type $generated@@248) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@249) ($generated@@70 $generated@@4))) (= (type $generated@@251) $generated@@95)) (= (type $generated@@252) ($generated@@70 $generated@@253))) (= ($generated@@0 ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@256 $generated@@257)) $generated@@78)
 :pattern ( ($generated@@254 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@68) (= (type $generated@@259) $generated@@68)) (= (type $generated@@260) $generated@@157)) (= (type $generated@@261) $generated@@157)) (= ($generated@@80 ($generated@@254 $generated@@260 $generated@@261) ($generated@@180 $generated@@258 $generated@@259))  (and ($generated@@255 $generated@@260 $generated@@258) ($generated@@255 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@80 ($generated@@254 $generated@@260 $generated@@261) ($generated@@180 $generated@@258 $generated@@259)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@68) (= (type $generated@@265) $generated@@78)) (or ($generated@@263 $generated@@264 $generated@@265) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@265 ($generated@@81 $generated@@264))))) (= ($generated@@262 $generated@@264 $generated@@265) ($generated@@82 $generated@@265)))
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@78) (= (type $generated@@267) $generated@@78)) (= ($generated@@186 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@186 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@78) (= (type $generated@@269) $generated@@78)) (= ($generated@@154 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@154 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@68)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@273) $generated@@68)) (= ($generated@@80 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@157) ($generated@@0 ($generated@@99 $generated@@272 $generated@@274))) ($generated@@255 $generated@@274 $generated@@273))
 :pattern ( ($generated@@99 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@80 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@68)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@278) $generated@@68)) (= ($generated@@80 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@157) ($generated@@0 ($generated@@99 $generated@@277 $generated@@279))) ($generated@@255 $generated@@279 $generated@@278))
 :pattern ( ($generated@@99 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@80 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 Int) ) (! (= ($generated@@280 $generated@@281) $generated@@281)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@163 $generated@@157))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) $generated@@68)) (= (type $generated@@290) $generated@@78)) (or ($generated@@79 $generated@@288 $generated@@289 ($generated@@282 $generated@@290)) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@290 ($generated@@81 $generated@@288)) ($generated@@0 ($generated@@282 ($generated@@11 ($generated@@82 ($generated@@282 $generated@@290))))))))) (= ($generated@@77 $generated@@288 $generated@@289 ($generated@@282 $generated@@290)) ($generated@@282 ($generated@@162 ($generated@@282 ($generated@@286 ($generated@@282 $generated@@290)))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@288 $generated@@289 ($generated@@282 $generated@@290)))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@68) (= (type $generated@@294) $generated@@68)) (= (type $generated@@295) $generated@@157)) (= (type $generated@@296) $generated@@157)) (= (type $generated@@297) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@291 $generated@@297)) (= ($generated@@92 ($generated@@254 $generated@@295 $generated@@296) ($generated@@180 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@295 $generated@@296) ($generated@@180 $generated@@293 $generated@@294) $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@72)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@78) (= ($generated@@179 $generated@@300) (= ($generated@@298 $generated@@300) $generated@@61)))
 :pattern ( ($generated@@179 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@78) (= ($generated@@155 $generated@@301) (= ($generated@@298 $generated@@301) $generated@@63)))
 :pattern ( ($generated@@155 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@78) (= ($generated@@82 $generated@@302) (= ($generated@@298 $generated@@302) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@167 (type $generated@@304))))
 (=> (and (= (type $generated@@304) ($generated@@163 $generated@@306)) (= (type $generated@@305) ($generated@@163 $generated@@306))) (= ($generated@@303 $generated@@304 $generated@@305)  (and (= ($generated@@164 $generated@@304) ($generated@@164 $generated@@305)) (forall (($generated@@307 Int) ) (!  (=> (and (<= 0 $generated@@307) (< $generated@@307 ($generated@@164 $generated@@304))) (= ($generated@@161 $generated@@304 $generated@@307) ($generated@@161 $generated@@305 $generated@@307)))
 :pattern ( ($generated@@161 $generated@@304 $generated@@307))
 :pattern ( ($generated@@161 $generated@@305 $generated@@307))
))))))
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@78) ($generated@@179 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@157) (= (type $generated@@310) $generated@@157)) (= $generated@@308 ($generated@@254 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@179 $generated@@308))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@163 $generated@@312))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@T) ) (! (= ($generated@@164 ($generated@@311 $generated@@313)) 0)
 :pattern ( ($generated@@311 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@78)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@78) ($generated@@155 $generated@@316)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@157) (= $generated@@316 ($generated@@314 $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@155 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@78) ($generated@@82 $generated@@318)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) ($generated@@163 $generated@@157)) (= $generated@@318 ($generated@@162 $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@82 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@157)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@68) (= (type $generated@@324) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@292 ($generated@@320 $generated@@322) $generated@@323 $generated@@324) ($generated@@92 $generated@@322 $generated@@323 $generated@@324)))
 :pattern ( ($generated@@292 ($generated@@320 $generated@@322) $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@325) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@326) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@327) $generated@@157)) (= (type $generated@@328) $generated@@68)) ($generated@@150 $generated@@325 $generated@@326)) ($generated@@292 $generated@@327 $generated@@328 $generated@@325)) ($generated@@292 $generated@@327 $generated@@328 $generated@@326))
 :pattern ( ($generated@@150 $generated@@325 $generated@@326) ($generated@@292 $generated@@327 $generated@@328 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@329) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@330) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@332) $generated@@68)) ($generated@@150 $generated@@329 $generated@@330)) ($generated@@92 $generated@@331 $generated@@332 $generated@@329)) ($generated@@92 $generated@@331 $generated@@332 $generated@@330))
 :pattern ( ($generated@@150 $generated@@329 $generated@@330) ($generated@@92 $generated@@331 $generated@@332 $generated@@329))
)))
(assert (forall (($generated@@335 T@T) ) (! (= (type ($generated@@334 $generated@@335)) ($generated@@94 $generated@@335 $generated@@2))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@97 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@94 $generated@@337 $generated@@2)) (and (= (= ($generated@@333 $generated@@336) 0) (= $generated@@336 ($generated@@334 $generated@@337))) (=> (not (= ($generated@@333 $generated@@336) 0)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) (< 0 ($generated ($generated@@99 $generated@@336 $generated@@338))))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@73)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@68) (and (= ($generated@@90 ($generated@@81 $generated@@341)) $generated@@64) (= ($generated@@339 ($generated@@81 $generated@@341)) $generated@@67)))
 :pattern ( ($generated@@81 $generated@@341))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 18)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@94 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert  (and (and (and (and (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (= ($generated@@1 ($generated@@362 $generated@@365 $generated@@366)) 19)) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@363 ($generated@@362 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@362 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@364 ($generated@@362 $generated@@369 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@362 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@363 (type $generated@@371))))
(= (type ($generated@@360 $generated@@371)) ($generated@@94 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@371))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= (type ($generated@@361 $generated@@373 $generated@@374)) ($generated@@362 $generated@@373 $generated@@374))
 :pattern ( ($generated@@361 $generated@@373 $generated@@374))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@T) ) (! (let (($generated@@377 (type $generated@@375)))
 (not ($generated@@0 ($generated@@99 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375))))
 :pattern ( (let (($generated@@377 (type $generated@@375)))
($generated@@99 ($generated@@360 ($generated@@361 $generated@@377 $generated@@376)) $generated@@375)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@378) $generated@@68) (= (type $generated@@379) $generated@@78)) (or ($generated@@263 $generated@@378 $generated@@379) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@379 ($generated@@81 $generated@@378))))) true)
 :pattern ( ($generated@@262 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@97 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@94 $generated@@381 $generated@@2)) (= ($generated@@194 $generated@@380) (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@381) (and (<= 0 ($generated ($generated@@99 $generated@@380 $generated@@382))) (<= ($generated ($generated@@99 $generated@@380 $generated@@382)) ($generated@@333 $generated@@380))))
 :pattern ( ($generated@@99 $generated@@380 $generated@@382))
)))))
 :pattern ( ($generated@@194 $generated@@380))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@383) $generated@@68) (= (type $generated@@384) $generated@@78)) (or ($generated@@263 $generated@@383 ($generated@@282 $generated@@384)) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@384 ($generated@@81 $generated@@383))))) (= ($generated@@262 $generated@@383 ($generated@@282 $generated@@384)) ($generated@@0 ($generated@@282 ($generated@@11 ($generated@@82 ($generated@@282 $generated@@384)))))))
 :weight 3
 :pattern ( ($generated@@262 $generated@@383 ($generated@@282 $generated@@384)))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@385) $generated@@78) (= (type $generated@@386) $generated@@78)) (and ($generated@@82 $generated@@385) ($generated@@82 $generated@@386))) (= ($generated@@154 $generated@@385 $generated@@386) ($generated@@303 ($generated@@286 $generated@@385) ($generated@@286 $generated@@386))))
 :pattern ( ($generated@@154 $generated@@385 $generated@@386) ($generated@@82 $generated@@385))
 :pattern ( ($generated@@154 $generated@@385 $generated@@386) ($generated@@82 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@346 (type $generated@@387))))
(let (($generated@@389 ($generated@@345 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@344 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@343 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@342 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@346 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@94 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@346 (type $generated@@394))))
(let (($generated@@396 ($generated@@345 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@344 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@343 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@99 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@364 (type $generated@@398))))
(let (($generated@@400 ($generated@@363 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@362 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@361 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@99 ($generated@@360 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@360 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@364 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@94 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@364 (type $generated@@405))))
(let (($generated@@407 ($generated@@363 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@362 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@361 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@99 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@410) $generated@@68)) (= ($generated@@80 $generated@@409 ($generated@@193 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@157) (< 0 ($generated ($generated@@99 $generated@@409 $generated@@411)))) ($generated@@255 $generated@@411 $generated@@410))
 :pattern ( ($generated@@99 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@193 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) $generated@@68) (= (type $generated@@413) $generated@@157)) (= (type $generated@@414) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@291 $generated@@414)) (= ($generated@@92 ($generated@@314 $generated@@413) ($generated@@81 $generated@@412) $generated@@414) ($generated@@292 $generated@@413 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@413) ($generated@@81 $generated@@412) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (= (type ($generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@417) $generated@@78) (= (type $generated@@418) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@291 $generated@@418) (and ($generated@@82 $generated@@417) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@68) ($generated@@92 $generated@@417 ($generated@@81 $generated@@419) $generated@@418))
 :pattern ( ($generated@@92 $generated@@417 ($generated@@81 $generated@@419) $generated@@418))
))))) ($generated@@92 ($generated@@286 $generated@@417) ($generated@@415 $generated@@45) $generated@@418))
 :pattern ( ($generated@@92 ($generated@@286 $generated@@417) ($generated@@415 $generated@@45) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) $generated@@68) (= (type $generated@@421) ($generated@@163 $generated@@157))) (= (type $generated@@422) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@291 $generated@@422)) (= ($generated@@92 ($generated@@162 $generated@@421) ($generated@@81 $generated@@420) $generated@@422) ($generated@@92 $generated@@421 ($generated@@415 $generated@@45) $generated@@422)))
 :pattern ( ($generated@@92 ($generated@@162 $generated@@421) ($generated@@81 $generated@@420) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@423 ($generated@@270 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@157) ($generated@@0 ($generated@@99 $generated@@423 $generated@@426))) ($generated@@292 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@99 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@92 $generated@@423 ($generated@@270 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@427) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@427 ($generated@@275 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@157) ($generated@@0 ($generated@@99 $generated@@427 $generated@@430))) ($generated@@292 $generated@@430 $generated@@428 $generated@@429))
 :pattern ( ($generated@@99 $generated@@427 $generated@@430))
))))
 :pattern ( ($generated@@92 $generated@@427 ($generated@@275 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(= ($generated ($generated@@99 ($generated@@334 $generated@@432) $generated@@431)) 0))
 :pattern ( (let (($generated@@432 (type $generated@@431)))
($generated@@99 ($generated@@334 $generated@@432) $generated@@431)))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@94 $generated@@157 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@346 (type $generated@@436))))
(let (($generated@@438 ($generated@@345 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@94 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@440) $generated@@157)) (= ($generated@@0 ($generated@@99 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@439) ($generated@@187 ($generated@@166 $generated@@78 $generated@@440)))) (= ($generated@@99 ($generated@@434 $generated@@439) ($generated@@187 ($generated@@166 $generated@@78 $generated@@440))) ($generated@@188 ($generated@@166 $generated@@78 $generated@@440))))))
 :pattern ( ($generated@@99 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@94 $generated@@157 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@364 (type $generated@@444))))
(let (($generated@@446 ($generated@@363 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@94 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@448) $generated@@157)) (= ($generated@@0 ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@99 ($generated@@360 $generated@@447) ($generated@@187 ($generated@@166 $generated@@78 $generated@@448)))) (= ($generated@@99 ($generated@@442 $generated@@447) ($generated@@187 ($generated@@166 $generated@@78 $generated@@448))) ($generated@@188 ($generated@@166 $generated@@78 $generated@@448))))))
 :pattern ( ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@345 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@344 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@99 ($generated@@391 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@99 ($generated@@434 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@449) $generated@@453))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@99 ($generated@@391 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@363 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@362 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@99 ($generated@@402 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@99 ($generated@@360 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@99 ($generated@@442 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@99 ($generated@@360 $generated@@454) $generated@@458))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@99 ($generated@@402 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@463) $generated@@68)) (= (type $generated@@464) $generated@@68)) (= (type $generated@@465) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@462) $generated@@466))) (and ($generated@@292 ($generated@@99 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@292 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@92 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@360 $generated@@470) $generated@@474))) (and ($generated@@292 ($generated@@99 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@292 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@99 ($generated@@360 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@78)) ($generated@@80 $generated@@476 ($generated@@81 $generated@@475))) (or ($generated@@155 $generated@@476) ($generated@@82 $generated@@476)))
 :pattern ( ($generated@@82 $generated@@476) ($generated@@80 $generated@@476 ($generated@@81 $generated@@475)))
 :pattern ( ($generated@@155 $generated@@476) ($generated@@80 $generated@@476 ($generated@@81 $generated@@475)))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@167 (type $generated@@477))))
 (=> (and (and (= (type $generated@@477) ($generated@@163 $generated@@479)) (= (type $generated@@478) ($generated@@163 $generated@@479))) ($generated@@303 $generated@@477 $generated@@478)) (= $generated@@477 $generated@@478)))
 :pattern ( ($generated@@303 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@480) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@481) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@482) ($generated@@94 $generated@@95 $generated@@96))) (not (= $generated@@480 $generated@@482))) (and ($generated@@150 $generated@@480 $generated@@481) ($generated@@150 $generated@@481 $generated@@482))) ($generated@@150 $generated@@480 $generated@@482))
 :pattern ( ($generated@@150 $generated@@480 $generated@@481) ($generated@@150 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@T) ) (! (= (type ($generated@@483 $generated@@484)) ($generated@@94 $generated@@484 $generated@@4))
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@364 (type $generated@@485))))
(let (($generated@@487 ($generated@@363 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@362 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@361 $generated@@487 $generated@@486)) (= ($generated@@360 $generated@@485) ($generated@@483 $generated@@487))))))
 :pattern ( ($generated@@360 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@364 (type $generated@@488))))
(let (($generated@@490 ($generated@@363 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@362 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@361 $generated@@490 $generated@@489)) (= ($generated@@402 $generated@@488) ($generated@@483 $generated@@489))))))
 :pattern ( ($generated@@402 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@364 (type $generated@@491))))
(let (($generated@@493 ($generated@@363 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@362 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@361 $generated@@493 $generated@@492)) (= ($generated@@441 $generated@@491) ($generated@@483 $generated@@157))))))
 :pattern ( ($generated@@441 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@346 (type $generated@@494))))
(let (($generated@@496 ($generated@@345 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@344 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@343 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@157) (= (type $generated@@498) $generated@@157)) ($generated@@0 ($generated@@99 ($generated@@433 $generated@@494) ($generated@@320 ($generated@@254 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@433 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@364 (type $generated@@499))))
(let (($generated@@501 ($generated@@363 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@362 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@361 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@157) (= (type $generated@@503) $generated@@157)) ($generated@@0 ($generated@@99 ($generated@@441 $generated@@499) ($generated@@320 ($generated@@254 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@441 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@157) ($generated@@255 $generated@@504 $generated@@46)) (and (= ($generated@@320 ($generated@@166 $generated@@2 $generated@@504)) $generated@@504) ($generated@@80 ($generated@@166 $generated@@2 $generated@@504) $generated@@46)))
 :pattern ( ($generated@@255 $generated@@504 $generated@@46))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@157) ($generated@@255 $generated@@505 $generated@@47)) (and (= ($generated@@320 ($generated@@166 $generated@@3 $generated@@505)) $generated@@505) ($generated@@80 ($generated@@166 $generated@@3 $generated@@505) $generated@@47)))
 :pattern ( ($generated@@255 $generated@@505 $generated@@47))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@157) ($generated@@255 $generated@@506 $generated@@44)) (and (= ($generated@@320 ($generated@@166 $generated@@4 $generated@@506)) $generated@@506) ($generated@@80 ($generated@@166 $generated@@4 $generated@@506) $generated@@44)))
 :pattern ( ($generated@@255 $generated@@506 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@507) 20))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@157) ($generated@@255 $generated@@508 $generated@@45)) (and (= ($generated@@320 ($generated@@166 $generated@@507 $generated@@508)) $generated@@508) ($generated@@80 ($generated@@166 $generated@@507 $generated@@508) $generated@@45)))
 :pattern ( ($generated@@255 $generated@@508 $generated@@45))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@255 ($generated@@320 $generated@@509) $generated@@510) ($generated@@80 $generated@@509 $generated@@510)))
 :pattern ( ($generated@@255 ($generated@@320 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@97 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@94 $generated@@512 $generated@@2)) (<= 0 ($generated@@333 $generated@@511))))
 :pattern ( ($generated@@333 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@167 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@163 $generated@@514)) (<= 0 ($generated@@164 $generated@@513))))
 :pattern ( ($generated@@164 $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@515 ($generated@@459 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@459 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@519 ($generated@@459 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@459 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@90 ($generated@@459 $generated@@523 $generated@@524)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@467 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@467 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@467 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@90 ($generated@@467 $generated@@533 $generated@@534)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@157) (= (type $generated@@536) $generated@@157)) (= ($generated@@298 ($generated@@254 $generated@@535 $generated@@536)) $generated@@61))
 :pattern ( ($generated@@254 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@537 ($generated@@180 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@180 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (= ($generated@@541 ($generated@@180 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@180 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) (= (type $generated@@546) $generated@@157)) (= ($generated@@187 ($generated@@254 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@254 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@157) (= (type $generated@@548) $generated@@157)) (= ($generated@@188 ($generated@@254 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@254 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@163 $generated@@157)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@549 ($generated@@415 $generated@@550) $generated@@551) (forall (($generated@@552 Int) ) (!  (=> (and (<= 0 $generated@@552) (< $generated@@552 ($generated@@164 $generated@@549))) ($generated@@292 ($generated@@161 $generated@@549 $generated@@552) $generated@@550 $generated@@551))
 :pattern ( ($generated@@161 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@92 $generated@@549 ($generated@@415 $generated@@550) $generated@@551))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@68) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@78)) (or ($generated@@79 $generated@@553 $generated@@554 $generated@@555) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@555 ($generated@@81 $generated@@553)) ($generated@@82 $generated@@555))))) (= ($generated@@77 $generated@@553 $generated@@554 $generated@@555) ($generated@@162 ($generated@@286 $generated@@555))))
 :pattern ( ($generated@@77 $generated@@553 $generated@@554 $generated@@555))
))))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@556 ($generated@@93 $generated@@557)) $generated@@557)
 :pattern ( ($generated@@93 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@558 ($generated@@270 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@270 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@90 ($generated@@270 $generated@@561)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@275 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@275 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@90 ($generated@@275 $generated@@565)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@193 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@193 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@90 ($generated@@193 $generated@@569)) $generated@@56))
 :pattern ( ($generated@@193 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@415 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@415 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@90 ($generated@@415 $generated@@573)) $generated@@57))
 :pattern ( ($generated@@415 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@157) (= ($generated@@298 ($generated@@314 $generated@@574)) $generated@@63))
 :pattern ( ($generated@@314 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@575 ($generated@@81 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@81 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@157) (= ($generated@@156 ($generated@@314 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@314 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) ($generated@@163 $generated@@157)) (= ($generated@@298 ($generated@@162 $generated@@579)) $generated@@65))
 :pattern ( ($generated@@162 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) ($generated@@163 $generated@@157)) (= ($generated@@286 ($generated@@162 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@162 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
(= ($generated@@166 $generated@@582 ($generated@@320 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@320 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) $generated@@68)) (= ($generated@@80 $generated@@583 ($generated@@459 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@583) $generated@@586))) (and ($generated@@255 ($generated@@99 ($generated@@434 $generated@@583) $generated@@586) $generated@@585) ($generated@@255 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@583) $generated@@586))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@80 $generated@@583 ($generated@@459 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) (= ($generated@@80 $generated@@587 ($generated@@467 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@360 $generated@@587) $generated@@590))) (and ($generated@@255 ($generated@@99 ($generated@@442 $generated@@587) $generated@@590) $generated@@589) ($generated@@255 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@587) $generated@@590))
 :pattern ( ($generated@@99 ($generated@@360 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@80 $generated@@587 ($generated@@467 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@68) (= (type $generated@@592) $generated@@157)) (= ($generated@@80 ($generated@@314 $generated@@592) ($generated@@81 $generated@@591)) ($generated@@255 $generated@@592 $generated@@591)))
 :pattern ( ($generated@@80 ($generated@@314 $generated@@592) ($generated@@81 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@157) (= (type $generated@@595) $generated@@157)) (< ($generated@@593 $generated@@594) ($generated@@165 ($generated@@254 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@254 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@157) (= (type $generated@@597) $generated@@157)) (< ($generated@@593 $generated@@597) ($generated@@165 ($generated@@254 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@254 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@157) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@255 $generated@@598 ($generated@@459 $generated@@599 $generated@@600))) (and (= ($generated@@320 ($generated@@166 ($generated@@344 $generated@@157 $generated@@157) $generated@@598)) $generated@@598) ($generated@@80 ($generated@@166 ($generated@@344 $generated@@157 $generated@@157) $generated@@598) ($generated@@459 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@255 $generated@@598 ($generated@@459 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@157) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@255 $generated@@601 ($generated@@467 $generated@@602 $generated@@603))) (and (= ($generated@@320 ($generated@@166 ($generated@@362 $generated@@157 $generated@@157) $generated@@601)) $generated@@601) ($generated@@80 ($generated@@166 ($generated@@362 $generated@@157 $generated@@157) $generated@@601) ($generated@@467 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@255 $generated@@601 ($generated@@467 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@157)) ($generated@@255 $generated@@606 ($generated@@180 $generated@@604 $generated@@605))) (and (= ($generated@@320 ($generated@@166 $generated@@78 $generated@@606)) $generated@@606) ($generated@@80 ($generated@@166 $generated@@78 $generated@@606) ($generated@@180 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@255 $generated@@606 ($generated@@180 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@157) (< ($generated@@593 $generated@@607) ($generated@@165 ($generated@@314 $generated@@607))))
 :pattern ( ($generated@@314 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) ($generated@@163 $generated@@157)) (< ($generated@@608 $generated@@609) ($generated@@165 ($generated@@162 $generated@@609))))
 :pattern ( ($generated@@162 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@78) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@291 $generated@@612) (and ($generated@@155 $generated@@610) ($generated@@92 $generated@@610 ($generated@@81 $generated@@611) $generated@@612)))) ($generated@@292 ($generated@@156 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@292 ($generated@@156 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
 (not ($generated@@0 ($generated@@99 ($generated@@483 $generated@@614) $generated@@613))))
 :pattern ( (let (($generated@@614 (type $generated@@613)))
($generated@@99 ($generated@@483 $generated@@614) $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@68) (= (type $generated@@616) $generated@@68)) (and (= ($generated@@90 ($generated@@180 $generated@@615 $generated@@616)) $generated@@62) (= ($generated@@339 ($generated@@180 $generated@@615 $generated@@616)) $generated@@66)))
 :pattern ( ($generated@@180 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@78) (= ($generated@@593 ($generated@@320 $generated@@617)) ($generated@@165 $generated@@617)))
 :pattern ( ($generated@@593 ($generated@@320 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@157) ($generated@@255 $generated@@618 ($generated@@93 0))) (and (= ($generated@@320 ($generated@@166 $generated@@2 $generated@@618)) $generated@@618) ($generated@@80 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@618) ($generated@@93 0))))
 :pattern ( ($generated@@255 $generated@@618 ($generated@@93 0)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@157) (= (type $generated@@620) $generated@@68)) ($generated@@255 $generated@@619 ($generated@@270 $generated@@620))) (and (= ($generated@@320 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@619)) $generated@@619) ($generated@@80 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@619) ($generated@@270 $generated@@620))))
 :pattern ( ($generated@@255 $generated@@619 ($generated@@270 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@157) (= (type $generated@@622) $generated@@68)) ($generated@@255 $generated@@621 ($generated@@275 $generated@@622))) (and (= ($generated@@320 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@621)) $generated@@621) ($generated@@80 ($generated@@166 ($generated@@94 $generated@@157 $generated@@4) $generated@@621) ($generated@@275 $generated@@622))))
 :pattern ( ($generated@@255 $generated@@621 ($generated@@275 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@157) (= (type $generated@@624) $generated@@68)) ($generated@@255 $generated@@623 ($generated@@193 $generated@@624))) (and (= ($generated@@320 ($generated@@166 ($generated@@94 $generated@@157 $generated@@2) $generated@@623)) $generated@@623) ($generated@@80 ($generated@@166 ($generated@@94 $generated@@157 $generated@@2) $generated@@623) ($generated@@193 $generated@@624))))
 :pattern ( ($generated@@255 $generated@@623 ($generated@@193 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@157) (= (type $generated@@626) $generated@@68)) ($generated@@255 $generated@@625 ($generated@@415 $generated@@626))) (and (= ($generated@@320 ($generated@@166 ($generated@@163 $generated@@157) $generated@@625)) $generated@@625) ($generated@@80 ($generated@@166 ($generated@@163 $generated@@157) $generated@@625) ($generated@@415 $generated@@626))))
 :pattern ( ($generated@@255 $generated@@625 ($generated@@415 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@68) (= (type $generated@@628) $generated@@157)) ($generated@@255 $generated@@628 ($generated@@81 $generated@@627))) (and (= ($generated@@320 ($generated@@166 $generated@@78 $generated@@628)) $generated@@628) ($generated@@80 ($generated@@166 $generated@@78 $generated@@628) ($generated@@81 $generated@@627))))
 :pattern ( ($generated@@255 $generated@@628 ($generated@@81 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@68) (= (type $generated@@630) ($generated@@163 $generated@@157))) (= ($generated@@80 ($generated@@162 $generated@@630) ($generated@@81 $generated@@629)) ($generated@@80 $generated@@630 ($generated@@415 $generated@@45))))
 :pattern ( ($generated@@80 ($generated@@162 $generated@@630) ($generated@@81 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@631 ($generated@@193 $generated@@632) $generated@@633) (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@157) (< 0 ($generated ($generated@@99 $generated@@631 $generated@@634)))) ($generated@@292 $generated@@634 $generated@@632 $generated@@633))
 :pattern ( ($generated@@99 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@92 $generated@@631 ($generated@@193 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@78) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@291 $generated@@637) (and ($generated@@179 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@68) ($generated@@92 $generated@@635 ($generated@@180 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@92 $generated@@635 ($generated@@180 $generated@@636 $generated@@638) $generated@@637))
))))) ($generated@@292 ($generated@@187 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@292 ($generated@@187 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@78) (= (type $generated@@640) $generated@@68)) (= (type $generated@@641) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@291 $generated@@641) (and ($generated@@179 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@68) ($generated@@92 $generated@@639 ($generated@@180 $generated@@642 $generated@@640) $generated@@641))
 :pattern ( ($generated@@92 $generated@@639 ($generated@@180 $generated@@642 $generated@@640) $generated@@641))
))))) ($generated@@292 ($generated@@188 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@292 ($generated@@188 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@157) (= (type $generated@@644) $generated@@157)) (= ($generated@@254 ($generated@@282 $generated@@643) ($generated@@282 $generated@@644)) ($generated@@282 ($generated@@254 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@254 ($generated@@282 $generated@@643) ($generated@@282 $generated@@644)))
)))
(assert (forall (($generated@@645 Int) ) (! (= ($generated@@320 ($generated@@8 ($generated@@280 $generated@@645))) ($generated@@282 ($generated@@320 ($generated@@8 $generated@@645))))
 :pattern ( ($generated@@320 ($generated@@8 ($generated@@280 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@157) (= ($generated@@314 ($generated@@282 $generated@@646)) ($generated@@282 ($generated@@314 $generated@@646))))
 :pattern ( ($generated@@314 ($generated@@282 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) ($generated@@163 $generated@@157)) (= ($generated@@162 ($generated@@282 $generated@@647)) ($generated@@282 ($generated@@162 $generated@@647))))
 :pattern ( ($generated@@162 ($generated@@282 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (! (= ($generated@@320 ($generated@@282 $generated@@648)) ($generated@@282 ($generated@@320 $generated@@648)))
 :pattern ( ($generated@@320 ($generated@@282 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@167 (type $generated@@649))))
 (=> (and (= (type $generated@@649) ($generated@@163 $generated@@650)) (= ($generated@@164 $generated@@649) 0)) (= $generated@@649 ($generated@@311 $generated@@650))))
 :pattern ( ($generated@@164 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@652)))
 (=> (and (and (= (type $generated@@651) ($generated@@94 $generated@@654 $generated@@2)) (= (type $generated@@653) $generated@@2)) (<= 0 ($generated $generated@@653))) (= ($generated@@333 ($generated@@100 $generated@@651 $generated@@652 $generated@@653)) (+ (- ($generated@@333 $generated@@651) ($generated ($generated@@99 $generated@@651 $generated@@652))) ($generated $generated@@653)))))
 :pattern ( ($generated@@333 ($generated@@100 $generated@@651 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@656) $generated@@2)) ($generated@@92 $generated@@656 $generated@@46 $generated@@655))
 :pattern ( ($generated@@92 $generated@@656 $generated@@46 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@658) $generated@@3)) ($generated@@92 $generated@@658 $generated@@47 $generated@@657))
 :pattern ( ($generated@@92 $generated@@658 $generated@@47 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@660) $generated@@4)) ($generated@@92 $generated@@660 $generated@@44 $generated@@659))
 :pattern ( ($generated@@92 $generated@@660 $generated@@44 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@662) $generated@@507)) ($generated@@92 $generated@@662 $generated@@45 $generated@@661))
 :pattern ( ($generated@@92 $generated@@662 $generated@@45 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@664) $generated@@157)) ($generated@@92 $generated@@664 $generated@@48 $generated@@663))
 :pattern ( ($generated@@92 $generated@@664 $generated@@48 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@163 $generated@@157)) (= (type $generated@@666) $generated@@68)) (= ($generated@@80 $generated@@665 ($generated@@415 $generated@@666)) (forall (($generated@@667 Int) ) (!  (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@164 $generated@@665))) ($generated@@255 ($generated@@161 $generated@@665 $generated@@667) $generated@@666))
 :pattern ( ($generated@@161 $generated@@665 $generated@@667))
))))
 :pattern ( ($generated@@80 $generated@@665 ($generated@@415 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@163 $generated@@157)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@164 $generated@@668))) (< ($generated@@165 ($generated@@166 $generated@@78 ($generated@@161 $generated@@668 $generated@@669))) ($generated@@608 $generated@@668))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@78 ($generated@@161 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@344 $generated@@157 $generated@@157)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@80 $generated@@670 ($generated@@459 $generated@@671 $generated@@672))) (and (and ($generated@@80 ($generated@@342 $generated@@670) ($generated@@270 $generated@@671)) ($generated@@80 ($generated@@391 $generated@@670) ($generated@@270 $generated@@672))) ($generated@@80 ($generated@@433 $generated@@670) ($generated@@270 ($generated@@180 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@80 $generated@@670 ($generated@@459 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@362 $generated@@157 $generated@@157)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@80 $generated@@673 ($generated@@467 $generated@@674 $generated@@675))) (and (and ($generated@@80 ($generated@@360 $generated@@673) ($generated@@275 $generated@@674)) ($generated@@80 ($generated@@402 $generated@@673) ($generated@@275 $generated@@675))) ($generated@@80 ($generated@@441 $generated@@673) ($generated@@275 ($generated@@180 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@80 $generated@@673 ($generated@@467 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@80 $generated@@676 $generated@@46))
 :pattern ( ($generated@@80 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@80 $generated@@677 $generated@@47))
 :pattern ( ($generated@@80 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@80 $generated@@678 $generated@@44))
 :pattern ( ($generated@@80 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@507) ($generated@@80 $generated@@679 $generated@@45))
 :pattern ( ($generated@@80 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@157) ($generated@@80 $generated@@680 $generated@@48))
 :pattern ( ($generated@@80 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 (T@U) Bool)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@681) $generated@@78) (= (type $generated@@686) $generated@@78)) (= (type $generated@@688) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@694) $generated@@78)) (= (type $generated@@682) $generated@@78)) (= (type $generated@@684) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@685) $generated@@78)) (= (type $generated@@683) $generated@@78)) (= (type $generated@@687) $generated@@78)) (= (type $generated@@690) $generated@@78)) (= (type $generated@@691) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@693) $generated@@95)) (= (type $generated@@695) ($generated@@200 $generated@@95 $generated@@4))) (= (type $generated@@696) $generated@@78)) (= (type $generated@@698) $generated@@78)) (= (type $generated@@699) $generated@@78)) (= (type $generated@@700) $generated@@78)) (= (type $generated@@701) $generated@@78)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@702  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@82 $generated@@681))))
(let (($generated@@703  (=> (and (and (not ($generated@@262 $generated@@46 $generated@@682)) (= $generated@@683 ($generated@@282 ($generated@@314 ($generated@@320 ($generated@@8 ($generated@@280 0))))))) (and (= $generated@@681 $generated@@683) (= (ControlFlow 0 7) 2))) $generated@@702)))
(let (($generated@@704  (=> (and ($generated@@262 $generated@@46 $generated@@682) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@684)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@82 $generated@@682)) (=> (and ($generated@@82 $generated@@682) ($generated@@79 $generated@@46 $generated@@46 $generated@@682)) (=> (and (and ($generated@@79 $generated@@46 $generated@@46 $generated@@682) (= $generated@@685 ($generated@@77 $generated@@46 $generated@@46 $generated@@682))) (and (= $generated@@681 $generated@@685) (= (ControlFlow 0 5) 2))) $generated@@702))))))
(let (($generated@@705  (=> (not ($generated@@262 $generated@@46 $generated@@686)) (=> (and (and (and (and (and ($generated@@80 $generated@@687 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@687 ($generated@@81 $generated@@46) $generated@@688)) (= $generated@@689 ($generated@@280 (- 0 1)))) (and ($generated@@80 $generated@@690 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@690 ($generated@@81 $generated@@46) $generated@@691))) (and (and ($generated@@291 $generated@@684) ($generated@@692 $generated@@684)) (and ($generated@@80 $generated@@682 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@684)))) (and (and (and (=> (<= ($generated@@280 0) $generated@@689) ($generated@@155 $generated@@682)) (=> (<= ($generated@@280 0) $generated@@689) (= ($generated ($generated@@166 $generated@@2 ($generated@@156 $generated@@682))) $generated@@689))) (and (=> (< $generated@@689 0) ($generated@@82 $generated@@682)) (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@95) (=> (and (not (= $generated@@706 $generated@@693)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@688 $generated@@706) $generated@@60))) (= ($generated@@99 $generated@@684 $generated@@706) ($generated@@99 $generated@@688 $generated@@706))))
 :pattern ( ($generated@@99 $generated@@684 $generated@@706))
)))) (and (and ($generated@@150 $generated@@688 $generated@@684) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@684)) (and ($generated@@263 $generated@@46 $generated@@682) ($generated@@263 $generated@@46 $generated@@682))))) (and (=> (= (ControlFlow 0 8) 5) $generated@@704) (=> (= (ControlFlow 0 8) 7) $generated@@703))))))
(let (($generated@@707  (=> (and ($generated@@262 $generated@@46 $generated@@686) ($generated@@92 $generated@@686 ($generated@@81 $generated@@46) $generated@@688)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@82 $generated@@686)) (=> (and ($generated@@82 $generated@@686) ($generated@@79 $generated@@46 $generated@@46 $generated@@686)) (=> (and (and ($generated@@79 $generated@@46 $generated@@46 $generated@@686) (= $generated@@694 ($generated@@77 $generated@@46 $generated@@46 $generated@@686))) (and (= $generated@@681 $generated@@694) (= (ControlFlow 0 3) 2))) $generated@@702))))))
(let (($generated@@708  (=> (= $generated@@695 ($generated@@199 $generated@@693 $generated@@691 $generated@@60 false)) (=> (and (and (and (and (and ($generated@@80 $generated@@696 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@696 ($generated@@81 $generated@@46) $generated@@691)) (= $generated@@697 ($generated@@280 1))) (and ($generated@@80 $generated@@698 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@698 ($generated@@81 $generated@@46) $generated@@691))) (and (and ($generated@@291 $generated@@688) ($generated@@692 $generated@@688)) (and ($generated@@80 $generated@@686 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@686 ($generated@@81 $generated@@46) $generated@@688)))) (and (and (and (=> (<= ($generated@@280 0) $generated@@697) ($generated@@155 $generated@@686)) (=> (<= ($generated@@280 0) $generated@@697) (= ($generated ($generated@@166 $generated@@2 ($generated@@156 $generated@@686))) $generated@@697))) (and (=> (< $generated@@697 0) ($generated@@82 $generated@@686)) (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@95) (=> (and (not (= $generated@@709 $generated@@693)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@691 $generated@@709) $generated@@60))) (= ($generated@@99 $generated@@688 $generated@@709) ($generated@@99 $generated@@691 $generated@@709))))
 :pattern ( ($generated@@99 $generated@@688 $generated@@709))
)))) (and (and ($generated@@150 $generated@@691 $generated@@688) ($generated@@92 $generated@@686 ($generated@@81 $generated@@46) $generated@@688)) (and ($generated@@263 $generated@@46 $generated@@686) ($generated@@263 $generated@@46 $generated@@686))))) (and (=> (= (ControlFlow 0 9) 3) $generated@@707) (=> (= (ControlFlow 0 9) 8) $generated@@705))))))
(let (($generated@@710  (=> (and (and (and (and ($generated@@291 $generated@@691) ($generated@@692 $generated@@691)) (and ($generated@@80 $generated@@699 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@699 ($generated@@81 $generated@@46) $generated@@691))) (and (and ($generated@@80 $generated@@700 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@700 ($generated@@81 $generated@@46) $generated@@691)) true)) (and (and (and ($generated@@80 $generated@@701 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@701 ($generated@@81 $generated@@46) $generated@@691)) true) (and (= 3 $generated@@76) (= (ControlFlow 0 10) 9)))) $generated@@708)))
$generated@@710))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@148 (T@U Int) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@153 (T@T T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@142) 14) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@142) (= (type $generated@@147) $generated@@142)) (and ($generated@@141 $generated@@146) ($generated@@141 $generated@@147))) (= ($generated@@140 $generated@@146 $generated@@147) (= ($generated@@143 $generated@@146) ($generated@@143 $generated@@147))))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@146))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@147))
)))
(assert  (and (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@150 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@150 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@150 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@148 $generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@148 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@149 $generated@@160)) $generated@@142)
 :pattern ( ($generated@@149 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@U) ) (! (= (type ($generated@@153 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@153 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (= (type $generated@@163) ($generated@@150 $generated@@144)) (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@151 $generated@@163))) (< ($generated@@152 ($generated@@153 $generated@@142 ($generated@@148 $generated@@163 $generated@@164))) ($generated@@152 ($generated@@149 $generated@@163)))))
 :pattern ( ($generated@@148 $generated@@163 $generated@@164) ($generated@@149 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@79 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@79 0)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@169 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@68) (= (type $generated@@172) $generated@@68)) (= (type $generated@@173) $generated@@142)) ($generated@@165 $generated@@173 ($generated@@168 $generated@@171 $generated@@172))) ($generated@@167 $generated@@173))
 :pattern ( ($generated@@167 $generated@@173) ($generated@@165 $generated@@173 ($generated@@168 $generated@@171 $generated@@172)))
)))
(assert  (and (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@144)
 :pattern ( ($generated@@175 $generated@@177))
)) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@144)
 :pattern ( ($generated@@176 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@142) (= (type $generated@@180) $generated@@142)) true) (= ($generated@@174 $generated@@179 $generated@@180)  (and (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)) (= ($generated@@176 $generated@@179) ($generated@@176 $generated@@180)))))
 :pattern ( ($generated@@174 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@68)
 :pattern ( ($generated@@181 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@185) $generated@@68)) ($generated@@165 $generated@@184 ($generated@@181 $generated@@185))) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@165 $generated@@184 ($generated@@181 $generated@@185)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 17)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@81 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@71 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@81) (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@237) ($generated@@70 $generated@@4))) (= (type $generated@@239) $generated@@81)) (= (type $generated@@240) ($generated@@70 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@142)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@68) (= (type $generated@@247) $generated@@68)) (= (type $generated@@248) $generated@@144)) (= (type $generated@@249) $generated@@144)) (= ($generated@@165 ($generated@@242 $generated@@248 $generated@@249) ($generated@@168 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@165 ($generated@@242 $generated@@248 $generated@@249) ($generated@@168 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@142) (= (type $generated@@251) $generated@@142)) (= ($generated@@174 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@174 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@142) (= (type $generated@@253) $generated@@142)) (= ($generated@@140 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@140 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@257) $generated@@68)) (= ($generated@@165 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@144) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@243 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@165 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@262) $generated@@68)) (= ($generated@@165 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@144) ($generated@@0 ($generated@@85 $generated@@261 $generated@@263))) ($generated@@243 $generated@@263 $generated@@262))
 :pattern ( ($generated@@85 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@165 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) $generated@@68)) (= (type $generated@@274) $generated@@144)) (= (type $generated@@275) $generated@@144)) (= (type $generated@@276) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@270 $generated@@276)) (= ($generated@@78 ($generated@@242 $generated@@274 $generated@@275) ($generated@@168 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@78 ($generated@@242 $generated@@274 $generated@@275) ($generated@@168 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@72)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@142) (= ($generated@@167 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@167 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@142) (= ($generated@@141 $generated@@280) (= ($generated@@277 $generated@@280) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@142) (= ($generated@@281 $generated@@282) (= ($generated@@277 $generated@@282) $generated@@65)))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@154 (type $generated@@284))))
 (=> (and (= (type $generated@@284) ($generated@@150 $generated@@286)) (= (type $generated@@285) ($generated@@150 $generated@@286))) (= ($generated@@283 $generated@@284 $generated@@285)  (and (= ($generated@@151 $generated@@284) ($generated@@151 $generated@@285)) (forall (($generated@@287 Int) ) (!  (=> (and (<= 0 $generated@@287) (< $generated@@287 ($generated@@151 $generated@@284))) (= ($generated@@148 $generated@@284 $generated@@287) ($generated@@148 $generated@@285 $generated@@287)))
 :pattern ( ($generated@@148 $generated@@284 $generated@@287))
 :pattern ( ($generated@@148 $generated@@285 $generated@@287))
))))))
 :pattern ( ($generated@@283 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@142) ($generated@@167 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@144) (= (type $generated@@290) $generated@@144)) (= $generated@@288 ($generated@@242 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@167 $generated@@288))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@150 $generated@@292))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@151 ($generated@@291 $generated@@293)) 0)
 :pattern ( ($generated@@291 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@142)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@142) ($generated@@141 $generated@@296)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@144) (= $generated@@296 ($generated@@294 $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@141 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@142) ($generated@@281 $generated@@298)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) ($generated@@150 $generated@@144)) (= $generated@@298 ($generated@@149 $generated@@299)))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@281 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@144)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@68) (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@271 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@78 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@271 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@306) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@307) $generated@@144)) (= (type $generated@@308) $generated@@68)) ($generated@@136 $generated@@305 $generated@@306)) ($generated@@271 $generated@@307 $generated@@308 $generated@@305)) ($generated@@271 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@136 $generated@@305 $generated@@306) ($generated@@271 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@310) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@312) $generated@@68)) ($generated@@136 $generated@@309 $generated@@310)) ($generated@@78 $generated@@311 $generated@@312 $generated@@309)) ($generated@@78 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@136 $generated@@309 $generated@@310) ($generated@@78 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@315 T@T) ) (! (= (type ($generated@@314 $generated@@315)) ($generated@@80 $generated@@315 $generated@@2))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@83 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@80 $generated@@317 $generated@@2)) (and (= (= ($generated@@313 $generated@@316) 0) (= $generated@@316 ($generated@@314 $generated@@317))) (=> (not (= ($generated@@313 $generated@@316) 0)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) (< 0 ($generated ($generated@@85 $generated@@316 $generated@@318))))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert  (and (forall (($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@321)) $generated@@68)
 :pattern ( ($generated@@319 $generated@@321))
)) (forall (($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@322)) $generated@@73)
 :pattern ( ($generated@@320 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@68) (and (= ($generated@@76 ($generated@@319 $generated@@323)) $generated@@64) (= ($generated@@320 ($generated@@319 $generated@@323)) $generated@@67)))
 :pattern ( ($generated@@319 $generated@@323))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 18)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@80 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@85 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@85 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 19)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@85 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@85 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@83 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@80 $generated@@361 $generated@@2)) (= ($generated@@182 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@85 $generated@@360 $generated@@362))) (<= ($generated ($generated@@85 $generated@@360 $generated@@362)) ($generated@@313 $generated@@360))))
 :pattern ( ($generated@@85 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@182 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@150 $generated@@144))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@365) $generated@@142) (= (type $generated@@366) $generated@@142)) (and ($generated@@281 $generated@@365) ($generated@@281 $generated@@366))) (= ($generated@@140 $generated@@365 $generated@@366) ($generated@@283 ($generated@@363 $generated@@365) ($generated@@363 $generated@@366))))
 :pattern ( ($generated@@140 $generated@@365 $generated@@366) ($generated@@281 $generated@@365))
 :pattern ( ($generated@@140 $generated@@365 $generated@@366) ($generated@@281 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@328 (type $generated@@367))))
(let (($generated@@369 ($generated@@327 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@326 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@325 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@324 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@328 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@80 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@328 (type $generated@@374))))
(let (($generated@@376 ($generated@@327 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@326 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@325 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@85 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@346 (type $generated@@378))))
(let (($generated@@380 ($generated@@345 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@344 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@343 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@342 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@346 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@80 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@346 (type $generated@@385))))
(let (($generated@@387 ($generated@@345 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@344 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@343 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@85 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@390) $generated@@68)) (= ($generated@@165 $generated@@389 ($generated@@181 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@389 $generated@@391)))) ($generated@@243 $generated@@391 $generated@@390))
 :pattern ( ($generated@@85 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@165 $generated@@389 ($generated@@181 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) $generated@@68) (= (type $generated@@393) $generated@@144)) (= (type $generated@@394) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@270 $generated@@394)) (= ($generated@@78 ($generated@@294 $generated@@393) ($generated@@319 $generated@@392) $generated@@394) ($generated@@271 $generated@@393 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@78 ($generated@@294 $generated@@393) ($generated@@319 $generated@@392) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (= (type ($generated@@395 $generated@@396)) $generated@@68)
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@397) $generated@@142) (= (type $generated@@398) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@270 $generated@@398) (and ($generated@@281 $generated@@397) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@68) ($generated@@78 $generated@@397 ($generated@@319 $generated@@399) $generated@@398))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@319 $generated@@399) $generated@@398))
))))) ($generated@@78 ($generated@@363 $generated@@397) ($generated@@395 $generated@@45) $generated@@398))
 :pattern ( ($generated@@78 ($generated@@363 $generated@@397) ($generated@@395 $generated@@45) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) $generated@@68) (= (type $generated@@401) ($generated@@150 $generated@@144))) (= (type $generated@@402) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@270 $generated@@402)) (= ($generated@@78 ($generated@@149 $generated@@401) ($generated@@319 $generated@@400) $generated@@402) ($generated@@78 $generated@@401 ($generated@@395 $generated@@45) $generated@@402)))
 :pattern ( ($generated@@78 ($generated@@149 $generated@@401) ($generated@@319 $generated@@400) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@404) $generated@@68)) (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@403 ($generated@@254 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@144) ($generated@@0 ($generated@@85 $generated@@403 $generated@@406))) ($generated@@271 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@85 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@78 $generated@@403 ($generated@@254 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@408) $generated@@68)) (= (type $generated@@409) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@407 ($generated@@259 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@144) ($generated@@0 ($generated@@85 $generated@@407 $generated@@410))) ($generated@@271 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@85 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@78 $generated@@407 ($generated@@259 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(= ($generated ($generated@@85 ($generated@@314 $generated@@412) $generated@@411)) 0))
 :pattern ( (let (($generated@@412 (type $generated@@411)))
($generated@@85 ($generated@@314 $generated@@412) $generated@@411)))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@328 (type $generated@@416))))
(let (($generated@@418 ($generated@@327 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@80 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@326 $generated@@144 $generated@@144)) (= (type $generated@@420) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@85 ($generated@@324 $generated@@419) ($generated@@175 ($generated@@153 $generated@@142 $generated@@420)))) (= ($generated@@85 ($generated@@414 $generated@@419) ($generated@@175 ($generated@@153 $generated@@142 $generated@@420))) ($generated@@176 ($generated@@153 $generated@@142 $generated@@420))))))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@346 (type $generated@@424))))
(let (($generated@@426 ($generated@@345 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@80 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@344 $generated@@144 $generated@@144)) (= (type $generated@@428) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@85 ($generated@@342 $generated@@427) ($generated@@175 ($generated@@153 $generated@@142 $generated@@428)))) (= ($generated@@85 ($generated@@422 $generated@@427) ($generated@@175 ($generated@@153 $generated@@142 $generated@@428))) ($generated@@176 ($generated@@153 $generated@@142 $generated@@428))))))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@327 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@326 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@85 ($generated@@371 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@85 ($generated@@324 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@85 ($generated@@414 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@414 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(let (($generated@@437 ($generated@@345 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@344 $generated@@437 $generated@@436)) (= ($generated@@0 ($generated@@85 ($generated@@382 $generated@@434) $generated@@435)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) (and ($generated@@0 ($generated@@85 ($generated@@342 $generated@@434) $generated@@438)) (= $generated@@435 ($generated@@85 ($generated@@422 $generated@@434) $generated@@438))))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@434) $generated@@438))
))))))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@326 $generated@@144 $generated@@144)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@442) $generated@@446))) (and ($generated@@271 ($generated@@85 ($generated@@414 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@271 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@85 ($generated@@414 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@68)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@344 $generated@@144 $generated@@144)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@450) $generated@@454))) (and ($generated@@271 ($generated@@85 ($generated@@422 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@271 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (= (type $generated@@455) $generated@@68) (= (type $generated@@456) $generated@@142)) ($generated@@165 $generated@@456 ($generated@@319 $generated@@455))) (or ($generated@@141 $generated@@456) ($generated@@281 $generated@@456)))
 :pattern ( ($generated@@281 $generated@@456) ($generated@@165 $generated@@456 ($generated@@319 $generated@@455)))
 :pattern ( ($generated@@141 $generated@@456) ($generated@@165 $generated@@456 ($generated@@319 $generated@@455)))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@154 (type $generated@@457))))
 (=> (and (and (= (type $generated@@457) ($generated@@150 $generated@@459)) (= (type $generated@@458) ($generated@@150 $generated@@459))) ($generated@@283 $generated@@457 $generated@@458)) (= $generated@@457 $generated@@458)))
 :pattern ( ($generated@@283 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@462) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@460 $generated@@462))) (and ($generated@@136 $generated@@460 $generated@@461) ($generated@@136 $generated@@461 $generated@@462))) ($generated@@136 $generated@@460 $generated@@462))
 :pattern ( ($generated@@136 $generated@@460 $generated@@461) ($generated@@136 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@80 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@346 (type $generated@@465))))
(let (($generated@@467 ($generated@@345 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@344 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@343 $generated@@467 $generated@@466)) (= ($generated@@342 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@342 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@346 (type $generated@@468))))
(let (($generated@@470 ($generated@@345 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@344 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@343 $generated@@470 $generated@@469)) (= ($generated@@382 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@382 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@346 (type $generated@@471))))
(let (($generated@@473 ($generated@@345 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@344 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@343 $generated@@473 $generated@@472)) (= ($generated@@421 $generated@@471) ($generated@@463 $generated@@144))))))
 :pattern ( ($generated@@421 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@328 (type $generated@@474))))
(let (($generated@@476 ($generated@@327 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@326 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@325 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@144) (= (type $generated@@478) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@413 $generated@@474) ($generated@@300 ($generated@@242 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@413 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@346 (type $generated@@479))))
(let (($generated@@481 ($generated@@345 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@344 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@343 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@144) (= (type $generated@@483) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@421 $generated@@479) ($generated@@300 ($generated@@242 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@421 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@144) ($generated@@243 $generated@@484 $generated@@46)) (and (= ($generated@@300 ($generated@@153 $generated@@2 $generated@@484)) $generated@@484) ($generated@@165 ($generated@@153 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@144) ($generated@@243 $generated@@485 $generated@@47)) (and (= ($generated@@300 ($generated@@153 $generated@@3 $generated@@485)) $generated@@485) ($generated@@165 ($generated@@153 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@144) ($generated@@243 $generated@@486 $generated@@44)) (and (= ($generated@@300 ($generated@@153 $generated@@4 $generated@@486)) $generated@@486) ($generated@@165 ($generated@@153 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 20))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@144) ($generated@@243 $generated@@488 $generated@@45)) (and (= ($generated@@300 ($generated@@153 $generated@@487 $generated@@488)) $generated@@488) ($generated@@165 ($generated@@153 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@68) (= ($generated@@243 ($generated@@300 $generated@@489) $generated@@490) ($generated@@165 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@243 ($generated@@300 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@83 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@80 $generated@@492 $generated@@2)) (<= 0 ($generated@@313 $generated@@491))))
 :pattern ( ($generated@@313 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@154 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@150 $generated@@494)) (<= 0 ($generated@@151 $generated@@493))))
 :pattern ( ($generated@@151 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@439 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@439 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@439 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@439 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@439 $generated@@503 $generated@@504)) $generated@@58))
 :pattern ( ($generated@@439 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@447 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@447 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@447 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@447 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@76 ($generated@@447 $generated@@513 $generated@@514)) $generated@@59))
 :pattern ( ($generated@@447 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@144) (= (type $generated@@516) $generated@@144)) (= ($generated@@277 ($generated@@242 $generated@@515 $generated@@516)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@168 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@168 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@168 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@168 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@144) (= (type $generated@@526) $generated@@144)) (= ($generated@@175 ($generated@@242 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@242 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@144) (= (type $generated@@528) $generated@@144)) (= ($generated@@176 ($generated@@242 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@242 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@150 $generated@@144)) (= (type $generated@@530) $generated@@68)) (= (type $generated@@531) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@529 ($generated@@395 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@151 $generated@@529))) ($generated@@271 ($generated@@148 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@148 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@78 $generated@@529 ($generated@@395 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@79 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@79 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@254 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@254 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@76 ($generated@@254 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@539 ($generated@@259 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@259 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@76 ($generated@@259 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@181 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@181 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@76 ($generated@@181 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@181 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@395 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@395 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@395 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@395 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@144) (= ($generated@@277 ($generated@@294 $generated@@551)) $generated@@63))
 :pattern ( ($generated@@294 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@552 ($generated@@319 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@319 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@144) (= ($generated@@143 ($generated@@294 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@294 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) ($generated@@150 $generated@@144)) (= ($generated@@277 ($generated@@149 $generated@@556)) $generated@@65))
 :pattern ( ($generated@@149 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) ($generated@@150 $generated@@144)) (= ($generated@@363 ($generated@@149 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@149 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(= ($generated@@153 $generated@@559 ($generated@@300 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@300 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@326 $generated@@144 $generated@@144)) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) $generated@@68)) (= ($generated@@165 $generated@@560 ($generated@@439 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@560) $generated@@563))) (and ($generated@@243 ($generated@@85 ($generated@@414 $generated@@560) $generated@@563) $generated@@562) ($generated@@243 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@85 ($generated@@414 $generated@@560) $generated@@563))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@165 $generated@@560 ($generated@@439 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@344 $generated@@144 $generated@@144)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) (= ($generated@@165 $generated@@564 ($generated@@447 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@564) $generated@@567))) (and ($generated@@243 ($generated@@85 ($generated@@422 $generated@@564) $generated@@567) $generated@@566) ($generated@@243 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@564) $generated@@567))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@165 $generated@@564 ($generated@@447 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@68) (= (type $generated@@569) $generated@@144)) (= ($generated@@165 ($generated@@294 $generated@@569) ($generated@@319 $generated@@568)) ($generated@@243 $generated@@569 $generated@@568)))
 :pattern ( ($generated@@165 ($generated@@294 $generated@@569) ($generated@@319 $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@144) (= (type $generated@@572) $generated@@144)) (< ($generated@@570 $generated@@571) ($generated@@152 ($generated@@242 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@242 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@144) (= (type $generated@@574) $generated@@144)) (< ($generated@@570 $generated@@574) ($generated@@152 ($generated@@242 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@242 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@144) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@68)) ($generated@@243 $generated@@575 ($generated@@439 $generated@@576 $generated@@577))) (and (= ($generated@@300 ($generated@@153 ($generated@@326 $generated@@144 $generated@@144) $generated@@575)) $generated@@575) ($generated@@165 ($generated@@153 ($generated@@326 $generated@@144 $generated@@144) $generated@@575) ($generated@@439 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@243 $generated@@575 ($generated@@439 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@144) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) ($generated@@243 $generated@@578 ($generated@@447 $generated@@579 $generated@@580))) (and (= ($generated@@300 ($generated@@153 ($generated@@344 $generated@@144 $generated@@144) $generated@@578)) $generated@@578) ($generated@@165 ($generated@@153 ($generated@@344 $generated@@144 $generated@@144) $generated@@578) ($generated@@447 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@243 $generated@@578 ($generated@@447 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@68) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@144)) ($generated@@243 $generated@@583 ($generated@@168 $generated@@581 $generated@@582))) (and (= ($generated@@300 ($generated@@153 $generated@@142 $generated@@583)) $generated@@583) ($generated@@165 ($generated@@153 $generated@@142 $generated@@583) ($generated@@168 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@243 $generated@@583 ($generated@@168 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@144) (< ($generated@@570 $generated@@584) ($generated@@152 ($generated@@294 $generated@@584))))
 :pattern ( ($generated@@294 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) ($generated@@150 $generated@@144)) (< ($generated@@585 $generated@@586) ($generated@@152 ($generated@@149 $generated@@586))))
 :pattern ( ($generated@@149 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@142) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@270 $generated@@589) (and ($generated@@141 $generated@@587) ($generated@@78 $generated@@587 ($generated@@319 $generated@@588) $generated@@589)))) ($generated@@271 ($generated@@143 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@271 ($generated@@143 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@85 ($generated@@463 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@85 ($generated@@463 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (and (= ($generated@@76 ($generated@@168 $generated@@592 $generated@@593)) $generated@@62) (= ($generated@@320 ($generated@@168 $generated@@592 $generated@@593)) $generated@@66)))
 :pattern ( ($generated@@168 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@142) (= ($generated@@570 ($generated@@300 $generated@@594)) ($generated@@152 $generated@@594)))
 :pattern ( ($generated@@570 ($generated@@300 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@144) ($generated@@243 $generated@@595 ($generated@@79 0))) (and (= ($generated@@300 ($generated@@153 $generated@@2 $generated@@595)) $generated@@595) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@595) ($generated@@79 0))))
 :pattern ( ($generated@@243 $generated@@595 ($generated@@79 0)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@144) (= (type $generated@@597) $generated@@68)) ($generated@@243 $generated@@596 ($generated@@254 $generated@@597))) (and (= ($generated@@300 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@596)) $generated@@596) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@596) ($generated@@254 $generated@@597))))
 :pattern ( ($generated@@243 $generated@@596 ($generated@@254 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@144) (= (type $generated@@599) $generated@@68)) ($generated@@243 $generated@@598 ($generated@@259 $generated@@599))) (and (= ($generated@@300 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@598)) $generated@@598) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@598) ($generated@@259 $generated@@599))))
 :pattern ( ($generated@@243 $generated@@598 ($generated@@259 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@144) (= (type $generated@@601) $generated@@68)) ($generated@@243 $generated@@600 ($generated@@181 $generated@@601))) (and (= ($generated@@300 ($generated@@153 ($generated@@80 $generated@@144 $generated@@2) $generated@@600)) $generated@@600) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@2) $generated@@600) ($generated@@181 $generated@@601))))
 :pattern ( ($generated@@243 $generated@@600 ($generated@@181 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@144) (= (type $generated@@603) $generated@@68)) ($generated@@243 $generated@@602 ($generated@@395 $generated@@603))) (and (= ($generated@@300 ($generated@@153 ($generated@@150 $generated@@144) $generated@@602)) $generated@@602) ($generated@@165 ($generated@@153 ($generated@@150 $generated@@144) $generated@@602) ($generated@@395 $generated@@603))))
 :pattern ( ($generated@@243 $generated@@602 ($generated@@395 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@144)) ($generated@@243 $generated@@605 ($generated@@319 $generated@@604))) (and (= ($generated@@300 ($generated@@153 $generated@@142 $generated@@605)) $generated@@605) ($generated@@165 ($generated@@153 $generated@@142 $generated@@605) ($generated@@319 $generated@@604))))
 :pattern ( ($generated@@243 $generated@@605 ($generated@@319 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@68) (= (type $generated@@607) ($generated@@150 $generated@@144))) (= ($generated@@165 ($generated@@149 $generated@@607) ($generated@@319 $generated@@606)) ($generated@@165 $generated@@607 ($generated@@395 $generated@@45))))
 :pattern ( ($generated@@165 ($generated@@149 $generated@@607) ($generated@@319 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@608 ($generated@@181 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@608 $generated@@611)))) ($generated@@271 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@78 $generated@@608 ($generated@@181 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@142) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@270 $generated@@614) (and ($generated@@167 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@68) ($generated@@78 $generated@@612 ($generated@@168 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@78 $generated@@612 ($generated@@168 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@271 ($generated@@175 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@271 ($generated@@175 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@142) (= (type $generated@@617) $generated@@68)) (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@270 $generated@@618) (and ($generated@@167 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@68) ($generated@@78 $generated@@616 ($generated@@168 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@78 $generated@@616 ($generated@@168 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@271 ($generated@@176 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@271 ($generated@@176 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@144) (= (type $generated@@621) $generated@@144)) (= ($generated@@242 ($generated@@266 $generated@@620) ($generated@@266 $generated@@621)) ($generated@@266 ($generated@@242 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@242 ($generated@@266 $generated@@620) ($generated@@266 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@264 $generated@@622))) ($generated@@266 ($generated@@300 ($generated@@8 $generated@@622))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@264 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@144) (= ($generated@@294 ($generated@@266 $generated@@623)) ($generated@@266 ($generated@@294 $generated@@623))))
 :pattern ( ($generated@@294 ($generated@@266 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) ($generated@@150 $generated@@144)) (= ($generated@@149 ($generated@@266 $generated@@624)) ($generated@@266 ($generated@@149 $generated@@624))))
 :pattern ( ($generated@@149 ($generated@@266 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (= ($generated@@300 ($generated@@266 $generated@@625)) ($generated@@266 ($generated@@300 $generated@@625)))
 :pattern ( ($generated@@300 ($generated@@266 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@154 (type $generated@@626))))
 (=> (and (= (type $generated@@626) ($generated@@150 $generated@@627)) (= ($generated@@151 $generated@@626) 0)) (= $generated@@626 ($generated@@291 $generated@@627))))
 :pattern ( ($generated@@151 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@629)))
 (=> (and (and (= (type $generated@@628) ($generated@@80 $generated@@631 $generated@@2)) (= (type $generated@@630) $generated@@2)) (<= 0 ($generated $generated@@630))) (= ($generated@@313 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)) (+ (- ($generated@@313 $generated@@628) ($generated ($generated@@85 $generated@@628 $generated@@629))) ($generated $generated@@630)))))
 :pattern ( ($generated@@313 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@2)) ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@3)) ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@4)) ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@487)) ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@144)) ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@150 $generated@@144)) (= (type $generated@@643) $generated@@68)) (= ($generated@@165 $generated@@642 ($generated@@395 $generated@@643)) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@151 $generated@@642))) ($generated@@243 ($generated@@148 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@148 $generated@@642 $generated@@644))
))))
 :pattern ( ($generated@@165 $generated@@642 ($generated@@395 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@150 $generated@@144)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@151 $generated@@645))) (< ($generated@@152 ($generated@@153 $generated@@142 ($generated@@148 $generated@@645 $generated@@646))) ($generated@@585 $generated@@645))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@142 ($generated@@148 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@326 $generated@@144 $generated@@144)) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) $generated@@68)) ($generated@@165 $generated@@647 ($generated@@439 $generated@@648 $generated@@649))) (and (and ($generated@@165 ($generated@@324 $generated@@647) ($generated@@254 $generated@@648)) ($generated@@165 ($generated@@371 $generated@@647) ($generated@@254 $generated@@649))) ($generated@@165 ($generated@@413 $generated@@647) ($generated@@254 ($generated@@168 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@165 $generated@@647 ($generated@@439 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@344 $generated@@144 $generated@@144)) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) $generated@@68)) ($generated@@165 $generated@@650 ($generated@@447 $generated@@651 $generated@@652))) (and (and ($generated@@165 ($generated@@342 $generated@@650) ($generated@@259 $generated@@651)) ($generated@@165 ($generated@@382 $generated@@650) ($generated@@259 $generated@@652))) ($generated@@165 ($generated@@421 $generated@@650) ($generated@@259 ($generated@@168 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@165 $generated@@650 ($generated@@447 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@165 $generated@@653 $generated@@46))
 :pattern ( ($generated@@165 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@165 $generated@@654 $generated@@47))
 :pattern ( ($generated@@165 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@165 $generated@@655 $generated@@44))
 :pattern ( ($generated@@165 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@487) ($generated@@165 $generated@@656 $generated@@45))
 :pattern ( ($generated@@165 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@144) ($generated@@165 $generated@@657 $generated@@48))
 :pattern ( ($generated@@165 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 (T@U) Bool)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(assert  (and (and (and (and (and (= (type $generated@@659) $generated@@142) (= (type $generated@@661) ($generated@@188 $generated@@81 $generated@@4))) (= (type $generated@@662) $generated@@81)) (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@666) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@668 true))
(let (($generated@@669 true))
(let (($generated@@670  (=> (=> (<= ($generated@@264 0) $generated@@658) (and (and ($generated@@141 $generated@@659) (= ($generated ($generated@@153 $generated@@2 ($generated@@143 $generated@@659))) $generated@@658)) (= $generated@@660 (+ (+ $generated@@658 $generated@@658) $generated@@658)))) (and (=> (= (ControlFlow 0 5) 1) $generated@@669) (=> (= (ControlFlow 0 5) 2) $generated@@668)))))
(let (($generated@@671  (=> (and (<= ($generated@@264 0) $generated@@658) ($generated@@141 $generated@@659)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@141 $generated@@659)) (=> ($generated@@141 $generated@@659) (=> (and (= ($generated ($generated@@153 $generated@@2 ($generated@@143 $generated@@659))) $generated@@658) (= $generated@@660 (+ (+ $generated@@658 $generated@@658) $generated@@658))) (and (=> (= (ControlFlow 0 3) 1) $generated@@669) (=> (= (ControlFlow 0 3) 2) $generated@@668))))))))
(let (($generated@@672  (=> (= $generated@@661 ($generated@@187 $generated@@662 $generated@@663 $generated@@60 false)) (=> (and ($generated@@270 $generated@@664) ($generated@@665 $generated@@664)) (=> (and (and (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@81) (=> (and (not (= $generated@@673 $generated@@662)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@663 $generated@@673) $generated@@60))) (= ($generated@@85 $generated@@664 $generated@@673) ($generated@@85 $generated@@663 $generated@@673))))
 :pattern ( ($generated@@85 $generated@@664 $generated@@673))
)) ($generated@@136 $generated@@663 $generated@@664)) (and ($generated@@165 $generated@@659 ($generated@@319 $generated@@46)) ($generated@@78 $generated@@659 ($generated@@319 $generated@@46) $generated@@664))) (and (=> (= (ControlFlow 0 6) 3) $generated@@671) (=> (= (ControlFlow 0 6) 5) $generated@@670)))))))
(let (($generated@@674  (=> (and ($generated@@270 $generated@@663) ($generated@@665 $generated@@663)) (=> (and (and ($generated@@165 $generated@@666 ($generated@@319 $generated@@46)) ($generated@@78 $generated@@666 ($generated@@319 $generated@@46) $generated@@663)) (and (= 2 $generated@@667) (= (ControlFlow 0 7) 6))) $generated@@672))))
$generated@@674)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@144 (T@U Int) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@149 (T@T T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@275 (Int) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 () T@T)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Bool)
(declare-fun $generated@@293 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@468 (T@T) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@138) (= (type $generated@@143) $generated@@138)) (and ($generated@@137 $generated@@142) ($generated@@137 $generated@@143))) (= ($generated@@136 $generated@@142 $generated@@143) (= ($generated@@139 $generated@@142) ($generated@@139 $generated@@143))))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@142))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@143))
)))
(assert  (and (and (and (and (forall (($generated@@151 T@T) ) (= ($generated@@1 ($generated@@146 $generated@@151)) 16)) (forall (($generated@@152 T@T) ) (! (= ($generated@@150 ($generated@@146 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@146 $generated@@152))
))) (forall (($generated@@153 T@U) ($generated@@154 Int) ) (! (let (($generated@@155 ($generated@@150 (type $generated@@153))))
(= (type ($generated@@144 $generated@@153 $generated@@154)) $generated@@155))
 :pattern ( ($generated@@144 $generated@@153 $generated@@154))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@145 $generated@@156)) $generated@@138)
 :pattern ( ($generated@@145 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@U) ) (! (= (type ($generated@@149 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@149 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 Int) ) (!  (=> (= (type $generated@@159) ($generated@@146 $generated@@140)) (=> (and (<= 0 $generated@@160) (< $generated@@160 ($generated@@147 $generated@@159))) (< ($generated@@148 ($generated@@149 $generated@@138 ($generated@@144 $generated@@159 $generated@@160))) ($generated@@148 ($generated@@145 $generated@@159)))))
 :pattern ( ($generated@@144 $generated@@159 $generated@@160) ($generated@@145 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@161 $generated@@162 ($generated@@79 0)))
 :pattern ( ($generated@@161 $generated@@162 ($generated@@79 0)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@165 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@68) (= (type $generated@@168) $generated@@68)) (= (type $generated@@169) $generated@@138)) ($generated@@161 $generated@@169 ($generated@@164 $generated@@167 $generated@@168))) ($generated@@163 $generated@@169))
 :pattern ( ($generated@@163 $generated@@169) ($generated@@161 $generated@@169 ($generated@@164 $generated@@167 $generated@@168)))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@140)
 :pattern ( ($generated@@171 $generated@@173))
)) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@140)
 :pattern ( ($generated@@172 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@138) (= (type $generated@@176) $generated@@138)) true) (= ($generated@@170 $generated@@175 $generated@@176)  (and (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)) (= ($generated@@172 $generated@@175) ($generated@@172 $generated@@176)))))
 :pattern ( ($generated@@170 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@68)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@181) $generated@@68)) ($generated@@161 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@161 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 17)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@81 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@71 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@81) (= (type $generated@@232) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@233) ($generated@@70 $generated@@4))) (= (type $generated@@235) $generated@@81)) (= (type $generated@@236) ($generated@@70 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@138)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@68) (= (type $generated@@243) $generated@@68)) (= (type $generated@@244) $generated@@140)) (= (type $generated@@245) $generated@@140)) (= ($generated@@161 ($generated@@238 $generated@@244 $generated@@245) ($generated@@164 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@161 ($generated@@238 $generated@@244 $generated@@245) ($generated@@164 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@138) (= (type $generated@@247) $generated@@138)) (= ($generated@@170 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@170 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@138) (= (type $generated@@249) $generated@@138)) (= ($generated@@136 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@136 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@253) $generated@@68)) (= ($generated@@161 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@140) ($generated@@0 ($generated@@85 $generated@@252 $generated@@254))) ($generated@@239 $generated@@254 $generated@@253))
 :pattern ( ($generated@@85 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@161 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@68)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@258) $generated@@68)) (= ($generated@@161 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@140) ($generated@@0 ($generated@@85 $generated@@257 $generated@@259))) ($generated@@239 $generated@@259 $generated@@258))
 :pattern ( ($generated@@85 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@161 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert  (and (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@266 $generated@@268 $generated@@269)) ($generated@@146 $generated@@270)))
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)) (forall (($generated@@271 T@U) ) (! (= (type ($generated@@267 $generated@@271)) $generated@@68)
 :pattern ( ($generated@@267 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@272) ($generated@@146 $generated@@140)) (= (type $generated@@273) $generated@@140)) (= (type $generated@@274) $generated@@68)) (and ($generated@@161 $generated@@272 ($generated@@267 $generated@@274)) ($generated@@239 $generated@@273 $generated@@274))) ($generated@@161 ($generated@@266 $generated@@272 $generated@@273) ($generated@@267 $generated@@274)))
 :pattern ( ($generated@@161 ($generated@@266 $generated@@272 $generated@@273) ($generated@@267 $generated@@274)))
)))
(assert  (and (= ($generated@@1 $generated@@277) 18) (forall (($generated@@278 Int) ) (! (= (type ($generated@@275 $generated@@278)) $generated@@277)
 :pattern ( ($generated@@275 $generated@@278))
))))
(assert (forall (($generated@@279 Int) ) (!  (=> (and (<= 0 $generated@@279) (< $generated@@279 65536)) (= ($generated@@276 ($generated@@275 $generated@@279)) $generated@@279))
 :pattern ( ($generated@@275 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@68) (= (type $generated@@283) $generated@@68)) (= (type $generated@@284) $generated@@140)) (= (type $generated@@285) $generated@@140)) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@280 $generated@@286)) (= ($generated@@78 ($generated@@238 $generated@@284 $generated@@285) ($generated@@164 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@78 ($generated@@238 $generated@@284 $generated@@285) ($generated@@164 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@72)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@138) (= ($generated@@163 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@61)))
 :pattern ( ($generated@@163 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@138) (= ($generated@@137 $generated@@290) (= ($generated@@287 $generated@@290) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@138) (= ($generated@@291 $generated@@292) (= ($generated@@287 $generated@@292) $generated@@65)))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@150 (type $generated@@294))))
 (=> (and (= (type $generated@@294) ($generated@@146 $generated@@296)) (= (type $generated@@295) ($generated@@146 $generated@@296))) (= ($generated@@293 $generated@@294 $generated@@295)  (and (= ($generated@@147 $generated@@294) ($generated@@147 $generated@@295)) (forall (($generated@@297 Int) ) (!  (=> (and (<= 0 $generated@@297) (< $generated@@297 ($generated@@147 $generated@@294))) (= ($generated@@144 $generated@@294 $generated@@297) ($generated@@144 $generated@@295 $generated@@297)))
 :pattern ( ($generated@@144 $generated@@294 $generated@@297))
 :pattern ( ($generated@@144 $generated@@295 $generated@@297))
))))))
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@138) ($generated@@163 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@140) (= (type $generated@@300) $generated@@140)) (= $generated@@298 ($generated@@238 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@163 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@146 $generated@@302))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@147 ($generated@@301 $generated@@303)) 0)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@138)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@138) ($generated@@137 $generated@@306)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@140) (= $generated@@306 ($generated@@304 $generated@@307)))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
)))
 :pattern ( ($generated@@137 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@138) ($generated@@291 $generated@@308)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) ($generated@@146 $generated@@140)) (= $generated@@308 ($generated@@145 $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@291 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (let (($generated@@312 (type $generated@@311)))
 (=> (= (type $generated@@310) ($generated@@146 $generated@@312)) (= ($generated@@147 ($generated@@266 $generated@@310 $generated@@311)) (+ 1 ($generated@@147 $generated@@310)))))
 :pattern ( ($generated@@266 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@277) (and (and (= ($generated@@275 ($generated@@276 $generated@@313)) $generated@@313) (<= 0 ($generated@@276 $generated@@313))) (< ($generated@@276 $generated@@313) 65536)))
 :pattern ( ($generated@@276 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@140)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@68) (= (type $generated@@318) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@281 ($generated@@314 $generated@@316) $generated@@317 $generated@@318) ($generated@@78 $generated@@316 $generated@@317 $generated@@318)))
 :pattern ( ($generated@@281 ($generated@@314 $generated@@316) $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@80 $generated@@321 $generated@@2))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@83 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@80 $generated@@323 $generated@@2)) (and (= (= ($generated@@319 $generated@@322) 0) (= $generated@@322 ($generated@@320 $generated@@323))) (=> (not (= ($generated@@319 $generated@@322) 0)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (< 0 ($generated ($generated@@85 $generated@@322 $generated@@324))))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert  (and (forall (($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@327)) $generated@@68)
 :pattern ( ($generated@@325 $generated@@327))
)) (forall (($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@328)) $generated@@73)
 :pattern ( ($generated@@326 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@68) (and (= ($generated@@76 ($generated@@325 $generated@@329)) $generated@@64) (= ($generated@@326 ($generated@@325 $generated@@329)) $generated@@67)))
 :pattern ( ($generated@@325 $generated@@329))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 20)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@80 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@85 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@85 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@83 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@80 $generated@@367 $generated@@2)) (= ($generated@@178 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@85 $generated@@366 $generated@@368))) (<= ($generated ($generated@@85 $generated@@366 $generated@@368)) ($generated@@319 $generated@@366))))
 :pattern ( ($generated@@85 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@178 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 Int) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
 (=> (= (type $generated@@369) ($generated@@146 $generated@@372)) (and (=> (= $generated@@370 ($generated@@147 $generated@@369)) (= ($generated@@144 ($generated@@266 $generated@@369 $generated@@371) $generated@@370) $generated@@371)) (=> (not (= $generated@@370 ($generated@@147 $generated@@369))) (= ($generated@@144 ($generated@@266 $generated@@369 $generated@@371) $generated@@370) ($generated@@144 $generated@@369 $generated@@370))))))
 :pattern ( ($generated@@144 ($generated@@266 $generated@@369 $generated@@371) $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) ($generated@@146 $generated@@140))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@138) (= (type $generated@@376) $generated@@138)) (and ($generated@@291 $generated@@375) ($generated@@291 $generated@@376))) (= ($generated@@136 $generated@@375 $generated@@376) ($generated@@293 ($generated@@373 $generated@@375) ($generated@@373 $generated@@376))))
 :pattern ( ($generated@@136 $generated@@375 $generated@@376) ($generated@@291 $generated@@375))
 :pattern ( ($generated@@136 $generated@@375 $generated@@376) ($generated@@291 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@334 (type $generated@@377))))
(let (($generated@@379 ($generated@@333 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@332 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@331 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@330 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@334 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@334 (type $generated@@384))))
(let (($generated@@386 ($generated@@333 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@332 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@331 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@352 (type $generated@@388))))
(let (($generated@@390 ($generated@@351 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@350 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@349 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@348 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@352 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@80 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@352 (type $generated@@395))))
(let (($generated@@397 ($generated@@351 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@350 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@349 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@400) $generated@@68)) (= ($generated@@161 $generated@@399 ($generated@@177 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@399 $generated@@401)))) ($generated@@239 $generated@@401 $generated@@400))
 :pattern ( ($generated@@85 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@161 $generated@@399 ($generated@@177 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) $generated@@68) (= (type $generated@@403) $generated@@140)) (= (type $generated@@404) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@280 $generated@@404)) (= ($generated@@78 ($generated@@304 $generated@@403) ($generated@@325 $generated@@402) $generated@@404) ($generated@@281 $generated@@403 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@78 ($generated@@304 $generated@@403) ($generated@@325 $generated@@402) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@405) $generated@@138) (= (type $generated@@406) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@406) (and ($generated@@291 $generated@@405) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@68) ($generated@@78 $generated@@405 ($generated@@325 $generated@@407) $generated@@406))
 :pattern ( ($generated@@78 $generated@@405 ($generated@@325 $generated@@407) $generated@@406))
))))) ($generated@@78 ($generated@@373 $generated@@405) ($generated@@267 $generated@@45) $generated@@406))
 :pattern ( ($generated@@78 ($generated@@373 $generated@@405) ($generated@@267 $generated@@45) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) $generated@@68) (= (type $generated@@409) ($generated@@146 $generated@@140))) (= (type $generated@@410) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@280 $generated@@410)) (= ($generated@@78 ($generated@@145 $generated@@409) ($generated@@325 $generated@@408) $generated@@410) ($generated@@78 $generated@@409 ($generated@@267 $generated@@45) $generated@@410)))
 :pattern ( ($generated@@78 ($generated@@145 $generated@@409) ($generated@@325 $generated@@408) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@412) $generated@@68)) (= (type $generated@@413) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@411 ($generated@@250 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@140) ($generated@@0 ($generated@@85 $generated@@411 $generated@@414))) ($generated@@281 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@85 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@78 $generated@@411 ($generated@@250 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@255 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@140) ($generated@@0 ($generated@@85 $generated@@415 $generated@@418))) ($generated@@281 $generated@@418 $generated@@416 $generated@@417))
 :pattern ( ($generated@@85 $generated@@415 $generated@@418))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@255 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(= ($generated ($generated@@85 ($generated@@320 $generated@@420) $generated@@419)) 0))
 :pattern ( (let (($generated@@420 (type $generated@@419)))
($generated@@85 ($generated@@320 $generated@@420) $generated@@419)))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@334 (type $generated@@424))))
(let (($generated@@426 ($generated@@333 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@80 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@332 $generated@@140 $generated@@140)) (= (type $generated@@428) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@427) ($generated@@171 ($generated@@149 $generated@@138 $generated@@428)))) (= ($generated@@85 ($generated@@422 $generated@@427) ($generated@@171 ($generated@@149 $generated@@138 $generated@@428))) ($generated@@172 ($generated@@149 $generated@@138 $generated@@428))))))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@352 (type $generated@@432))))
(let (($generated@@434 ($generated@@351 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@80 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@350 $generated@@140 $generated@@140)) (= (type $generated@@436) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@85 ($generated@@348 $generated@@435) ($generated@@171 ($generated@@149 $generated@@138 $generated@@436)))) (= ($generated@@85 ($generated@@430 $generated@@435) ($generated@@171 ($generated@@149 $generated@@138 $generated@@436))) ($generated@@172 ($generated@@149 $generated@@138 $generated@@436))))))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@333 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@332 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@85 ($generated@@422 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@351 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@350 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@85 ($generated@@392 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@85 ($generated@@348 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@85 ($generated@@430 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@68)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@332 $generated@@140 $generated@@140)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@450) $generated@@454))) (and ($generated@@281 ($generated@@85 ($generated@@422 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@281 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@350 $generated@@140 $generated@@140)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) $generated@@68)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@458) $generated@@462))) (and ($generated@@281 ($generated@@85 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@281 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@463) $generated@@68) (= (type $generated@@464) $generated@@138)) ($generated@@161 $generated@@464 ($generated@@325 $generated@@463))) (or ($generated@@137 $generated@@464) ($generated@@291 $generated@@464)))
 :pattern ( ($generated@@291 $generated@@464) ($generated@@161 $generated@@464 ($generated@@325 $generated@@463)))
 :pattern ( ($generated@@137 $generated@@464) ($generated@@161 $generated@@464 ($generated@@325 $generated@@463)))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@150 (type $generated@@465))))
 (=> (and (and (= (type $generated@@465) ($generated@@146 $generated@@467)) (= (type $generated@@466) ($generated@@146 $generated@@467))) ($generated@@293 $generated@@465 $generated@@466)) (= $generated@@465 $generated@@466)))
 :pattern ( ($generated@@293 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@469 T@T) ) (! (= (type ($generated@@468 $generated@@469)) ($generated@@80 $generated@@469 $generated@@4))
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@352 (type $generated@@470))))
(let (($generated@@472 ($generated@@351 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@350 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@349 $generated@@472 $generated@@471)) (= ($generated@@348 $generated@@470) ($generated@@468 $generated@@472))))))
 :pattern ( ($generated@@348 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@352 (type $generated@@473))))
(let (($generated@@475 ($generated@@351 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@350 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@349 $generated@@475 $generated@@474)) (= ($generated@@392 $generated@@473) ($generated@@468 $generated@@474))))))
 :pattern ( ($generated@@392 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@352 (type $generated@@476))))
(let (($generated@@478 ($generated@@351 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@350 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@349 $generated@@478 $generated@@477)) (= ($generated@@429 $generated@@476) ($generated@@468 $generated@@140))))))
 :pattern ( ($generated@@429 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@334 (type $generated@@479))))
(let (($generated@@481 ($generated@@333 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@332 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@331 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@140) (= (type $generated@@483) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@421 $generated@@479) ($generated@@314 ($generated@@238 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@421 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@352 (type $generated@@484))))
(let (($generated@@486 ($generated@@351 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@350 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@349 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@140) (= (type $generated@@488) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@429 $generated@@484) ($generated@@314 ($generated@@238 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@429 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@140) ($generated@@239 $generated@@489 $generated@@46)) (and (= ($generated@@314 ($generated@@149 $generated@@2 $generated@@489)) $generated@@489) ($generated@@161 ($generated@@149 $generated@@2 $generated@@489) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@489 $generated@@46))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@140) ($generated@@239 $generated@@490 $generated@@47)) (and (= ($generated@@314 ($generated@@149 $generated@@3 $generated@@490)) $generated@@490) ($generated@@161 ($generated@@149 $generated@@3 $generated@@490) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@490 $generated@@47))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@140) ($generated@@239 $generated@@491 $generated@@44)) (and (= ($generated@@314 ($generated@@149 $generated@@4 $generated@@491)) $generated@@491) ($generated@@161 ($generated@@149 $generated@@4 $generated@@491) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@491 $generated@@44))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@140) ($generated@@239 $generated@@492 $generated@@45)) (and (= ($generated@@314 ($generated@@149 $generated@@277 $generated@@492)) $generated@@492) ($generated@@161 ($generated@@149 $generated@@277 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@68) (= ($generated@@239 ($generated@@314 $generated@@493) $generated@@494) ($generated@@161 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@239 ($generated@@314 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@83 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@80 $generated@@496 $generated@@2)) (<= 0 ($generated@@319 $generated@@495))))
 :pattern ( ($generated@@319 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@150 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@146 $generated@@498)) (<= 0 ($generated@@147 $generated@@497))))
 :pattern ( ($generated@@147 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@447 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@447 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@503 ($generated@@447 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@447 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@76 ($generated@@447 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@447 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@455 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@455 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@455 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@455 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@76 ($generated@@455 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@455 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@140) (= (type $generated@@520) $generated@@140)) (= ($generated@@287 ($generated@@238 $generated@@519 $generated@@520)) $generated@@61))
 :pattern ( ($generated@@238 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@164 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@164 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@164 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@164 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@140) (= (type $generated@@530) $generated@@140)) (= ($generated@@171 ($generated@@238 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@238 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@140) (= (type $generated@@532) $generated@@140)) (= ($generated@@172 ($generated@@238 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@238 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@146 $generated@@140)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@533 ($generated@@267 $generated@@534) $generated@@535) (forall (($generated@@536 Int) ) (!  (=> (and (<= 0 $generated@@536) (< $generated@@536 ($generated@@147 $generated@@533))) ($generated@@281 ($generated@@144 $generated@@533 $generated@@536) $generated@@534 $generated@@535))
 :pattern ( ($generated@@144 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@78 $generated@@533 ($generated@@267 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@537 ($generated@@79 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@79 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@539 ($generated@@250 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@250 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@76 ($generated@@250 $generated@@542)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@255 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@255 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@76 ($generated@@255 $generated@@546)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@177 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@177 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@177 $generated@@550)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@267 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@267 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@267 $generated@@554)) $generated@@57))
 :pattern ( ($generated@@267 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@140) (= ($generated@@287 ($generated@@304 $generated@@555)) $generated@@63))
 :pattern ( ($generated@@304 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@325 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@325 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@140) (= ($generated@@139 ($generated@@304 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@304 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) ($generated@@146 $generated@@140)) (= ($generated@@287 ($generated@@145 $generated@@560)) $generated@@65))
 :pattern ( ($generated@@145 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) ($generated@@146 $generated@@140)) (= ($generated@@373 ($generated@@145 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@145 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
(= ($generated@@149 $generated@@563 ($generated@@314 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@314 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@332 $generated@@140 $generated@@140)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) (= ($generated@@161 $generated@@564 ($generated@@447 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@564) $generated@@567))) (and ($generated@@239 ($generated@@85 ($generated@@422 $generated@@564) $generated@@567) $generated@@566) ($generated@@239 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@564) $generated@@567))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@161 $generated@@564 ($generated@@447 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@350 $generated@@140 $generated@@140)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) (= ($generated@@161 $generated@@568 ($generated@@455 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@568) $generated@@571))) (and ($generated@@239 ($generated@@85 ($generated@@430 $generated@@568) $generated@@571) $generated@@570) ($generated@@239 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@568) $generated@@571))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@161 $generated@@568 ($generated@@455 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@68) (= (type $generated@@573) $generated@@140)) (= ($generated@@161 ($generated@@304 $generated@@573) ($generated@@325 $generated@@572)) ($generated@@239 $generated@@573 $generated@@572)))
 :pattern ( ($generated@@161 ($generated@@304 $generated@@573) ($generated@@325 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@140) (= (type $generated@@576) $generated@@140)) (< ($generated@@574 $generated@@575) ($generated@@148 ($generated@@238 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@140) (= (type $generated@@578) $generated@@140)) (< ($generated@@574 $generated@@578) ($generated@@148 ($generated@@238 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@140) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) $generated@@68)) ($generated@@239 $generated@@579 ($generated@@447 $generated@@580 $generated@@581))) (and (= ($generated@@314 ($generated@@149 ($generated@@332 $generated@@140 $generated@@140) $generated@@579)) $generated@@579) ($generated@@161 ($generated@@149 ($generated@@332 $generated@@140 $generated@@140) $generated@@579) ($generated@@447 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@239 $generated@@579 ($generated@@447 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@140) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) ($generated@@239 $generated@@582 ($generated@@455 $generated@@583 $generated@@584))) (and (= ($generated@@314 ($generated@@149 ($generated@@350 $generated@@140 $generated@@140) $generated@@582)) $generated@@582) ($generated@@161 ($generated@@149 ($generated@@350 $generated@@140 $generated@@140) $generated@@582) ($generated@@455 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 $generated@@582 ($generated@@455 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@68) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@140)) ($generated@@239 $generated@@587 ($generated@@164 $generated@@585 $generated@@586))) (and (= ($generated@@314 ($generated@@149 $generated@@138 $generated@@587)) $generated@@587) ($generated@@161 ($generated@@149 $generated@@138 $generated@@587) ($generated@@164 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@239 $generated@@587 ($generated@@164 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@140) (< ($generated@@574 $generated@@588) ($generated@@148 ($generated@@304 $generated@@588))))
 :pattern ( ($generated@@304 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) ($generated@@146 $generated@@140)) (< ($generated@@589 $generated@@590) ($generated@@148 ($generated@@145 $generated@@590))))
 :pattern ( ($generated@@145 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@138) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@593) (and ($generated@@137 $generated@@591) ($generated@@78 $generated@@591 ($generated@@325 $generated@@592) $generated@@593)))) ($generated@@281 ($generated@@139 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@281 ($generated@@139 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (not ($generated@@0 ($generated@@85 ($generated@@468 $generated@@595) $generated@@594))))
 :pattern ( (let (($generated@@595 (type $generated@@594)))
($generated@@85 ($generated@@468 $generated@@595) $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (and (= ($generated@@76 ($generated@@164 $generated@@596 $generated@@597)) $generated@@62) (= ($generated@@326 ($generated@@164 $generated@@596 $generated@@597)) $generated@@66)))
 :pattern ( ($generated@@164 $generated@@596 $generated@@597))
)))
(assert  (and (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@150 (type $generated@@600))))
(= (type ($generated@@598 $generated@@600)) ($generated@@146 $generated@@601)))
 :pattern ( ($generated@@598 $generated@@600))
)) (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@150 (type $generated@@602))))
(= (type ($generated@@599 $generated@@602)) $generated@@603))
 :pattern ( ($generated@@599 $generated@@602))
))))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (=> (= (type $generated@@604) ($generated@@146 $generated@@606)) (and (= ($generated@@598 ($generated@@266 $generated@@604 $generated@@605)) $generated@@604) (= ($generated@@599 ($generated@@266 $generated@@604 $generated@@605)) $generated@@605))))
 :pattern ( ($generated@@266 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@138) (= ($generated@@574 ($generated@@314 $generated@@607)) ($generated@@148 $generated@@607)))
 :pattern ( ($generated@@574 ($generated@@314 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@140) ($generated@@239 $generated@@608 ($generated@@79 0))) (and (= ($generated@@314 ($generated@@149 $generated@@2 $generated@@608)) $generated@@608) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@608) ($generated@@79 0))))
 :pattern ( ($generated@@239 $generated@@608 ($generated@@79 0)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@140) (= (type $generated@@610) $generated@@68)) ($generated@@239 $generated@@609 ($generated@@250 $generated@@610))) (and (= ($generated@@314 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@609)) $generated@@609) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@609) ($generated@@250 $generated@@610))))
 :pattern ( ($generated@@239 $generated@@609 ($generated@@250 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@140) (= (type $generated@@612) $generated@@68)) ($generated@@239 $generated@@611 ($generated@@255 $generated@@612))) (and (= ($generated@@314 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@611)) $generated@@611) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@611) ($generated@@255 $generated@@612))))
 :pattern ( ($generated@@239 $generated@@611 ($generated@@255 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@140) (= (type $generated@@614) $generated@@68)) ($generated@@239 $generated@@613 ($generated@@177 $generated@@614))) (and (= ($generated@@314 ($generated@@149 ($generated@@80 $generated@@140 $generated@@2) $generated@@613)) $generated@@613) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@2) $generated@@613) ($generated@@177 $generated@@614))))
 :pattern ( ($generated@@239 $generated@@613 ($generated@@177 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@140) (= (type $generated@@616) $generated@@68)) ($generated@@239 $generated@@615 ($generated@@267 $generated@@616))) (and (= ($generated@@314 ($generated@@149 ($generated@@146 $generated@@140) $generated@@615)) $generated@@615) ($generated@@161 ($generated@@149 ($generated@@146 $generated@@140) $generated@@615) ($generated@@267 $generated@@616))))
 :pattern ( ($generated@@239 $generated@@615 ($generated@@267 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@68) (= (type $generated@@618) $generated@@140)) ($generated@@239 $generated@@618 ($generated@@325 $generated@@617))) (and (= ($generated@@314 ($generated@@149 $generated@@138 $generated@@618)) $generated@@618) ($generated@@161 ($generated@@149 $generated@@138 $generated@@618) ($generated@@325 $generated@@617))))
 :pattern ( ($generated@@239 $generated@@618 ($generated@@325 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@68) (= (type $generated@@620) ($generated@@146 $generated@@140))) (= ($generated@@161 ($generated@@145 $generated@@620) ($generated@@325 $generated@@619)) ($generated@@161 $generated@@620 ($generated@@267 $generated@@45))))
 :pattern ( ($generated@@161 ($generated@@145 $generated@@620) ($generated@@325 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@621 ($generated@@177 $generated@@622) $generated@@623) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@621 $generated@@624)))) ($generated@@281 $generated@@624 $generated@@622 $generated@@623))
 :pattern ( ($generated@@85 $generated@@621 $generated@@624))
))))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@177 $generated@@622) $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@138) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@627) (and ($generated@@163 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@78 $generated@@625 ($generated@@164 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@78 $generated@@625 ($generated@@164 $generated@@626 $generated@@628) $generated@@627))
))))) ($generated@@281 ($generated@@171 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@281 ($generated@@171 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@138) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@631) (and ($generated@@163 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@68) ($generated@@78 $generated@@629 ($generated@@164 $generated@@632 $generated@@630) $generated@@631))
 :pattern ( ($generated@@78 $generated@@629 ($generated@@164 $generated@@632 $generated@@630) $generated@@631))
))))) ($generated@@281 ($generated@@172 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@281 ($generated@@172 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@140) (= (type $generated@@634) $generated@@140)) (= ($generated@@238 ($generated@@262 $generated@@633) ($generated@@262 $generated@@634)) ($generated@@262 ($generated@@238 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@238 ($generated@@262 $generated@@633) ($generated@@262 $generated@@634)))
)))
(assert (forall (($generated@@635 Int) ) (! (= ($generated@@314 ($generated@@8 ($generated@@260 $generated@@635))) ($generated@@262 ($generated@@314 ($generated@@8 $generated@@635))))
 :pattern ( ($generated@@314 ($generated@@8 ($generated@@260 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@140) (= ($generated@@304 ($generated@@262 $generated@@636)) ($generated@@262 ($generated@@304 $generated@@636))))
 :pattern ( ($generated@@304 ($generated@@262 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) ($generated@@146 $generated@@140)) (= ($generated@@145 ($generated@@262 $generated@@637)) ($generated@@262 ($generated@@145 $generated@@637))))
 :pattern ( ($generated@@145 ($generated@@262 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (! (= ($generated@@314 ($generated@@262 $generated@@638)) ($generated@@262 ($generated@@314 $generated@@638)))
 :pattern ( ($generated@@314 ($generated@@262 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@150 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@146 $generated@@640)) (= ($generated@@147 $generated@@639) 0)) (= $generated@@639 ($generated@@301 $generated@@640))))
 :pattern ( ($generated@@147 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@80 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@2)) (<= 0 ($generated $generated@@643))) (= ($generated@@319 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)) (+ (- ($generated@@319 $generated@@641) ($generated ($generated@@85 $generated@@641 $generated@@642))) ($generated $generated@@643)))))
 :pattern ( ($generated@@319 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@2)) ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@3)) ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@4)) ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@652) $generated@@277)) ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
 :pattern ( ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@654) $generated@@140)) ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
 :pattern ( ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@146 $generated@@140)) (= (type $generated@@656) $generated@@68)) (= ($generated@@161 $generated@@655 ($generated@@267 $generated@@656)) (forall (($generated@@657 Int) ) (!  (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@147 $generated@@655))) ($generated@@239 ($generated@@144 $generated@@655 $generated@@657) $generated@@656))
 :pattern ( ($generated@@144 $generated@@655 $generated@@657))
))))
 :pattern ( ($generated@@161 $generated@@655 ($generated@@267 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 Int) ) (!  (=> (= (type $generated@@658) ($generated@@146 $generated@@140)) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@147 $generated@@658))) (< ($generated@@148 ($generated@@149 $generated@@138 ($generated@@144 $generated@@658 $generated@@659))) ($generated@@589 $generated@@658))))
 :pattern ( ($generated@@148 ($generated@@149 $generated@@138 ($generated@@144 $generated@@658 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@332 $generated@@140 $generated@@140)) (= (type $generated@@661) $generated@@68)) (= (type $generated@@662) $generated@@68)) ($generated@@161 $generated@@660 ($generated@@447 $generated@@661 $generated@@662))) (and (and ($generated@@161 ($generated@@330 $generated@@660) ($generated@@250 $generated@@661)) ($generated@@161 ($generated@@381 $generated@@660) ($generated@@250 $generated@@662))) ($generated@@161 ($generated@@421 $generated@@660) ($generated@@250 ($generated@@164 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@161 $generated@@660 ($generated@@447 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@350 $generated@@140 $generated@@140)) (= (type $generated@@664) $generated@@68)) (= (type $generated@@665) $generated@@68)) ($generated@@161 $generated@@663 ($generated@@455 $generated@@664 $generated@@665))) (and (and ($generated@@161 ($generated@@348 $generated@@663) ($generated@@255 $generated@@664)) ($generated@@161 ($generated@@392 $generated@@663) ($generated@@255 $generated@@665))) ($generated@@161 ($generated@@429 $generated@@663) ($generated@@255 ($generated@@164 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@161 $generated@@663 ($generated@@455 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@2) ($generated@@161 $generated@@666 $generated@@46))
 :pattern ( ($generated@@161 $generated@@666 $generated@@46))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@3) ($generated@@161 $generated@@667 $generated@@47))
 :pattern ( ($generated@@161 $generated@@667 $generated@@47))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@4) ($generated@@161 $generated@@668 $generated@@44))
 :pattern ( ($generated@@161 $generated@@668 $generated@@44))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@277) ($generated@@161 $generated@@669 $generated@@45))
 :pattern ( ($generated@@161 $generated@@669 $generated@@45))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@140) ($generated@@161 $generated@@670 $generated@@48))
 :pattern ( ($generated@@161 $generated@@670 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 (T@U) Bool)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@672) $generated@@138) (= (type $generated@@676) $generated@@138)) (= (type $generated@@674) $generated@@138)) (= (type $generated@@678) ($generated@@184 $generated@@81 $generated@@4))) (= (type $generated@@679) $generated@@81)) (= (type $generated@@680) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@682) $generated@@138)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@684  (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> (<= ($generated@@260 0) $generated@@671) ($generated@@137 $generated@@672))) (=> (=> (<= ($generated@@260 0) $generated@@671) ($generated@@137 $generated@@672)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> (<= ($generated@@260 0) $generated@@671) (= ($generated ($generated@@149 $generated@@2 ($generated@@139 $generated@@672))) $generated@@671))) (=> (=> (<= ($generated@@260 0) $generated@@671) (= ($generated ($generated@@149 $generated@@2 ($generated@@139 $generated@@672))) $generated@@671)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> (<= ($generated@@260 0) $generated@@671) (= $generated@@673 (+ (+ $generated@@671 $generated@@671) $generated@@671)))) (=> (=> (<= ($generated@@260 0) $generated@@671) (= $generated@@673 (+ (+ $generated@@671 $generated@@671) $generated@@671))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> (< $generated@@671 0) ($generated@@291 $generated@@672))) (=> (=> (< $generated@@671 0) ($generated@@291 $generated@@672)) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (< $generated@@671 0) (= $generated@@673 (+ $generated@@671 $generated@@671))))))))))))))
(let (($generated@@685  (=> (and (<= 0 $generated@@671) (= $generated@@674 ($generated@@304 ($generated@@314 ($generated@@8 $generated@@671))))) (=> (and (and (= $generated@@675 (+ (+ $generated@@671 $generated@@671) $generated@@671)) (= $generated@@672 $generated@@674)) (and (= $generated@@673 $generated@@675) (= (ControlFlow 0 8) 2))) $generated@@684))))
(let (($generated@@686  (=> (and (< $generated@@671 0) (= $generated@@676 ($generated@@262 ($generated@@145 ($generated@@262 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@301 $generated@@140) ($generated@@314 ($generated@@275 110))) ($generated@@314 ($generated@@275 101))) ($generated@@314 ($generated@@275 103))) ($generated@@314 ($generated@@275 97))) ($generated@@314 ($generated@@275 116))) ($generated@@314 ($generated@@275 105))) ($generated@@314 ($generated@@275 118))) ($generated@@314 ($generated@@275 101)))))))) (=> (and (and (= $generated@@677 (+ $generated@@671 $generated@@671)) (= $generated@@672 $generated@@676)) (and (= $generated@@673 $generated@@677) (= (ControlFlow 0 7) 2))) $generated@@684))))
(let (($generated@@687  (=> (= $generated@@678 ($generated@@183 $generated@@679 $generated@@680 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 7) $generated@@686) (=> (= (ControlFlow 0 9) 8) $generated@@685)))))
(let (($generated@@688  (=> (and ($generated@@280 $generated@@680) ($generated@@681 $generated@@680)) (=> (and (and ($generated@@161 $generated@@682 ($generated@@325 $generated@@46)) ($generated@@78 $generated@@682 ($generated@@325 $generated@@46) $generated@@680)) (and (= 2 $generated@@683) (= (ControlFlow 0 10) 9))) $generated@@687))))
$generated@@688))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@148 (T@U Int) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@153 (T@T T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@142) 14) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@142) (= (type $generated@@147) $generated@@142)) (and ($generated@@141 $generated@@146) ($generated@@141 $generated@@147))) (= ($generated@@140 $generated@@146 $generated@@147) (= ($generated@@143 $generated@@146) ($generated@@143 $generated@@147))))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@146))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@147))
)))
(assert  (and (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@150 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@150 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@150 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@148 $generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@148 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@149 $generated@@160)) $generated@@142)
 :pattern ( ($generated@@149 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@U) ) (! (= (type ($generated@@153 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@153 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (= (type $generated@@163) ($generated@@150 $generated@@144)) (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@151 $generated@@163))) (< ($generated@@152 ($generated@@153 $generated@@142 ($generated@@148 $generated@@163 $generated@@164))) ($generated@@152 ($generated@@149 $generated@@163)))))
 :pattern ( ($generated@@148 $generated@@163 $generated@@164) ($generated@@149 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@79 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@79 0)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@169 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@68) (= (type $generated@@172) $generated@@68)) (= (type $generated@@173) $generated@@142)) ($generated@@165 $generated@@173 ($generated@@168 $generated@@171 $generated@@172))) ($generated@@167 $generated@@173))
 :pattern ( ($generated@@167 $generated@@173) ($generated@@165 $generated@@173 ($generated@@168 $generated@@171 $generated@@172)))
)))
(assert  (and (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@144)
 :pattern ( ($generated@@175 $generated@@177))
)) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@144)
 :pattern ( ($generated@@176 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@142) (= (type $generated@@180) $generated@@142)) true) (= ($generated@@174 $generated@@179 $generated@@180)  (and (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)) (= ($generated@@176 $generated@@179) ($generated@@176 $generated@@180)))))
 :pattern ( ($generated@@174 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@68)
 :pattern ( ($generated@@181 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@185) $generated@@68)) ($generated@@165 $generated@@184 ($generated@@181 $generated@@185))) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@165 $generated@@184 ($generated@@181 $generated@@185)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 17)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@81 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@71 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@81) (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@237) ($generated@@70 $generated@@4))) (= (type $generated@@239) $generated@@81)) (= (type $generated@@240) ($generated@@70 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@142)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@68) (= (type $generated@@247) $generated@@68)) (= (type $generated@@248) $generated@@144)) (= (type $generated@@249) $generated@@144)) (= ($generated@@165 ($generated@@242 $generated@@248 $generated@@249) ($generated@@168 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@165 ($generated@@242 $generated@@248 $generated@@249) ($generated@@168 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@142) (= (type $generated@@251) $generated@@142)) (= ($generated@@174 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@174 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@142) (= (type $generated@@253) $generated@@142)) (= ($generated@@140 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@140 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@257) $generated@@68)) (= ($generated@@165 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@144) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@243 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@165 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@262) $generated@@68)) (= ($generated@@165 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@144) ($generated@@0 ($generated@@85 $generated@@261 $generated@@263))) ($generated@@243 $generated@@263 $generated@@262))
 :pattern ( ($generated@@85 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@165 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) $generated@@68)) (= (type $generated@@274) $generated@@144)) (= (type $generated@@275) $generated@@144)) (= (type $generated@@276) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@270 $generated@@276)) (= ($generated@@78 ($generated@@242 $generated@@274 $generated@@275) ($generated@@168 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@78 ($generated@@242 $generated@@274 $generated@@275) ($generated@@168 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@72)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@142) (= ($generated@@167 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@167 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@142) (= ($generated@@141 $generated@@280) (= ($generated@@277 $generated@@280) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@142) (= ($generated@@281 $generated@@282) (= ($generated@@277 $generated@@282) $generated@@65)))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@154 (type $generated@@284))))
 (=> (and (= (type $generated@@284) ($generated@@150 $generated@@286)) (= (type $generated@@285) ($generated@@150 $generated@@286))) (= ($generated@@283 $generated@@284 $generated@@285)  (and (= ($generated@@151 $generated@@284) ($generated@@151 $generated@@285)) (forall (($generated@@287 Int) ) (!  (=> (and (<= 0 $generated@@287) (< $generated@@287 ($generated@@151 $generated@@284))) (= ($generated@@148 $generated@@284 $generated@@287) ($generated@@148 $generated@@285 $generated@@287)))
 :pattern ( ($generated@@148 $generated@@284 $generated@@287))
 :pattern ( ($generated@@148 $generated@@285 $generated@@287))
))))))
 :pattern ( ($generated@@283 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@142) ($generated@@167 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@144) (= (type $generated@@290) $generated@@144)) (= $generated@@288 ($generated@@242 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@167 $generated@@288))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@150 $generated@@292))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@151 ($generated@@291 $generated@@293)) 0)
 :pattern ( ($generated@@291 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@142)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@142) ($generated@@141 $generated@@296)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@144) (= $generated@@296 ($generated@@294 $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@141 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@142) ($generated@@281 $generated@@298)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) ($generated@@150 $generated@@144)) (= $generated@@298 ($generated@@149 $generated@@299)))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@281 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@144)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@68) (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@271 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@78 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@271 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@306) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@307) $generated@@144)) (= (type $generated@@308) $generated@@68)) ($generated@@136 $generated@@305 $generated@@306)) ($generated@@271 $generated@@307 $generated@@308 $generated@@305)) ($generated@@271 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@136 $generated@@305 $generated@@306) ($generated@@271 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@310) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@312) $generated@@68)) ($generated@@136 $generated@@309 $generated@@310)) ($generated@@78 $generated@@311 $generated@@312 $generated@@309)) ($generated@@78 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@136 $generated@@309 $generated@@310) ($generated@@78 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@315 T@T) ) (! (= (type ($generated@@314 $generated@@315)) ($generated@@80 $generated@@315 $generated@@2))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@83 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@80 $generated@@317 $generated@@2)) (and (= (= ($generated@@313 $generated@@316) 0) (= $generated@@316 ($generated@@314 $generated@@317))) (=> (not (= ($generated@@313 $generated@@316) 0)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) (< 0 ($generated ($generated@@85 $generated@@316 $generated@@318))))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert  (and (forall (($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@321)) $generated@@68)
 :pattern ( ($generated@@319 $generated@@321))
)) (forall (($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@322)) $generated@@73)
 :pattern ( ($generated@@320 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@68) (and (= ($generated@@76 ($generated@@319 $generated@@323)) $generated@@64) (= ($generated@@320 ($generated@@319 $generated@@323)) $generated@@67)))
 :pattern ( ($generated@@319 $generated@@323))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 18)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@80 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@85 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@85 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 19)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@85 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@85 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@83 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@80 $generated@@361 $generated@@2)) (= ($generated@@182 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@85 $generated@@360 $generated@@362))) (<= ($generated ($generated@@85 $generated@@360 $generated@@362)) ($generated@@313 $generated@@360))))
 :pattern ( ($generated@@85 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@182 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (= (type ($generated@@363 $generated@@364)) ($generated@@150 $generated@@144))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@365) $generated@@142) (= (type $generated@@366) $generated@@142)) (and ($generated@@281 $generated@@365) ($generated@@281 $generated@@366))) (= ($generated@@140 $generated@@365 $generated@@366) ($generated@@283 ($generated@@363 $generated@@365) ($generated@@363 $generated@@366))))
 :pattern ( ($generated@@140 $generated@@365 $generated@@366) ($generated@@281 $generated@@365))
 :pattern ( ($generated@@140 $generated@@365 $generated@@366) ($generated@@281 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@328 (type $generated@@367))))
(let (($generated@@369 ($generated@@327 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@326 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@325 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@324 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@328 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@80 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@328 (type $generated@@374))))
(let (($generated@@376 ($generated@@327 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@326 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@325 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@85 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@346 (type $generated@@378))))
(let (($generated@@380 ($generated@@345 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@344 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@343 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@342 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@346 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@80 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@346 (type $generated@@385))))
(let (($generated@@387 ($generated@@345 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@344 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@343 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@85 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@390) $generated@@68)) (= ($generated@@165 $generated@@389 ($generated@@181 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@389 $generated@@391)))) ($generated@@243 $generated@@391 $generated@@390))
 :pattern ( ($generated@@85 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@165 $generated@@389 ($generated@@181 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) $generated@@68) (= (type $generated@@393) $generated@@144)) (= (type $generated@@394) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@270 $generated@@394)) (= ($generated@@78 ($generated@@294 $generated@@393) ($generated@@319 $generated@@392) $generated@@394) ($generated@@271 $generated@@393 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@78 ($generated@@294 $generated@@393) ($generated@@319 $generated@@392) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (= (type ($generated@@395 $generated@@396)) $generated@@68)
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@397) $generated@@142) (= (type $generated@@398) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@270 $generated@@398) (and ($generated@@281 $generated@@397) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@68) ($generated@@78 $generated@@397 ($generated@@319 $generated@@399) $generated@@398))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@319 $generated@@399) $generated@@398))
))))) ($generated@@78 ($generated@@363 $generated@@397) ($generated@@395 $generated@@45) $generated@@398))
 :pattern ( ($generated@@78 ($generated@@363 $generated@@397) ($generated@@395 $generated@@45) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) $generated@@68) (= (type $generated@@401) ($generated@@150 $generated@@144))) (= (type $generated@@402) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@270 $generated@@402)) (= ($generated@@78 ($generated@@149 $generated@@401) ($generated@@319 $generated@@400) $generated@@402) ($generated@@78 $generated@@401 ($generated@@395 $generated@@45) $generated@@402)))
 :pattern ( ($generated@@78 ($generated@@149 $generated@@401) ($generated@@319 $generated@@400) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@404) $generated@@68)) (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@403 ($generated@@254 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@144) ($generated@@0 ($generated@@85 $generated@@403 $generated@@406))) ($generated@@271 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@85 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@78 $generated@@403 ($generated@@254 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@408) $generated@@68)) (= (type $generated@@409) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@407 ($generated@@259 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@144) ($generated@@0 ($generated@@85 $generated@@407 $generated@@410))) ($generated@@271 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@85 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@78 $generated@@407 ($generated@@259 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(= ($generated ($generated@@85 ($generated@@314 $generated@@412) $generated@@411)) 0))
 :pattern ( (let (($generated@@412 (type $generated@@411)))
($generated@@85 ($generated@@314 $generated@@412) $generated@@411)))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@328 (type $generated@@416))))
(let (($generated@@418 ($generated@@327 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@80 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@326 $generated@@144 $generated@@144)) (= (type $generated@@420) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@85 ($generated@@324 $generated@@419) ($generated@@175 ($generated@@153 $generated@@142 $generated@@420)))) (= ($generated@@85 ($generated@@414 $generated@@419) ($generated@@175 ($generated@@153 $generated@@142 $generated@@420))) ($generated@@176 ($generated@@153 $generated@@142 $generated@@420))))))
 :pattern ( ($generated@@85 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@346 (type $generated@@424))))
(let (($generated@@426 ($generated@@345 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@80 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@344 $generated@@144 $generated@@144)) (= (type $generated@@428) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@85 ($generated@@342 $generated@@427) ($generated@@175 ($generated@@153 $generated@@142 $generated@@428)))) (= ($generated@@85 ($generated@@422 $generated@@427) ($generated@@175 ($generated@@153 $generated@@142 $generated@@428))) ($generated@@176 ($generated@@153 $generated@@142 $generated@@428))))))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@327 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@326 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@85 ($generated@@371 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@85 ($generated@@324 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@85 ($generated@@414 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@414 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(let (($generated@@437 ($generated@@345 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@344 $generated@@437 $generated@@436)) (= ($generated@@0 ($generated@@85 ($generated@@382 $generated@@434) $generated@@435)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) (and ($generated@@0 ($generated@@85 ($generated@@342 $generated@@434) $generated@@438)) (= $generated@@435 ($generated@@85 ($generated@@422 $generated@@434) $generated@@438))))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@434) $generated@@438))
))))))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@326 $generated@@144 $generated@@144)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@442) $generated@@446))) (and ($generated@@271 ($generated@@85 ($generated@@414 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@271 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@85 ($generated@@414 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@68)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@344 $generated@@144 $generated@@144)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@450) $generated@@454))) (and ($generated@@271 ($generated@@85 ($generated@@422 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@271 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (= (type $generated@@455) $generated@@68) (= (type $generated@@456) $generated@@142)) ($generated@@165 $generated@@456 ($generated@@319 $generated@@455))) (or ($generated@@141 $generated@@456) ($generated@@281 $generated@@456)))
 :pattern ( ($generated@@281 $generated@@456) ($generated@@165 $generated@@456 ($generated@@319 $generated@@455)))
 :pattern ( ($generated@@141 $generated@@456) ($generated@@165 $generated@@456 ($generated@@319 $generated@@455)))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@154 (type $generated@@457))))
 (=> (and (and (= (type $generated@@457) ($generated@@150 $generated@@459)) (= (type $generated@@458) ($generated@@150 $generated@@459))) ($generated@@283 $generated@@457 $generated@@458)) (= $generated@@457 $generated@@458)))
 :pattern ( ($generated@@283 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@462) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@460 $generated@@462))) (and ($generated@@136 $generated@@460 $generated@@461) ($generated@@136 $generated@@461 $generated@@462))) ($generated@@136 $generated@@460 $generated@@462))
 :pattern ( ($generated@@136 $generated@@460 $generated@@461) ($generated@@136 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@80 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@346 (type $generated@@465))))
(let (($generated@@467 ($generated@@345 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@344 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@343 $generated@@467 $generated@@466)) (= ($generated@@342 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@342 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@346 (type $generated@@468))))
(let (($generated@@470 ($generated@@345 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@344 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@343 $generated@@470 $generated@@469)) (= ($generated@@382 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@382 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@346 (type $generated@@471))))
(let (($generated@@473 ($generated@@345 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@344 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@343 $generated@@473 $generated@@472)) (= ($generated@@421 $generated@@471) ($generated@@463 $generated@@144))))))
 :pattern ( ($generated@@421 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@328 (type $generated@@474))))
(let (($generated@@476 ($generated@@327 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@326 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@325 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@144) (= (type $generated@@478) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@413 $generated@@474) ($generated@@300 ($generated@@242 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@413 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@346 (type $generated@@479))))
(let (($generated@@481 ($generated@@345 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@344 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@343 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@144) (= (type $generated@@483) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@421 $generated@@479) ($generated@@300 ($generated@@242 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@421 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@144) ($generated@@243 $generated@@484 $generated@@46)) (and (= ($generated@@300 ($generated@@153 $generated@@2 $generated@@484)) $generated@@484) ($generated@@165 ($generated@@153 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@144) ($generated@@243 $generated@@485 $generated@@47)) (and (= ($generated@@300 ($generated@@153 $generated@@3 $generated@@485)) $generated@@485) ($generated@@165 ($generated@@153 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@144) ($generated@@243 $generated@@486 $generated@@44)) (and (= ($generated@@300 ($generated@@153 $generated@@4 $generated@@486)) $generated@@486) ($generated@@165 ($generated@@153 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 20))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@144) ($generated@@243 $generated@@488 $generated@@45)) (and (= ($generated@@300 ($generated@@153 $generated@@487 $generated@@488)) $generated@@488) ($generated@@165 ($generated@@153 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@68) (= ($generated@@243 ($generated@@300 $generated@@489) $generated@@490) ($generated@@165 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@243 ($generated@@300 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@83 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@80 $generated@@492 $generated@@2)) (<= 0 ($generated@@313 $generated@@491))))
 :pattern ( ($generated@@313 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@154 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@150 $generated@@494)) (<= 0 ($generated@@151 $generated@@493))))
 :pattern ( ($generated@@151 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@439 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@439 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@439 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@439 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@439 $generated@@503 $generated@@504)) $generated@@58))
 :pattern ( ($generated@@439 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@447 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@447 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@447 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@447 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@76 ($generated@@447 $generated@@513 $generated@@514)) $generated@@59))
 :pattern ( ($generated@@447 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@144) (= (type $generated@@516) $generated@@144)) (= ($generated@@277 ($generated@@242 $generated@@515 $generated@@516)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@168 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@168 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@168 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@168 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@144) (= (type $generated@@526) $generated@@144)) (= ($generated@@175 ($generated@@242 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@242 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@144) (= (type $generated@@528) $generated@@144)) (= ($generated@@176 ($generated@@242 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@242 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@150 $generated@@144)) (= (type $generated@@530) $generated@@68)) (= (type $generated@@531) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@529 ($generated@@395 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@151 $generated@@529))) ($generated@@271 ($generated@@148 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@148 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@78 $generated@@529 ($generated@@395 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@79 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@79 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@254 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@254 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@76 ($generated@@254 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@539 ($generated@@259 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@259 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@76 ($generated@@259 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@181 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@181 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@76 ($generated@@181 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@181 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@395 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@395 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@395 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@395 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@144) (= ($generated@@277 ($generated@@294 $generated@@551)) $generated@@63))
 :pattern ( ($generated@@294 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@552 ($generated@@319 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@319 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@144) (= ($generated@@143 ($generated@@294 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@294 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) ($generated@@150 $generated@@144)) (= ($generated@@277 ($generated@@149 $generated@@556)) $generated@@65))
 :pattern ( ($generated@@149 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) ($generated@@150 $generated@@144)) (= ($generated@@363 ($generated@@149 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@149 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(= ($generated@@153 $generated@@559 ($generated@@300 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@300 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@326 $generated@@144 $generated@@144)) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) $generated@@68)) (= ($generated@@165 $generated@@560 ($generated@@439 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@324 $generated@@560) $generated@@563))) (and ($generated@@243 ($generated@@85 ($generated@@414 $generated@@560) $generated@@563) $generated@@562) ($generated@@243 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@85 ($generated@@414 $generated@@560) $generated@@563))
 :pattern ( ($generated@@85 ($generated@@324 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@165 $generated@@560 ($generated@@439 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@344 $generated@@144 $generated@@144)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) (= ($generated@@165 $generated@@564 ($generated@@447 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@564) $generated@@567))) (and ($generated@@243 ($generated@@85 ($generated@@422 $generated@@564) $generated@@567) $generated@@566) ($generated@@243 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@564) $generated@@567))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@165 $generated@@564 ($generated@@447 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@68) (= (type $generated@@569) $generated@@144)) (= ($generated@@165 ($generated@@294 $generated@@569) ($generated@@319 $generated@@568)) ($generated@@243 $generated@@569 $generated@@568)))
 :pattern ( ($generated@@165 ($generated@@294 $generated@@569) ($generated@@319 $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@144) (= (type $generated@@572) $generated@@144)) (< ($generated@@570 $generated@@571) ($generated@@152 ($generated@@242 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@242 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@144) (= (type $generated@@574) $generated@@144)) (< ($generated@@570 $generated@@574) ($generated@@152 ($generated@@242 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@242 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@144) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@68)) ($generated@@243 $generated@@575 ($generated@@439 $generated@@576 $generated@@577))) (and (= ($generated@@300 ($generated@@153 ($generated@@326 $generated@@144 $generated@@144) $generated@@575)) $generated@@575) ($generated@@165 ($generated@@153 ($generated@@326 $generated@@144 $generated@@144) $generated@@575) ($generated@@439 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@243 $generated@@575 ($generated@@439 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@144) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) ($generated@@243 $generated@@578 ($generated@@447 $generated@@579 $generated@@580))) (and (= ($generated@@300 ($generated@@153 ($generated@@344 $generated@@144 $generated@@144) $generated@@578)) $generated@@578) ($generated@@165 ($generated@@153 ($generated@@344 $generated@@144 $generated@@144) $generated@@578) ($generated@@447 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@243 $generated@@578 ($generated@@447 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@68) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@144)) ($generated@@243 $generated@@583 ($generated@@168 $generated@@581 $generated@@582))) (and (= ($generated@@300 ($generated@@153 $generated@@142 $generated@@583)) $generated@@583) ($generated@@165 ($generated@@153 $generated@@142 $generated@@583) ($generated@@168 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@243 $generated@@583 ($generated@@168 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@144) (< ($generated@@570 $generated@@584) ($generated@@152 ($generated@@294 $generated@@584))))
 :pattern ( ($generated@@294 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) ($generated@@150 $generated@@144)) (< ($generated@@585 $generated@@586) ($generated@@152 ($generated@@149 $generated@@586))))
 :pattern ( ($generated@@149 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@142) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@270 $generated@@589) (and ($generated@@141 $generated@@587) ($generated@@78 $generated@@587 ($generated@@319 $generated@@588) $generated@@589)))) ($generated@@271 ($generated@@143 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@271 ($generated@@143 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@85 ($generated@@463 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@85 ($generated@@463 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (and (= ($generated@@76 ($generated@@168 $generated@@592 $generated@@593)) $generated@@62) (= ($generated@@320 ($generated@@168 $generated@@592 $generated@@593)) $generated@@66)))
 :pattern ( ($generated@@168 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@142) (= ($generated@@570 ($generated@@300 $generated@@594)) ($generated@@152 $generated@@594)))
 :pattern ( ($generated@@570 ($generated@@300 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@144) ($generated@@243 $generated@@595 ($generated@@79 0))) (and (= ($generated@@300 ($generated@@153 $generated@@2 $generated@@595)) $generated@@595) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@595) ($generated@@79 0))))
 :pattern ( ($generated@@243 $generated@@595 ($generated@@79 0)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@144) (= (type $generated@@597) $generated@@68)) ($generated@@243 $generated@@596 ($generated@@254 $generated@@597))) (and (= ($generated@@300 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@596)) $generated@@596) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@596) ($generated@@254 $generated@@597))))
 :pattern ( ($generated@@243 $generated@@596 ($generated@@254 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@144) (= (type $generated@@599) $generated@@68)) ($generated@@243 $generated@@598 ($generated@@259 $generated@@599))) (and (= ($generated@@300 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@598)) $generated@@598) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@598) ($generated@@259 $generated@@599))))
 :pattern ( ($generated@@243 $generated@@598 ($generated@@259 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@144) (= (type $generated@@601) $generated@@68)) ($generated@@243 $generated@@600 ($generated@@181 $generated@@601))) (and (= ($generated@@300 ($generated@@153 ($generated@@80 $generated@@144 $generated@@2) $generated@@600)) $generated@@600) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@2) $generated@@600) ($generated@@181 $generated@@601))))
 :pattern ( ($generated@@243 $generated@@600 ($generated@@181 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@144) (= (type $generated@@603) $generated@@68)) ($generated@@243 $generated@@602 ($generated@@395 $generated@@603))) (and (= ($generated@@300 ($generated@@153 ($generated@@150 $generated@@144) $generated@@602)) $generated@@602) ($generated@@165 ($generated@@153 ($generated@@150 $generated@@144) $generated@@602) ($generated@@395 $generated@@603))))
 :pattern ( ($generated@@243 $generated@@602 ($generated@@395 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@144)) ($generated@@243 $generated@@605 ($generated@@319 $generated@@604))) (and (= ($generated@@300 ($generated@@153 $generated@@142 $generated@@605)) $generated@@605) ($generated@@165 ($generated@@153 $generated@@142 $generated@@605) ($generated@@319 $generated@@604))))
 :pattern ( ($generated@@243 $generated@@605 ($generated@@319 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@68) (= (type $generated@@607) ($generated@@150 $generated@@144))) (= ($generated@@165 ($generated@@149 $generated@@607) ($generated@@319 $generated@@606)) ($generated@@165 $generated@@607 ($generated@@395 $generated@@45))))
 :pattern ( ($generated@@165 ($generated@@149 $generated@@607) ($generated@@319 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@608 ($generated@@181 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@608 $generated@@611)))) ($generated@@271 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@78 $generated@@608 ($generated@@181 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@142) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@270 $generated@@614) (and ($generated@@167 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@68) ($generated@@78 $generated@@612 ($generated@@168 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@78 $generated@@612 ($generated@@168 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@271 ($generated@@175 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@271 ($generated@@175 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@142) (= (type $generated@@617) $generated@@68)) (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@270 $generated@@618) (and ($generated@@167 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@68) ($generated@@78 $generated@@616 ($generated@@168 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@78 $generated@@616 ($generated@@168 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@271 ($generated@@176 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@271 ($generated@@176 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@144) (= (type $generated@@621) $generated@@144)) (= ($generated@@242 ($generated@@266 $generated@@620) ($generated@@266 $generated@@621)) ($generated@@266 ($generated@@242 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@242 ($generated@@266 $generated@@620) ($generated@@266 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@264 $generated@@622))) ($generated@@266 ($generated@@300 ($generated@@8 $generated@@622))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@264 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@144) (= ($generated@@294 ($generated@@266 $generated@@623)) ($generated@@266 ($generated@@294 $generated@@623))))
 :pattern ( ($generated@@294 ($generated@@266 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) ($generated@@150 $generated@@144)) (= ($generated@@149 ($generated@@266 $generated@@624)) ($generated@@266 ($generated@@149 $generated@@624))))
 :pattern ( ($generated@@149 ($generated@@266 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (= ($generated@@300 ($generated@@266 $generated@@625)) ($generated@@266 ($generated@@300 $generated@@625)))
 :pattern ( ($generated@@300 ($generated@@266 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@154 (type $generated@@626))))
 (=> (and (= (type $generated@@626) ($generated@@150 $generated@@627)) (= ($generated@@151 $generated@@626) 0)) (= $generated@@626 ($generated@@291 $generated@@627))))
 :pattern ( ($generated@@151 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@629)))
 (=> (and (and (= (type $generated@@628) ($generated@@80 $generated@@631 $generated@@2)) (= (type $generated@@630) $generated@@2)) (<= 0 ($generated $generated@@630))) (= ($generated@@313 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)) (+ (- ($generated@@313 $generated@@628) ($generated ($generated@@85 $generated@@628 $generated@@629))) ($generated $generated@@630)))))
 :pattern ( ($generated@@313 ($generated@@86 $generated@@628 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@2)) ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@46 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@3)) ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@47 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@4)) ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@44 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@487)) ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@45 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@144)) ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@48 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@150 $generated@@144)) (= (type $generated@@643) $generated@@68)) (= ($generated@@165 $generated@@642 ($generated@@395 $generated@@643)) (forall (($generated@@644 Int) ) (!  (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@151 $generated@@642))) ($generated@@243 ($generated@@148 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@148 $generated@@642 $generated@@644))
))))
 :pattern ( ($generated@@165 $generated@@642 ($generated@@395 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@150 $generated@@144)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@151 $generated@@645))) (< ($generated@@152 ($generated@@153 $generated@@142 ($generated@@148 $generated@@645 $generated@@646))) ($generated@@585 $generated@@645))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@142 ($generated@@148 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@326 $generated@@144 $generated@@144)) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) $generated@@68)) ($generated@@165 $generated@@647 ($generated@@439 $generated@@648 $generated@@649))) (and (and ($generated@@165 ($generated@@324 $generated@@647) ($generated@@254 $generated@@648)) ($generated@@165 ($generated@@371 $generated@@647) ($generated@@254 $generated@@649))) ($generated@@165 ($generated@@413 $generated@@647) ($generated@@254 ($generated@@168 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@165 $generated@@647 ($generated@@439 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@344 $generated@@144 $generated@@144)) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) $generated@@68)) ($generated@@165 $generated@@650 ($generated@@447 $generated@@651 $generated@@652))) (and (and ($generated@@165 ($generated@@342 $generated@@650) ($generated@@259 $generated@@651)) ($generated@@165 ($generated@@382 $generated@@650) ($generated@@259 $generated@@652))) ($generated@@165 ($generated@@421 $generated@@650) ($generated@@259 ($generated@@168 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@165 $generated@@650 ($generated@@447 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@165 $generated@@653 $generated@@46))
 :pattern ( ($generated@@165 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@165 $generated@@654 $generated@@47))
 :pattern ( ($generated@@165 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@165 $generated@@655 $generated@@44))
 :pattern ( ($generated@@165 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@487) ($generated@@165 $generated@@656 $generated@@45))
 :pattern ( ($generated@@165 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@144) ($generated@@165 $generated@@657 $generated@@48))
 :pattern ( ($generated@@165 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 (T@U) Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(assert  (and (and (and (and (and (= (type $generated@@659) $generated@@142) (= (type $generated@@660) ($generated@@188 $generated@@81 $generated@@4))) (= (type $generated@@661) $generated@@81)) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@665) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@667 true))
(let (($generated@@668 true))
(let (($generated@@669  (=> (=> (<= ($generated@@264 0) $generated@@658) (and ($generated@@141 $generated@@659) (= ($generated ($generated@@153 $generated@@2 ($generated@@143 $generated@@659))) $generated@@658))) (and (=> (= (ControlFlow 0 5) 1) $generated@@668) (=> (= (ControlFlow 0 5) 2) $generated@@667)))))
(let (($generated@@670  (=> (and (<= ($generated@@264 0) $generated@@658) ($generated@@141 $generated@@659)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@141 $generated@@659)) (=> ($generated@@141 $generated@@659) (=> (= ($generated ($generated@@153 $generated@@2 ($generated@@143 $generated@@659))) $generated@@658) (and (=> (= (ControlFlow 0 3) 1) $generated@@668) (=> (= (ControlFlow 0 3) 2) $generated@@667))))))))
(let (($generated@@671  (=> (= $generated@@660 ($generated@@187 $generated@@661 $generated@@662 $generated@@60 false)) (=> (and ($generated@@270 $generated@@663) ($generated@@664 $generated@@663)) (=> (and (and (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@81) (=> (and (not (= $generated@@672 $generated@@661)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@662 $generated@@672) $generated@@60))) (= ($generated@@85 $generated@@663 $generated@@672) ($generated@@85 $generated@@662 $generated@@672))))
 :pattern ( ($generated@@85 $generated@@663 $generated@@672))
)) ($generated@@136 $generated@@662 $generated@@663)) (and ($generated@@165 $generated@@659 ($generated@@319 $generated@@46)) ($generated@@78 $generated@@659 ($generated@@319 $generated@@46) $generated@@663))) (and (=> (= (ControlFlow 0 6) 3) $generated@@670) (=> (= (ControlFlow 0 6) 5) $generated@@669)))))))
(let (($generated@@673  (=> (and ($generated@@270 $generated@@662) ($generated@@664 $generated@@662)) (=> (and (and ($generated@@165 $generated@@665 ($generated@@319 $generated@@46)) ($generated@@78 $generated@@665 ($generated@@319 $generated@@46) $generated@@662)) (and (= 2 $generated@@666) (= (ControlFlow 0 7) 6))) $generated@@671))))
$generated@@673)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@144 (T@U Int) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@149 (T@T T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@275 (Int) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 () T@T)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Bool)
(declare-fun $generated@@293 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@468 (T@T) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@138) (= (type $generated@@143) $generated@@138)) (and ($generated@@137 $generated@@142) ($generated@@137 $generated@@143))) (= ($generated@@136 $generated@@142 $generated@@143) (= ($generated@@139 $generated@@142) ($generated@@139 $generated@@143))))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@142))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@143))
)))
(assert  (and (and (and (and (forall (($generated@@151 T@T) ) (= ($generated@@1 ($generated@@146 $generated@@151)) 16)) (forall (($generated@@152 T@T) ) (! (= ($generated@@150 ($generated@@146 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@146 $generated@@152))
))) (forall (($generated@@153 T@U) ($generated@@154 Int) ) (! (let (($generated@@155 ($generated@@150 (type $generated@@153))))
(= (type ($generated@@144 $generated@@153 $generated@@154)) $generated@@155))
 :pattern ( ($generated@@144 $generated@@153 $generated@@154))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@145 $generated@@156)) $generated@@138)
 :pattern ( ($generated@@145 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@U) ) (! (= (type ($generated@@149 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@149 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 Int) ) (!  (=> (= (type $generated@@159) ($generated@@146 $generated@@140)) (=> (and (<= 0 $generated@@160) (< $generated@@160 ($generated@@147 $generated@@159))) (< ($generated@@148 ($generated@@149 $generated@@138 ($generated@@144 $generated@@159 $generated@@160))) ($generated@@148 ($generated@@145 $generated@@159)))))
 :pattern ( ($generated@@144 $generated@@159 $generated@@160) ($generated@@145 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@161 $generated@@162 ($generated@@79 0)))
 :pattern ( ($generated@@161 $generated@@162 ($generated@@79 0)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@165 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@68) (= (type $generated@@168) $generated@@68)) (= (type $generated@@169) $generated@@138)) ($generated@@161 $generated@@169 ($generated@@164 $generated@@167 $generated@@168))) ($generated@@163 $generated@@169))
 :pattern ( ($generated@@163 $generated@@169) ($generated@@161 $generated@@169 ($generated@@164 $generated@@167 $generated@@168)))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@140)
 :pattern ( ($generated@@171 $generated@@173))
)) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@140)
 :pattern ( ($generated@@172 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@138) (= (type $generated@@176) $generated@@138)) true) (= ($generated@@170 $generated@@175 $generated@@176)  (and (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)) (= ($generated@@172 $generated@@175) ($generated@@172 $generated@@176)))))
 :pattern ( ($generated@@170 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@68)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@181) $generated@@68)) ($generated@@161 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@161 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 17)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@81 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@71 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@81) (= (type $generated@@232) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@233) ($generated@@70 $generated@@4))) (= (type $generated@@235) $generated@@81)) (= (type $generated@@236) ($generated@@70 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@138)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@68) (= (type $generated@@243) $generated@@68)) (= (type $generated@@244) $generated@@140)) (= (type $generated@@245) $generated@@140)) (= ($generated@@161 ($generated@@238 $generated@@244 $generated@@245) ($generated@@164 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@161 ($generated@@238 $generated@@244 $generated@@245) ($generated@@164 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@138) (= (type $generated@@247) $generated@@138)) (= ($generated@@170 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@170 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@138) (= (type $generated@@249) $generated@@138)) (= ($generated@@136 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@136 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@253) $generated@@68)) (= ($generated@@161 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@140) ($generated@@0 ($generated@@85 $generated@@252 $generated@@254))) ($generated@@239 $generated@@254 $generated@@253))
 :pattern ( ($generated@@85 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@161 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@68)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@258) $generated@@68)) (= ($generated@@161 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@140) ($generated@@0 ($generated@@85 $generated@@257 $generated@@259))) ($generated@@239 $generated@@259 $generated@@258))
 :pattern ( ($generated@@85 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@161 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert  (and (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@266 $generated@@268 $generated@@269)) ($generated@@146 $generated@@270)))
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)) (forall (($generated@@271 T@U) ) (! (= (type ($generated@@267 $generated@@271)) $generated@@68)
 :pattern ( ($generated@@267 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@272) ($generated@@146 $generated@@140)) (= (type $generated@@273) $generated@@140)) (= (type $generated@@274) $generated@@68)) (and ($generated@@161 $generated@@272 ($generated@@267 $generated@@274)) ($generated@@239 $generated@@273 $generated@@274))) ($generated@@161 ($generated@@266 $generated@@272 $generated@@273) ($generated@@267 $generated@@274)))
 :pattern ( ($generated@@161 ($generated@@266 $generated@@272 $generated@@273) ($generated@@267 $generated@@274)))
)))
(assert  (and (= ($generated@@1 $generated@@277) 18) (forall (($generated@@278 Int) ) (! (= (type ($generated@@275 $generated@@278)) $generated@@277)
 :pattern ( ($generated@@275 $generated@@278))
))))
(assert (forall (($generated@@279 Int) ) (!  (=> (and (<= 0 $generated@@279) (< $generated@@279 65536)) (= ($generated@@276 ($generated@@275 $generated@@279)) $generated@@279))
 :pattern ( ($generated@@275 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@68) (= (type $generated@@283) $generated@@68)) (= (type $generated@@284) $generated@@140)) (= (type $generated@@285) $generated@@140)) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@280 $generated@@286)) (= ($generated@@78 ($generated@@238 $generated@@284 $generated@@285) ($generated@@164 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@78 ($generated@@238 $generated@@284 $generated@@285) ($generated@@164 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@72)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@138) (= ($generated@@163 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@61)))
 :pattern ( ($generated@@163 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@138) (= ($generated@@137 $generated@@290) (= ($generated@@287 $generated@@290) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@138) (= ($generated@@291 $generated@@292) (= ($generated@@287 $generated@@292) $generated@@65)))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@150 (type $generated@@294))))
 (=> (and (= (type $generated@@294) ($generated@@146 $generated@@296)) (= (type $generated@@295) ($generated@@146 $generated@@296))) (= ($generated@@293 $generated@@294 $generated@@295)  (and (= ($generated@@147 $generated@@294) ($generated@@147 $generated@@295)) (forall (($generated@@297 Int) ) (!  (=> (and (<= 0 $generated@@297) (< $generated@@297 ($generated@@147 $generated@@294))) (= ($generated@@144 $generated@@294 $generated@@297) ($generated@@144 $generated@@295 $generated@@297)))
 :pattern ( ($generated@@144 $generated@@294 $generated@@297))
 :pattern ( ($generated@@144 $generated@@295 $generated@@297))
))))))
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@138) ($generated@@163 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@140) (= (type $generated@@300) $generated@@140)) (= $generated@@298 ($generated@@238 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@163 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@146 $generated@@302))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@147 ($generated@@301 $generated@@303)) 0)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@138)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@138) ($generated@@137 $generated@@306)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@140) (= $generated@@306 ($generated@@304 $generated@@307)))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
)))
 :pattern ( ($generated@@137 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@138) ($generated@@291 $generated@@308)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) ($generated@@146 $generated@@140)) (= $generated@@308 ($generated@@145 $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@291 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (let (($generated@@312 (type $generated@@311)))
 (=> (= (type $generated@@310) ($generated@@146 $generated@@312)) (= ($generated@@147 ($generated@@266 $generated@@310 $generated@@311)) (+ 1 ($generated@@147 $generated@@310)))))
 :pattern ( ($generated@@266 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@277) (and (and (= ($generated@@275 ($generated@@276 $generated@@313)) $generated@@313) (<= 0 ($generated@@276 $generated@@313))) (< ($generated@@276 $generated@@313) 65536)))
 :pattern ( ($generated@@276 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@140)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@68) (= (type $generated@@318) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@281 ($generated@@314 $generated@@316) $generated@@317 $generated@@318) ($generated@@78 $generated@@316 $generated@@317 $generated@@318)))
 :pattern ( ($generated@@281 ($generated@@314 $generated@@316) $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@80 $generated@@321 $generated@@2))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@83 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@80 $generated@@323 $generated@@2)) (and (= (= ($generated@@319 $generated@@322) 0) (= $generated@@322 ($generated@@320 $generated@@323))) (=> (not (= ($generated@@319 $generated@@322) 0)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (< 0 ($generated ($generated@@85 $generated@@322 $generated@@324))))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert  (and (forall (($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@327)) $generated@@68)
 :pattern ( ($generated@@325 $generated@@327))
)) (forall (($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@328)) $generated@@73)
 :pattern ( ($generated@@326 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@68) (and (= ($generated@@76 ($generated@@325 $generated@@329)) $generated@@64) (= ($generated@@326 ($generated@@325 $generated@@329)) $generated@@67)))
 :pattern ( ($generated@@325 $generated@@329))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 20)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@80 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@85 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@85 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@83 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@80 $generated@@367 $generated@@2)) (= ($generated@@178 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@85 $generated@@366 $generated@@368))) (<= ($generated ($generated@@85 $generated@@366 $generated@@368)) ($generated@@319 $generated@@366))))
 :pattern ( ($generated@@85 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@178 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 Int) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
 (=> (= (type $generated@@369) ($generated@@146 $generated@@372)) (and (=> (= $generated@@370 ($generated@@147 $generated@@369)) (= ($generated@@144 ($generated@@266 $generated@@369 $generated@@371) $generated@@370) $generated@@371)) (=> (not (= $generated@@370 ($generated@@147 $generated@@369))) (= ($generated@@144 ($generated@@266 $generated@@369 $generated@@371) $generated@@370) ($generated@@144 $generated@@369 $generated@@370))))))
 :pattern ( ($generated@@144 ($generated@@266 $generated@@369 $generated@@371) $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) ($generated@@146 $generated@@140))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@138) (= (type $generated@@376) $generated@@138)) (and ($generated@@291 $generated@@375) ($generated@@291 $generated@@376))) (= ($generated@@136 $generated@@375 $generated@@376) ($generated@@293 ($generated@@373 $generated@@375) ($generated@@373 $generated@@376))))
 :pattern ( ($generated@@136 $generated@@375 $generated@@376) ($generated@@291 $generated@@375))
 :pattern ( ($generated@@136 $generated@@375 $generated@@376) ($generated@@291 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@334 (type $generated@@377))))
(let (($generated@@379 ($generated@@333 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@332 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@331 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@330 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@334 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@334 (type $generated@@384))))
(let (($generated@@386 ($generated@@333 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@332 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@331 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@352 (type $generated@@388))))
(let (($generated@@390 ($generated@@351 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@350 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@349 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@348 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@352 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@80 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@352 (type $generated@@395))))
(let (($generated@@397 ($generated@@351 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@350 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@349 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@400) $generated@@68)) (= ($generated@@161 $generated@@399 ($generated@@177 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@399 $generated@@401)))) ($generated@@239 $generated@@401 $generated@@400))
 :pattern ( ($generated@@85 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@161 $generated@@399 ($generated@@177 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) $generated@@68) (= (type $generated@@403) $generated@@140)) (= (type $generated@@404) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@280 $generated@@404)) (= ($generated@@78 ($generated@@304 $generated@@403) ($generated@@325 $generated@@402) $generated@@404) ($generated@@281 $generated@@403 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@78 ($generated@@304 $generated@@403) ($generated@@325 $generated@@402) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@405) $generated@@138) (= (type $generated@@406) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@406) (and ($generated@@291 $generated@@405) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@68) ($generated@@78 $generated@@405 ($generated@@325 $generated@@407) $generated@@406))
 :pattern ( ($generated@@78 $generated@@405 ($generated@@325 $generated@@407) $generated@@406))
))))) ($generated@@78 ($generated@@373 $generated@@405) ($generated@@267 $generated@@45) $generated@@406))
 :pattern ( ($generated@@78 ($generated@@373 $generated@@405) ($generated@@267 $generated@@45) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) $generated@@68) (= (type $generated@@409) ($generated@@146 $generated@@140))) (= (type $generated@@410) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@280 $generated@@410)) (= ($generated@@78 ($generated@@145 $generated@@409) ($generated@@325 $generated@@408) $generated@@410) ($generated@@78 $generated@@409 ($generated@@267 $generated@@45) $generated@@410)))
 :pattern ( ($generated@@78 ($generated@@145 $generated@@409) ($generated@@325 $generated@@408) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@412) $generated@@68)) (= (type $generated@@413) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@411 ($generated@@250 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@140) ($generated@@0 ($generated@@85 $generated@@411 $generated@@414))) ($generated@@281 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@85 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@78 $generated@@411 ($generated@@250 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@255 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@140) ($generated@@0 ($generated@@85 $generated@@415 $generated@@418))) ($generated@@281 $generated@@418 $generated@@416 $generated@@417))
 :pattern ( ($generated@@85 $generated@@415 $generated@@418))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@255 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(= ($generated ($generated@@85 ($generated@@320 $generated@@420) $generated@@419)) 0))
 :pattern ( (let (($generated@@420 (type $generated@@419)))
($generated@@85 ($generated@@320 $generated@@420) $generated@@419)))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@334 (type $generated@@424))))
(let (($generated@@426 ($generated@@333 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@80 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@332 $generated@@140 $generated@@140)) (= (type $generated@@428) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@427) ($generated@@171 ($generated@@149 $generated@@138 $generated@@428)))) (= ($generated@@85 ($generated@@422 $generated@@427) ($generated@@171 ($generated@@149 $generated@@138 $generated@@428))) ($generated@@172 ($generated@@149 $generated@@138 $generated@@428))))))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@352 (type $generated@@432))))
(let (($generated@@434 ($generated@@351 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@80 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@350 $generated@@140 $generated@@140)) (= (type $generated@@436) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@85 ($generated@@348 $generated@@435) ($generated@@171 ($generated@@149 $generated@@138 $generated@@436)))) (= ($generated@@85 ($generated@@430 $generated@@435) ($generated@@171 ($generated@@149 $generated@@138 $generated@@436))) ($generated@@172 ($generated@@149 $generated@@138 $generated@@436))))))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@333 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@332 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@85 ($generated@@422 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@351 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@350 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@85 ($generated@@392 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@85 ($generated@@348 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@85 ($generated@@430 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@68)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@332 $generated@@140 $generated@@140)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@450) $generated@@454))) (and ($generated@@281 ($generated@@85 ($generated@@422 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@281 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@450) $generated@@454))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@78 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@350 $generated@@140 $generated@@140)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) $generated@@68)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@458) $generated@@462))) (and ($generated@@281 ($generated@@85 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@281 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@78 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@463) $generated@@68) (= (type $generated@@464) $generated@@138)) ($generated@@161 $generated@@464 ($generated@@325 $generated@@463))) (or ($generated@@137 $generated@@464) ($generated@@291 $generated@@464)))
 :pattern ( ($generated@@291 $generated@@464) ($generated@@161 $generated@@464 ($generated@@325 $generated@@463)))
 :pattern ( ($generated@@137 $generated@@464) ($generated@@161 $generated@@464 ($generated@@325 $generated@@463)))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@150 (type $generated@@465))))
 (=> (and (and (= (type $generated@@465) ($generated@@146 $generated@@467)) (= (type $generated@@466) ($generated@@146 $generated@@467))) ($generated@@293 $generated@@465 $generated@@466)) (= $generated@@465 $generated@@466)))
 :pattern ( ($generated@@293 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@469 T@T) ) (! (= (type ($generated@@468 $generated@@469)) ($generated@@80 $generated@@469 $generated@@4))
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@352 (type $generated@@470))))
(let (($generated@@472 ($generated@@351 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@350 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@349 $generated@@472 $generated@@471)) (= ($generated@@348 $generated@@470) ($generated@@468 $generated@@472))))))
 :pattern ( ($generated@@348 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@352 (type $generated@@473))))
(let (($generated@@475 ($generated@@351 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@350 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@349 $generated@@475 $generated@@474)) (= ($generated@@392 $generated@@473) ($generated@@468 $generated@@474))))))
 :pattern ( ($generated@@392 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@352 (type $generated@@476))))
(let (($generated@@478 ($generated@@351 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@350 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@349 $generated@@478 $generated@@477)) (= ($generated@@429 $generated@@476) ($generated@@468 $generated@@140))))))
 :pattern ( ($generated@@429 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@334 (type $generated@@479))))
(let (($generated@@481 ($generated@@333 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@332 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@331 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@140) (= (type $generated@@483) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@421 $generated@@479) ($generated@@314 ($generated@@238 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@421 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@352 (type $generated@@484))))
(let (($generated@@486 ($generated@@351 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@350 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@349 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@140) (= (type $generated@@488) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@429 $generated@@484) ($generated@@314 ($generated@@238 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@429 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@140) ($generated@@239 $generated@@489 $generated@@46)) (and (= ($generated@@314 ($generated@@149 $generated@@2 $generated@@489)) $generated@@489) ($generated@@161 ($generated@@149 $generated@@2 $generated@@489) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@489 $generated@@46))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@140) ($generated@@239 $generated@@490 $generated@@47)) (and (= ($generated@@314 ($generated@@149 $generated@@3 $generated@@490)) $generated@@490) ($generated@@161 ($generated@@149 $generated@@3 $generated@@490) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@490 $generated@@47))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@140) ($generated@@239 $generated@@491 $generated@@44)) (and (= ($generated@@314 ($generated@@149 $generated@@4 $generated@@491)) $generated@@491) ($generated@@161 ($generated@@149 $generated@@4 $generated@@491) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@491 $generated@@44))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@140) ($generated@@239 $generated@@492 $generated@@45)) (and (= ($generated@@314 ($generated@@149 $generated@@277 $generated@@492)) $generated@@492) ($generated@@161 ($generated@@149 $generated@@277 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@68) (= ($generated@@239 ($generated@@314 $generated@@493) $generated@@494) ($generated@@161 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@239 ($generated@@314 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@83 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@80 $generated@@496 $generated@@2)) (<= 0 ($generated@@319 $generated@@495))))
 :pattern ( ($generated@@319 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@150 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@146 $generated@@498)) (<= 0 ($generated@@147 $generated@@497))))
 :pattern ( ($generated@@147 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@447 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@447 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@503 ($generated@@447 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@447 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@76 ($generated@@447 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@447 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@455 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@455 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@455 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@455 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@76 ($generated@@455 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@455 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@140) (= (type $generated@@520) $generated@@140)) (= ($generated@@287 ($generated@@238 $generated@@519 $generated@@520)) $generated@@61))
 :pattern ( ($generated@@238 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@164 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@164 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@164 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@164 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@140) (= (type $generated@@530) $generated@@140)) (= ($generated@@171 ($generated@@238 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@238 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@140) (= (type $generated@@532) $generated@@140)) (= ($generated@@172 ($generated@@238 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@238 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@146 $generated@@140)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@533 ($generated@@267 $generated@@534) $generated@@535) (forall (($generated@@536 Int) ) (!  (=> (and (<= 0 $generated@@536) (< $generated@@536 ($generated@@147 $generated@@533))) ($generated@@281 ($generated@@144 $generated@@533 $generated@@536) $generated@@534 $generated@@535))
 :pattern ( ($generated@@144 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@78 $generated@@533 ($generated@@267 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@537 ($generated@@79 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@79 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@539 ($generated@@250 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@250 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@76 ($generated@@250 $generated@@542)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@255 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@255 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@76 ($generated@@255 $generated@@546)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@177 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@177 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@76 ($generated@@177 $generated@@550)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@267 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@267 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@76 ($generated@@267 $generated@@554)) $generated@@57))
 :pattern ( ($generated@@267 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@140) (= ($generated@@287 ($generated@@304 $generated@@555)) $generated@@63))
 :pattern ( ($generated@@304 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@325 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@325 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@140) (= ($generated@@139 ($generated@@304 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@304 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) ($generated@@146 $generated@@140)) (= ($generated@@287 ($generated@@145 $generated@@560)) $generated@@65))
 :pattern ( ($generated@@145 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) ($generated@@146 $generated@@140)) (= ($generated@@373 ($generated@@145 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@145 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
(= ($generated@@149 $generated@@563 ($generated@@314 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@314 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@332 $generated@@140 $generated@@140)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) (= ($generated@@161 $generated@@564 ($generated@@447 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@564) $generated@@567))) (and ($generated@@239 ($generated@@85 ($generated@@422 $generated@@564) $generated@@567) $generated@@566) ($generated@@239 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@564) $generated@@567))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@161 $generated@@564 ($generated@@447 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@350 $generated@@140 $generated@@140)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) (= ($generated@@161 $generated@@568 ($generated@@455 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@568) $generated@@571))) (and ($generated@@239 ($generated@@85 ($generated@@430 $generated@@568) $generated@@571) $generated@@570) ($generated@@239 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@568) $generated@@571))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@161 $generated@@568 ($generated@@455 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@68) (= (type $generated@@573) $generated@@140)) (= ($generated@@161 ($generated@@304 $generated@@573) ($generated@@325 $generated@@572)) ($generated@@239 $generated@@573 $generated@@572)))
 :pattern ( ($generated@@161 ($generated@@304 $generated@@573) ($generated@@325 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@140) (= (type $generated@@576) $generated@@140)) (< ($generated@@574 $generated@@575) ($generated@@148 ($generated@@238 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@140) (= (type $generated@@578) $generated@@140)) (< ($generated@@574 $generated@@578) ($generated@@148 ($generated@@238 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@140) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) $generated@@68)) ($generated@@239 $generated@@579 ($generated@@447 $generated@@580 $generated@@581))) (and (= ($generated@@314 ($generated@@149 ($generated@@332 $generated@@140 $generated@@140) $generated@@579)) $generated@@579) ($generated@@161 ($generated@@149 ($generated@@332 $generated@@140 $generated@@140) $generated@@579) ($generated@@447 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@239 $generated@@579 ($generated@@447 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@140) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) ($generated@@239 $generated@@582 ($generated@@455 $generated@@583 $generated@@584))) (and (= ($generated@@314 ($generated@@149 ($generated@@350 $generated@@140 $generated@@140) $generated@@582)) $generated@@582) ($generated@@161 ($generated@@149 ($generated@@350 $generated@@140 $generated@@140) $generated@@582) ($generated@@455 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@239 $generated@@582 ($generated@@455 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@68) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@140)) ($generated@@239 $generated@@587 ($generated@@164 $generated@@585 $generated@@586))) (and (= ($generated@@314 ($generated@@149 $generated@@138 $generated@@587)) $generated@@587) ($generated@@161 ($generated@@149 $generated@@138 $generated@@587) ($generated@@164 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@239 $generated@@587 ($generated@@164 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@140) (< ($generated@@574 $generated@@588) ($generated@@148 ($generated@@304 $generated@@588))))
 :pattern ( ($generated@@304 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) ($generated@@146 $generated@@140)) (< ($generated@@589 $generated@@590) ($generated@@148 ($generated@@145 $generated@@590))))
 :pattern ( ($generated@@145 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@138) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@593) (and ($generated@@137 $generated@@591) ($generated@@78 $generated@@591 ($generated@@325 $generated@@592) $generated@@593)))) ($generated@@281 ($generated@@139 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@281 ($generated@@139 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (not ($generated@@0 ($generated@@85 ($generated@@468 $generated@@595) $generated@@594))))
 :pattern ( (let (($generated@@595 (type $generated@@594)))
($generated@@85 ($generated@@468 $generated@@595) $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (and (= ($generated@@76 ($generated@@164 $generated@@596 $generated@@597)) $generated@@62) (= ($generated@@326 ($generated@@164 $generated@@596 $generated@@597)) $generated@@66)))
 :pattern ( ($generated@@164 $generated@@596 $generated@@597))
)))
(assert  (and (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@150 (type $generated@@600))))
(= (type ($generated@@598 $generated@@600)) ($generated@@146 $generated@@601)))
 :pattern ( ($generated@@598 $generated@@600))
)) (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@150 (type $generated@@602))))
(= (type ($generated@@599 $generated@@602)) $generated@@603))
 :pattern ( ($generated@@599 $generated@@602))
))))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (=> (= (type $generated@@604) ($generated@@146 $generated@@606)) (and (= ($generated@@598 ($generated@@266 $generated@@604 $generated@@605)) $generated@@604) (= ($generated@@599 ($generated@@266 $generated@@604 $generated@@605)) $generated@@605))))
 :pattern ( ($generated@@266 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@138) (= ($generated@@574 ($generated@@314 $generated@@607)) ($generated@@148 $generated@@607)))
 :pattern ( ($generated@@574 ($generated@@314 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@140) ($generated@@239 $generated@@608 ($generated@@79 0))) (and (= ($generated@@314 ($generated@@149 $generated@@2 $generated@@608)) $generated@@608) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@608) ($generated@@79 0))))
 :pattern ( ($generated@@239 $generated@@608 ($generated@@79 0)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@140) (= (type $generated@@610) $generated@@68)) ($generated@@239 $generated@@609 ($generated@@250 $generated@@610))) (and (= ($generated@@314 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@609)) $generated@@609) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@609) ($generated@@250 $generated@@610))))
 :pattern ( ($generated@@239 $generated@@609 ($generated@@250 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@140) (= (type $generated@@612) $generated@@68)) ($generated@@239 $generated@@611 ($generated@@255 $generated@@612))) (and (= ($generated@@314 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@611)) $generated@@611) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@4) $generated@@611) ($generated@@255 $generated@@612))))
 :pattern ( ($generated@@239 $generated@@611 ($generated@@255 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@140) (= (type $generated@@614) $generated@@68)) ($generated@@239 $generated@@613 ($generated@@177 $generated@@614))) (and (= ($generated@@314 ($generated@@149 ($generated@@80 $generated@@140 $generated@@2) $generated@@613)) $generated@@613) ($generated@@161 ($generated@@149 ($generated@@80 $generated@@140 $generated@@2) $generated@@613) ($generated@@177 $generated@@614))))
 :pattern ( ($generated@@239 $generated@@613 ($generated@@177 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@140) (= (type $generated@@616) $generated@@68)) ($generated@@239 $generated@@615 ($generated@@267 $generated@@616))) (and (= ($generated@@314 ($generated@@149 ($generated@@146 $generated@@140) $generated@@615)) $generated@@615) ($generated@@161 ($generated@@149 ($generated@@146 $generated@@140) $generated@@615) ($generated@@267 $generated@@616))))
 :pattern ( ($generated@@239 $generated@@615 ($generated@@267 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@68) (= (type $generated@@618) $generated@@140)) ($generated@@239 $generated@@618 ($generated@@325 $generated@@617))) (and (= ($generated@@314 ($generated@@149 $generated@@138 $generated@@618)) $generated@@618) ($generated@@161 ($generated@@149 $generated@@138 $generated@@618) ($generated@@325 $generated@@617))))
 :pattern ( ($generated@@239 $generated@@618 ($generated@@325 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@68) (= (type $generated@@620) ($generated@@146 $generated@@140))) (= ($generated@@161 ($generated@@145 $generated@@620) ($generated@@325 $generated@@619)) ($generated@@161 $generated@@620 ($generated@@267 $generated@@45))))
 :pattern ( ($generated@@161 ($generated@@145 $generated@@620) ($generated@@325 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@621 ($generated@@177 $generated@@622) $generated@@623) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@621 $generated@@624)))) ($generated@@281 $generated@@624 $generated@@622 $generated@@623))
 :pattern ( ($generated@@85 $generated@@621 $generated@@624))
))))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@177 $generated@@622) $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@138) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@627) (and ($generated@@163 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@78 $generated@@625 ($generated@@164 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@78 $generated@@625 ($generated@@164 $generated@@626 $generated@@628) $generated@@627))
))))) ($generated@@281 ($generated@@171 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@281 ($generated@@171 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@138) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@280 $generated@@631) (and ($generated@@163 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@68) ($generated@@78 $generated@@629 ($generated@@164 $generated@@632 $generated@@630) $generated@@631))
 :pattern ( ($generated@@78 $generated@@629 ($generated@@164 $generated@@632 $generated@@630) $generated@@631))
))))) ($generated@@281 ($generated@@172 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@281 ($generated@@172 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@140) (= (type $generated@@634) $generated@@140)) (= ($generated@@238 ($generated@@262 $generated@@633) ($generated@@262 $generated@@634)) ($generated@@262 ($generated@@238 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@238 ($generated@@262 $generated@@633) ($generated@@262 $generated@@634)))
)))
(assert (forall (($generated@@635 Int) ) (! (= ($generated@@314 ($generated@@8 ($generated@@260 $generated@@635))) ($generated@@262 ($generated@@314 ($generated@@8 $generated@@635))))
 :pattern ( ($generated@@314 ($generated@@8 ($generated@@260 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@140) (= ($generated@@304 ($generated@@262 $generated@@636)) ($generated@@262 ($generated@@304 $generated@@636))))
 :pattern ( ($generated@@304 ($generated@@262 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) ($generated@@146 $generated@@140)) (= ($generated@@145 ($generated@@262 $generated@@637)) ($generated@@262 ($generated@@145 $generated@@637))))
 :pattern ( ($generated@@145 ($generated@@262 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (! (= ($generated@@314 ($generated@@262 $generated@@638)) ($generated@@262 ($generated@@314 $generated@@638)))
 :pattern ( ($generated@@314 ($generated@@262 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@150 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@146 $generated@@640)) (= ($generated@@147 $generated@@639) 0)) (= $generated@@639 ($generated@@301 $generated@@640))))
 :pattern ( ($generated@@147 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@80 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@2)) (<= 0 ($generated $generated@@643))) (= ($generated@@319 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)) (+ (- ($generated@@319 $generated@@641) ($generated ($generated@@85 $generated@@641 $generated@@642))) ($generated $generated@@643)))))
 :pattern ( ($generated@@319 ($generated@@86 $generated@@641 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@2)) ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@46 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@3)) ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@47 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@4)) ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@44 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@652) $generated@@277)) ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
 :pattern ( ($generated@@78 $generated@@652 $generated@@45 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@654) $generated@@140)) ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
 :pattern ( ($generated@@78 $generated@@654 $generated@@48 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@146 $generated@@140)) (= (type $generated@@656) $generated@@68)) (= ($generated@@161 $generated@@655 ($generated@@267 $generated@@656)) (forall (($generated@@657 Int) ) (!  (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@147 $generated@@655))) ($generated@@239 ($generated@@144 $generated@@655 $generated@@657) $generated@@656))
 :pattern ( ($generated@@144 $generated@@655 $generated@@657))
))))
 :pattern ( ($generated@@161 $generated@@655 ($generated@@267 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 Int) ) (!  (=> (= (type $generated@@658) ($generated@@146 $generated@@140)) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@147 $generated@@658))) (< ($generated@@148 ($generated@@149 $generated@@138 ($generated@@144 $generated@@658 $generated@@659))) ($generated@@589 $generated@@658))))
 :pattern ( ($generated@@148 ($generated@@149 $generated@@138 ($generated@@144 $generated@@658 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@332 $generated@@140 $generated@@140)) (= (type $generated@@661) $generated@@68)) (= (type $generated@@662) $generated@@68)) ($generated@@161 $generated@@660 ($generated@@447 $generated@@661 $generated@@662))) (and (and ($generated@@161 ($generated@@330 $generated@@660) ($generated@@250 $generated@@661)) ($generated@@161 ($generated@@381 $generated@@660) ($generated@@250 $generated@@662))) ($generated@@161 ($generated@@421 $generated@@660) ($generated@@250 ($generated@@164 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@161 $generated@@660 ($generated@@447 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@350 $generated@@140 $generated@@140)) (= (type $generated@@664) $generated@@68)) (= (type $generated@@665) $generated@@68)) ($generated@@161 $generated@@663 ($generated@@455 $generated@@664 $generated@@665))) (and (and ($generated@@161 ($generated@@348 $generated@@663) ($generated@@255 $generated@@664)) ($generated@@161 ($generated@@392 $generated@@663) ($generated@@255 $generated@@665))) ($generated@@161 ($generated@@429 $generated@@663) ($generated@@255 ($generated@@164 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@161 $generated@@663 ($generated@@455 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@2) ($generated@@161 $generated@@666 $generated@@46))
 :pattern ( ($generated@@161 $generated@@666 $generated@@46))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@3) ($generated@@161 $generated@@667 $generated@@47))
 :pattern ( ($generated@@161 $generated@@667 $generated@@47))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@4) ($generated@@161 $generated@@668 $generated@@44))
 :pattern ( ($generated@@161 $generated@@668 $generated@@44))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@277) ($generated@@161 $generated@@669 $generated@@45))
 :pattern ( ($generated@@161 $generated@@669 $generated@@45))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@140) ($generated@@161 $generated@@670 $generated@@48))
 :pattern ( ($generated@@161 $generated@@670 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 (T@U) Bool)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@672) $generated@@138) (= (type $generated@@674) $generated@@138)) (= (type $generated@@673) $generated@@138)) (= (type $generated@@675) ($generated@@184 $generated@@81 $generated@@4))) (= (type $generated@@676) $generated@@81)) (= (type $generated@@677) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@679) $generated@@138)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@681  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> (<= ($generated@@260 0) $generated@@671) ($generated@@137 $generated@@672))) (=> (=> (<= ($generated@@260 0) $generated@@671) ($generated@@137 $generated@@672)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> (<= ($generated@@260 0) $generated@@671) (= ($generated ($generated@@149 $generated@@2 ($generated@@139 $generated@@672))) $generated@@671))) (=> (=> (<= ($generated@@260 0) $generated@@671) (= ($generated ($generated@@149 $generated@@2 ($generated@@139 $generated@@672))) $generated@@671)) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (< $generated@@671 0) ($generated@@291 $generated@@672)))))))))
(let (($generated@@682  (=> (and (and (<= 0 $generated@@671) (= $generated@@673 ($generated@@304 ($generated@@314 ($generated@@8 $generated@@671))))) (and (= $generated@@672 $generated@@673) (= (ControlFlow 0 6) 2))) $generated@@681)))
(let (($generated@@683  (=> (and (and (< $generated@@671 0) (= $generated@@674 ($generated@@262 ($generated@@145 ($generated@@262 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@266 ($generated@@301 $generated@@140) ($generated@@314 ($generated@@275 110))) ($generated@@314 ($generated@@275 101))) ($generated@@314 ($generated@@275 103))) ($generated@@314 ($generated@@275 97))) ($generated@@314 ($generated@@275 116))) ($generated@@314 ($generated@@275 105))) ($generated@@314 ($generated@@275 118))) ($generated@@314 ($generated@@275 101)))))))) (and (= $generated@@672 $generated@@674) (= (ControlFlow 0 5) 2))) $generated@@681)))
(let (($generated@@684  (=> (= $generated@@675 ($generated@@183 $generated@@676 $generated@@677 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@683) (=> (= (ControlFlow 0 7) 6) $generated@@682)))))
(let (($generated@@685  (=> (and ($generated@@280 $generated@@677) ($generated@@678 $generated@@677)) (=> (and (and ($generated@@161 $generated@@679 ($generated@@325 $generated@@46)) ($generated@@78 $generated@@679 ($generated@@325 $generated@@46) $generated@@677)) (and (= 2 $generated@@680) (= (ControlFlow 0 8) 7))) $generated@@684))))
$generated@@685))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@157 (T@U Int) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int) Int)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (Int) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 () T@T)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@313 (T@U T@U) Bool)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@T) T@U)
(declare-fun $generated@@368 (T@T T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@488 (T@T) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@622 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@78) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85)) $generated@@78)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@86)) $generated@@68)
 :pattern ( ($generated@@81 $generated@@86))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and (= (type $generated@@87) $generated@@68) (= (type $generated@@88) $generated@@68)) (= (type $generated@@89) $generated@@78)) (or ($generated@@79 $generated@@87 $generated@@88 $generated@@89) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@89 ($generated@@81 $generated@@87)) ($generated@@82 $generated@@89))))) ($generated@@80 ($generated@@77 $generated@@87 $generated@@88 $generated@@89) ($generated@@81 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@69)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@78) (= (type $generated@@156) $generated@@78)) (and ($generated@@151 $generated@@155) ($generated@@151 $generated@@156))) (= ($generated@@150 $generated@@155 $generated@@156) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@155))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@156))
)))
(assert  (and (and (and (and (forall (($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@164)) 16)) (forall (($generated@@165 T@T) ) (! (= ($generated@@163 ($generated@@159 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165))
))) (forall (($generated@@166 T@U) ($generated@@167 Int) ) (! (let (($generated@@168 ($generated@@163 (type $generated@@166))))
(= (type ($generated@@157 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@157 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@158 $generated@@169)) $generated@@78)
 :pattern ( ($generated@@158 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@162 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (= (type $generated@@172) ($generated@@159 $generated@@153)) (=> (and (<= 0 $generated@@173) (< $generated@@173 ($generated@@160 $generated@@172))) (< ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@172 $generated@@173))) ($generated@@161 ($generated@@158 $generated@@172)))))
 :pattern ( ($generated@@157 $generated@@172 $generated@@173) ($generated@@158 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@80 $generated@@174 ($generated@@93 0)))
 :pattern ( ($generated@@80 $generated@@174 ($generated@@93 0)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@177 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@68) (= (type $generated@@180) $generated@@68)) (= (type $generated@@181) $generated@@78)) ($generated@@80 $generated@@181 ($generated@@176 $generated@@179 $generated@@180))) ($generated@@175 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181) ($generated@@80 $generated@@181 ($generated@@176 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@153)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@153)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@78) (= (type $generated@@188) $generated@@78)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@68)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@193) $generated@@68)) ($generated@@80 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@80 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 17)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@95 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@71 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@95) (= (type $generated@@244) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@245) ($generated@@70 $generated@@4))) (= (type $generated@@247) $generated@@95)) (= (type $generated@@248) ($generated@@70 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@78)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@68) (= (type $generated@@255) $generated@@68)) (= (type $generated@@256) $generated@@153)) (= (type $generated@@257) $generated@@153)) (= ($generated@@80 ($generated@@250 $generated@@256 $generated@@257) ($generated@@176 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@80 ($generated@@250 $generated@@256 $generated@@257) ($generated@@176 $generated@@254 $generated@@255)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@68) (= (type $generated@@261) $generated@@78)) (or ($generated@@259 $generated@@260 $generated@@261) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@261 ($generated@@81 $generated@@260))))) (= ($generated@@258 $generated@@260 $generated@@261) ($generated@@82 $generated@@261)))
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@78) (= (type $generated@@263) $generated@@78)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@78) (= (type $generated@@265) $generated@@78)) (= ($generated@@150 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@150 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@269) $generated@@68)) (= ($generated@@80 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@153) ($generated@@0 ($generated@@99 $generated@@268 $generated@@270))) ($generated@@251 $generated@@270 $generated@@269))
 :pattern ( ($generated@@99 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@80 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@274) $generated@@68)) (= ($generated@@80 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@153) ($generated@@0 ($generated@@99 $generated@@273 $generated@@275))) ($generated@@251 $generated@@275 $generated@@274))
 :pattern ( ($generated@@99 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@80 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@276 $generated@@277) $generated@@277)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@282 $generated@@284 $generated@@285)) ($generated@@159 $generated@@286)))
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@287 T@U) ) (! (= (type ($generated@@283 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@283 $generated@@287))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) ($generated@@159 $generated@@153)) (= (type $generated@@289) $generated@@153)) (= (type $generated@@290) $generated@@68)) (and ($generated@@80 $generated@@288 ($generated@@283 $generated@@290)) ($generated@@251 $generated@@289 $generated@@290))) ($generated@@80 ($generated@@282 $generated@@288 $generated@@289) ($generated@@283 $generated@@290)))
 :pattern ( ($generated@@80 ($generated@@282 $generated@@288 $generated@@289) ($generated@@283 $generated@@290)))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@159 $generated@@153))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) $generated@@68) (= (type $generated@@294) $generated@@68)) (= (type $generated@@295) $generated@@78)) (or ($generated@@79 $generated@@293 $generated@@294 ($generated@@278 $generated@@295)) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@295 ($generated@@81 $generated@@293)) ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@82 ($generated@@278 $generated@@295))))))))) (= ($generated@@77 $generated@@293 $generated@@294 ($generated@@278 $generated@@295)) ($generated@@278 ($generated@@158 ($generated@@278 ($generated@@291 ($generated@@278 $generated@@295)))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@293 $generated@@294 ($generated@@278 $generated@@295)))
))))
(assert  (and (= ($generated@@1 $generated@@298) 18) (forall (($generated@@299 Int) ) (! (= (type ($generated@@296 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@296 $generated@@299))
))))
(assert (forall (($generated@@300 Int) ) (!  (=> (and (<= 0 $generated@@300) (< $generated@@300 65536)) (= ($generated@@297 ($generated@@296 $generated@@300)) $generated@@300))
 :pattern ( ($generated@@296 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@68) (= (type $generated@@304) $generated@@68)) (= (type $generated@@305) $generated@@153)) (= (type $generated@@306) $generated@@153)) (= (type $generated@@307) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@301 $generated@@307)) (= ($generated@@92 ($generated@@250 $generated@@305 $generated@@306) ($generated@@176 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@92 ($generated@@250 $generated@@305 $generated@@306) ($generated@@176 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@72)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@78) (= ($generated@@175 $generated@@310) (= ($generated@@308 $generated@@310) $generated@@61)))
 :pattern ( ($generated@@175 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@78) (= ($generated@@151 $generated@@311) (= ($generated@@308 $generated@@311) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@78) (= ($generated@@82 $generated@@312) (= ($generated@@308 $generated@@312) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@163 (type $generated@@314))))
 (=> (and (= (type $generated@@314) ($generated@@159 $generated@@316)) (= (type $generated@@315) ($generated@@159 $generated@@316))) (= ($generated@@313 $generated@@314 $generated@@315)  (and (= ($generated@@160 $generated@@314) ($generated@@160 $generated@@315)) (forall (($generated@@317 Int) ) (!  (=> (and (<= 0 $generated@@317) (< $generated@@317 ($generated@@160 $generated@@314))) (= ($generated@@157 $generated@@314 $generated@@317) ($generated@@157 $generated@@315 $generated@@317)))
 :pattern ( ($generated@@157 $generated@@314 $generated@@317))
 :pattern ( ($generated@@157 $generated@@315 $generated@@317))
))))))
 :pattern ( ($generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@78) ($generated@@175 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@153) (= (type $generated@@320) $generated@@153)) (= $generated@@318 ($generated@@250 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@175 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@159 $generated@@322))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@T) ) (! (= ($generated@@160 ($generated@@321 $generated@@323)) 0)
 :pattern ( ($generated@@321 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@78)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@78) ($generated@@151 $generated@@326)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@153) (= $generated@@326 ($generated@@324 $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
)))
 :pattern ( ($generated@@151 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@78) ($generated@@82 $generated@@328)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) ($generated@@159 $generated@@153)) (= $generated@@328 ($generated@@158 $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
)))
 :pattern ( ($generated@@82 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (! (let (($generated@@332 (type $generated@@331)))
 (=> (= (type $generated@@330) ($generated@@159 $generated@@332)) (= ($generated@@160 ($generated@@282 $generated@@330 $generated@@331)) (+ 1 ($generated@@160 $generated@@330)))))
 :pattern ( ($generated@@282 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@298) (and (and (= ($generated@@296 ($generated@@297 $generated@@333)) $generated@@333) (<= 0 ($generated@@297 $generated@@333))) (< ($generated@@297 $generated@@333) 65536)))
 :pattern ( ($generated@@297 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= (type ($generated@@334 $generated@@335)) $generated@@153)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@68) (= (type $generated@@338) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@302 ($generated@@334 $generated@@336) $generated@@337 $generated@@338) ($generated@@92 $generated@@336 $generated@@337 $generated@@338)))
 :pattern ( ($generated@@302 ($generated@@334 $generated@@336) $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@341 T@T) ) (! (= (type ($generated@@340 $generated@@341)) ($generated@@94 $generated@@341 $generated@@2))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@97 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@94 $generated@@343 $generated@@2)) (and (= (= ($generated@@339 $generated@@342) 0) (= $generated@@342 ($generated@@340 $generated@@343))) (=> (not (= ($generated@@339 $generated@@342) 0)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) (< 0 ($generated ($generated@@99 $generated@@342 $generated@@344))))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@73)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@68) (and (= ($generated@@90 ($generated@@81 $generated@@347)) $generated@@64) (= ($generated@@345 ($generated@@81 $generated@@347)) $generated@@67)))
 :pattern ( ($generated@@81 $generated@@347))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 19)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@94 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@99 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@99 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert  (and (and (and (and (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (= ($generated@@1 ($generated@@368 $generated@@371 $generated@@372)) 20)) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@369 ($generated@@368 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@368 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@370 ($generated@@368 $generated@@375 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@368 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@369 (type $generated@@377))))
(= (type ($generated@@366 $generated@@377)) ($generated@@94 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@377))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= (type ($generated@@367 $generated@@379 $generated@@380)) ($generated@@368 $generated@@379 $generated@@380))
 :pattern ( ($generated@@367 $generated@@379 $generated@@380))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@T) ) (! (let (($generated@@383 (type $generated@@381)))
 (not ($generated@@0 ($generated@@99 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381))))
 :pattern ( (let (($generated@@383 (type $generated@@381)))
($generated@@99 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@384) $generated@@68) (= (type $generated@@385) $generated@@78)) (or ($generated@@259 $generated@@384 $generated@@385) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@385 ($generated@@81 $generated@@384))))) true)
 :pattern ( ($generated@@258 $generated@@384 $generated@@385))
))))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@97 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@94 $generated@@387 $generated@@2)) (= ($generated@@190 $generated@@386) (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@387) (and (<= 0 ($generated ($generated@@99 $generated@@386 $generated@@388))) (<= ($generated ($generated@@99 $generated@@386 $generated@@388)) ($generated@@339 $generated@@386))))
 :pattern ( ($generated@@99 $generated@@386 $generated@@388))
)))))
 :pattern ( ($generated@@190 $generated@@386))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@68) (= (type $generated@@390) $generated@@78)) (or ($generated@@259 $generated@@389 ($generated@@278 $generated@@390)) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@390 ($generated@@81 $generated@@389))))) (= ($generated@@258 $generated@@389 ($generated@@278 $generated@@390)) ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@82 ($generated@@278 $generated@@390)))))))
 :weight 3
 :pattern ( ($generated@@258 $generated@@389 ($generated@@278 $generated@@390)))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 Int) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
 (=> (= (type $generated@@391) ($generated@@159 $generated@@394)) (and (=> (= $generated@@392 ($generated@@160 $generated@@391)) (= ($generated@@157 ($generated@@282 $generated@@391 $generated@@393) $generated@@392) $generated@@393)) (=> (not (= $generated@@392 ($generated@@160 $generated@@391))) (= ($generated@@157 ($generated@@282 $generated@@391 $generated@@393) $generated@@392) ($generated@@157 $generated@@391 $generated@@392))))))
 :pattern ( ($generated@@157 ($generated@@282 $generated@@391 $generated@@393) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@395) $generated@@78) (= (type $generated@@396) $generated@@78)) (and ($generated@@82 $generated@@395) ($generated@@82 $generated@@396))) (= ($generated@@150 $generated@@395 $generated@@396) ($generated@@313 ($generated@@291 $generated@@395) ($generated@@291 $generated@@396))))
 :pattern ( ($generated@@150 $generated@@395 $generated@@396) ($generated@@82 $generated@@395))
 :pattern ( ($generated@@150 $generated@@395 $generated@@396) ($generated@@82 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@352 (type $generated@@397))))
(let (($generated@@399 ($generated@@351 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@350 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@349 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@99 ($generated@@348 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@348 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@352 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@94 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@352 (type $generated@@404))))
(let (($generated@@406 ($generated@@351 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@350 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@349 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@99 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@370 (type $generated@@408))))
(let (($generated@@410 ($generated@@369 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@368 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@367 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) ($generated@@0 ($generated@@99 ($generated@@366 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@366 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@370 (type $generated@@413))))
(= (type ($generated@@412 $generated@@413)) ($generated@@94 $generated@@414 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@370 (type $generated@@415))))
(let (($generated@@417 ($generated@@369 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@368 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@367 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@416) ($generated@@0 ($generated@@99 ($generated@@412 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@412 $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@420) $generated@@68)) (= ($generated@@80 $generated@@419 ($generated@@189 $generated@@420)) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@419 $generated@@421)))) ($generated@@251 $generated@@421 $generated@@420))
 :pattern ( ($generated@@99 $generated@@419 $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@419 ($generated@@189 $generated@@420)))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) $generated@@68) (= (type $generated@@423) $generated@@153)) (= (type $generated@@424) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@301 $generated@@424)) (= ($generated@@92 ($generated@@324 $generated@@423) ($generated@@81 $generated@@422) $generated@@424) ($generated@@302 $generated@@423 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@92 ($generated@@324 $generated@@423) ($generated@@81 $generated@@422) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@425) $generated@@78) (= (type $generated@@426) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@301 $generated@@426) (and ($generated@@82 $generated@@425) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@68) ($generated@@92 $generated@@425 ($generated@@81 $generated@@427) $generated@@426))
 :pattern ( ($generated@@92 $generated@@425 ($generated@@81 $generated@@427) $generated@@426))
))))) ($generated@@92 ($generated@@291 $generated@@425) ($generated@@283 $generated@@45) $generated@@426))
 :pattern ( ($generated@@92 ($generated@@291 $generated@@425) ($generated@@283 $generated@@45) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) $generated@@68) (= (type $generated@@429) ($generated@@159 $generated@@153))) (= (type $generated@@430) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@301 $generated@@430)) (= ($generated@@92 ($generated@@158 $generated@@429) ($generated@@81 $generated@@428) $generated@@430) ($generated@@92 $generated@@429 ($generated@@283 $generated@@45) $generated@@430)))
 :pattern ( ($generated@@92 ($generated@@158 $generated@@429) ($generated@@81 $generated@@428) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@431) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@432) $generated@@68)) (= (type $generated@@433) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@431 ($generated@@266 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@153) ($generated@@0 ($generated@@99 $generated@@431 $generated@@434))) ($generated@@302 $generated@@434 $generated@@432 $generated@@433))
 :pattern ( ($generated@@99 $generated@@431 $generated@@434))
))))
 :pattern ( ($generated@@92 $generated@@431 ($generated@@266 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@435) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@435 ($generated@@271 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@153) ($generated@@0 ($generated@@99 $generated@@435 $generated@@438))) ($generated@@302 $generated@@438 $generated@@436 $generated@@437))
 :pattern ( ($generated@@99 $generated@@435 $generated@@438))
))))
 :pattern ( ($generated@@92 $generated@@435 ($generated@@271 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(= ($generated ($generated@@99 ($generated@@340 $generated@@440) $generated@@439)) 0))
 :pattern ( (let (($generated@@440 (type $generated@@439)))
($generated@@99 ($generated@@340 $generated@@440) $generated@@439)))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@352 (type $generated@@444))))
(let (($generated@@446 ($generated@@351 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@94 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@350 $generated@@153 $generated@@153)) (= (type $generated@@448) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@99 ($generated@@348 $generated@@447) ($generated@@183 ($generated@@162 $generated@@78 $generated@@448)))) (= ($generated@@99 ($generated@@442 $generated@@447) ($generated@@183 ($generated@@162 $generated@@78 $generated@@448))) ($generated@@184 ($generated@@162 $generated@@78 $generated@@448))))))
 :pattern ( ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert  (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@451)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@449 $generated@@451))
)) (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@370 (type $generated@@452))))
(let (($generated@@454 ($generated@@369 (type $generated@@452))))
(= (type ($generated@@450 $generated@@452)) ($generated@@94 $generated@@454 $generated@@453))))
 :pattern ( ($generated@@450 $generated@@452))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) ($generated@@368 $generated@@153 $generated@@153)) (= (type $generated@@456) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@449 $generated@@455) $generated@@456))  (and ($generated@@0 ($generated@@99 ($generated@@366 $generated@@455) ($generated@@183 ($generated@@162 $generated@@78 $generated@@456)))) (= ($generated@@99 ($generated@@450 $generated@@455) ($generated@@183 ($generated@@162 $generated@@78 $generated@@456))) ($generated@@184 ($generated@@162 $generated@@78 $generated@@456))))))
 :pattern ( ($generated@@99 ($generated@@449 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@351 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@350 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@99 ($generated@@401 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@99 ($generated@@348 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@99 ($generated@@442 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@99 ($generated@@348 $generated@@457) $generated@@461))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@99 ($generated@@401 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(let (($generated@@465 ($generated@@369 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@368 $generated@@465 $generated@@464)) (= ($generated@@0 ($generated@@99 ($generated@@412 $generated@@462) $generated@@463)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) (and ($generated@@0 ($generated@@99 ($generated@@366 $generated@@462) $generated@@466)) (= $generated@@463 ($generated@@99 ($generated@@450 $generated@@462) $generated@@466))))
 :pattern ( ($generated@@99 ($generated@@366 $generated@@462) $generated@@466))
 :pattern ( ($generated@@99 ($generated@@450 $generated@@462) $generated@@466))
))))))
 :pattern ( ($generated@@99 ($generated@@412 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@350 $generated@@153 $generated@@153)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@348 $generated@@470) $generated@@474))) (and ($generated@@302 ($generated@@99 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@302 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@99 ($generated@@348 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (= (type $generated@@478) ($generated@@368 $generated@@153 $generated@@153)) (= (type $generated@@479) $generated@@68)) (= (type $generated@@480) $generated@@68)) (= (type $generated@@481) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@366 $generated@@478) $generated@@482))) (and ($generated@@302 ($generated@@99 ($generated@@450 $generated@@478) $generated@@482) $generated@@480 $generated@@481) ($generated@@302 $generated@@482 $generated@@479 $generated@@481)))
 :pattern ( ($generated@@99 ($generated@@450 $generated@@478) $generated@@482))
 :pattern ( ($generated@@99 ($generated@@366 $generated@@478) $generated@@482))
))))
 :pattern ( ($generated@@92 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@78)) ($generated@@80 $generated@@484 ($generated@@81 $generated@@483))) (or ($generated@@151 $generated@@484) ($generated@@82 $generated@@484)))
 :pattern ( ($generated@@82 $generated@@484) ($generated@@80 $generated@@484 ($generated@@81 $generated@@483)))
 :pattern ( ($generated@@151 $generated@@484) ($generated@@80 $generated@@484 ($generated@@81 $generated@@483)))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@163 (type $generated@@485))))
 (=> (and (and (= (type $generated@@485) ($generated@@159 $generated@@487)) (= (type $generated@@486) ($generated@@159 $generated@@487))) ($generated@@313 $generated@@485 $generated@@486)) (= $generated@@485 $generated@@486)))
 :pattern ( ($generated@@313 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@489 T@T) ) (! (= (type ($generated@@488 $generated@@489)) ($generated@@94 $generated@@489 $generated@@4))
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@370 (type $generated@@490))))
(let (($generated@@492 ($generated@@369 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@368 $generated@@492 $generated@@491)) (= (= $generated@@490 ($generated@@367 $generated@@492 $generated@@491)) (= ($generated@@366 $generated@@490) ($generated@@488 $generated@@492))))))
 :pattern ( ($generated@@366 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@370 (type $generated@@493))))
(let (($generated@@495 ($generated@@369 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@368 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@367 $generated@@495 $generated@@494)) (= ($generated@@412 $generated@@493) ($generated@@488 $generated@@494))))))
 :pattern ( ($generated@@412 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@370 (type $generated@@496))))
(let (($generated@@498 ($generated@@369 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@368 $generated@@498 $generated@@497)) (= (= $generated@@496 ($generated@@367 $generated@@498 $generated@@497)) (= ($generated@@449 $generated@@496) ($generated@@488 $generated@@153))))))
 :pattern ( ($generated@@449 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@352 (type $generated@@499))))
(let (($generated@@501 ($generated@@351 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@350 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@349 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@153) (= (type $generated@@503) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@441 $generated@@499) ($generated@@334 ($generated@@250 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@441 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@370 (type $generated@@504))))
(let (($generated@@506 ($generated@@369 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@368 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@367 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@153) (= (type $generated@@508) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@449 $generated@@504) ($generated@@334 ($generated@@250 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@449 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@153) ($generated@@251 $generated@@509 $generated@@46)) (and (= ($generated@@334 ($generated@@162 $generated@@2 $generated@@509)) $generated@@509) ($generated@@80 ($generated@@162 $generated@@2 $generated@@509) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@509 $generated@@46))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@153) ($generated@@251 $generated@@510 $generated@@47)) (and (= ($generated@@334 ($generated@@162 $generated@@3 $generated@@510)) $generated@@510) ($generated@@80 ($generated@@162 $generated@@3 $generated@@510) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@510 $generated@@47))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@153) ($generated@@251 $generated@@511 $generated@@44)) (and (= ($generated@@334 ($generated@@162 $generated@@4 $generated@@511)) $generated@@511) ($generated@@80 ($generated@@162 $generated@@4 $generated@@511) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@511 $generated@@44))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@153) ($generated@@251 $generated@@512 $generated@@45)) (and (= ($generated@@334 ($generated@@162 $generated@@298 $generated@@512)) $generated@@512) ($generated@@80 ($generated@@162 $generated@@298 $generated@@512) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@512 $generated@@45))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@251 ($generated@@334 $generated@@513) $generated@@514) ($generated@@80 $generated@@513 $generated@@514)))
 :pattern ( ($generated@@251 ($generated@@334 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@97 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@94 $generated@@516 $generated@@2)) (<= 0 ($generated@@339 $generated@@515))))
 :pattern ( ($generated@@339 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@163 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@159 $generated@@518)) (<= 0 ($generated@@160 $generated@@517))))
 :pattern ( ($generated@@160 $generated@@517))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@519 ($generated@@467 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@467 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@523 ($generated@@467 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@467 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@90 ($generated@@467 $generated@@527 $generated@@528)) $generated@@58))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@475 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@475 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@533 ($generated@@475 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@475 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@90 ($generated@@475 $generated@@537 $generated@@538)) $generated@@59))
 :pattern ( ($generated@@475 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@153) (= (type $generated@@540) $generated@@153)) (= ($generated@@308 ($generated@@250 $generated@@539 $generated@@540)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (= ($generated@@541 ($generated@@176 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@176 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@68) (= (type $generated@@548) $generated@@68)) (= ($generated@@545 ($generated@@176 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@176 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@153) (= (type $generated@@550) $generated@@153)) (= ($generated@@183 ($generated@@250 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@250 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@153) (= (type $generated@@552) $generated@@153)) (= ($generated@@184 ($generated@@250 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@250 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@159 $generated@@153)) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@553 ($generated@@283 $generated@@554) $generated@@555) (forall (($generated@@556 Int) ) (!  (=> (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@160 $generated@@553))) ($generated@@302 ($generated@@157 $generated@@553 $generated@@556) $generated@@554 $generated@@555))
 :pattern ( ($generated@@157 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@92 $generated@@553 ($generated@@283 $generated@@554) $generated@@555))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@68) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@78)) (or ($generated@@79 $generated@@557 $generated@@558 $generated@@559) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@559 ($generated@@81 $generated@@557)) ($generated@@82 $generated@@559))))) (= ($generated@@77 $generated@@557 $generated@@558 $generated@@559) ($generated@@158 ($generated@@291 $generated@@559))))
 :pattern ( ($generated@@77 $generated@@557 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@560 ($generated@@93 $generated@@561)) $generated@@561)
 :pattern ( ($generated@@93 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@266 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@266 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@90 ($generated@@266 $generated@@565)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@271 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@271 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@90 ($generated@@271 $generated@@569)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@189 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@189 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@90 ($generated@@189 $generated@@573)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@283 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@283 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@90 ($generated@@283 $generated@@577)) $generated@@57))
 :pattern ( ($generated@@283 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@153) (= ($generated@@308 ($generated@@324 $generated@@578)) $generated@@63))
 :pattern ( ($generated@@324 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@68)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@579 ($generated@@81 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@81 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@153) (= ($generated@@152 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) ($generated@@159 $generated@@153)) (= ($generated@@308 ($generated@@158 $generated@@583)) $generated@@65))
 :pattern ( ($generated@@158 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) ($generated@@159 $generated@@153)) (= ($generated@@291 ($generated@@158 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@158 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
(= ($generated@@162 $generated@@586 ($generated@@334 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@334 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@350 $generated@@153 $generated@@153)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) (= ($generated@@80 $generated@@587 ($generated@@467 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@348 $generated@@587) $generated@@590))) (and ($generated@@251 ($generated@@99 ($generated@@442 $generated@@587) $generated@@590) $generated@@589) ($generated@@251 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@587) $generated@@590))
 :pattern ( ($generated@@99 ($generated@@348 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@80 $generated@@587 ($generated@@467 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@368 $generated@@153 $generated@@153)) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) $generated@@68)) (= ($generated@@80 $generated@@591 ($generated@@475 $generated@@592 $generated@@593)) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@366 $generated@@591) $generated@@594))) (and ($generated@@251 ($generated@@99 ($generated@@450 $generated@@591) $generated@@594) $generated@@593) ($generated@@251 $generated@@594 $generated@@592)))
 :pattern ( ($generated@@99 ($generated@@450 $generated@@591) $generated@@594))
 :pattern ( ($generated@@99 ($generated@@366 $generated@@591) $generated@@594))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@475 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@68) (= (type $generated@@596) $generated@@153)) (= ($generated@@80 ($generated@@324 $generated@@596) ($generated@@81 $generated@@595)) ($generated@@251 $generated@@596 $generated@@595)))
 :pattern ( ($generated@@80 ($generated@@324 $generated@@596) ($generated@@81 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@153) (= (type $generated@@599) $generated@@153)) (< ($generated@@597 $generated@@598) ($generated@@161 ($generated@@250 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@250 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@153) (= (type $generated@@601) $generated@@153)) (< ($generated@@597 $generated@@601) ($generated@@161 ($generated@@250 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@250 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@153) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@68)) ($generated@@251 $generated@@602 ($generated@@467 $generated@@603 $generated@@604))) (and (= ($generated@@334 ($generated@@162 ($generated@@350 $generated@@153 $generated@@153) $generated@@602)) $generated@@602) ($generated@@80 ($generated@@162 ($generated@@350 $generated@@153 $generated@@153) $generated@@602) ($generated@@467 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@251 $generated@@602 ($generated@@467 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@153) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) $generated@@68)) ($generated@@251 $generated@@605 ($generated@@475 $generated@@606 $generated@@607))) (and (= ($generated@@334 ($generated@@162 ($generated@@368 $generated@@153 $generated@@153) $generated@@605)) $generated@@605) ($generated@@80 ($generated@@162 ($generated@@368 $generated@@153 $generated@@153) $generated@@605) ($generated@@475 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@251 $generated@@605 ($generated@@475 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@68) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) $generated@@153)) ($generated@@251 $generated@@610 ($generated@@176 $generated@@608 $generated@@609))) (and (= ($generated@@334 ($generated@@162 $generated@@78 $generated@@610)) $generated@@610) ($generated@@80 ($generated@@162 $generated@@78 $generated@@610) ($generated@@176 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@251 $generated@@610 ($generated@@176 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@153) (< ($generated@@597 $generated@@611) ($generated@@161 ($generated@@324 $generated@@611))))
 :pattern ( ($generated@@324 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) ($generated@@159 $generated@@153)) (< ($generated@@612 $generated@@613) ($generated@@161 ($generated@@158 $generated@@613))))
 :pattern ( ($generated@@158 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@78) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@301 $generated@@616) (and ($generated@@151 $generated@@614) ($generated@@92 $generated@@614 ($generated@@81 $generated@@615) $generated@@616)))) ($generated@@302 ($generated@@152 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@302 ($generated@@152 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@617)))
 (not ($generated@@0 ($generated@@99 ($generated@@488 $generated@@618) $generated@@617))))
 :pattern ( (let (($generated@@618 (type $generated@@617)))
($generated@@99 ($generated@@488 $generated@@618) $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@68) (= (type $generated@@620) $generated@@68)) (and (= ($generated@@90 ($generated@@176 $generated@@619 $generated@@620)) $generated@@62) (= ($generated@@345 ($generated@@176 $generated@@619 $generated@@620)) $generated@@66)))
 :pattern ( ($generated@@176 $generated@@619 $generated@@620))
)))
(assert  (and (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@163 (type $generated@@623))))
(= (type ($generated@@621 $generated@@623)) ($generated@@159 $generated@@624)))
 :pattern ( ($generated@@621 $generated@@623))
)) (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@163 (type $generated@@625))))
(= (type ($generated@@622 $generated@@625)) $generated@@626))
 :pattern ( ($generated@@622 $generated@@625))
))))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
 (=> (= (type $generated@@627) ($generated@@159 $generated@@629)) (and (= ($generated@@621 ($generated@@282 $generated@@627 $generated@@628)) $generated@@627) (= ($generated@@622 ($generated@@282 $generated@@627 $generated@@628)) $generated@@628))))
 :pattern ( ($generated@@282 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@78) (= ($generated@@597 ($generated@@334 $generated@@630)) ($generated@@161 $generated@@630)))
 :pattern ( ($generated@@597 ($generated@@334 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@153) ($generated@@251 $generated@@631 ($generated@@93 0))) (and (= ($generated@@334 ($generated@@162 $generated@@2 $generated@@631)) $generated@@631) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@631) ($generated@@93 0))))
 :pattern ( ($generated@@251 $generated@@631 ($generated@@93 0)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@153) (= (type $generated@@633) $generated@@68)) ($generated@@251 $generated@@632 ($generated@@266 $generated@@633))) (and (= ($generated@@334 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@632)) $generated@@632) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@632) ($generated@@266 $generated@@633))))
 :pattern ( ($generated@@251 $generated@@632 ($generated@@266 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@153) (= (type $generated@@635) $generated@@68)) ($generated@@251 $generated@@634 ($generated@@271 $generated@@635))) (and (= ($generated@@334 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@634)) $generated@@634) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@634) ($generated@@271 $generated@@635))))
 :pattern ( ($generated@@251 $generated@@634 ($generated@@271 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@153) (= (type $generated@@637) $generated@@68)) ($generated@@251 $generated@@636 ($generated@@189 $generated@@637))) (and (= ($generated@@334 ($generated@@162 ($generated@@94 $generated@@153 $generated@@2) $generated@@636)) $generated@@636) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@2) $generated@@636) ($generated@@189 $generated@@637))))
 :pattern ( ($generated@@251 $generated@@636 ($generated@@189 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@153) (= (type $generated@@639) $generated@@68)) ($generated@@251 $generated@@638 ($generated@@283 $generated@@639))) (and (= ($generated@@334 ($generated@@162 ($generated@@159 $generated@@153) $generated@@638)) $generated@@638) ($generated@@80 ($generated@@162 ($generated@@159 $generated@@153) $generated@@638) ($generated@@283 $generated@@639))))
 :pattern ( ($generated@@251 $generated@@638 ($generated@@283 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@68) (= (type $generated@@641) $generated@@153)) ($generated@@251 $generated@@641 ($generated@@81 $generated@@640))) (and (= ($generated@@334 ($generated@@162 $generated@@78 $generated@@641)) $generated@@641) ($generated@@80 ($generated@@162 $generated@@78 $generated@@641) ($generated@@81 $generated@@640))))
 :pattern ( ($generated@@251 $generated@@641 ($generated@@81 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@68) (= (type $generated@@643) ($generated@@159 $generated@@153))) (= ($generated@@80 ($generated@@158 $generated@@643) ($generated@@81 $generated@@642)) ($generated@@80 $generated@@643 ($generated@@283 $generated@@45))))
 :pattern ( ($generated@@80 ($generated@@158 $generated@@643) ($generated@@81 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@644 ($generated@@189 $generated@@645) $generated@@646) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@644 $generated@@647)))) ($generated@@302 $generated@@647 $generated@@645 $generated@@646))
 :pattern ( ($generated@@99 $generated@@644 $generated@@647))
))))
 :pattern ( ($generated@@92 $generated@@644 ($generated@@189 $generated@@645) $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@78) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@301 $generated@@650) (and ($generated@@175 $generated@@648) (exists (($generated@@651 T@U) ) (!  (and (= (type $generated@@651) $generated@@68) ($generated@@92 $generated@@648 ($generated@@176 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@92 $generated@@648 ($generated@@176 $generated@@649 $generated@@651) $generated@@650))
))))) ($generated@@302 ($generated@@183 $generated@@648) $generated@@649 $generated@@650))
 :pattern ( ($generated@@302 ($generated@@183 $generated@@648) $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@78) (= (type $generated@@653) $generated@@68)) (= (type $generated@@654) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@301 $generated@@654) (and ($generated@@175 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@68) ($generated@@92 $generated@@652 ($generated@@176 $generated@@655 $generated@@653) $generated@@654))
 :pattern ( ($generated@@92 $generated@@652 ($generated@@176 $generated@@655 $generated@@653) $generated@@654))
))))) ($generated@@302 ($generated@@184 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@302 ($generated@@184 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@153) (= (type $generated@@657) $generated@@153)) (= ($generated@@250 ($generated@@278 $generated@@656) ($generated@@278 $generated@@657)) ($generated@@278 ($generated@@250 $generated@@656 $generated@@657))))
 :pattern ( ($generated@@250 ($generated@@278 $generated@@656) ($generated@@278 $generated@@657)))
)))
(assert (forall (($generated@@658 Int) ) (! (= ($generated@@334 ($generated@@8 ($generated@@276 $generated@@658))) ($generated@@278 ($generated@@334 ($generated@@8 $generated@@658))))
 :pattern ( ($generated@@334 ($generated@@8 ($generated@@276 $generated@@658))))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@153) (= ($generated@@324 ($generated@@278 $generated@@659)) ($generated@@278 ($generated@@324 $generated@@659))))
 :pattern ( ($generated@@324 ($generated@@278 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) ($generated@@159 $generated@@153)) (= ($generated@@158 ($generated@@278 $generated@@660)) ($generated@@278 ($generated@@158 $generated@@660))))
 :pattern ( ($generated@@158 ($generated@@278 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (! (= ($generated@@334 ($generated@@278 $generated@@661)) ($generated@@278 ($generated@@334 $generated@@661)))
 :pattern ( ($generated@@334 ($generated@@278 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (! (let (($generated@@663 ($generated@@163 (type $generated@@662))))
 (=> (and (= (type $generated@@662) ($generated@@159 $generated@@663)) (= ($generated@@160 $generated@@662) 0)) (= $generated@@662 ($generated@@321 $generated@@663))))
 :pattern ( ($generated@@160 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (! (let (($generated@@667 (type $generated@@665)))
 (=> (and (and (= (type $generated@@664) ($generated@@94 $generated@@667 $generated@@2)) (= (type $generated@@666) $generated@@2)) (<= 0 ($generated $generated@@666))) (= ($generated@@339 ($generated@@100 $generated@@664 $generated@@665 $generated@@666)) (+ (- ($generated@@339 $generated@@664) ($generated ($generated@@99 $generated@@664 $generated@@665))) ($generated $generated@@666)))))
 :pattern ( ($generated@@339 ($generated@@100 $generated@@664 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@669) $generated@@2)) ($generated@@92 $generated@@669 $generated@@46 $generated@@668))
 :pattern ( ($generated@@92 $generated@@669 $generated@@46 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@671) $generated@@3)) ($generated@@92 $generated@@671 $generated@@47 $generated@@670))
 :pattern ( ($generated@@92 $generated@@671 $generated@@47 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@673) $generated@@4)) ($generated@@92 $generated@@673 $generated@@44 $generated@@672))
 :pattern ( ($generated@@92 $generated@@673 $generated@@44 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@675) $generated@@298)) ($generated@@92 $generated@@675 $generated@@45 $generated@@674))
 :pattern ( ($generated@@92 $generated@@675 $generated@@45 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@677) $generated@@153)) ($generated@@92 $generated@@677 $generated@@48 $generated@@676))
 :pattern ( ($generated@@92 $generated@@677 $generated@@48 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@159 $generated@@153)) (= (type $generated@@679) $generated@@68)) (= ($generated@@80 $generated@@678 ($generated@@283 $generated@@679)) (forall (($generated@@680 Int) ) (!  (=> (and (<= 0 $generated@@680) (< $generated@@680 ($generated@@160 $generated@@678))) ($generated@@251 ($generated@@157 $generated@@678 $generated@@680) $generated@@679))
 :pattern ( ($generated@@157 $generated@@678 $generated@@680))
))))
 :pattern ( ($generated@@80 $generated@@678 ($generated@@283 $generated@@679)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 Int) ) (!  (=> (= (type $generated@@681) ($generated@@159 $generated@@153)) (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@160 $generated@@681))) (< ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@681 $generated@@682))) ($generated@@612 $generated@@681))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@681 $generated@@682))))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@350 $generated@@153 $generated@@153)) (= (type $generated@@684) $generated@@68)) (= (type $generated@@685) $generated@@68)) ($generated@@80 $generated@@683 ($generated@@467 $generated@@684 $generated@@685))) (and (and ($generated@@80 ($generated@@348 $generated@@683) ($generated@@266 $generated@@684)) ($generated@@80 ($generated@@401 $generated@@683) ($generated@@266 $generated@@685))) ($generated@@80 ($generated@@441 $generated@@683) ($generated@@266 ($generated@@176 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@80 $generated@@683 ($generated@@467 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@368 $generated@@153 $generated@@153)) (= (type $generated@@687) $generated@@68)) (= (type $generated@@688) $generated@@68)) ($generated@@80 $generated@@686 ($generated@@475 $generated@@687 $generated@@688))) (and (and ($generated@@80 ($generated@@366 $generated@@686) ($generated@@271 $generated@@687)) ($generated@@80 ($generated@@412 $generated@@686) ($generated@@271 $generated@@688))) ($generated@@80 ($generated@@449 $generated@@686) ($generated@@271 ($generated@@176 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@80 $generated@@686 ($generated@@475 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@2) ($generated@@80 $generated@@689 $generated@@46))
 :pattern ( ($generated@@80 $generated@@689 $generated@@46))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@3) ($generated@@80 $generated@@690 $generated@@47))
 :pattern ( ($generated@@80 $generated@@690 $generated@@47))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@4) ($generated@@80 $generated@@691 $generated@@44))
 :pattern ( ($generated@@80 $generated@@691 $generated@@44))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@298) ($generated@@80 $generated@@692 $generated@@45))
 :pattern ( ($generated@@80 $generated@@692 $generated@@45))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@153) ($generated@@80 $generated@@693 $generated@@48))
 :pattern ( ($generated@@80 $generated@@693 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 (T@U) Bool)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@694) $generated@@78) (= (type $generated@@696) $generated@@78)) (= (type $generated@@699) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@700) $generated@@78)) (= (type $generated@@698) $generated@@78)) (= (type $generated@@702) ($generated@@196 $generated@@95 $generated@@4))) (= (type $generated@@703) $generated@@95)) (= (type $generated@@704) $generated@@78)) (= (type $generated@@706) $generated@@78)) (= (type $generated@@707) $generated@@78)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@708  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@259 $generated@@46 $generated@@694) (or ($generated@@258 $generated@@46 $generated@@694) ($generated@@82 $generated@@694)))) (=> (=> ($generated@@259 $generated@@46 $generated@@694) (or ($generated@@258 $generated@@46 $generated@@694) ($generated@@82 $generated@@694))) (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@695 ($generated@@276 100)))))))
(let (($generated@@709  (=> (and (not ($generated@@258 $generated@@46 $generated@@696)) (= $generated@@697 ($generated@@276 101))) (=> (and (and (= $generated@@698 ($generated@@278 ($generated@@324 ($generated@@334 ($generated@@8 ($generated@@276 0)))))) (= $generated@@695 $generated@@697)) (and (= $generated@@694 $generated@@698) (= (ControlFlow 0 6) 2))) $generated@@708))))
(let (($generated@@710  (=> (and ($generated@@258 $generated@@46 $generated@@696) ($generated@@92 $generated@@696 ($generated@@81 $generated@@46) $generated@@699)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@82 $generated@@696)) (=> ($generated@@82 $generated@@696) (=> (and ($generated@@79 $generated@@46 $generated@@46 $generated@@696) ($generated@@79 $generated@@46 $generated@@46 $generated@@696)) (=> (and (and (= $generated@@700 ($generated@@77 $generated@@46 $generated@@46 $generated@@696)) (= $generated@@695 $generated@@701)) (and (= $generated@@694 $generated@@700) (= (ControlFlow 0 4) 2))) $generated@@708)))))))
(let (($generated@@711  (=> (= $generated@@702 ($generated@@195 $generated@@703 $generated@@699 $generated@@60 false)) (=> (and (and (and ($generated@@80 $generated@@704 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@704 ($generated@@81 $generated@@46) $generated@@699)) (= $generated@@696 ($generated@@278 ($generated@@158 ($generated@@278 ($generated@@282 ($generated@@282 ($generated@@282 ($generated@@282 ($generated@@282 ($generated@@282 ($generated@@321 $generated@@153) ($generated@@334 ($generated@@296 97))) ($generated@@334 ($generated@@296 108))) ($generated@@334 ($generated@@296 119))) ($generated@@334 ($generated@@296 97))) ($generated@@334 ($generated@@296 121))) ($generated@@334 ($generated@@296 115)))))))) (and (and (= $generated@@701 ($generated@@276 100)) ($generated@@92 $generated@@696 ($generated@@81 $generated@@46) $generated@@699)) (and ($generated@@259 $generated@@46 $generated@@696) ($generated@@259 $generated@@46 $generated@@696)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@710) (=> (= (ControlFlow 0 7) 6) $generated@@709))))))
(let (($generated@@712  (=> (and (and ($generated@@301 $generated@@699) ($generated@@705 $generated@@699)) (and ($generated@@80 $generated@@706 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@706 ($generated@@81 $generated@@46) $generated@@699))) (=> (and (and (and ($generated@@80 $generated@@707 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@707 ($generated@@81 $generated@@46) $generated@@699)) true) (and (= 3 $generated@@76) (= (ControlFlow 0 8) 7))) $generated@@711))))
$generated@@712))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@157 (T@U Int) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int) Int)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (Int) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 () T@T)
(declare-fun $generated@@301 (T@U) Bool)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@313 (T@U T@U) Bool)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@T) T@U)
(declare-fun $generated@@368 (T@T T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@488 (T@T) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@622 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@78) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85)) $generated@@78)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@86)) $generated@@68)
 :pattern ( ($generated@@81 $generated@@86))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and (= (type $generated@@87) $generated@@68) (= (type $generated@@88) $generated@@68)) (= (type $generated@@89) $generated@@78)) (or ($generated@@79 $generated@@87 $generated@@88 $generated@@89) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@89 ($generated@@81 $generated@@87)) ($generated@@82 $generated@@89))))) ($generated@@80 ($generated@@77 $generated@@87 $generated@@88 $generated@@89) ($generated@@81 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@69)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@78) (= (type $generated@@156) $generated@@78)) (and ($generated@@151 $generated@@155) ($generated@@151 $generated@@156))) (= ($generated@@150 $generated@@155 $generated@@156) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@155))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@156))
)))
(assert  (and (and (and (and (forall (($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@164)) 16)) (forall (($generated@@165 T@T) ) (! (= ($generated@@163 ($generated@@159 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165))
))) (forall (($generated@@166 T@U) ($generated@@167 Int) ) (! (let (($generated@@168 ($generated@@163 (type $generated@@166))))
(= (type ($generated@@157 $generated@@166 $generated@@167)) $generated@@168))
 :pattern ( ($generated@@157 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@158 $generated@@169)) $generated@@78)
 :pattern ( ($generated@@158 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@162 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (= (type $generated@@172) ($generated@@159 $generated@@153)) (=> (and (<= 0 $generated@@173) (< $generated@@173 ($generated@@160 $generated@@172))) (< ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@172 $generated@@173))) ($generated@@161 ($generated@@158 $generated@@172)))))
 :pattern ( ($generated@@157 $generated@@172 $generated@@173) ($generated@@158 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@80 $generated@@174 ($generated@@93 0)))
 :pattern ( ($generated@@80 $generated@@174 ($generated@@93 0)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@177 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@68) (= (type $generated@@180) $generated@@68)) (= (type $generated@@181) $generated@@78)) ($generated@@80 $generated@@181 ($generated@@176 $generated@@179 $generated@@180))) ($generated@@175 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181) ($generated@@80 $generated@@181 ($generated@@176 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@153)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@153)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@78) (= (type $generated@@188) $generated@@78)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@68)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@193) $generated@@68)) ($generated@@80 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@80 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 17)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@95 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@71 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@95) (= (type $generated@@244) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@245) ($generated@@70 $generated@@4))) (= (type $generated@@247) $generated@@95)) (= (type $generated@@248) ($generated@@70 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@78)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@68) (= (type $generated@@255) $generated@@68)) (= (type $generated@@256) $generated@@153)) (= (type $generated@@257) $generated@@153)) (= ($generated@@80 ($generated@@250 $generated@@256 $generated@@257) ($generated@@176 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@80 ($generated@@250 $generated@@256 $generated@@257) ($generated@@176 $generated@@254 $generated@@255)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@68) (= (type $generated@@261) $generated@@78)) (or ($generated@@259 $generated@@260 $generated@@261) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@261 ($generated@@81 $generated@@260))))) (= ($generated@@258 $generated@@260 $generated@@261) ($generated@@82 $generated@@261)))
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@78) (= (type $generated@@263) $generated@@78)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@78) (= (type $generated@@265) $generated@@78)) (= ($generated@@150 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@150 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@269) $generated@@68)) (= ($generated@@80 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@153) ($generated@@0 ($generated@@99 $generated@@268 $generated@@270))) ($generated@@251 $generated@@270 $generated@@269))
 :pattern ( ($generated@@99 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@80 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@274) $generated@@68)) (= ($generated@@80 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@153) ($generated@@0 ($generated@@99 $generated@@273 $generated@@275))) ($generated@@251 $generated@@275 $generated@@274))
 :pattern ( ($generated@@99 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@80 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@276 $generated@@277) $generated@@277)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@282 $generated@@284 $generated@@285)) ($generated@@159 $generated@@286)))
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@287 T@U) ) (! (= (type ($generated@@283 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@283 $generated@@287))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) ($generated@@159 $generated@@153)) (= (type $generated@@289) $generated@@153)) (= (type $generated@@290) $generated@@68)) (and ($generated@@80 $generated@@288 ($generated@@283 $generated@@290)) ($generated@@251 $generated@@289 $generated@@290))) ($generated@@80 ($generated@@282 $generated@@288 $generated@@289) ($generated@@283 $generated@@290)))
 :pattern ( ($generated@@80 ($generated@@282 $generated@@288 $generated@@289) ($generated@@283 $generated@@290)))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@159 $generated@@153))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) $generated@@68) (= (type $generated@@294) $generated@@68)) (= (type $generated@@295) $generated@@78)) (or ($generated@@79 $generated@@293 $generated@@294 ($generated@@278 $generated@@295)) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@295 ($generated@@81 $generated@@293)) ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@82 ($generated@@278 $generated@@295))))))))) (= ($generated@@77 $generated@@293 $generated@@294 ($generated@@278 $generated@@295)) ($generated@@278 ($generated@@158 ($generated@@278 ($generated@@291 ($generated@@278 $generated@@295)))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@293 $generated@@294 ($generated@@278 $generated@@295)))
))))
(assert  (and (= ($generated@@1 $generated@@298) 18) (forall (($generated@@299 Int) ) (! (= (type ($generated@@296 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@296 $generated@@299))
))))
(assert (forall (($generated@@300 Int) ) (!  (=> (and (<= 0 $generated@@300) (< $generated@@300 65536)) (= ($generated@@297 ($generated@@296 $generated@@300)) $generated@@300))
 :pattern ( ($generated@@296 $generated@@300))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@68) (= (type $generated@@304) $generated@@68)) (= (type $generated@@305) $generated@@153)) (= (type $generated@@306) $generated@@153)) (= (type $generated@@307) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@301 $generated@@307)) (= ($generated@@92 ($generated@@250 $generated@@305 $generated@@306) ($generated@@176 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@92 ($generated@@250 $generated@@305 $generated@@306) ($generated@@176 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@72)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@78) (= ($generated@@175 $generated@@310) (= ($generated@@308 $generated@@310) $generated@@61)))
 :pattern ( ($generated@@175 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@78) (= ($generated@@151 $generated@@311) (= ($generated@@308 $generated@@311) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@78) (= ($generated@@82 $generated@@312) (= ($generated@@308 $generated@@312) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@163 (type $generated@@314))))
 (=> (and (= (type $generated@@314) ($generated@@159 $generated@@316)) (= (type $generated@@315) ($generated@@159 $generated@@316))) (= ($generated@@313 $generated@@314 $generated@@315)  (and (= ($generated@@160 $generated@@314) ($generated@@160 $generated@@315)) (forall (($generated@@317 Int) ) (!  (=> (and (<= 0 $generated@@317) (< $generated@@317 ($generated@@160 $generated@@314))) (= ($generated@@157 $generated@@314 $generated@@317) ($generated@@157 $generated@@315 $generated@@317)))
 :pattern ( ($generated@@157 $generated@@314 $generated@@317))
 :pattern ( ($generated@@157 $generated@@315 $generated@@317))
))))))
 :pattern ( ($generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@78) ($generated@@175 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@153) (= (type $generated@@320) $generated@@153)) (= $generated@@318 ($generated@@250 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@175 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@159 $generated@@322))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@T) ) (! (= ($generated@@160 ($generated@@321 $generated@@323)) 0)
 :pattern ( ($generated@@321 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@78)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@78) ($generated@@151 $generated@@326)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@153) (= $generated@@326 ($generated@@324 $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
)))
 :pattern ( ($generated@@151 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@78) ($generated@@82 $generated@@328)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) ($generated@@159 $generated@@153)) (= $generated@@328 ($generated@@158 $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
)))
 :pattern ( ($generated@@82 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (! (let (($generated@@332 (type $generated@@331)))
 (=> (= (type $generated@@330) ($generated@@159 $generated@@332)) (= ($generated@@160 ($generated@@282 $generated@@330 $generated@@331)) (+ 1 ($generated@@160 $generated@@330)))))
 :pattern ( ($generated@@282 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@298) (and (and (= ($generated@@296 ($generated@@297 $generated@@333)) $generated@@333) (<= 0 ($generated@@297 $generated@@333))) (< ($generated@@297 $generated@@333) 65536)))
 :pattern ( ($generated@@297 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= (type ($generated@@334 $generated@@335)) $generated@@153)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@68) (= (type $generated@@338) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@302 ($generated@@334 $generated@@336) $generated@@337 $generated@@338) ($generated@@92 $generated@@336 $generated@@337 $generated@@338)))
 :pattern ( ($generated@@302 ($generated@@334 $generated@@336) $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@341 T@T) ) (! (= (type ($generated@@340 $generated@@341)) ($generated@@94 $generated@@341 $generated@@2))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@97 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@94 $generated@@343 $generated@@2)) (and (= (= ($generated@@339 $generated@@342) 0) (= $generated@@342 ($generated@@340 $generated@@343))) (=> (not (= ($generated@@339 $generated@@342) 0)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) (< 0 ($generated ($generated@@99 $generated@@342 $generated@@344))))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@73)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@68) (and (= ($generated@@90 ($generated@@81 $generated@@347)) $generated@@64) (= ($generated@@345 ($generated@@81 $generated@@347)) $generated@@67)))
 :pattern ( ($generated@@81 $generated@@347))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 19)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@94 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@99 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@99 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert  (and (and (and (and (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (= ($generated@@1 ($generated@@368 $generated@@371 $generated@@372)) 20)) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@369 ($generated@@368 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@368 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@370 ($generated@@368 $generated@@375 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@368 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@369 (type $generated@@377))))
(= (type ($generated@@366 $generated@@377)) ($generated@@94 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@377))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= (type ($generated@@367 $generated@@379 $generated@@380)) ($generated@@368 $generated@@379 $generated@@380))
 :pattern ( ($generated@@367 $generated@@379 $generated@@380))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@T) ) (! (let (($generated@@383 (type $generated@@381)))
 (not ($generated@@0 ($generated@@99 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381))))
 :pattern ( (let (($generated@@383 (type $generated@@381)))
($generated@@99 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@384) $generated@@68) (= (type $generated@@385) $generated@@78)) (or ($generated@@259 $generated@@384 $generated@@385) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@385 ($generated@@81 $generated@@384))))) true)
 :pattern ( ($generated@@258 $generated@@384 $generated@@385))
))))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@97 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@94 $generated@@387 $generated@@2)) (= ($generated@@190 $generated@@386) (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@387) (and (<= 0 ($generated ($generated@@99 $generated@@386 $generated@@388))) (<= ($generated ($generated@@99 $generated@@386 $generated@@388)) ($generated@@339 $generated@@386))))
 :pattern ( ($generated@@99 $generated@@386 $generated@@388))
)))))
 :pattern ( ($generated@@190 $generated@@386))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@68) (= (type $generated@@390) $generated@@78)) (or ($generated@@259 $generated@@389 ($generated@@278 $generated@@390)) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@390 ($generated@@81 $generated@@389))))) (= ($generated@@258 $generated@@389 ($generated@@278 $generated@@390)) ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@82 ($generated@@278 $generated@@390)))))))
 :weight 3
 :pattern ( ($generated@@258 $generated@@389 ($generated@@278 $generated@@390)))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 Int) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
 (=> (= (type $generated@@391) ($generated@@159 $generated@@394)) (and (=> (= $generated@@392 ($generated@@160 $generated@@391)) (= ($generated@@157 ($generated@@282 $generated@@391 $generated@@393) $generated@@392) $generated@@393)) (=> (not (= $generated@@392 ($generated@@160 $generated@@391))) (= ($generated@@157 ($generated@@282 $generated@@391 $generated@@393) $generated@@392) ($generated@@157 $generated@@391 $generated@@392))))))
 :pattern ( ($generated@@157 ($generated@@282 $generated@@391 $generated@@393) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@395) $generated@@78) (= (type $generated@@396) $generated@@78)) (and ($generated@@82 $generated@@395) ($generated@@82 $generated@@396))) (= ($generated@@150 $generated@@395 $generated@@396) ($generated@@313 ($generated@@291 $generated@@395) ($generated@@291 $generated@@396))))
 :pattern ( ($generated@@150 $generated@@395 $generated@@396) ($generated@@82 $generated@@395))
 :pattern ( ($generated@@150 $generated@@395 $generated@@396) ($generated@@82 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@352 (type $generated@@397))))
(let (($generated@@399 ($generated@@351 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@350 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@349 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@99 ($generated@@348 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@348 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@352 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@94 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@352 (type $generated@@404))))
(let (($generated@@406 ($generated@@351 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@350 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@349 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@99 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@370 (type $generated@@408))))
(let (($generated@@410 ($generated@@369 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@368 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@367 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) ($generated@@0 ($generated@@99 ($generated@@366 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@366 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@370 (type $generated@@413))))
(= (type ($generated@@412 $generated@@413)) ($generated@@94 $generated@@414 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@370 (type $generated@@415))))
(let (($generated@@417 ($generated@@369 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@368 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@367 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@416) ($generated@@0 ($generated@@99 ($generated@@412 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@412 $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@420) $generated@@68)) (= ($generated@@80 $generated@@419 ($generated@@189 $generated@@420)) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@419 $generated@@421)))) ($generated@@251 $generated@@421 $generated@@420))
 :pattern ( ($generated@@99 $generated@@419 $generated@@421))
))))
 :pattern ( ($generated@@80 $generated@@419 ($generated@@189 $generated@@420)))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) $generated@@68) (= (type $generated@@423) $generated@@153)) (= (type $generated@@424) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@301 $generated@@424)) (= ($generated@@92 ($generated@@324 $generated@@423) ($generated@@81 $generated@@422) $generated@@424) ($generated@@302 $generated@@423 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@92 ($generated@@324 $generated@@423) ($generated@@81 $generated@@422) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@425) $generated@@78) (= (type $generated@@426) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@301 $generated@@426) (and ($generated@@82 $generated@@425) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@68) ($generated@@92 $generated@@425 ($generated@@81 $generated@@427) $generated@@426))
 :pattern ( ($generated@@92 $generated@@425 ($generated@@81 $generated@@427) $generated@@426))
))))) ($generated@@92 ($generated@@291 $generated@@425) ($generated@@283 $generated@@45) $generated@@426))
 :pattern ( ($generated@@92 ($generated@@291 $generated@@425) ($generated@@283 $generated@@45) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) $generated@@68) (= (type $generated@@429) ($generated@@159 $generated@@153))) (= (type $generated@@430) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@301 $generated@@430)) (= ($generated@@92 ($generated@@158 $generated@@429) ($generated@@81 $generated@@428) $generated@@430) ($generated@@92 $generated@@429 ($generated@@283 $generated@@45) $generated@@430)))
 :pattern ( ($generated@@92 ($generated@@158 $generated@@429) ($generated@@81 $generated@@428) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@431) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@432) $generated@@68)) (= (type $generated@@433) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@431 ($generated@@266 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@153) ($generated@@0 ($generated@@99 $generated@@431 $generated@@434))) ($generated@@302 $generated@@434 $generated@@432 $generated@@433))
 :pattern ( ($generated@@99 $generated@@431 $generated@@434))
))))
 :pattern ( ($generated@@92 $generated@@431 ($generated@@266 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@435) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@435 ($generated@@271 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@153) ($generated@@0 ($generated@@99 $generated@@435 $generated@@438))) ($generated@@302 $generated@@438 $generated@@436 $generated@@437))
 :pattern ( ($generated@@99 $generated@@435 $generated@@438))
))))
 :pattern ( ($generated@@92 $generated@@435 ($generated@@271 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(= ($generated ($generated@@99 ($generated@@340 $generated@@440) $generated@@439)) 0))
 :pattern ( (let (($generated@@440 (type $generated@@439)))
($generated@@99 ($generated@@340 $generated@@440) $generated@@439)))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@352 (type $generated@@444))))
(let (($generated@@446 ($generated@@351 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@94 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@350 $generated@@153 $generated@@153)) (= (type $generated@@448) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@99 ($generated@@348 $generated@@447) ($generated@@183 ($generated@@162 $generated@@78 $generated@@448)))) (= ($generated@@99 ($generated@@442 $generated@@447) ($generated@@183 ($generated@@162 $generated@@78 $generated@@448))) ($generated@@184 ($generated@@162 $generated@@78 $generated@@448))))))
 :pattern ( ($generated@@99 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert  (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@451)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@449 $generated@@451))
)) (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@370 (type $generated@@452))))
(let (($generated@@454 ($generated@@369 (type $generated@@452))))
(= (type ($generated@@450 $generated@@452)) ($generated@@94 $generated@@454 $generated@@453))))
 :pattern ( ($generated@@450 $generated@@452))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) ($generated@@368 $generated@@153 $generated@@153)) (= (type $generated@@456) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@449 $generated@@455) $generated@@456))  (and ($generated@@0 ($generated@@99 ($generated@@366 $generated@@455) ($generated@@183 ($generated@@162 $generated@@78 $generated@@456)))) (= ($generated@@99 ($generated@@450 $generated@@455) ($generated@@183 ($generated@@162 $generated@@78 $generated@@456))) ($generated@@184 ($generated@@162 $generated@@78 $generated@@456))))))
 :pattern ( ($generated@@99 ($generated@@449 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@351 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@350 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@99 ($generated@@401 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@99 ($generated@@348 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@99 ($generated@@442 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@99 ($generated@@348 $generated@@457) $generated@@461))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@99 ($generated@@401 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(let (($generated@@465 ($generated@@369 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@368 $generated@@465 $generated@@464)) (= ($generated@@0 ($generated@@99 ($generated@@412 $generated@@462) $generated@@463)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) (and ($generated@@0 ($generated@@99 ($generated@@366 $generated@@462) $generated@@466)) (= $generated@@463 ($generated@@99 ($generated@@450 $generated@@462) $generated@@466))))
 :pattern ( ($generated@@99 ($generated@@366 $generated@@462) $generated@@466))
 :pattern ( ($generated@@99 ($generated@@450 $generated@@462) $generated@@466))
))))))
 :pattern ( ($generated@@99 ($generated@@412 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@350 $generated@@153 $generated@@153)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@348 $generated@@470) $generated@@474))) (and ($generated@@302 ($generated@@99 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@302 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@99 ($generated@@348 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@92 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (= (type $generated@@478) ($generated@@368 $generated@@153 $generated@@153)) (= (type $generated@@479) $generated@@68)) (= (type $generated@@480) $generated@@68)) (= (type $generated@@481) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@366 $generated@@478) $generated@@482))) (and ($generated@@302 ($generated@@99 ($generated@@450 $generated@@478) $generated@@482) $generated@@480 $generated@@481) ($generated@@302 $generated@@482 $generated@@479 $generated@@481)))
 :pattern ( ($generated@@99 ($generated@@450 $generated@@478) $generated@@482))
 :pattern ( ($generated@@99 ($generated@@366 $generated@@478) $generated@@482))
))))
 :pattern ( ($generated@@92 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@78)) ($generated@@80 $generated@@484 ($generated@@81 $generated@@483))) (or ($generated@@151 $generated@@484) ($generated@@82 $generated@@484)))
 :pattern ( ($generated@@82 $generated@@484) ($generated@@80 $generated@@484 ($generated@@81 $generated@@483)))
 :pattern ( ($generated@@151 $generated@@484) ($generated@@80 $generated@@484 ($generated@@81 $generated@@483)))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@163 (type $generated@@485))))
 (=> (and (and (= (type $generated@@485) ($generated@@159 $generated@@487)) (= (type $generated@@486) ($generated@@159 $generated@@487))) ($generated@@313 $generated@@485 $generated@@486)) (= $generated@@485 $generated@@486)))
 :pattern ( ($generated@@313 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@489 T@T) ) (! (= (type ($generated@@488 $generated@@489)) ($generated@@94 $generated@@489 $generated@@4))
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@370 (type $generated@@490))))
(let (($generated@@492 ($generated@@369 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@368 $generated@@492 $generated@@491)) (= (= $generated@@490 ($generated@@367 $generated@@492 $generated@@491)) (= ($generated@@366 $generated@@490) ($generated@@488 $generated@@492))))))
 :pattern ( ($generated@@366 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@370 (type $generated@@493))))
(let (($generated@@495 ($generated@@369 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@368 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@367 $generated@@495 $generated@@494)) (= ($generated@@412 $generated@@493) ($generated@@488 $generated@@494))))))
 :pattern ( ($generated@@412 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@370 (type $generated@@496))))
(let (($generated@@498 ($generated@@369 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@368 $generated@@498 $generated@@497)) (= (= $generated@@496 ($generated@@367 $generated@@498 $generated@@497)) (= ($generated@@449 $generated@@496) ($generated@@488 $generated@@153))))))
 :pattern ( ($generated@@449 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@352 (type $generated@@499))))
(let (($generated@@501 ($generated@@351 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@350 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@349 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@153) (= (type $generated@@503) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@441 $generated@@499) ($generated@@334 ($generated@@250 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@441 $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@370 (type $generated@@504))))
(let (($generated@@506 ($generated@@369 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@368 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@367 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@153) (= (type $generated@@508) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@449 $generated@@504) ($generated@@334 ($generated@@250 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@449 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@153) ($generated@@251 $generated@@509 $generated@@46)) (and (= ($generated@@334 ($generated@@162 $generated@@2 $generated@@509)) $generated@@509) ($generated@@80 ($generated@@162 $generated@@2 $generated@@509) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@509 $generated@@46))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@153) ($generated@@251 $generated@@510 $generated@@47)) (and (= ($generated@@334 ($generated@@162 $generated@@3 $generated@@510)) $generated@@510) ($generated@@80 ($generated@@162 $generated@@3 $generated@@510) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@510 $generated@@47))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@153) ($generated@@251 $generated@@511 $generated@@44)) (and (= ($generated@@334 ($generated@@162 $generated@@4 $generated@@511)) $generated@@511) ($generated@@80 ($generated@@162 $generated@@4 $generated@@511) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@511 $generated@@44))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@153) ($generated@@251 $generated@@512 $generated@@45)) (and (= ($generated@@334 ($generated@@162 $generated@@298 $generated@@512)) $generated@@512) ($generated@@80 ($generated@@162 $generated@@298 $generated@@512) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@512 $generated@@45))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@251 ($generated@@334 $generated@@513) $generated@@514) ($generated@@80 $generated@@513 $generated@@514)))
 :pattern ( ($generated@@251 ($generated@@334 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@97 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@94 $generated@@516 $generated@@2)) (<= 0 ($generated@@339 $generated@@515))))
 :pattern ( ($generated@@339 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@163 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@159 $generated@@518)) (<= 0 ($generated@@160 $generated@@517))))
 :pattern ( ($generated@@160 $generated@@517))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@519 ($generated@@467 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@467 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@523 ($generated@@467 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@467 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@90 ($generated@@467 $generated@@527 $generated@@528)) $generated@@58))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@475 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@475 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@533 ($generated@@475 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@475 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@90 ($generated@@475 $generated@@537 $generated@@538)) $generated@@59))
 :pattern ( ($generated@@475 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@153) (= (type $generated@@540) $generated@@153)) (= ($generated@@308 ($generated@@250 $generated@@539 $generated@@540)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (= ($generated@@541 ($generated@@176 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@176 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@68) (= (type $generated@@548) $generated@@68)) (= ($generated@@545 ($generated@@176 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@176 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@153) (= (type $generated@@550) $generated@@153)) (= ($generated@@183 ($generated@@250 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@250 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@153) (= (type $generated@@552) $generated@@153)) (= ($generated@@184 ($generated@@250 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@250 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@159 $generated@@153)) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@553 ($generated@@283 $generated@@554) $generated@@555) (forall (($generated@@556 Int) ) (!  (=> (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@160 $generated@@553))) ($generated@@302 ($generated@@157 $generated@@553 $generated@@556) $generated@@554 $generated@@555))
 :pattern ( ($generated@@157 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@92 $generated@@553 ($generated@@283 $generated@@554) $generated@@555))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@68) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@78)) (or ($generated@@79 $generated@@557 $generated@@558 $generated@@559) (and (not (= 2 $generated@@76)) (and ($generated@@80 $generated@@559 ($generated@@81 $generated@@557)) ($generated@@82 $generated@@559))))) (= ($generated@@77 $generated@@557 $generated@@558 $generated@@559) ($generated@@158 ($generated@@291 $generated@@559))))
 :pattern ( ($generated@@77 $generated@@557 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@560 ($generated@@93 $generated@@561)) $generated@@561)
 :pattern ( ($generated@@93 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@266 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@266 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@90 ($generated@@266 $generated@@565)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@271 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@271 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@90 ($generated@@271 $generated@@569)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@189 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@189 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@90 ($generated@@189 $generated@@573)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@283 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@283 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@90 ($generated@@283 $generated@@577)) $generated@@57))
 :pattern ( ($generated@@283 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@153) (= ($generated@@308 ($generated@@324 $generated@@578)) $generated@@63))
 :pattern ( ($generated@@324 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@68)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@579 ($generated@@81 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@81 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@153) (= ($generated@@152 ($generated@@324 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@324 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) ($generated@@159 $generated@@153)) (= ($generated@@308 ($generated@@158 $generated@@583)) $generated@@65))
 :pattern ( ($generated@@158 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) ($generated@@159 $generated@@153)) (= ($generated@@291 ($generated@@158 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@158 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
(= ($generated@@162 $generated@@586 ($generated@@334 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@334 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@350 $generated@@153 $generated@@153)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) (= ($generated@@80 $generated@@587 ($generated@@467 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@348 $generated@@587) $generated@@590))) (and ($generated@@251 ($generated@@99 ($generated@@442 $generated@@587) $generated@@590) $generated@@589) ($generated@@251 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@587) $generated@@590))
 :pattern ( ($generated@@99 ($generated@@348 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@80 $generated@@587 ($generated@@467 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@368 $generated@@153 $generated@@153)) (= (type $generated@@592) $generated@@68)) (= (type $generated@@593) $generated@@68)) (= ($generated@@80 $generated@@591 ($generated@@475 $generated@@592 $generated@@593)) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@366 $generated@@591) $generated@@594))) (and ($generated@@251 ($generated@@99 ($generated@@450 $generated@@591) $generated@@594) $generated@@593) ($generated@@251 $generated@@594 $generated@@592)))
 :pattern ( ($generated@@99 ($generated@@450 $generated@@591) $generated@@594))
 :pattern ( ($generated@@99 ($generated@@366 $generated@@591) $generated@@594))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@475 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@68) (= (type $generated@@596) $generated@@153)) (= ($generated@@80 ($generated@@324 $generated@@596) ($generated@@81 $generated@@595)) ($generated@@251 $generated@@596 $generated@@595)))
 :pattern ( ($generated@@80 ($generated@@324 $generated@@596) ($generated@@81 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@153) (= (type $generated@@599) $generated@@153)) (< ($generated@@597 $generated@@598) ($generated@@161 ($generated@@250 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@250 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@153) (= (type $generated@@601) $generated@@153)) (< ($generated@@597 $generated@@601) ($generated@@161 ($generated@@250 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@250 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@153) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@68)) ($generated@@251 $generated@@602 ($generated@@467 $generated@@603 $generated@@604))) (and (= ($generated@@334 ($generated@@162 ($generated@@350 $generated@@153 $generated@@153) $generated@@602)) $generated@@602) ($generated@@80 ($generated@@162 ($generated@@350 $generated@@153 $generated@@153) $generated@@602) ($generated@@467 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@251 $generated@@602 ($generated@@467 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@153) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) $generated@@68)) ($generated@@251 $generated@@605 ($generated@@475 $generated@@606 $generated@@607))) (and (= ($generated@@334 ($generated@@162 ($generated@@368 $generated@@153 $generated@@153) $generated@@605)) $generated@@605) ($generated@@80 ($generated@@162 ($generated@@368 $generated@@153 $generated@@153) $generated@@605) ($generated@@475 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@251 $generated@@605 ($generated@@475 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@68) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) $generated@@153)) ($generated@@251 $generated@@610 ($generated@@176 $generated@@608 $generated@@609))) (and (= ($generated@@334 ($generated@@162 $generated@@78 $generated@@610)) $generated@@610) ($generated@@80 ($generated@@162 $generated@@78 $generated@@610) ($generated@@176 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@251 $generated@@610 ($generated@@176 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@153) (< ($generated@@597 $generated@@611) ($generated@@161 ($generated@@324 $generated@@611))))
 :pattern ( ($generated@@324 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) ($generated@@159 $generated@@153)) (< ($generated@@612 $generated@@613) ($generated@@161 ($generated@@158 $generated@@613))))
 :pattern ( ($generated@@158 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@78) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@301 $generated@@616) (and ($generated@@151 $generated@@614) ($generated@@92 $generated@@614 ($generated@@81 $generated@@615) $generated@@616)))) ($generated@@302 ($generated@@152 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@302 ($generated@@152 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@617)))
 (not ($generated@@0 ($generated@@99 ($generated@@488 $generated@@618) $generated@@617))))
 :pattern ( (let (($generated@@618 (type $generated@@617)))
($generated@@99 ($generated@@488 $generated@@618) $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@68) (= (type $generated@@620) $generated@@68)) (and (= ($generated@@90 ($generated@@176 $generated@@619 $generated@@620)) $generated@@62) (= ($generated@@345 ($generated@@176 $generated@@619 $generated@@620)) $generated@@66)))
 :pattern ( ($generated@@176 $generated@@619 $generated@@620))
)))
(assert  (and (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@163 (type $generated@@623))))
(= (type ($generated@@621 $generated@@623)) ($generated@@159 $generated@@624)))
 :pattern ( ($generated@@621 $generated@@623))
)) (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@163 (type $generated@@625))))
(= (type ($generated@@622 $generated@@625)) $generated@@626))
 :pattern ( ($generated@@622 $generated@@625))
))))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
 (=> (= (type $generated@@627) ($generated@@159 $generated@@629)) (and (= ($generated@@621 ($generated@@282 $generated@@627 $generated@@628)) $generated@@627) (= ($generated@@622 ($generated@@282 $generated@@627 $generated@@628)) $generated@@628))))
 :pattern ( ($generated@@282 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@78) (= ($generated@@597 ($generated@@334 $generated@@630)) ($generated@@161 $generated@@630)))
 :pattern ( ($generated@@597 ($generated@@334 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@153) ($generated@@251 $generated@@631 ($generated@@93 0))) (and (= ($generated@@334 ($generated@@162 $generated@@2 $generated@@631)) $generated@@631) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@631) ($generated@@93 0))))
 :pattern ( ($generated@@251 $generated@@631 ($generated@@93 0)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@153) (= (type $generated@@633) $generated@@68)) ($generated@@251 $generated@@632 ($generated@@266 $generated@@633))) (and (= ($generated@@334 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@632)) $generated@@632) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@632) ($generated@@266 $generated@@633))))
 :pattern ( ($generated@@251 $generated@@632 ($generated@@266 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@153) (= (type $generated@@635) $generated@@68)) ($generated@@251 $generated@@634 ($generated@@271 $generated@@635))) (and (= ($generated@@334 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@634)) $generated@@634) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@4) $generated@@634) ($generated@@271 $generated@@635))))
 :pattern ( ($generated@@251 $generated@@634 ($generated@@271 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@153) (= (type $generated@@637) $generated@@68)) ($generated@@251 $generated@@636 ($generated@@189 $generated@@637))) (and (= ($generated@@334 ($generated@@162 ($generated@@94 $generated@@153 $generated@@2) $generated@@636)) $generated@@636) ($generated@@80 ($generated@@162 ($generated@@94 $generated@@153 $generated@@2) $generated@@636) ($generated@@189 $generated@@637))))
 :pattern ( ($generated@@251 $generated@@636 ($generated@@189 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@153) (= (type $generated@@639) $generated@@68)) ($generated@@251 $generated@@638 ($generated@@283 $generated@@639))) (and (= ($generated@@334 ($generated@@162 ($generated@@159 $generated@@153) $generated@@638)) $generated@@638) ($generated@@80 ($generated@@162 ($generated@@159 $generated@@153) $generated@@638) ($generated@@283 $generated@@639))))
 :pattern ( ($generated@@251 $generated@@638 ($generated@@283 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@68) (= (type $generated@@641) $generated@@153)) ($generated@@251 $generated@@641 ($generated@@81 $generated@@640))) (and (= ($generated@@334 ($generated@@162 $generated@@78 $generated@@641)) $generated@@641) ($generated@@80 ($generated@@162 $generated@@78 $generated@@641) ($generated@@81 $generated@@640))))
 :pattern ( ($generated@@251 $generated@@641 ($generated@@81 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@68) (= (type $generated@@643) ($generated@@159 $generated@@153))) (= ($generated@@80 ($generated@@158 $generated@@643) ($generated@@81 $generated@@642)) ($generated@@80 $generated@@643 ($generated@@283 $generated@@45))))
 :pattern ( ($generated@@80 ($generated@@158 $generated@@643) ($generated@@81 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@644 ($generated@@189 $generated@@645) $generated@@646) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@644 $generated@@647)))) ($generated@@302 $generated@@647 $generated@@645 $generated@@646))
 :pattern ( ($generated@@99 $generated@@644 $generated@@647))
))))
 :pattern ( ($generated@@92 $generated@@644 ($generated@@189 $generated@@645) $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@78) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@301 $generated@@650) (and ($generated@@175 $generated@@648) (exists (($generated@@651 T@U) ) (!  (and (= (type $generated@@651) $generated@@68) ($generated@@92 $generated@@648 ($generated@@176 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@92 $generated@@648 ($generated@@176 $generated@@649 $generated@@651) $generated@@650))
))))) ($generated@@302 ($generated@@183 $generated@@648) $generated@@649 $generated@@650))
 :pattern ( ($generated@@302 ($generated@@183 $generated@@648) $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@78) (= (type $generated@@653) $generated@@68)) (= (type $generated@@654) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@301 $generated@@654) (and ($generated@@175 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@68) ($generated@@92 $generated@@652 ($generated@@176 $generated@@655 $generated@@653) $generated@@654))
 :pattern ( ($generated@@92 $generated@@652 ($generated@@176 $generated@@655 $generated@@653) $generated@@654))
))))) ($generated@@302 ($generated@@184 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@302 ($generated@@184 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@153) (= (type $generated@@657) $generated@@153)) (= ($generated@@250 ($generated@@278 $generated@@656) ($generated@@278 $generated@@657)) ($generated@@278 ($generated@@250 $generated@@656 $generated@@657))))
 :pattern ( ($generated@@250 ($generated@@278 $generated@@656) ($generated@@278 $generated@@657)))
)))
(assert (forall (($generated@@658 Int) ) (! (= ($generated@@334 ($generated@@8 ($generated@@276 $generated@@658))) ($generated@@278 ($generated@@334 ($generated@@8 $generated@@658))))
 :pattern ( ($generated@@334 ($generated@@8 ($generated@@276 $generated@@658))))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@153) (= ($generated@@324 ($generated@@278 $generated@@659)) ($generated@@278 ($generated@@324 $generated@@659))))
 :pattern ( ($generated@@324 ($generated@@278 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) ($generated@@159 $generated@@153)) (= ($generated@@158 ($generated@@278 $generated@@660)) ($generated@@278 ($generated@@158 $generated@@660))))
 :pattern ( ($generated@@158 ($generated@@278 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (! (= ($generated@@334 ($generated@@278 $generated@@661)) ($generated@@278 ($generated@@334 $generated@@661)))
 :pattern ( ($generated@@334 ($generated@@278 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (! (let (($generated@@663 ($generated@@163 (type $generated@@662))))
 (=> (and (= (type $generated@@662) ($generated@@159 $generated@@663)) (= ($generated@@160 $generated@@662) 0)) (= $generated@@662 ($generated@@321 $generated@@663))))
 :pattern ( ($generated@@160 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (! (let (($generated@@667 (type $generated@@665)))
 (=> (and (and (= (type $generated@@664) ($generated@@94 $generated@@667 $generated@@2)) (= (type $generated@@666) $generated@@2)) (<= 0 ($generated $generated@@666))) (= ($generated@@339 ($generated@@100 $generated@@664 $generated@@665 $generated@@666)) (+ (- ($generated@@339 $generated@@664) ($generated ($generated@@99 $generated@@664 $generated@@665))) ($generated $generated@@666)))))
 :pattern ( ($generated@@339 ($generated@@100 $generated@@664 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@669) $generated@@2)) ($generated@@92 $generated@@669 $generated@@46 $generated@@668))
 :pattern ( ($generated@@92 $generated@@669 $generated@@46 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@671) $generated@@3)) ($generated@@92 $generated@@671 $generated@@47 $generated@@670))
 :pattern ( ($generated@@92 $generated@@671 $generated@@47 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@673) $generated@@4)) ($generated@@92 $generated@@673 $generated@@44 $generated@@672))
 :pattern ( ($generated@@92 $generated@@673 $generated@@44 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@675) $generated@@298)) ($generated@@92 $generated@@675 $generated@@45 $generated@@674))
 :pattern ( ($generated@@92 $generated@@675 $generated@@45 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@677) $generated@@153)) ($generated@@92 $generated@@677 $generated@@48 $generated@@676))
 :pattern ( ($generated@@92 $generated@@677 $generated@@48 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@159 $generated@@153)) (= (type $generated@@679) $generated@@68)) (= ($generated@@80 $generated@@678 ($generated@@283 $generated@@679)) (forall (($generated@@680 Int) ) (!  (=> (and (<= 0 $generated@@680) (< $generated@@680 ($generated@@160 $generated@@678))) ($generated@@251 ($generated@@157 $generated@@678 $generated@@680) $generated@@679))
 :pattern ( ($generated@@157 $generated@@678 $generated@@680))
))))
 :pattern ( ($generated@@80 $generated@@678 ($generated@@283 $generated@@679)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 Int) ) (!  (=> (= (type $generated@@681) ($generated@@159 $generated@@153)) (=> (and (<= 0 $generated@@682) (< $generated@@682 ($generated@@160 $generated@@681))) (< ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@681 $generated@@682))) ($generated@@612 $generated@@681))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@78 ($generated@@157 $generated@@681 $generated@@682))))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@350 $generated@@153 $generated@@153)) (= (type $generated@@684) $generated@@68)) (= (type $generated@@685) $generated@@68)) ($generated@@80 $generated@@683 ($generated@@467 $generated@@684 $generated@@685))) (and (and ($generated@@80 ($generated@@348 $generated@@683) ($generated@@266 $generated@@684)) ($generated@@80 ($generated@@401 $generated@@683) ($generated@@266 $generated@@685))) ($generated@@80 ($generated@@441 $generated@@683) ($generated@@266 ($generated@@176 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@80 $generated@@683 ($generated@@467 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) ($generated@@368 $generated@@153 $generated@@153)) (= (type $generated@@687) $generated@@68)) (= (type $generated@@688) $generated@@68)) ($generated@@80 $generated@@686 ($generated@@475 $generated@@687 $generated@@688))) (and (and ($generated@@80 ($generated@@366 $generated@@686) ($generated@@271 $generated@@687)) ($generated@@80 ($generated@@412 $generated@@686) ($generated@@271 $generated@@688))) ($generated@@80 ($generated@@449 $generated@@686) ($generated@@271 ($generated@@176 $generated@@687 $generated@@688)))))
 :pattern ( ($generated@@80 $generated@@686 ($generated@@475 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@2) ($generated@@80 $generated@@689 $generated@@46))
 :pattern ( ($generated@@80 $generated@@689 $generated@@46))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@3) ($generated@@80 $generated@@690 $generated@@47))
 :pattern ( ($generated@@80 $generated@@690 $generated@@47))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@4) ($generated@@80 $generated@@691 $generated@@44))
 :pattern ( ($generated@@80 $generated@@691 $generated@@44))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@298) ($generated@@80 $generated@@692 $generated@@45))
 :pattern ( ($generated@@80 $generated@@692 $generated@@45))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@153) ($generated@@80 $generated@@693 $generated@@48))
 :pattern ( ($generated@@80 $generated@@693 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 (T@U) Bool)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@694) $generated@@78) (= (type $generated@@695) $generated@@78)) (= (type $generated@@698) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@699) $generated@@78)) (= (type $generated@@697) $generated@@78)) (= (type $generated@@700) ($generated@@196 $generated@@95 $generated@@4))) (= (type $generated@@701) $generated@@95)) (= (type $generated@@702) $generated@@78)) (= (type $generated@@704) $generated@@78)) (= (type $generated@@705) $generated@@78)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@706  (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@259 $generated@@46 $generated@@694) (or ($generated@@258 $generated@@46 $generated@@694) ($generated@@82 $generated@@694))))))
(let (($generated@@707  (=> (not ($generated@@258 $generated@@46 $generated@@695)) (=> (and (and (= $generated@@696 ($generated@@276 101)) (= $generated@@697 ($generated@@278 ($generated@@324 ($generated@@334 ($generated@@8 ($generated@@276 0))))))) (and (= $generated@@694 $generated@@697) (= (ControlFlow 0 5) 2))) $generated@@706))))
(let (($generated@@708  (=> (and ($generated@@258 $generated@@46 $generated@@695) ($generated@@92 $generated@@695 ($generated@@81 $generated@@46) $generated@@698)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@82 $generated@@695)) (=> (and ($generated@@82 $generated@@695) ($generated@@79 $generated@@46 $generated@@46 $generated@@695)) (=> (and (and ($generated@@79 $generated@@46 $generated@@46 $generated@@695) (= $generated@@699 ($generated@@77 $generated@@46 $generated@@46 $generated@@695))) (and (= $generated@@694 $generated@@699) (= (ControlFlow 0 3) 2))) $generated@@706))))))
(let (($generated@@709  (=> (= $generated@@700 ($generated@@195 $generated@@701 $generated@@698 $generated@@60 false)) (=> (and ($generated@@80 $generated@@702 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@702 ($generated@@81 $generated@@46) $generated@@698)) (=> (and (and (= $generated@@695 ($generated@@278 ($generated@@158 ($generated@@278 ($generated@@282 ($generated@@282 ($generated@@282 ($generated@@282 ($generated@@282 ($generated@@282 ($generated@@321 $generated@@153) ($generated@@334 ($generated@@296 97))) ($generated@@334 ($generated@@296 108))) ($generated@@334 ($generated@@296 119))) ($generated@@334 ($generated@@296 97))) ($generated@@334 ($generated@@296 121))) ($generated@@334 ($generated@@296 115))))))) ($generated@@92 $generated@@695 ($generated@@81 $generated@@46) $generated@@698)) (and ($generated@@259 $generated@@46 $generated@@695) ($generated@@259 $generated@@46 $generated@@695))) (and (=> (= (ControlFlow 0 6) 3) $generated@@708) (=> (= (ControlFlow 0 6) 5) $generated@@707)))))))
(let (($generated@@710  (=> (and (and ($generated@@301 $generated@@698) ($generated@@703 $generated@@698)) (and ($generated@@80 $generated@@704 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@704 ($generated@@81 $generated@@46) $generated@@698))) (=> (and (and (and ($generated@@80 $generated@@705 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@705 ($generated@@81 $generated@@46) $generated@@698)) true) (and (= 3 $generated@@76) (= (ControlFlow 0 7) 6))) $generated@@709))))
$generated@@710))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@148 (T@U Int) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@153 (T@T T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (Int) Int)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@320 (T@U) Int)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@456 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@142) 14) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@142) (= (type $generated@@147) $generated@@142)) (and ($generated@@141 $generated@@146) ($generated@@141 $generated@@147))) (= ($generated@@140 $generated@@146 $generated@@147) (= ($generated@@143 $generated@@146) ($generated@@143 $generated@@147))))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@146))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@147))
)))
(assert  (and (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@150 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@150 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@150 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@148 $generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@148 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@149 $generated@@160)) $generated@@142)
 :pattern ( ($generated@@149 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@U) ) (! (= (type ($generated@@153 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@153 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 Int) ) (!  (=> (= (type $generated@@163) ($generated@@150 $generated@@144)) (=> (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@151 $generated@@163))) (< ($generated@@152 ($generated@@153 $generated@@142 ($generated@@148 $generated@@163 $generated@@164))) ($generated@@152 ($generated@@149 $generated@@163)))))
 :pattern ( ($generated@@148 $generated@@163 $generated@@164) ($generated@@149 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@79 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@79 0)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@169 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@68) (= (type $generated@@172) $generated@@68)) (= (type $generated@@173) $generated@@142)) ($generated@@165 $generated@@173 ($generated@@168 $generated@@171 $generated@@172))) ($generated@@167 $generated@@173))
 :pattern ( ($generated@@167 $generated@@173) ($generated@@165 $generated@@173 ($generated@@168 $generated@@171 $generated@@172)))
)))
(assert  (and (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@144)
 :pattern ( ($generated@@175 $generated@@177))
)) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@144)
 :pattern ( ($generated@@176 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@142) (= (type $generated@@180) $generated@@142)) true) (= ($generated@@174 $generated@@179 $generated@@180)  (and (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)) (= ($generated@@176 $generated@@179) ($generated@@176 $generated@@180)))))
 :pattern ( ($generated@@174 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@68)
 :pattern ( ($generated@@181 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@185) $generated@@68)) ($generated@@165 $generated@@184 ($generated@@181 $generated@@185))) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@165 $generated@@184 ($generated@@181 $generated@@185)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 17)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@81 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@71 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@81) (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@237) ($generated@@70 $generated@@4))) (= (type $generated@@239) $generated@@81)) (= (type $generated@@240) ($generated@@70 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@142)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@68) (= (type $generated@@247) $generated@@68)) (= (type $generated@@248) $generated@@144)) (= (type $generated@@249) $generated@@144)) (= ($generated@@165 ($generated@@242 $generated@@248 $generated@@249) ($generated@@168 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@165 ($generated@@242 $generated@@248 $generated@@249) ($generated@@168 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@255))
)))
(assert  (=> (<= 0 $generated@@250) (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) $generated@@68) (= (type $generated@@257) $generated@@142)) (or ($generated@@252 $generated@@256 $generated@@257) (and (not (= 0 $generated@@250)) ($generated@@165 $generated@@257 ($generated@@253 $generated@@256))))) (= ($generated@@251 $generated@@256 $generated@@257) ($generated@@254 $generated@@257)))
 :pattern ( ($generated@@251 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@142) (= (type $generated@@259) $generated@@142)) (= ($generated@@174 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@174 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@142) (= (type $generated@@261) $generated@@142)) (= ($generated@@140 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@140 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@265) $generated@@68)) (= ($generated@@165 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@144) ($generated@@0 ($generated@@85 $generated@@264 $generated@@266))) ($generated@@243 $generated@@266 $generated@@265))
 :pattern ( ($generated@@85 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@165 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@68)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@270) $generated@@68)) (= ($generated@@165 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@144) ($generated@@0 ($generated@@85 $generated@@269 $generated@@271))) ($generated@@243 $generated@@271 $generated@@270))
 :pattern ( ($generated@@85 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@165 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 Int) ) (! (= ($generated@@272 $generated@@273) $generated@@273)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@68)) (= (type $generated@@282) $generated@@144)) (= (type $generated@@283) $generated@@144)) (= (type $generated@@284) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@278 $generated@@284)) (= ($generated@@78 ($generated@@242 $generated@@282 $generated@@283) ($generated@@168 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@78 ($generated@@242 $generated@@282 $generated@@283) ($generated@@168 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@72)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@142) (= ($generated@@167 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@167 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@142) (= ($generated@@141 $generated@@288) (= ($generated@@285 $generated@@288) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@142) (= ($generated@@254 $generated@@289) (= ($generated@@285 $generated@@289) $generated@@65)))
 :pattern ( ($generated@@254 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@154 (type $generated@@291))))
 (=> (and (= (type $generated@@291) ($generated@@150 $generated@@293)) (= (type $generated@@292) ($generated@@150 $generated@@293))) (= ($generated@@290 $generated@@291 $generated@@292)  (and (= ($generated@@151 $generated@@291) ($generated@@151 $generated@@292)) (forall (($generated@@294 Int) ) (!  (=> (and (<= 0 $generated@@294) (< $generated@@294 ($generated@@151 $generated@@291))) (= ($generated@@148 $generated@@291 $generated@@294) ($generated@@148 $generated@@292 $generated@@294)))
 :pattern ( ($generated@@148 $generated@@291 $generated@@294))
 :pattern ( ($generated@@148 $generated@@292 $generated@@294))
))))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@142) ($generated@@167 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@144) (= (type $generated@@297) $generated@@144)) (= $generated@@295 ($generated@@242 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@167 $generated@@295))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@150 $generated@@299))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@151 ($generated@@298 $generated@@300)) 0)
 :pattern ( ($generated@@298 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@142)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@142) ($generated@@141 $generated@@303)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@144) (= $generated@@303 ($generated@@301 $generated@@304)))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@141 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@142) ($generated@@254 $generated@@305)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) ($generated@@150 $generated@@144)) (= $generated@@305 ($generated@@149 $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@144)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@279 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@78 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@279 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@314) $generated@@144)) (= (type $generated@@315) $generated@@68)) ($generated@@136 $generated@@312 $generated@@313)) ($generated@@279 $generated@@314 $generated@@315 $generated@@312)) ($generated@@279 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@136 $generated@@312 $generated@@313) ($generated@@279 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@316) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@317) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@319) $generated@@68)) ($generated@@136 $generated@@316 $generated@@317)) ($generated@@78 $generated@@318 $generated@@319 $generated@@316)) ($generated@@78 $generated@@318 $generated@@319 $generated@@317))
 :pattern ( ($generated@@136 $generated@@316 $generated@@317) ($generated@@78 $generated@@318 $generated@@319 $generated@@316))
)))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@80 $generated@@322 $generated@@2))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@83 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@80 $generated@@324 $generated@@2)) (and (= (= ($generated@@320 $generated@@323) 0) (= $generated@@323 ($generated@@321 $generated@@324))) (=> (not (= ($generated@@320 $generated@@323) 0)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) (< 0 ($generated ($generated@@85 $generated@@323 $generated@@325))))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@73)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@68) (and (= ($generated@@76 ($generated@@253 $generated@@328)) $generated@@64) (= ($generated@@326 ($generated@@253 $generated@@328)) $generated@@67)))
 :pattern ( ($generated@@253 $generated@@328))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 18)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@80 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@85 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@85 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@85 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (=> (<= 0 $generated@@250) (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@365) $generated@@68) (= (type $generated@@366) $generated@@142)) (or ($generated@@252 $generated@@365 $generated@@366) (and (not (= 0 $generated@@250)) ($generated@@165 $generated@@366 ($generated@@253 $generated@@365))))) true)
 :pattern ( ($generated@@251 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@83 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@80 $generated@@368 $generated@@2)) (= ($generated@@182 $generated@@367) (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@368) (and (<= 0 ($generated ($generated@@85 $generated@@367 $generated@@369))) (<= ($generated ($generated@@85 $generated@@367 $generated@@369)) ($generated@@320 $generated@@367))))
 :pattern ( ($generated@@85 $generated@@367 $generated@@369))
)))))
 :pattern ( ($generated@@182 $generated@@367))
)))
(assert  (=> (<= 0 $generated@@250) (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@370) $generated@@68) (= (type $generated@@371) $generated@@142)) (or ($generated@@252 $generated@@370 ($generated@@274 $generated@@371)) (and (not (= 0 $generated@@250)) ($generated@@165 $generated@@371 ($generated@@253 $generated@@370))))) (= ($generated@@251 $generated@@370 ($generated@@274 $generated@@371)) ($generated@@0 ($generated@@274 ($generated@@11 ($generated@@254 ($generated@@274 $generated@@371)))))))
 :weight 3
 :pattern ( ($generated@@251 $generated@@370 ($generated@@274 $generated@@371)))
))))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) ($generated@@150 $generated@@144))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@374) $generated@@142) (= (type $generated@@375) $generated@@142)) (and ($generated@@254 $generated@@374) ($generated@@254 $generated@@375))) (= ($generated@@140 $generated@@374 $generated@@375) ($generated@@290 ($generated@@372 $generated@@374) ($generated@@372 $generated@@375))))
 :pattern ( ($generated@@140 $generated@@374 $generated@@375) ($generated@@254 $generated@@374))
 :pattern ( ($generated@@140 $generated@@374 $generated@@375) ($generated@@254 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@333 (type $generated@@376))))
(let (($generated@@378 ($generated@@332 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@331 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@330 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@329 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@333 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@80 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@333 (type $generated@@383))))
(let (($generated@@385 ($generated@@332 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@331 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@330 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@351 (type $generated@@387))))
(let (($generated@@389 ($generated@@350 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@349 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@348 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@347 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@351 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@80 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@351 (type $generated@@394))))
(let (($generated@@396 ($generated@@350 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@349 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@348 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@85 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@399) $generated@@68)) (= ($generated@@165 $generated@@398 ($generated@@181 $generated@@399)) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@398 $generated@@400)))) ($generated@@243 $generated@@400 $generated@@399))
 :pattern ( ($generated@@85 $generated@@398 $generated@@400))
))))
 :pattern ( ($generated@@165 $generated@@398 ($generated@@181 $generated@@399)))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) $generated@@68) (= (type $generated@@402) $generated@@144)) (= (type $generated@@403) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@278 $generated@@403)) (= ($generated@@78 ($generated@@301 $generated@@402) ($generated@@253 $generated@@401) $generated@@403) ($generated@@279 $generated@@402 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@78 ($generated@@301 $generated@@402) ($generated@@253 $generated@@401) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (= (type ($generated@@404 $generated@@405)) $generated@@68)
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@406) $generated@@142) (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@278 $generated@@407) (and ($generated@@254 $generated@@406) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@68) ($generated@@78 $generated@@406 ($generated@@253 $generated@@408) $generated@@407))
 :pattern ( ($generated@@78 $generated@@406 ($generated@@253 $generated@@408) $generated@@407))
))))) ($generated@@78 ($generated@@372 $generated@@406) ($generated@@404 $generated@@45) $generated@@407))
 :pattern ( ($generated@@78 ($generated@@372 $generated@@406) ($generated@@404 $generated@@45) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) $generated@@68) (= (type $generated@@410) ($generated@@150 $generated@@144))) (= (type $generated@@411) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@278 $generated@@411)) (= ($generated@@78 ($generated@@149 $generated@@410) ($generated@@253 $generated@@409) $generated@@411) ($generated@@78 $generated@@410 ($generated@@404 $generated@@45) $generated@@411)))
 :pattern ( ($generated@@78 ($generated@@149 $generated@@410) ($generated@@253 $generated@@409) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@413) $generated@@68)) (= (type $generated@@414) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@412 ($generated@@262 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@144) ($generated@@0 ($generated@@85 $generated@@412 $generated@@415))) ($generated@@279 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@85 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@78 $generated@@412 ($generated@@262 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@416 ($generated@@267 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@144) ($generated@@0 ($generated@@85 $generated@@416 $generated@@419))) ($generated@@279 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@85 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@416 ($generated@@267 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@85 ($generated@@321 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@85 ($generated@@321 $generated@@421) $generated@@420)))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@333 (type $generated@@425))))
(let (($generated@@427 ($generated@@332 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@80 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@331 $generated@@144 $generated@@144)) (= (type $generated@@429) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@85 ($generated@@329 $generated@@428) ($generated@@175 ($generated@@153 $generated@@142 $generated@@429)))) (= ($generated@@85 ($generated@@423 $generated@@428) ($generated@@175 ($generated@@153 $generated@@142 $generated@@429))) ($generated@@176 ($generated@@153 $generated@@142 $generated@@429))))))
 :pattern ( ($generated@@85 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert  (and (forall (($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@432)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@430 $generated@@432))
)) (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@351 (type $generated@@433))))
(let (($generated@@435 ($generated@@350 (type $generated@@433))))
(= (type ($generated@@431 $generated@@433)) ($generated@@80 $generated@@435 $generated@@434))))
 :pattern ( ($generated@@431 $generated@@433))
))))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) ($generated@@349 $generated@@144 $generated@@144)) (= (type $generated@@437) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@430 $generated@@436) $generated@@437))  (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@436) ($generated@@175 ($generated@@153 $generated@@142 $generated@@437)))) (= ($generated@@85 ($generated@@431 $generated@@436) ($generated@@175 ($generated@@153 $generated@@142 $generated@@437))) ($generated@@176 ($generated@@153 $generated@@142 $generated@@437))))))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(let (($generated@@441 ($generated@@332 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@331 $generated@@441 $generated@@440)) (= ($generated@@0 ($generated@@85 ($generated@@380 $generated@@438) $generated@@439)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@441) (and ($generated@@0 ($generated@@85 ($generated@@329 $generated@@438) $generated@@442)) (= $generated@@439 ($generated@@85 ($generated@@423 $generated@@438) $generated@@442))))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@438) $generated@@442))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@438) $generated@@442))
))))))
 :pattern ( ($generated@@85 ($generated@@380 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
(let (($generated@@446 ($generated@@350 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@349 $generated@@446 $generated@@445)) (= ($generated@@0 ($generated@@85 ($generated@@391 $generated@@443) $generated@@444)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@446) (and ($generated@@0 ($generated@@85 ($generated@@347 $generated@@443) $generated@@447)) (= $generated@@444 ($generated@@85 ($generated@@431 $generated@@443) $generated@@447))))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@443) $generated@@447))
 :pattern ( ($generated@@85 ($generated@@431 $generated@@443) $generated@@447))
))))))
 :pattern ( ($generated@@85 ($generated@@391 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@68)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@331 $generated@@144 $generated@@144)) (= (type $generated@@452) $generated@@68)) (= (type $generated@@453) $generated@@68)) (= (type $generated@@454) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@451) $generated@@455))) (and ($generated@@279 ($generated@@85 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@279 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@78 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@457 $generated@@458)) $generated@@68)
 :pattern ( ($generated@@456 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@459) ($generated@@349 $generated@@144 $generated@@144)) (= (type $generated@@460) $generated@@68)) (= (type $generated@@461) $generated@@68)) (= (type $generated@@462) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@459 ($generated@@456 $generated@@460 $generated@@461) $generated@@462) (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@459) $generated@@463))) (and ($generated@@279 ($generated@@85 ($generated@@431 $generated@@459) $generated@@463) $generated@@461 $generated@@462) ($generated@@279 $generated@@463 $generated@@460 $generated@@462)))
 :pattern ( ($generated@@85 ($generated@@431 $generated@@459) $generated@@463))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@459) $generated@@463))
))))
 :pattern ( ($generated@@78 $generated@@459 ($generated@@456 $generated@@460 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@142)) ($generated@@165 $generated@@465 ($generated@@253 $generated@@464))) (or ($generated@@141 $generated@@465) ($generated@@254 $generated@@465)))
 :pattern ( ($generated@@254 $generated@@465) ($generated@@165 $generated@@465 ($generated@@253 $generated@@464)))
 :pattern ( ($generated@@141 $generated@@465) ($generated@@165 $generated@@465 ($generated@@253 $generated@@464)))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@154 (type $generated@@466))))
 (=> (and (and (= (type $generated@@466) ($generated@@150 $generated@@468)) (= (type $generated@@467) ($generated@@150 $generated@@468))) ($generated@@290 $generated@@466 $generated@@467)) (= $generated@@466 $generated@@467)))
 :pattern ( ($generated@@290 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@469) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@470) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@471) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@469 $generated@@471))) (and ($generated@@136 $generated@@469 $generated@@470) ($generated@@136 $generated@@470 $generated@@471))) ($generated@@136 $generated@@469 $generated@@471))
 :pattern ( ($generated@@136 $generated@@469 $generated@@470) ($generated@@136 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@80 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@351 (type $generated@@474))))
(let (($generated@@476 ($generated@@350 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@349 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@348 $generated@@476 $generated@@475)) (= ($generated@@347 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@347 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@351 (type $generated@@477))))
(let (($generated@@479 ($generated@@350 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@349 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@348 $generated@@479 $generated@@478)) (= ($generated@@391 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@391 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@351 (type $generated@@480))))
(let (($generated@@482 ($generated@@350 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@349 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@348 $generated@@482 $generated@@481)) (= ($generated@@430 $generated@@480) ($generated@@472 $generated@@144))))))
 :pattern ( ($generated@@430 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@333 (type $generated@@483))))
(let (($generated@@485 ($generated@@332 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@331 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@330 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@144) (= (type $generated@@487) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@422 $generated@@483) ($generated@@307 ($generated@@242 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@422 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@351 (type $generated@@488))))
(let (($generated@@490 ($generated@@350 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@349 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@348 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@144) (= (type $generated@@492) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@430 $generated@@488) ($generated@@307 ($generated@@242 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@430 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@144) ($generated@@243 $generated@@493 $generated@@46)) (and (= ($generated@@307 ($generated@@153 $generated@@2 $generated@@493)) $generated@@493) ($generated@@165 ($generated@@153 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@144) ($generated@@243 $generated@@494 $generated@@47)) (and (= ($generated@@307 ($generated@@153 $generated@@3 $generated@@494)) $generated@@494) ($generated@@165 ($generated@@153 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@144) ($generated@@243 $generated@@495 $generated@@44)) (and (= ($generated@@307 ($generated@@153 $generated@@4 $generated@@495)) $generated@@495) ($generated@@165 ($generated@@153 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 20))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@144) ($generated@@243 $generated@@497 $generated@@45)) (and (= ($generated@@307 ($generated@@153 $generated@@496 $generated@@497)) $generated@@497) ($generated@@165 ($generated@@153 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@243 ($generated@@307 $generated@@498) $generated@@499) ($generated@@165 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@243 ($generated@@307 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@83 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@80 $generated@@501 $generated@@2)) (<= 0 ($generated@@320 $generated@@500))))
 :pattern ( ($generated@@320 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@154 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@150 $generated@@503)) (<= 0 ($generated@@151 $generated@@502))))
 :pattern ( ($generated@@151 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@448 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@448 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@448 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@448 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@76 ($generated@@448 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@448 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@456 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@456 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@456 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@456 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@76 ($generated@@456 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@456 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@144) (= (type $generated@@525) $generated@@144)) (= ($generated@@285 ($generated@@242 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@168 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@168 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@68) (= (type $generated@@533) $generated@@68)) (= ($generated@@530 ($generated@@168 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@168 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@144) (= (type $generated@@535) $generated@@144)) (= ($generated@@175 ($generated@@242 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@242 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@144) (= (type $generated@@537) $generated@@144)) (= ($generated@@176 ($generated@@242 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@242 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@150 $generated@@144)) (= (type $generated@@539) $generated@@68)) (= (type $generated@@540) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@538 ($generated@@404 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@151 $generated@@538))) ($generated@@279 ($generated@@148 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@148 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@78 $generated@@538 ($generated@@404 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@79 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@79 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@544 ($generated@@262 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@262 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@76 ($generated@@262 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@548 ($generated@@267 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@267 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@76 ($generated@@267 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@552 ($generated@@181 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@181 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@68) (= ($generated@@76 ($generated@@181 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@181 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@404 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@404 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@76 ($generated@@404 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@404 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@144) (= ($generated@@285 ($generated@@301 $generated@@560)) $generated@@63))
 :pattern ( ($generated@@301 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@68)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@561 ($generated@@253 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@253 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@144) (= ($generated@@143 ($generated@@301 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@301 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) ($generated@@150 $generated@@144)) (= ($generated@@285 ($generated@@149 $generated@@565)) $generated@@65))
 :pattern ( ($generated@@149 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) ($generated@@150 $generated@@144)) (= ($generated@@372 ($generated@@149 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@149 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
(= ($generated@@153 $generated@@568 ($generated@@307 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@307 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@331 $generated@@144 $generated@@144)) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@68)) (= ($generated@@165 $generated@@569 ($generated@@448 $generated@@570 $generated@@571)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@329 $generated@@569) $generated@@572))) (and ($generated@@243 ($generated@@85 ($generated@@423 $generated@@569) $generated@@572) $generated@@571) ($generated@@243 $generated@@572 $generated@@570)))
 :pattern ( ($generated@@85 ($generated@@423 $generated@@569) $generated@@572))
 :pattern ( ($generated@@85 ($generated@@329 $generated@@569) $generated@@572))
))))
 :pattern ( ($generated@@165 $generated@@569 ($generated@@448 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@349 $generated@@144 $generated@@144)) (= (type $generated@@574) $generated@@68)) (= (type $generated@@575) $generated@@68)) (= ($generated@@165 $generated@@573 ($generated@@456 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@573) $generated@@576))) (and ($generated@@243 ($generated@@85 ($generated@@431 $generated@@573) $generated@@576) $generated@@575) ($generated@@243 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@85 ($generated@@431 $generated@@573) $generated@@576))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@165 $generated@@573 ($generated@@456 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@144)) (= ($generated@@165 ($generated@@301 $generated@@578) ($generated@@253 $generated@@577)) ($generated@@243 $generated@@578 $generated@@577)))
 :pattern ( ($generated@@165 ($generated@@301 $generated@@578) ($generated@@253 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@144) (= (type $generated@@581) $generated@@144)) (< ($generated@@579 $generated@@580) ($generated@@152 ($generated@@242 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@242 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@144) (= (type $generated@@583) $generated@@144)) (< ($generated@@579 $generated@@583) ($generated@@152 ($generated@@242 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@242 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@144) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) ($generated@@243 $generated@@584 ($generated@@448 $generated@@585 $generated@@586))) (and (= ($generated@@307 ($generated@@153 ($generated@@331 $generated@@144 $generated@@144) $generated@@584)) $generated@@584) ($generated@@165 ($generated@@153 ($generated@@331 $generated@@144 $generated@@144) $generated@@584) ($generated@@448 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@243 $generated@@584 ($generated@@448 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@144) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) ($generated@@243 $generated@@587 ($generated@@456 $generated@@588 $generated@@589))) (and (= ($generated@@307 ($generated@@153 ($generated@@349 $generated@@144 $generated@@144) $generated@@587)) $generated@@587) ($generated@@165 ($generated@@153 ($generated@@349 $generated@@144 $generated@@144) $generated@@587) ($generated@@456 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@243 $generated@@587 ($generated@@456 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@68) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@144)) ($generated@@243 $generated@@592 ($generated@@168 $generated@@590 $generated@@591))) (and (= ($generated@@307 ($generated@@153 $generated@@142 $generated@@592)) $generated@@592) ($generated@@165 ($generated@@153 $generated@@142 $generated@@592) ($generated@@168 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@243 $generated@@592 ($generated@@168 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@144) (< ($generated@@579 $generated@@593) ($generated@@152 ($generated@@301 $generated@@593))))
 :pattern ( ($generated@@301 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) ($generated@@150 $generated@@144)) (< ($generated@@594 $generated@@595) ($generated@@152 ($generated@@149 $generated@@595))))
 :pattern ( ($generated@@149 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@142) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@278 $generated@@598) (and ($generated@@141 $generated@@596) ($generated@@78 $generated@@596 ($generated@@253 $generated@@597) $generated@@598)))) ($generated@@279 ($generated@@143 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@279 ($generated@@143 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (not ($generated@@0 ($generated@@85 ($generated@@472 $generated@@600) $generated@@599))))
 :pattern ( (let (($generated@@600 (type $generated@@599)))
($generated@@85 ($generated@@472 $generated@@600) $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@68)) (and (= ($generated@@76 ($generated@@168 $generated@@601 $generated@@602)) $generated@@62) (= ($generated@@326 ($generated@@168 $generated@@601 $generated@@602)) $generated@@66)))
 :pattern ( ($generated@@168 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@142) (= ($generated@@579 ($generated@@307 $generated@@603)) ($generated@@152 $generated@@603)))
 :pattern ( ($generated@@579 ($generated@@307 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@144) ($generated@@243 $generated@@604 ($generated@@79 0))) (and (= ($generated@@307 ($generated@@153 $generated@@2 $generated@@604)) $generated@@604) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@604) ($generated@@79 0))))
 :pattern ( ($generated@@243 $generated@@604 ($generated@@79 0)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@144) (= (type $generated@@606) $generated@@68)) ($generated@@243 $generated@@605 ($generated@@262 $generated@@606))) (and (= ($generated@@307 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@605)) $generated@@605) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@605) ($generated@@262 $generated@@606))))
 :pattern ( ($generated@@243 $generated@@605 ($generated@@262 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@144) (= (type $generated@@608) $generated@@68)) ($generated@@243 $generated@@607 ($generated@@267 $generated@@608))) (and (= ($generated@@307 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@607)) $generated@@607) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@4) $generated@@607) ($generated@@267 $generated@@608))))
 :pattern ( ($generated@@243 $generated@@607 ($generated@@267 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@144) (= (type $generated@@610) $generated@@68)) ($generated@@243 $generated@@609 ($generated@@181 $generated@@610))) (and (= ($generated@@307 ($generated@@153 ($generated@@80 $generated@@144 $generated@@2) $generated@@609)) $generated@@609) ($generated@@165 ($generated@@153 ($generated@@80 $generated@@144 $generated@@2) $generated@@609) ($generated@@181 $generated@@610))))
 :pattern ( ($generated@@243 $generated@@609 ($generated@@181 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@144) (= (type $generated@@612) $generated@@68)) ($generated@@243 $generated@@611 ($generated@@404 $generated@@612))) (and (= ($generated@@307 ($generated@@153 ($generated@@150 $generated@@144) $generated@@611)) $generated@@611) ($generated@@165 ($generated@@153 ($generated@@150 $generated@@144) $generated@@611) ($generated@@404 $generated@@612))))
 :pattern ( ($generated@@243 $generated@@611 ($generated@@404 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@144)) ($generated@@243 $generated@@614 ($generated@@253 $generated@@613))) (and (= ($generated@@307 ($generated@@153 $generated@@142 $generated@@614)) $generated@@614) ($generated@@165 ($generated@@153 $generated@@142 $generated@@614) ($generated@@253 $generated@@613))))
 :pattern ( ($generated@@243 $generated@@614 ($generated@@253 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@68) (= (type $generated@@616) ($generated@@150 $generated@@144))) (= ($generated@@165 ($generated@@149 $generated@@616) ($generated@@253 $generated@@615)) ($generated@@165 $generated@@616 ($generated@@404 $generated@@45))))
 :pattern ( ($generated@@165 ($generated@@149 $generated@@616) ($generated@@253 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@617 ($generated@@181 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@617 $generated@@620)))) ($generated@@279 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@85 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@181 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@142) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@278 $generated@@623) (and ($generated@@167 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@68) ($generated@@78 $generated@@621 ($generated@@168 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@168 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@279 ($generated@@175 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@279 ($generated@@175 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@142) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@278 $generated@@627) (and ($generated@@167 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@78 $generated@@625 ($generated@@168 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@78 $generated@@625 ($generated@@168 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@279 ($generated@@176 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@279 ($generated@@176 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@144) (= (type $generated@@630) $generated@@144)) (= ($generated@@242 ($generated@@274 $generated@@629) ($generated@@274 $generated@@630)) ($generated@@274 ($generated@@242 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@242 ($generated@@274 $generated@@629) ($generated@@274 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@272 $generated@@631))) ($generated@@274 ($generated@@307 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@272 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@144) (= ($generated@@301 ($generated@@274 $generated@@632)) ($generated@@274 ($generated@@301 $generated@@632))))
 :pattern ( ($generated@@301 ($generated@@274 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) ($generated@@150 $generated@@144)) (= ($generated@@149 ($generated@@274 $generated@@633)) ($generated@@274 ($generated@@149 $generated@@633))))
 :pattern ( ($generated@@149 ($generated@@274 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (! (= ($generated@@307 ($generated@@274 $generated@@634)) ($generated@@274 ($generated@@307 $generated@@634)))
 :pattern ( ($generated@@307 ($generated@@274 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 ($generated@@154 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@150 $generated@@636)) (= ($generated@@151 $generated@@635) 0)) (= $generated@@635 ($generated@@298 $generated@@636))))
 :pattern ( ($generated@@151 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@638)))
 (=> (and (and (= (type $generated@@637) ($generated@@80 $generated@@640 $generated@@2)) (= (type $generated@@639) $generated@@2)) (<= 0 ($generated $generated@@639))) (= ($generated@@320 ($generated@@86 $generated@@637 $generated@@638 $generated@@639)) (+ (- ($generated@@320 $generated@@637) ($generated ($generated@@85 $generated@@637 $generated@@638))) ($generated $generated@@639)))))
 :pattern ( ($generated@@320 ($generated@@86 $generated@@637 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@642) $generated@@2)) ($generated@@78 $generated@@642 $generated@@46 $generated@@641))
 :pattern ( ($generated@@78 $generated@@642 $generated@@46 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@644) $generated@@3)) ($generated@@78 $generated@@644 $generated@@47 $generated@@643))
 :pattern ( ($generated@@78 $generated@@644 $generated@@47 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@646) $generated@@4)) ($generated@@78 $generated@@646 $generated@@44 $generated@@645))
 :pattern ( ($generated@@78 $generated@@646 $generated@@44 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@496)) ($generated@@78 $generated@@648 $generated@@45 $generated@@647))
 :pattern ( ($generated@@78 $generated@@648 $generated@@45 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@650) $generated@@144)) ($generated@@78 $generated@@650 $generated@@48 $generated@@649))
 :pattern ( ($generated@@78 $generated@@650 $generated@@48 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@150 $generated@@144)) (= (type $generated@@652) $generated@@68)) (= ($generated@@165 $generated@@651 ($generated@@404 $generated@@652)) (forall (($generated@@653 Int) ) (!  (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@151 $generated@@651))) ($generated@@243 ($generated@@148 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@148 $generated@@651 $generated@@653))
))))
 :pattern ( ($generated@@165 $generated@@651 ($generated@@404 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 Int) ) (!  (=> (= (type $generated@@654) ($generated@@150 $generated@@144)) (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@151 $generated@@654))) (< ($generated@@152 ($generated@@153 $generated@@142 ($generated@@148 $generated@@654 $generated@@655))) ($generated@@594 $generated@@654))))
 :pattern ( ($generated@@152 ($generated@@153 $generated@@142 ($generated@@148 $generated@@654 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@331 $generated@@144 $generated@@144)) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) $generated@@68)) ($generated@@165 $generated@@656 ($generated@@448 $generated@@657 $generated@@658))) (and (and ($generated@@165 ($generated@@329 $generated@@656) ($generated@@262 $generated@@657)) ($generated@@165 ($generated@@380 $generated@@656) ($generated@@262 $generated@@658))) ($generated@@165 ($generated@@422 $generated@@656) ($generated@@262 ($generated@@168 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@165 $generated@@656 ($generated@@448 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@349 $generated@@144 $generated@@144)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) $generated@@68)) ($generated@@165 $generated@@659 ($generated@@456 $generated@@660 $generated@@661))) (and (and ($generated@@165 ($generated@@347 $generated@@659) ($generated@@267 $generated@@660)) ($generated@@165 ($generated@@391 $generated@@659) ($generated@@267 $generated@@661))) ($generated@@165 ($generated@@430 $generated@@659) ($generated@@267 ($generated@@168 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@165 $generated@@659 ($generated@@456 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@2) ($generated@@165 $generated@@662 $generated@@46))
 :pattern ( ($generated@@165 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@3) ($generated@@165 $generated@@663 $generated@@47))
 :pattern ( ($generated@@165 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@4) ($generated@@165 $generated@@664 $generated@@44))
 :pattern ( ($generated@@165 $generated@@664 $generated@@44))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@496) ($generated@@165 $generated@@665 $generated@@45))
 :pattern ( ($generated@@165 $generated@@665 $generated@@45))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@144) ($generated@@165 $generated@@666 $generated@@48))
 :pattern ( ($generated@@165 $generated@@666 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
