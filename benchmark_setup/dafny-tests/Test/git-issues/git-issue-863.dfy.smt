(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@247 () Bool)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@290 (Int) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Bool)
(declare-fun $generated@@378 () T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (= (type $generated@@137) $generated@@69))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
 :pattern ( ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@80 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@69)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@69) (= (type $generated@@148) $generated@@69)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@69)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@69)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@82 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@72 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@82) (= (type $generated@@213) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@214) ($generated@@71 $generated@@4))) (= (type $generated@@216) $generated@@82)) (= (type $generated@@217) ($generated@@71 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@82 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@72 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@82) (= (type $generated@@225) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@226) ($generated@@71 $generated@@4))) (= (type $generated@@228) $generated@@82)) (= (type $generated@@229) ($generated@@71 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (= (type $generated@@232) $generated@@69))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@144) ($generated@@140 $generated@@233 $generated@@232)) ($generated@@231 $generated@@233))
 :pattern ( ($generated@@231 $generated@@233) ($generated@@140 $generated@@233 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@144)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@69) (= (type $generated@@239) $generated@@69)) (= (type $generated@@240) $generated@@153)) (= (type $generated@@241) $generated@@153)) (= ($generated@@140 ($generated@@234 $generated@@240 $generated@@241) ($generated@@143 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@140 ($generated@@234 $generated@@240 $generated@@241) ($generated@@143 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@144) (= (type $generated@@243) $generated@@144)) (= ($generated@@150 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@150 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@144) (= (type $generated@@246) $generated@@144)) (= ($generated@@244 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert  (=> $generated@@247 (and (<= ($generated@@248 0) $generated@@249) ($generated@@0 ($generated@@250 ($generated@@11 true))))))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@69)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@256) $generated@@69)) (= ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@153) ($generated@@0 ($generated@@86 $generated@@255 $generated@@257))) ($generated@@235 $generated@@257 $generated@@256))
 :pattern ( ($generated@@86 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@69)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@261) $generated@@69)) (= ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@153) ($generated@@0 ($generated@@86 $generated@@260 $generated@@262))) ($generated@@235 $generated@@262 $generated@@261))
 :pattern ( ($generated@@86 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@248 $generated@@263) $generated@@263)
 :pattern ( ($generated@@248 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@250 $generated@@264) $generated@@264)
 :pattern ( ($generated@@250 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@69) (= (type $generated@@268) $generated@@69)) (= (type $generated@@269) $generated@@153)) (= (type $generated@@270) $generated@@153)) (= (type $generated@@271) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@265 $generated@@271)) (= ($generated@@79 ($generated@@234 $generated@@269 $generated@@270) ($generated@@143 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@79 ($generated@@234 $generated@@269 $generated@@270) ($generated@@143 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@73)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@144) (= ($generated@@142 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@62)))
 :pattern ( ($generated@@142 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@144) (= ($generated@@231 $generated@@275) (= ($generated@@272 $generated@@275) $generated@@64)))
 :pattern ( ($generated@@231 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@144) ($generated@@142 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@153) (= (type $generated@@278) $generated@@153)) (= $generated@@276 ($generated@@234 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@142 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@144) (= (type $generated@@289) $generated@@144)) true) (= ($generated@@244 $generated@@288 $generated@@289) (= ($generated@@287 $generated@@288) ($generated@@287 $generated@@289))))
 :pattern ( ($generated@@244 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 Int) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@144)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@144) ($generated@@231 $generated@@292)) (exists (($generated@@293 Int) ) (= $generated@@292 ($generated@@290 $generated@@293))))
 :pattern ( ($generated@@231 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@2) (= ($generated@@140 $generated@@294 $generated@@137) (<= ($generated@@248 0) ($generated $generated@@294))))
 :pattern ( ($generated@@140 $generated@@294 $generated@@137))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@153)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@69) (= (type $generated@@299) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@266 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@79 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@266 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@81 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@84 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@81 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@86 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@81 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@86 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@86 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@81 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@86 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@86 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@84 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@81 $generated@@343 $generated@@2)) (= ($generated@@159 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@86 $generated@@342 $generated@@344))) (<= ($generated ($generated@@86 $generated@@342 $generated@@344)) ($generated@@300 $generated@@342))))
 :pattern ( ($generated@@86 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@159 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@153) ($generated@@235 $generated@@348 $generated@@137)) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@348)) $generated@@348) ($generated@@140 ($generated@@345 $generated@@2 $generated@@348) $generated@@137)))
 :pattern ( ($generated@@235 $generated@@348 $generated@@137))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@153) ($generated@@235 $generated@@349 $generated@@232)) (and (= ($generated@@295 ($generated@@345 $generated@@144 $generated@@349)) $generated@@349) ($generated@@140 ($generated@@345 $generated@@144 $generated@@349) $generated@@232)))
 :pattern ( ($generated@@235 $generated@@349 $generated@@232))
)))
(assert (forall (($generated@@350 Int) ) (! (= ($generated@@140 ($generated@@290 $generated@@350) $generated@@232) ($generated@@140 ($generated@@8 $generated@@350) $generated@@137))
 :pattern ( ($generated@@140 ($generated@@290 $generated@@350) $generated@@232))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(let (($generated@@353 ($generated@@309 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@308 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@307 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@306 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@310 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@81 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@310 (type $generated@@358))))
(let (($generated@@360 ($generated@@309 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@308 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@307 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@86 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@328 (type $generated@@362))))
(let (($generated@@364 ($generated@@327 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@326 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@325 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@324 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@328 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@81 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@328 (type $generated@@369))))
(let (($generated@@371 ($generated@@327 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@326 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@325 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@86 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@374) $generated@@69)) (= ($generated@@140 $generated@@373 ($generated@@158 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@153) (< 0 ($generated ($generated@@86 $generated@@373 $generated@@375)))) ($generated@@235 $generated@@375 $generated@@374))
 :pattern ( ($generated@@86 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@158 $generated@@374)))
)))
(assert (= (type $generated@@378) $generated@@144))
(assert  (=> (<= 2 $generated@@376) (=> (or $generated@@377 (not (= 2 $generated@@376))) ($generated@@140 $generated@@378 $generated@@232))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@153) ($generated@@0 ($generated@@86 $generated@@379 $generated@@382))) ($generated@@266 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@86 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@79 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@383 ($generated@@258 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@153) ($generated@@0 ($generated@@86 $generated@@383 $generated@@386))) ($generated@@266 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@86 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@79 $generated@@383 ($generated@@258 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@86 ($generated@@301 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@86 ($generated@@301 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@153 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@310 (type $generated@@392))))
(let (($generated@@394 ($generated@@309 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@308 $generated@@153 $generated@@153)) (= (type $generated@@396) $generated@@153)) (= ($generated@@0 ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@86 ($generated@@306 $generated@@395) ($generated@@151 ($generated@@345 $generated@@144 $generated@@396)))) (= ($generated@@86 ($generated@@390 $generated@@395) ($generated@@151 ($generated@@345 $generated@@144 $generated@@396))) ($generated@@152 ($generated@@345 $generated@@144 $generated@@396))))))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@153 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@328 (type $generated@@400))))
(let (($generated@@402 ($generated@@327 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@81 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@404) $generated@@153)) (= ($generated@@0 ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@86 ($generated@@324 $generated@@403) ($generated@@151 ($generated@@345 $generated@@144 $generated@@404)))) (= ($generated@@86 ($generated@@398 $generated@@403) ($generated@@151 ($generated@@345 $generated@@144 $generated@@404))) ($generated@@152 ($generated@@345 $generated@@144 $generated@@404))))))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@309 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@308 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@86 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@86 ($generated@@306 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@405) $generated@@409))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@86 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@327 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@326 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@86 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@86 ($generated@@324 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@410) $generated@@414))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@86 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@308 $generated@@153 $generated@@153)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@418) $generated@@422))) (and ($generated@@266 ($generated@@86 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@266 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@426) $generated@@430))) (and ($generated@@266 ($generated@@86 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@266 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 Int) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@265 $generated@@432)) (= ($generated@@79 ($generated@@290 $generated@@431) $generated@@232 $generated@@432) ($generated@@79 ($generated@@8 $generated@@431) $generated@@137 $generated@@432)))
 :pattern ( ($generated@@79 ($generated@@290 $generated@@431) $generated@@232 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@81 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@328 (type $generated@@435))))
(let (($generated@@437 ($generated@@327 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@326 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@325 $generated@@437 $generated@@436)) (= ($generated@@324 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@324 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@328 (type $generated@@438))))
(let (($generated@@440 ($generated@@327 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@326 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@325 $generated@@440 $generated@@439)) (= ($generated@@366 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@366 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@328 (type $generated@@441))))
(let (($generated@@443 ($generated@@327 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@326 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@325 $generated@@443 $generated@@442)) (= ($generated@@397 $generated@@441) ($generated@@433 $generated@@153))))))
 :pattern ( ($generated@@397 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@310 (type $generated@@444))))
(let (($generated@@446 ($generated@@309 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@308 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@307 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@153) (= (type $generated@@448) $generated@@153)) ($generated@@0 ($generated@@86 ($generated@@389 $generated@@444) ($generated@@295 ($generated@@234 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@389 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@328 (type $generated@@449))))
(let (($generated@@451 ($generated@@327 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@326 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@325 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@153) (= (type $generated@@453) $generated@@153)) ($generated@@0 ($generated@@86 ($generated@@397 $generated@@449) ($generated@@295 ($generated@@234 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@397 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@153) ($generated@@235 $generated@@454 $generated@@46)) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@454)) $generated@@454) ($generated@@140 ($generated@@345 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@153) ($generated@@235 $generated@@455 $generated@@47)) (and (= ($generated@@295 ($generated@@345 $generated@@3 $generated@@455)) $generated@@455) ($generated@@140 ($generated@@345 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@153) ($generated@@235 $generated@@456 $generated@@44)) (and (= ($generated@@295 ($generated@@345 $generated@@4 $generated@@456)) $generated@@456) ($generated@@140 ($generated@@345 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@153) ($generated@@235 $generated@@458 $generated@@45)) (and (= ($generated@@295 ($generated@@345 $generated@@457 $generated@@458)) $generated@@458) ($generated@@140 ($generated@@345 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@69) (= ($generated@@235 ($generated@@295 $generated@@459) $generated@@460) ($generated@@140 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@235 ($generated@@295 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@84 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@81 $generated@@462 $generated@@2)) (<= 0 ($generated@@300 $generated@@461))))
 :pattern ( ($generated@@300 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@282 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@281 $generated@@464)) (<= 0 ($generated@@280 $generated@@463))))
 :pattern ( ($generated@@280 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@69)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@69) (= (type $generated@@472) $generated@@69)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@153) (= (type $generated@@486) $generated@@153)) (= ($generated@@272 ($generated@@234 $generated@@485 $generated@@486)) $generated@@62))
 :pattern ( ($generated@@234 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@143 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@143 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@491 ($generated@@143 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@143 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@153) (= (type $generated@@496) $generated@@153)) (= ($generated@@151 ($generated@@234 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@234 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@153) (= (type $generated@@498) $generated@@153)) (= ($generated@@152 ($generated@@234 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@234 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@282 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@281 $generated@@153)) (= (type $generated@@506) $generated@@69)) (= (type $generated@@507) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@280 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@79 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@80 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@80 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@253 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@253 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@77 ($generated@@253 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@258 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@258 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@258 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@158 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@158 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@158 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@77 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@272 ($generated@@290 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@290 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@287 ($generated@@290 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@290 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(= ($generated@@345 $generated@@530 ($generated@@295 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@295 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@308 $generated@@153 $generated@@153)) (= (type $generated@@532) $generated@@69)) (= (type $generated@@533) $generated@@69)) (= ($generated@@140 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@531) $generated@@534))) (and ($generated@@235 ($generated@@86 ($generated@@390 $generated@@531) $generated@@534) $generated@@533) ($generated@@235 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@531) $generated@@534))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@140 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@536) $generated@@69)) (= (type $generated@@537) $generated@@69)) (= ($generated@@140 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@535) $generated@@538))) (and ($generated@@235 ($generated@@86 ($generated@@398 $generated@@535) $generated@@538) $generated@@537) ($generated@@235 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@535) $generated@@538))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@140 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@153) (= (type $generated@@542) $generated@@153)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@234 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@234 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@153) (= (type $generated@@544) $generated@@153)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@234 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@234 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@153) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@69)) ($generated@@235 $generated@@545 ($generated@@415 $generated@@546 $generated@@547))) (and (= ($generated@@295 ($generated@@345 ($generated@@308 $generated@@153 $generated@@153) $generated@@545)) $generated@@545) ($generated@@140 ($generated@@345 ($generated@@308 $generated@@153 $generated@@153) $generated@@545) ($generated@@415 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@235 $generated@@545 ($generated@@415 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@153) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@69)) ($generated@@235 $generated@@548 ($generated@@423 $generated@@549 $generated@@550))) (and (= ($generated@@295 ($generated@@345 ($generated@@326 $generated@@153 $generated@@153) $generated@@548)) $generated@@548) ($generated@@140 ($generated@@345 ($generated@@326 $generated@@153 $generated@@153) $generated@@548) ($generated@@423 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@235 $generated@@548 ($generated@@423 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@69) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@153)) ($generated@@235 $generated@@553 ($generated@@143 $generated@@551 $generated@@552))) (and (= ($generated@@295 ($generated@@345 $generated@@144 $generated@@553)) $generated@@553) ($generated@@140 ($generated@@345 $generated@@144 $generated@@553) ($generated@@143 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@235 $generated@@553 ($generated@@143 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@86 ($generated@@433 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@86 ($generated@@433 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@74)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@69) (= (type $generated@@559) $generated@@69)) (and (= ($generated@@77 ($generated@@143 $generated@@558 $generated@@559)) $generated@@63) (= ($generated@@556 ($generated@@143 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@143 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@144) (= ($generated@@539 ($generated@@295 $generated@@560)) ($generated@@540 $generated@@560)))
 :pattern ( ($generated@@539 ($generated@@295 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@153) ($generated@@235 $generated@@561 ($generated@@80 0))) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@561)) $generated@@561) ($generated@@140 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@561) ($generated@@80 0))))
 :pattern ( ($generated@@235 $generated@@561 ($generated@@80 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@153) (= (type $generated@@563) $generated@@69)) ($generated@@235 $generated@@562 ($generated@@253 $generated@@563))) (and (= ($generated@@295 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@562)) $generated@@562) ($generated@@140 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@562) ($generated@@253 $generated@@563))))
 :pattern ( ($generated@@235 $generated@@562 ($generated@@253 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@153) (= (type $generated@@565) $generated@@69)) ($generated@@235 $generated@@564 ($generated@@258 $generated@@565))) (and (= ($generated@@295 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@564) ($generated@@258 $generated@@565))))
 :pattern ( ($generated@@235 $generated@@564 ($generated@@258 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@153) (= (type $generated@@567) $generated@@69)) ($generated@@235 $generated@@566 ($generated@@158 $generated@@567))) (and (= ($generated@@295 ($generated@@345 ($generated@@81 $generated@@153 $generated@@2) $generated@@566)) $generated@@566) ($generated@@140 ($generated@@345 ($generated@@81 $generated@@153 $generated@@2) $generated@@566) ($generated@@158 $generated@@567))))
 :pattern ( ($generated@@235 $generated@@566 ($generated@@158 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@153) (= (type $generated@@569) $generated@@69)) ($generated@@235 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@295 ($generated@@345 ($generated@@281 $generated@@153) $generated@@568)) $generated@@568) ($generated@@140 ($generated@@345 ($generated@@281 $generated@@153) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@235 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (= ($generated@@77 $generated@@137) $generated@@61))
(assert (= ($generated@@556 $generated@@137) $generated@@66))
(assert (= ($generated@@77 $generated@@232) $generated@@65))
(assert (= ($generated@@556 $generated@@232) $generated@@68))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@570 ($generated@@158 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@153) (< 0 ($generated ($generated@@86 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@86 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@79 $generated@@570 ($generated@@158 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@144) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@265 $generated@@576) (and ($generated@@142 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@69) ($generated@@79 $generated@@574 ($generated@@143 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@79 $generated@@574 ($generated@@143 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@266 ($generated@@151 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@266 ($generated@@151 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@144) (= (type $generated@@579) $generated@@69)) (= (type $generated@@580) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@265 $generated@@580) (and ($generated@@142 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@69) ($generated@@79 $generated@@578 ($generated@@143 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@79 $generated@@578 ($generated@@143 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@266 ($generated@@152 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@266 ($generated@@152 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@144) (= (type $generated@@583) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@265 $generated@@583) (and ($generated@@231 $generated@@582) ($generated@@79 $generated@@582 $generated@@232 $generated@@583)))) ($generated@@79 ($generated@@8 ($generated@@287 $generated@@582)) $generated@@137 $generated@@583))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@287 $generated@@582)) $generated@@137 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@153) (= (type $generated@@585) $generated@@153)) (= ($generated@@234 ($generated@@250 $generated@@584) ($generated@@250 $generated@@585)) ($generated@@250 ($generated@@234 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@234 ($generated@@250 $generated@@584) ($generated@@250 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@248 $generated@@586))) ($generated@@250 ($generated@@295 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@248 $generated@@586))))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@290 ($generated@@248 $generated@@587)) ($generated@@250 ($generated@@290 $generated@@587)))
 :pattern ( ($generated@@290 ($generated@@248 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@295 ($generated@@250 $generated@@588)) ($generated@@250 ($generated@@295 $generated@@588)))
 :pattern ( ($generated@@295 ($generated@@250 $generated@@588)))
)))
(assert  (=> (<= 2 $generated@@376) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@81 $generated@@82 $generated@@83)) (or $generated@@377 (and (not (= 2 $generated@@376)) ($generated@@265 $generated@@589)))) (and $generated@@247 (= $generated@@378 (let (($generated@@590 $generated@@249))
($generated@@290 $generated@@590)))))
 :pattern ( $generated@@378 ($generated@@265 $generated@@589))
))))
(assert  (=> (<= 2 $generated@@376) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83)) (or $generated@@377 (and (not (= 2 $generated@@376)) ($generated@@265 $generated@@591)))) (and $generated@@247 (= $generated@@378 (let (($generated@@592 $generated@@249))
($generated@@290 $generated@@592)))))
 :weight 3
 :pattern ( $generated@@378 ($generated@@265 $generated@@591))
))))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@282 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@281 $generated@@594)) (= ($generated@@280 $generated@@593) 0)) (= $generated@@593 ($generated@@279 $generated@@594))))
 :pattern ( ($generated@@280 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@81 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@300 ($generated@@87 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@300 $generated@@595) ($generated ($generated@@86 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@300 ($generated@@87 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@600) $generated@@2)) ($generated@@79 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@79 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@602) $generated@@3)) ($generated@@79 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@79 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@604) $generated@@4)) ($generated@@79 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@79 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@606) $generated@@457)) ($generated@@79 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@79 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@608) $generated@@153)) ($generated@@79 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@79 $generated@@608 $generated@@48 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@281 $generated@@153)) (= (type $generated@@610) $generated@@69)) (= ($generated@@140 $generated@@609 ($generated@@499 $generated@@610)) (forall (($generated@@611 Int) ) (!  (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@280 $generated@@609))) ($generated@@235 ($generated@@500 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@500 $generated@@609 $generated@@611))
))))
 :pattern ( ($generated@@140 $generated@@609 ($generated@@499 $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@281 $generated@@153)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@280 $generated@@613))) (< ($generated@@540 ($generated@@345 $generated@@144 ($generated@@500 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@540 ($generated@@345 $generated@@144 ($generated@@500 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@308 $generated@@153 $generated@@153)) (= (type $generated@@616) $generated@@69)) (= (type $generated@@617) $generated@@69)) ($generated@@140 $generated@@615 ($generated@@415 $generated@@616 $generated@@617))) (and (and ($generated@@140 ($generated@@306 $generated@@615) ($generated@@253 $generated@@616)) ($generated@@140 ($generated@@355 $generated@@615) ($generated@@253 $generated@@617))) ($generated@@140 ($generated@@389 $generated@@615) ($generated@@253 ($generated@@143 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@140 $generated@@615 ($generated@@415 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@619) $generated@@69)) (= (type $generated@@620) $generated@@69)) ($generated@@140 $generated@@618 ($generated@@423 $generated@@619 $generated@@620))) (and (and ($generated@@140 ($generated@@324 $generated@@618) ($generated@@258 $generated@@619)) ($generated@@140 ($generated@@366 $generated@@618) ($generated@@258 $generated@@620))) ($generated@@140 ($generated@@397 $generated@@618) ($generated@@258 ($generated@@143 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@140 $generated@@618 ($generated@@423 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@140 $generated@@621 $generated@@46))
 :pattern ( ($generated@@140 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@140 $generated@@622 $generated@@47))
 :pattern ( ($generated@@140 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@140 $generated@@623 $generated@@44))
 :pattern ( ($generated@@140 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@457) ($generated@@140 $generated@@624 $generated@@45))
 :pattern ( ($generated@@140 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@153) ($generated@@140 $generated@@625 $generated@@48))
 :pattern ( ($generated@@140 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@628) ($generated@@165 $generated@@82 $generated@@4)) (= (type $generated@@629) $generated@@82)) (= (type $generated@@630) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@631) ($generated@@165 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@633  (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@250 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@250 ($generated@@11 true))) (=> (<= ($generated@@248 0) $generated@@626) (=> (and (<= ($generated@@248 0) $generated@@627) (= (ControlFlow 0 3) (- 0 2))) ($generated@@244 ($generated@@290 $generated@@626) ($generated@@290 $generated@@626))))))))
(let (($generated@@634  (=> (and (< $generated@@626 ($generated@@248 0)) (= (ControlFlow 0 6) 3)) $generated@@633)))
(let (($generated@@635  (=> (and (<= ($generated@@248 0) $generated@@626) (= (ControlFlow 0 5) 3)) $generated@@633)))
(let (($generated@@636  (=> (= $generated@@628 ($generated@@219 $generated@@629 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@635) (=> (= (ControlFlow 0 7) 6) $generated@@634)))))
(let (($generated@@637 true))
(let (($generated@@638  (=> (= $generated@@631 ($generated@@164 $generated@@629 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@637) (=> (= (ControlFlow 0 8) 7) $generated@@636)))))
(let (($generated@@639  (=> (and (and ($generated@@265 $generated@@630) ($generated@@632 $generated@@630)) (and (= 2 $generated@@376) (= (ControlFlow 0 9) 8))) $generated@@638)))
$generated@@639))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@247 () Bool)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@290 (Int) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Bool)
(declare-fun $generated@@378 () T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (= (type $generated@@137) $generated@@69))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
 :pattern ( ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@80 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@69)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@69) (= (type $generated@@148) $generated@@69)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@69)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@69)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@82 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@72 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@82) (= (type $generated@@213) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@214) ($generated@@71 $generated@@4))) (= (type $generated@@216) $generated@@82)) (= (type $generated@@217) ($generated@@71 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@82 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@72 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@82) (= (type $generated@@225) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@226) ($generated@@71 $generated@@4))) (= (type $generated@@228) $generated@@82)) (= (type $generated@@229) ($generated@@71 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (= (type $generated@@232) $generated@@69))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@144) ($generated@@140 $generated@@233 $generated@@232)) ($generated@@231 $generated@@233))
 :pattern ( ($generated@@231 $generated@@233) ($generated@@140 $generated@@233 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@144)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@69) (= (type $generated@@239) $generated@@69)) (= (type $generated@@240) $generated@@153)) (= (type $generated@@241) $generated@@153)) (= ($generated@@140 ($generated@@234 $generated@@240 $generated@@241) ($generated@@143 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@140 ($generated@@234 $generated@@240 $generated@@241) ($generated@@143 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@144) (= (type $generated@@243) $generated@@144)) (= ($generated@@150 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@150 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@144) (= (type $generated@@246) $generated@@144)) (= ($generated@@244 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert  (=> $generated@@247 (and (<= ($generated@@248 0) $generated@@249) ($generated@@0 ($generated@@250 ($generated@@11 true))))))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@69)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@256) $generated@@69)) (= ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@153) ($generated@@0 ($generated@@86 $generated@@255 $generated@@257))) ($generated@@235 $generated@@257 $generated@@256))
 :pattern ( ($generated@@86 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@69)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@261) $generated@@69)) (= ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@153) ($generated@@0 ($generated@@86 $generated@@260 $generated@@262))) ($generated@@235 $generated@@262 $generated@@261))
 :pattern ( ($generated@@86 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@248 $generated@@263) $generated@@263)
 :pattern ( ($generated@@248 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@250 $generated@@264) $generated@@264)
 :pattern ( ($generated@@250 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@69) (= (type $generated@@268) $generated@@69)) (= (type $generated@@269) $generated@@153)) (= (type $generated@@270) $generated@@153)) (= (type $generated@@271) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@265 $generated@@271)) (= ($generated@@79 ($generated@@234 $generated@@269 $generated@@270) ($generated@@143 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@79 ($generated@@234 $generated@@269 $generated@@270) ($generated@@143 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@73)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@144) (= ($generated@@142 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@62)))
 :pattern ( ($generated@@142 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@144) (= ($generated@@231 $generated@@275) (= ($generated@@272 $generated@@275) $generated@@64)))
 :pattern ( ($generated@@231 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@144) ($generated@@142 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@153) (= (type $generated@@278) $generated@@153)) (= $generated@@276 ($generated@@234 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@142 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@144) (= (type $generated@@289) $generated@@144)) true) (= ($generated@@244 $generated@@288 $generated@@289) (= ($generated@@287 $generated@@288) ($generated@@287 $generated@@289))))
 :pattern ( ($generated@@244 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 Int) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@144)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@144) ($generated@@231 $generated@@292)) (exists (($generated@@293 Int) ) (= $generated@@292 ($generated@@290 $generated@@293))))
 :pattern ( ($generated@@231 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@2) (= ($generated@@140 $generated@@294 $generated@@137) (<= ($generated@@248 0) ($generated $generated@@294))))
 :pattern ( ($generated@@140 $generated@@294 $generated@@137))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@153)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@69) (= (type $generated@@299) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@266 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@79 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@266 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@81 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@84 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@81 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@86 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@81 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@86 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@86 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@81 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@86 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@86 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@84 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@81 $generated@@343 $generated@@2)) (= ($generated@@159 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@86 $generated@@342 $generated@@344))) (<= ($generated ($generated@@86 $generated@@342 $generated@@344)) ($generated@@300 $generated@@342))))
 :pattern ( ($generated@@86 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@159 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@153) ($generated@@235 $generated@@348 $generated@@137)) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@348)) $generated@@348) ($generated@@140 ($generated@@345 $generated@@2 $generated@@348) $generated@@137)))
 :pattern ( ($generated@@235 $generated@@348 $generated@@137))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@153) ($generated@@235 $generated@@349 $generated@@232)) (and (= ($generated@@295 ($generated@@345 $generated@@144 $generated@@349)) $generated@@349) ($generated@@140 ($generated@@345 $generated@@144 $generated@@349) $generated@@232)))
 :pattern ( ($generated@@235 $generated@@349 $generated@@232))
)))
(assert (forall (($generated@@350 Int) ) (! (= ($generated@@140 ($generated@@290 $generated@@350) $generated@@232) ($generated@@140 ($generated@@8 $generated@@350) $generated@@137))
 :pattern ( ($generated@@140 ($generated@@290 $generated@@350) $generated@@232))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(let (($generated@@353 ($generated@@309 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@308 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@307 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@306 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@310 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@81 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@310 (type $generated@@358))))
(let (($generated@@360 ($generated@@309 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@308 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@307 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@86 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@328 (type $generated@@362))))
(let (($generated@@364 ($generated@@327 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@326 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@325 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@324 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@328 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@81 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@328 (type $generated@@369))))
(let (($generated@@371 ($generated@@327 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@326 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@325 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@86 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@374) $generated@@69)) (= ($generated@@140 $generated@@373 ($generated@@158 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@153) (< 0 ($generated ($generated@@86 $generated@@373 $generated@@375)))) ($generated@@235 $generated@@375 $generated@@374))
 :pattern ( ($generated@@86 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@158 $generated@@374)))
)))
(assert (= (type $generated@@378) $generated@@144))
(assert  (=> (<= 2 $generated@@376) (=> (or $generated@@377 (not (= 2 $generated@@376))) ($generated@@140 $generated@@378 $generated@@232))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@153) ($generated@@0 ($generated@@86 $generated@@379 $generated@@382))) ($generated@@266 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@86 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@79 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@383 ($generated@@258 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@153) ($generated@@0 ($generated@@86 $generated@@383 $generated@@386))) ($generated@@266 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@86 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@79 $generated@@383 ($generated@@258 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@86 ($generated@@301 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@86 ($generated@@301 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@153 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@310 (type $generated@@392))))
(let (($generated@@394 ($generated@@309 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@308 $generated@@153 $generated@@153)) (= (type $generated@@396) $generated@@153)) (= ($generated@@0 ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@86 ($generated@@306 $generated@@395) ($generated@@151 ($generated@@345 $generated@@144 $generated@@396)))) (= ($generated@@86 ($generated@@390 $generated@@395) ($generated@@151 ($generated@@345 $generated@@144 $generated@@396))) ($generated@@152 ($generated@@345 $generated@@144 $generated@@396))))))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@153 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@328 (type $generated@@400))))
(let (($generated@@402 ($generated@@327 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@81 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@404) $generated@@153)) (= ($generated@@0 ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@86 ($generated@@324 $generated@@403) ($generated@@151 ($generated@@345 $generated@@144 $generated@@404)))) (= ($generated@@86 ($generated@@398 $generated@@403) ($generated@@151 ($generated@@345 $generated@@144 $generated@@404))) ($generated@@152 ($generated@@345 $generated@@144 $generated@@404))))))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@309 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@308 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@86 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@86 ($generated@@306 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@405) $generated@@409))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@86 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@327 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@326 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@86 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@86 ($generated@@324 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@410) $generated@@414))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@86 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@308 $generated@@153 $generated@@153)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@418) $generated@@422))) (and ($generated@@266 ($generated@@86 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@266 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@79 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@426) $generated@@430))) (and ($generated@@266 ($generated@@86 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@266 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@79 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 Int) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@265 $generated@@432)) (= ($generated@@79 ($generated@@290 $generated@@431) $generated@@232 $generated@@432) ($generated@@79 ($generated@@8 $generated@@431) $generated@@137 $generated@@432)))
 :pattern ( ($generated@@79 ($generated@@290 $generated@@431) $generated@@232 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@81 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@328 (type $generated@@435))))
(let (($generated@@437 ($generated@@327 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@326 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@325 $generated@@437 $generated@@436)) (= ($generated@@324 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@324 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@328 (type $generated@@438))))
(let (($generated@@440 ($generated@@327 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@326 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@325 $generated@@440 $generated@@439)) (= ($generated@@366 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@366 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@328 (type $generated@@441))))
(let (($generated@@443 ($generated@@327 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@326 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@325 $generated@@443 $generated@@442)) (= ($generated@@397 $generated@@441) ($generated@@433 $generated@@153))))))
 :pattern ( ($generated@@397 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@310 (type $generated@@444))))
(let (($generated@@446 ($generated@@309 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@308 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@307 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@153) (= (type $generated@@448) $generated@@153)) ($generated@@0 ($generated@@86 ($generated@@389 $generated@@444) ($generated@@295 ($generated@@234 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@389 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@328 (type $generated@@449))))
(let (($generated@@451 ($generated@@327 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@326 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@325 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@153) (= (type $generated@@453) $generated@@153)) ($generated@@0 ($generated@@86 ($generated@@397 $generated@@449) ($generated@@295 ($generated@@234 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@397 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@153) ($generated@@235 $generated@@454 $generated@@46)) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@454)) $generated@@454) ($generated@@140 ($generated@@345 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@153) ($generated@@235 $generated@@455 $generated@@47)) (and (= ($generated@@295 ($generated@@345 $generated@@3 $generated@@455)) $generated@@455) ($generated@@140 ($generated@@345 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@153) ($generated@@235 $generated@@456 $generated@@44)) (and (= ($generated@@295 ($generated@@345 $generated@@4 $generated@@456)) $generated@@456) ($generated@@140 ($generated@@345 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@153) ($generated@@235 $generated@@458 $generated@@45)) (and (= ($generated@@295 ($generated@@345 $generated@@457 $generated@@458)) $generated@@458) ($generated@@140 ($generated@@345 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@69) (= ($generated@@235 ($generated@@295 $generated@@459) $generated@@460) ($generated@@140 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@235 ($generated@@295 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@84 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@81 $generated@@462 $generated@@2)) (<= 0 ($generated@@300 $generated@@461))))
 :pattern ( ($generated@@300 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@282 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@281 $generated@@464)) (<= 0 ($generated@@280 $generated@@463))))
 :pattern ( ($generated@@280 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@69)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@69) (= (type $generated@@472) $generated@@69)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@153) (= (type $generated@@486) $generated@@153)) (= ($generated@@272 ($generated@@234 $generated@@485 $generated@@486)) $generated@@62))
 :pattern ( ($generated@@234 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@143 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@143 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@491 ($generated@@143 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@143 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@153) (= (type $generated@@496) $generated@@153)) (= ($generated@@151 ($generated@@234 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@234 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@153) (= (type $generated@@498) $generated@@153)) (= ($generated@@152 ($generated@@234 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@234 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@282 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@281 $generated@@153)) (= (type $generated@@506) $generated@@69)) (= (type $generated@@507) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@280 $generated@@505))) ($generated@@266 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@79 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@80 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@80 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@253 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@253 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@77 ($generated@@253 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@258 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@258 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@258 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@158 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@158 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@158 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@77 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@272 ($generated@@290 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@290 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@287 ($generated@@290 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@290 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(= ($generated@@345 $generated@@530 ($generated@@295 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@295 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@308 $generated@@153 $generated@@153)) (= (type $generated@@532) $generated@@69)) (= (type $generated@@533) $generated@@69)) (= ($generated@@140 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@531) $generated@@534))) (and ($generated@@235 ($generated@@86 ($generated@@390 $generated@@531) $generated@@534) $generated@@533) ($generated@@235 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@531) $generated@@534))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@140 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@536) $generated@@69)) (= (type $generated@@537) $generated@@69)) (= ($generated@@140 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@535) $generated@@538))) (and ($generated@@235 ($generated@@86 ($generated@@398 $generated@@535) $generated@@538) $generated@@537) ($generated@@235 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@535) $generated@@538))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@140 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@153) (= (type $generated@@542) $generated@@153)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@234 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@234 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@153) (= (type $generated@@544) $generated@@153)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@234 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@234 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@153) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@69)) ($generated@@235 $generated@@545 ($generated@@415 $generated@@546 $generated@@547))) (and (= ($generated@@295 ($generated@@345 ($generated@@308 $generated@@153 $generated@@153) $generated@@545)) $generated@@545) ($generated@@140 ($generated@@345 ($generated@@308 $generated@@153 $generated@@153) $generated@@545) ($generated@@415 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@235 $generated@@545 ($generated@@415 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@153) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@69)) ($generated@@235 $generated@@548 ($generated@@423 $generated@@549 $generated@@550))) (and (= ($generated@@295 ($generated@@345 ($generated@@326 $generated@@153 $generated@@153) $generated@@548)) $generated@@548) ($generated@@140 ($generated@@345 ($generated@@326 $generated@@153 $generated@@153) $generated@@548) ($generated@@423 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@235 $generated@@548 ($generated@@423 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@69) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@153)) ($generated@@235 $generated@@553 ($generated@@143 $generated@@551 $generated@@552))) (and (= ($generated@@295 ($generated@@345 $generated@@144 $generated@@553)) $generated@@553) ($generated@@140 ($generated@@345 $generated@@144 $generated@@553) ($generated@@143 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@235 $generated@@553 ($generated@@143 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@86 ($generated@@433 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@86 ($generated@@433 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@74)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@69) (= (type $generated@@559) $generated@@69)) (and (= ($generated@@77 ($generated@@143 $generated@@558 $generated@@559)) $generated@@63) (= ($generated@@556 ($generated@@143 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@143 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@144) (= ($generated@@539 ($generated@@295 $generated@@560)) ($generated@@540 $generated@@560)))
 :pattern ( ($generated@@539 ($generated@@295 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@153) ($generated@@235 $generated@@561 ($generated@@80 0))) (and (= ($generated@@295 ($generated@@345 $generated@@2 $generated@@561)) $generated@@561) ($generated@@140 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@561) ($generated@@80 0))))
 :pattern ( ($generated@@235 $generated@@561 ($generated@@80 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@153) (= (type $generated@@563) $generated@@69)) ($generated@@235 $generated@@562 ($generated@@253 $generated@@563))) (and (= ($generated@@295 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@562)) $generated@@562) ($generated@@140 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@562) ($generated@@253 $generated@@563))))
 :pattern ( ($generated@@235 $generated@@562 ($generated@@253 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@153) (= (type $generated@@565) $generated@@69)) ($generated@@235 $generated@@564 ($generated@@258 $generated@@565))) (and (= ($generated@@295 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@345 ($generated@@81 $generated@@153 $generated@@4) $generated@@564) ($generated@@258 $generated@@565))))
 :pattern ( ($generated@@235 $generated@@564 ($generated@@258 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@153) (= (type $generated@@567) $generated@@69)) ($generated@@235 $generated@@566 ($generated@@158 $generated@@567))) (and (= ($generated@@295 ($generated@@345 ($generated@@81 $generated@@153 $generated@@2) $generated@@566)) $generated@@566) ($generated@@140 ($generated@@345 ($generated@@81 $generated@@153 $generated@@2) $generated@@566) ($generated@@158 $generated@@567))))
 :pattern ( ($generated@@235 $generated@@566 ($generated@@158 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@153) (= (type $generated@@569) $generated@@69)) ($generated@@235 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@295 ($generated@@345 ($generated@@281 $generated@@153) $generated@@568)) $generated@@568) ($generated@@140 ($generated@@345 ($generated@@281 $generated@@153) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@235 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (= ($generated@@77 $generated@@137) $generated@@61))
(assert (= ($generated@@556 $generated@@137) $generated@@66))
(assert (= ($generated@@77 $generated@@232) $generated@@65))
(assert (= ($generated@@556 $generated@@232) $generated@@68))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@570 ($generated@@158 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@153) (< 0 ($generated ($generated@@86 $generated@@570 $generated@@573)))) ($generated@@266 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@86 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@79 $generated@@570 ($generated@@158 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@144) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@265 $generated@@576) (and ($generated@@142 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@69) ($generated@@79 $generated@@574 ($generated@@143 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@79 $generated@@574 ($generated@@143 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@266 ($generated@@151 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@266 ($generated@@151 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@144) (= (type $generated@@579) $generated@@69)) (= (type $generated@@580) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@265 $generated@@580) (and ($generated@@142 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@69) ($generated@@79 $generated@@578 ($generated@@143 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@79 $generated@@578 ($generated@@143 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@266 ($generated@@152 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@266 ($generated@@152 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@144) (= (type $generated@@583) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@265 $generated@@583) (and ($generated@@231 $generated@@582) ($generated@@79 $generated@@582 $generated@@232 $generated@@583)))) ($generated@@79 ($generated@@8 ($generated@@287 $generated@@582)) $generated@@137 $generated@@583))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@287 $generated@@582)) $generated@@137 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@153) (= (type $generated@@585) $generated@@153)) (= ($generated@@234 ($generated@@250 $generated@@584) ($generated@@250 $generated@@585)) ($generated@@250 ($generated@@234 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@234 ($generated@@250 $generated@@584) ($generated@@250 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@248 $generated@@586))) ($generated@@250 ($generated@@295 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@248 $generated@@586))))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@290 ($generated@@248 $generated@@587)) ($generated@@250 ($generated@@290 $generated@@587)))
 :pattern ( ($generated@@290 ($generated@@248 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@295 ($generated@@250 $generated@@588)) ($generated@@250 ($generated@@295 $generated@@588)))
 :pattern ( ($generated@@295 ($generated@@250 $generated@@588)))
)))
(assert  (=> (<= 2 $generated@@376) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@81 $generated@@82 $generated@@83)) (or $generated@@377 (and (not (= 2 $generated@@376)) ($generated@@265 $generated@@589)))) (and $generated@@247 (= $generated@@378 (let (($generated@@590 $generated@@249))
($generated@@290 $generated@@590)))))
 :pattern ( $generated@@378 ($generated@@265 $generated@@589))
))))
(assert  (=> (<= 2 $generated@@376) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83)) (or $generated@@377 (and (not (= 2 $generated@@376)) ($generated@@265 $generated@@591)))) (and $generated@@247 (= $generated@@378 (let (($generated@@592 $generated@@249))
($generated@@290 $generated@@592)))))
 :weight 3
 :pattern ( $generated@@378 ($generated@@265 $generated@@591))
))))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@282 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@281 $generated@@594)) (= ($generated@@280 $generated@@593) 0)) (= $generated@@593 ($generated@@279 $generated@@594))))
 :pattern ( ($generated@@280 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@81 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@300 ($generated@@87 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@300 $generated@@595) ($generated ($generated@@86 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@300 ($generated@@87 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@600) $generated@@2)) ($generated@@79 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@79 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@602) $generated@@3)) ($generated@@79 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@79 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@604) $generated@@4)) ($generated@@79 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@79 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@606) $generated@@457)) ($generated@@79 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@79 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@608) $generated@@153)) ($generated@@79 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@79 $generated@@608 $generated@@48 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@281 $generated@@153)) (= (type $generated@@610) $generated@@69)) (= ($generated@@140 $generated@@609 ($generated@@499 $generated@@610)) (forall (($generated@@611 Int) ) (!  (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@280 $generated@@609))) ($generated@@235 ($generated@@500 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@500 $generated@@609 $generated@@611))
))))
 :pattern ( ($generated@@140 $generated@@609 ($generated@@499 $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@281 $generated@@153)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@280 $generated@@613))) (< ($generated@@540 ($generated@@345 $generated@@144 ($generated@@500 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@540 ($generated@@345 $generated@@144 ($generated@@500 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@308 $generated@@153 $generated@@153)) (= (type $generated@@616) $generated@@69)) (= (type $generated@@617) $generated@@69)) ($generated@@140 $generated@@615 ($generated@@415 $generated@@616 $generated@@617))) (and (and ($generated@@140 ($generated@@306 $generated@@615) ($generated@@253 $generated@@616)) ($generated@@140 ($generated@@355 $generated@@615) ($generated@@253 $generated@@617))) ($generated@@140 ($generated@@389 $generated@@615) ($generated@@253 ($generated@@143 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@140 $generated@@615 ($generated@@415 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@619) $generated@@69)) (= (type $generated@@620) $generated@@69)) ($generated@@140 $generated@@618 ($generated@@423 $generated@@619 $generated@@620))) (and (and ($generated@@140 ($generated@@324 $generated@@618) ($generated@@258 $generated@@619)) ($generated@@140 ($generated@@366 $generated@@618) ($generated@@258 $generated@@620))) ($generated@@140 ($generated@@397 $generated@@618) ($generated@@258 ($generated@@143 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@140 $generated@@618 ($generated@@423 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@140 $generated@@621 $generated@@46))
 :pattern ( ($generated@@140 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@140 $generated@@622 $generated@@47))
 :pattern ( ($generated@@140 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@140 $generated@@623 $generated@@44))
 :pattern ( ($generated@@140 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@457) ($generated@@140 $generated@@624 $generated@@45))
 :pattern ( ($generated@@140 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@153) ($generated@@140 $generated@@625 $generated@@48))
 :pattern ( ($generated@@140 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@628) ($generated@@165 $generated@@82 $generated@@4)) (= (type $generated@@629) $generated@@82)) (= (type $generated@@630) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@631) ($generated@@165 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@633  (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@250 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@250 ($generated@@11 true))) (=> (<= ($generated@@248 0) $generated@@626) (=> (and (<= ($generated@@248 0) $generated@@627) (= (ControlFlow 0 3) (- 0 2))) ($generated@@244 ($generated@@290 $generated@@626) ($generated@@290 $generated@@627))))))))
(let (($generated@@634  (=> (and (< $generated@@626 ($generated@@248 0)) (= (ControlFlow 0 6) 3)) $generated@@633)))
(let (($generated@@635  (=> (and (<= ($generated@@248 0) $generated@@626) (= (ControlFlow 0 5) 3)) $generated@@633)))
(let (($generated@@636  (=> (= $generated@@628 ($generated@@219 $generated@@629 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@635) (=> (= (ControlFlow 0 7) 6) $generated@@634)))))
(let (($generated@@637 true))
(let (($generated@@638  (=> (= $generated@@631 ($generated@@164 $generated@@629 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@637) (=> (= (ControlFlow 0 8) 7) $generated@@636)))))
(let (($generated@@639  (=> (and (and ($generated@@265 $generated@@630) ($generated@@632 $generated@@630)) (and (= 2 $generated@@376) (= (ControlFlow 0 9) 8))) $generated@@638)))
$generated@@639))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
