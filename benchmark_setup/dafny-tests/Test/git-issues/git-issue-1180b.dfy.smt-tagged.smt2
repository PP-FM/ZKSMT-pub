(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 () Int)
(declare-fun $generated@@88 (T@U) Int)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@93 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (Int) T@U)
(declare-fun $generated@@95 (T@T T@T) T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@T T@U T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (Int) Int)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@359 (T@U T@U) Bool)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@T) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 () T@T)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@527 (T@U Int) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@635 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@81))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@78) 11)) (= (type $generated@@65) $generated@@78)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@79) 12)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (= ($generated@@82 $generated@@60) 0))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@73)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@76)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@60) $generated@@61))
(assert  (and (= ($generated@@1 $generated@@89) 13) (= (type $generated@@91) $generated@@72)))
(assert  (=> (< 1 $generated@@87) (forall (($generated@@92 T@U) ) (!  (=> (= (type $generated@@92) $generated@@89) ($generated@@90 ($generated@@8 ($generated@@88 $generated@@92)) $generated@@91))
 :pattern ( ($generated@@88 $generated@@92))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@95 $generated@@103 $generated@@104)) 14)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@95 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@95 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@95 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@95 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@75 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 15)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@75 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@94 $generated@@147)) $generated@@72)
 :pattern ( ($generated@@94 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@95 $generated@@89 $generated@@96))) ($generated@@93 $generated@@148 ($generated@@94 0) $generated@@149))
 :pattern ( ($generated@@93 $generated@@148 ($generated@@94 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@152) ($generated@@95 $generated@@89 $generated@@96))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@89) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@95 $generated@@89 $generated@@96))) ($generated@@93 $generated@@154 $generated@@91 $generated@@155))
 :pattern ( ($generated@@93 $generated@@154 $generated@@91 $generated@@155))
)))
(assert  (and (= (type $generated@@156) $generated@@72) (= (type $generated@@157) $generated@@89)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@89) (= (type $generated@@159) ($generated@@95 $generated@@89 $generated@@96))) (= ($generated@@93 $generated@@158 $generated@@156 $generated@@159)  (or (= $generated@@158 $generated@@157) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@159 $generated@@158) $generated@@60)))))
 :pattern ( ($generated@@93 $generated@@158 $generated@@156 $generated@@159))
)))
(assert  (and (= (type $generated@@160) ($generated@@74 $generated@@2)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@165) $generated@@89)) (and ($generated@@161 $generated@@164) (and (not (= $generated@@165 $generated@@157)) (= ($generated@@162 $generated@@165) $generated@@156)))) ($generated@@90 ($generated@@101 ($generated@@99 $generated@@164 $generated@@165) $generated@@160) $generated@@46))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@164 $generated@@165) $generated@@160))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@90 $generated@@166 ($generated@@94 0)))
 :pattern ( ($generated@@90 $generated@@166 ($generated@@94 0)))
)))
(assert  (and (= ($generated@@1 $generated@@169) 16) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@170 $generated@@171)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@72) (= (type $generated@@173) $generated@@72)) (= (type $generated@@174) $generated@@169)) ($generated@@90 $generated@@174 ($generated@@168 $generated@@172 $generated@@173))) ($generated@@167 $generated@@174))
 :pattern ( ($generated@@167 $generated@@174) ($generated@@90 $generated@@174 ($generated@@168 $generated@@172 $generated@@173)))
)))
(assert  (and (and (= ($generated@@1 $generated@@178) 17) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@176 $generated@@179))
))) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@178)
 :pattern ( ($generated@@177 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@169) (= (type $generated@@182) $generated@@169)) true) (= ($generated@@175 $generated@@181 $generated@@182)  (and (= ($generated@@176 $generated@@181) ($generated@@176 $generated@@182)) (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)))))
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@95 $generated@@178 $generated@@2)) (= (type $generated@@187) $generated@@72)) ($generated@@90 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@90 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@89) (= ($generated@@90 $generated@@188 $generated@@156)  (or (= $generated@@188 $generated@@157) (= ($generated@@162 $generated@@188) $generated@@156))))
 :pattern ( ($generated@@90 $generated@@188 $generated@@156))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@89 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@75 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@89) (= (type $generated@@239) ($generated@@95 $generated@@89 $generated@@96))) (= (type $generated@@240) ($generated@@74 $generated@@4))) (= (type $generated@@242) $generated@@89)) (= (type $generated@@243) ($generated@@74 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (= (type $generated@@245) $generated@@72))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@89) (= (type $generated@@247) ($generated@@95 $generated@@89 $generated@@96))) (= ($generated@@93 $generated@@246 $generated@@245 $generated@@247) ($generated@@93 $generated@@246 $generated@@156 $generated@@247)))
 :pattern ( ($generated@@93 $generated@@246 $generated@@245 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@169)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@72) (= (type $generated@@253) $generated@@72)) (= (type $generated@@254) $generated@@178)) (= (type $generated@@255) $generated@@178)) (= ($generated@@90 ($generated@@248 $generated@@254 $generated@@255) ($generated@@168 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@90 ($generated@@248 $generated@@254 $generated@@255) ($generated@@168 $generated@@252 $generated@@253)))
)))
(assert (= ($generated@@82 $generated@@160) 0))
(assert (forall (($generated@@257 T@T) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@257 $generated@@258 $generated@@259)) ($generated@@74 $generated@@257))
 :pattern ( ($generated@@256 $generated@@257 $generated@@258 $generated@@259))
)))
(assert (= ($generated@@256 $generated@@2 $generated@@65 $generated@@71) $generated@@160))
(assert  (not ($generated@@260 $generated@@160)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@169) (= (type $generated@@262) $generated@@169)) (= ($generated@@175 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@175 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@72)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@95 $generated@@178 $generated@@4)) (= (type $generated@@266) $generated@@72)) (= ($generated@@90 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@178) ($generated@@0 ($generated@@99 $generated@@265 $generated@@267))) ($generated@@249 $generated@@267 $generated@@266))
 :pattern ( ($generated@@99 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@90 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@95 $generated@@178 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@90 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@178) ($generated@@0 ($generated@@99 $generated@@270 $generated@@272))) ($generated@@249 $generated@@272 $generated@@271))
 :pattern ( ($generated@@99 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@90 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 Int) ) (! (= ($generated@@273 $generated@@274) $generated@@274)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@72) (= (type $generated@@281) $generated@@72)) (= (type $generated@@282) $generated@@178)) (= (type $generated@@283) $generated@@178)) (= (type $generated@@284) ($generated@@95 $generated@@89 $generated@@96))) ($generated@@161 $generated@@284)) (= ($generated@@93 ($generated@@248 $generated@@282 $generated@@283) ($generated@@168 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@93 ($generated@@248 $generated@@282 $generated@@283) ($generated@@168 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@77)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@169) (= ($generated@@167 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@63)))
 :pattern ( ($generated@@167 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@169) ($generated@@167 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@178) (= (type $generated@@290) $generated@@178)) (= $generated@@288 ($generated@@248 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@167 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 19)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@2) (= ($generated@@90 $generated@@299 $generated@@91) (<= ($generated@@273 0) ($generated $generated@@299))))
 :pattern ( ($generated@@90 $generated@@299 $generated@@91))
)))
(assert ($generated@@260 $generated@@60))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@178)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@72) (= (type $generated@@304) ($generated@@95 $generated@@89 $generated@@96))) (= ($generated@@279 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@93 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@279 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@306) ($generated@@95 $generated@@89 $generated@@96))) (= (type $generated@@307) $generated@@178)) (= (type $generated@@308) $generated@@72)) ($generated@@150 $generated@@305 $generated@@306)) ($generated@@279 $generated@@307 $generated@@308 $generated@@305)) ($generated@@279 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@150 $generated@@305 $generated@@306) ($generated@@279 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@310) ($generated@@95 $generated@@89 $generated@@96))) (= (type $generated@@312) $generated@@72)) ($generated@@150 $generated@@309 $generated@@310)) ($generated@@93 $generated@@311 $generated@@312 $generated@@309)) ($generated@@93 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@150 $generated@@309 $generated@@310) ($generated@@93 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@314) $generated@@89)) (=> (and (and ($generated@@161 $generated@@313) (and (not (= $generated@@314 $generated@@157)) (= ($generated@@162 $generated@@314) $generated@@156))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@313 $generated@@314) $generated@@60))) ($generated@@93 ($generated@@101 ($generated@@99 $generated@@313 $generated@@314) $generated@@160) $generated@@46 $generated@@313)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@313 $generated@@314) $generated@@160))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@95 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@97 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@95 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@99 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 20)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@95 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@99 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@99 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 21)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@95 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@99 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@99 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert  (=> (< 1 $generated@@87) (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@358) $generated@@89)) (and ($generated@@161 $generated@@357) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@357 $generated@@358) $generated@@60)))) ($generated@@93 ($generated@@8 ($generated@@88 $generated@@358)) $generated@@91 $generated@@357))
 :pattern ( ($generated@@88 $generated@@358) ($generated@@101 ($generated@@99 $generated@@357 $generated@@358) $generated@@60))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@361) ($generated@@95 $generated@@89 $generated@@96))) ($generated@@359 $generated@@360 $generated@@361)) (and ($generated@@150 $generated@@360 $generated@@361) (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@75 (type $generated@@363))))
 (=> (and (and (= (type $generated@@362) $generated@@89) (= (type $generated@@363) ($generated@@74 $generated@@364))) (not ($generated@@260 $generated@@363))) (= ($generated@@101 ($generated@@99 $generated@@360 $generated@@362) $generated@@363) ($generated@@101 ($generated@@99 $generated@@361 $generated@@362) $generated@@363))))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@361 $generated@@362) $generated@@363))
))))
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@97 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@95 $generated@@366 $generated@@2)) (= ($generated@@184 $generated@@365) (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@366) (and (<= 0 ($generated ($generated@@99 $generated@@365 $generated@@367))) (<= ($generated ($generated@@99 $generated@@365 $generated@@367)) ($generated@@315 $generated@@365))))
 :pattern ( ($generated@@99 $generated@@365 $generated@@367))
)))))
 :pattern ( ($generated@@184 $generated@@365))
)))
(assert (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@178) ($generated@@249 $generated@@371 $generated@@91)) (and (= ($generated@@300 ($generated@@368 $generated@@2 $generated@@371)) $generated@@371) ($generated@@90 ($generated@@368 $generated@@2 $generated@@371) $generated@@91)))
 :pattern ( ($generated@@249 $generated@@371 $generated@@91))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@178) ($generated@@249 $generated@@372 $generated@@156)) (and (= ($generated@@300 ($generated@@368 $generated@@89 $generated@@372)) $generated@@372) ($generated@@90 ($generated@@368 $generated@@89 $generated@@372) $generated@@156)))
 :pattern ( ($generated@@249 $generated@@372 $generated@@156))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@178) ($generated@@249 $generated@@373 $generated@@245)) (and (= ($generated@@300 ($generated@@368 $generated@@89 $generated@@373)) $generated@@373) ($generated@@90 ($generated@@368 $generated@@89 $generated@@373) $generated@@245)))
 :pattern ( ($generated@@249 $generated@@373 $generated@@245))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@89) (= ($generated@@90 $generated@@374 $generated@@245)  (and ($generated@@90 $generated@@374 $generated@@156) (not (= $generated@@374 $generated@@157)))))
 :pattern ( ($generated@@90 $generated@@374 $generated@@245))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@325 (type $generated@@375))))
(let (($generated@@377 ($generated@@324 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@323 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@322 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@321 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@325 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@95 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@325 (type $generated@@382))))
(let (($generated@@384 ($generated@@324 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@323 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@322 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@99 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@343 (type $generated@@386))))
(let (($generated@@388 ($generated@@342 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@341 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@340 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@99 ($generated@@339 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@339 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@343 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@95 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@343 (type $generated@@393))))
(let (($generated@@395 ($generated@@342 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@341 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@340 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@99 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@95 $generated@@178 $generated@@2)) (= (type $generated@@398) $generated@@72)) (= ($generated@@90 $generated@@397 ($generated@@183 $generated@@398)) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@178) (< 0 ($generated ($generated@@99 $generated@@397 $generated@@399)))) ($generated@@249 $generated@@399 $generated@@398))
 :pattern ( ($generated@@99 $generated@@397 $generated@@399))
))))
 :pattern ( ($generated@@90 $generated@@397 ($generated@@183 $generated@@398)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@95 $generated@@178 $generated@@4)) (= (type $generated@@401) $generated@@72)) (= (type $generated@@402) ($generated@@95 $generated@@89 $generated@@96))) (= ($generated@@93 $generated@@400 ($generated@@263 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@178) ($generated@@0 ($generated@@99 $generated@@400 $generated@@403))) ($generated@@279 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@99 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@93 $generated@@400 ($generated@@263 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@95 $generated@@178 $generated@@4)) (= (type $generated@@405) $generated@@72)) (= (type $generated@@406) ($generated@@95 $generated@@89 $generated@@96))) (= ($generated@@93 $generated@@404 ($generated@@268 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@178) ($generated@@0 ($generated@@99 $generated@@404 $generated@@407))) ($generated@@279 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@99 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@93 $generated@@404 ($generated@@268 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(= ($generated ($generated@@99 ($generated@@316 $generated@@409) $generated@@408)) 0))
 :pattern ( (let (($generated@@409 (type $generated@@408)))
($generated@@99 ($generated@@316 $generated@@409) $generated@@408)))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@95 $generated@@178 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@325 (type $generated@@413))))
(let (($generated@@415 ($generated@@324 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@95 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@323 $generated@@178 $generated@@178)) (= (type $generated@@417) $generated@@178)) (= ($generated@@0 ($generated@@99 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@99 ($generated@@321 $generated@@416) ($generated@@176 ($generated@@368 $generated@@169 $generated@@417)))) (= ($generated@@99 ($generated@@411 $generated@@416) ($generated@@176 ($generated@@368 $generated@@169 $generated@@417))) ($generated@@177 ($generated@@368 $generated@@169 $generated@@417))))))
 :pattern ( ($generated@@99 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert  (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@420)) ($generated@@95 $generated@@178 $generated@@4))
 :pattern ( ($generated@@418 $generated@@420))
)) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@343 (type $generated@@421))))
(let (($generated@@423 ($generated@@342 (type $generated@@421))))
(= (type ($generated@@419 $generated@@421)) ($generated@@95 $generated@@423 $generated@@422))))
 :pattern ( ($generated@@419 $generated@@421))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@341 $generated@@178 $generated@@178)) (= (type $generated@@425) $generated@@178)) (= ($generated@@0 ($generated@@99 ($generated@@418 $generated@@424) $generated@@425))  (and ($generated@@0 ($generated@@99 ($generated@@339 $generated@@424) ($generated@@176 ($generated@@368 $generated@@169 $generated@@425)))) (= ($generated@@99 ($generated@@419 $generated@@424) ($generated@@176 ($generated@@368 $generated@@169 $generated@@425))) ($generated@@177 ($generated@@368 $generated@@169 $generated@@425))))))
 :pattern ( ($generated@@99 ($generated@@418 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@324 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@323 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@99 ($generated@@379 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@99 ($generated@@321 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@99 ($generated@@411 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@426) $generated@@430))
 :pattern ( ($generated@@99 ($generated@@411 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@99 ($generated@@379 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@342 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@341 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@99 ($generated@@390 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@99 ($generated@@339 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@99 ($generated@@419 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@99 ($generated@@339 $generated@@431) $generated@@435))
 :pattern ( ($generated@@99 ($generated@@419 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@99 ($generated@@390 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@72)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@323 $generated@@178 $generated@@178)) (= (type $generated@@440) $generated@@72)) (= (type $generated@@441) $generated@@72)) (= (type $generated@@442) ($generated@@95 $generated@@89 $generated@@96))) (= ($generated@@93 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@178) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@439) $generated@@443))) (and ($generated@@279 ($generated@@99 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@279 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@99 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@93 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@72)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@341 $generated@@178 $generated@@178)) (= (type $generated@@448) $generated@@72)) (= (type $generated@@449) $generated@@72)) (= (type $generated@@450) ($generated@@95 $generated@@89 $generated@@96))) (= ($generated@@93 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@178) ($generated@@0 ($generated@@99 ($generated@@339 $generated@@447) $generated@@451))) (and ($generated@@279 ($generated@@99 ($generated@@419 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@279 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@99 ($generated@@419 $generated@@447) $generated@@451))
 :pattern ( ($generated@@99 ($generated@@339 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@93 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@452) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@453) ($generated@@95 $generated@@89 $generated@@96))) (= (type $generated@@454) ($generated@@95 $generated@@89 $generated@@96))) (not (= $generated@@452 $generated@@454))) (and ($generated@@150 $generated@@452 $generated@@453) ($generated@@150 $generated@@453 $generated@@454))) ($generated@@150 $generated@@452 $generated@@454))
 :pattern ( ($generated@@150 $generated@@452 $generated@@453) ($generated@@150 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@T) ) (! (= (type ($generated@@455 $generated@@456)) ($generated@@95 $generated@@456 $generated@@4))
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@343 (type $generated@@457))))
(let (($generated@@459 ($generated@@342 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@341 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@340 $generated@@459 $generated@@458)) (= ($generated@@339 $generated@@457) ($generated@@455 $generated@@459))))))
 :pattern ( ($generated@@339 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@343 (type $generated@@460))))
(let (($generated@@462 ($generated@@342 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@341 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@340 $generated@@462 $generated@@461)) (= ($generated@@390 $generated@@460) ($generated@@455 $generated@@461))))))
 :pattern ( ($generated@@390 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@343 (type $generated@@463))))
(let (($generated@@465 ($generated@@342 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@341 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@340 $generated@@465 $generated@@464)) (= ($generated@@418 $generated@@463) ($generated@@455 $generated@@178))))))
 :pattern ( ($generated@@418 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@325 (type $generated@@466))))
(let (($generated@@468 ($generated@@324 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@323 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@322 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@178) (= (type $generated@@470) $generated@@178)) ($generated@@0 ($generated@@99 ($generated@@410 $generated@@466) ($generated@@300 ($generated@@248 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@410 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@343 (type $generated@@471))))
(let (($generated@@473 ($generated@@342 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@341 $generated@@473 $generated@@472)) (or (= $generated@@471 ($generated@@340 $generated@@473 $generated@@472)) (exists (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (and (and (= (type $generated@@474) $generated@@178) (= (type $generated@@475) $generated@@178)) ($generated@@0 ($generated@@99 ($generated@@418 $generated@@471) ($generated@@300 ($generated@@248 $generated@@474 $generated@@475)))))
 :no-pattern (type $generated@@474)
 :no-pattern (type $generated@@475)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
))))))
 :pattern ( ($generated@@418 $generated@@471))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@78)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@T) ) (!  (=> (and (= (type $generated@@478) $generated@@78) (= (type $generated@@479) $generated@@76)) (and (= ($generated@@476 ($generated@@256 $generated@@480 $generated@@478 $generated@@479)) $generated@@478) (= ($generated@@85 ($generated@@256 $generated@@480 $generated@@478 $generated@@479)) $generated@@479)))
 :pattern ( ($generated@@256 $generated@@480 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@178) ($generated@@249 $generated@@481 $generated@@46)) (and (= ($generated@@300 ($generated@@368 $generated@@2 $generated@@481)) $generated@@481) ($generated@@90 ($generated@@368 $generated@@2 $generated@@481) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@481 $generated@@46))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@178) ($generated@@249 $generated@@482 $generated@@47)) (and (= ($generated@@300 ($generated@@368 $generated@@3 $generated@@482)) $generated@@482) ($generated@@90 ($generated@@368 $generated@@3 $generated@@482) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@482 $generated@@47))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@178) ($generated@@249 $generated@@483 $generated@@44)) (and (= ($generated@@300 ($generated@@368 $generated@@4 $generated@@483)) $generated@@483) ($generated@@90 ($generated@@368 $generated@@4 $generated@@483) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@483 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@484) 22))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@178) ($generated@@249 $generated@@485 $generated@@45)) (and (= ($generated@@300 ($generated@@368 $generated@@484 $generated@@485)) $generated@@485) ($generated@@90 ($generated@@368 $generated@@484 $generated@@485) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@485 $generated@@45))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@72) (= ($generated@@249 ($generated@@300 $generated@@486) $generated@@487) ($generated@@90 $generated@@486 $generated@@487)))
 :pattern ( ($generated@@249 ($generated@@300 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@97 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@95 $generated@@489 $generated@@2)) (<= 0 ($generated@@315 $generated@@488))))
 :pattern ( ($generated@@315 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@294 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@293 $generated@@491)) (<= 0 ($generated@@292 $generated@@490))))
 :pattern ( ($generated@@292 $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@436 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@436 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@72)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@72) (= (type $generated@@499) $generated@@72)) (= ($generated@@496 ($generated@@436 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@436 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@72) (= (type $generated@@501) $generated@@72)) (= ($generated@@83 ($generated@@436 $generated@@500 $generated@@501)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@72)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@72) (= (type $generated@@505) $generated@@72)) (= ($generated@@502 ($generated@@444 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@444 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@72)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@72) (= (type $generated@@509) $generated@@72)) (= ($generated@@506 ($generated@@444 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@444 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@72) (= (type $generated@@511) $generated@@72)) (= ($generated@@83 ($generated@@444 $generated@@510 $generated@@511)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@178) (= (type $generated@@513) $generated@@178)) (= ($generated@@285 ($generated@@248 $generated@@512 $generated@@513)) $generated@@63))
 :pattern ( ($generated@@248 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@72)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@72) (= (type $generated@@517) $generated@@72)) (= ($generated@@514 ($generated@@168 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@168 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@72)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@72) (= (type $generated@@521) $generated@@72)) (= ($generated@@518 ($generated@@168 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@168 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@178) (= (type $generated@@523) $generated@@178)) (= ($generated@@176 ($generated@@248 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@248 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@178) (= (type $generated@@525) $generated@@178)) (= ($generated@@177 ($generated@@248 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@248 $generated@@524 $generated@@525))
)))
(assert  (and (forall (($generated@@528 T@U) ) (! (= (type ($generated@@526 $generated@@528)) $generated@@72)
 :pattern ( ($generated@@526 $generated@@528))
)) (forall (($generated@@529 T@U) ($generated@@530 Int) ) (! (let (($generated@@531 ($generated@@294 (type $generated@@529))))
(= (type ($generated@@527 $generated@@529 $generated@@530)) $generated@@531))
 :pattern ( ($generated@@527 $generated@@529 $generated@@530))
))))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@293 $generated@@178)) (= (type $generated@@533) $generated@@72)) (= (type $generated@@534) ($generated@@95 $generated@@89 $generated@@96))) (= ($generated@@93 $generated@@532 ($generated@@526 $generated@@533) $generated@@534) (forall (($generated@@535 Int) ) (!  (=> (and (<= 0 $generated@@535) (< $generated@@535 ($generated@@292 $generated@@532))) ($generated@@279 ($generated@@527 $generated@@532 $generated@@535) $generated@@533 $generated@@534))
 :pattern ( ($generated@@527 $generated@@532 $generated@@535))
))))
 :pattern ( ($generated@@93 $generated@@532 ($generated@@526 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@94 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@94 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@72) (= ($generated@@538 ($generated@@263 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@263 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@72) (= ($generated@@83 ($generated@@263 $generated@@541)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@72)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@72) (= ($generated@@542 ($generated@@268 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@268 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@72) (= ($generated@@83 ($generated@@268 $generated@@545)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@72)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@72) (= ($generated@@546 ($generated@@183 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@183 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@72) (= ($generated@@83 ($generated@@183 $generated@@549)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@72)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@72) (= ($generated@@550 ($generated@@526 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@526 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@72) (= ($generated@@83 ($generated@@526 $generated@@553)) $generated@@57))
 :pattern ( ($generated@@526 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
(= ($generated@@368 $generated@@555 ($generated@@300 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@300 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@323 $generated@@178 $generated@@178)) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) (= ($generated@@90 $generated@@556 ($generated@@436 $generated@@557 $generated@@558)) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@178) ($generated@@0 ($generated@@99 ($generated@@321 $generated@@556) $generated@@559))) (and ($generated@@249 ($generated@@99 ($generated@@411 $generated@@556) $generated@@559) $generated@@558) ($generated@@249 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@99 ($generated@@411 $generated@@556) $generated@@559))
 :pattern ( ($generated@@99 ($generated@@321 $generated@@556) $generated@@559))
))))
 :pattern ( ($generated@@90 $generated@@556 ($generated@@436 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@341 $generated@@178 $generated@@178)) (= (type $generated@@561) $generated@@72)) (= (type $generated@@562) $generated@@72)) (= ($generated@@90 $generated@@560 ($generated@@444 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@178) ($generated@@0 ($generated@@99 ($generated@@339 $generated@@560) $generated@@563))) (and ($generated@@249 ($generated@@99 ($generated@@419 $generated@@560) $generated@@563) $generated@@562) ($generated@@249 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@99 ($generated@@419 $generated@@560) $generated@@563))
 :pattern ( ($generated@@99 ($generated@@339 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@90 $generated@@560 ($generated@@444 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@178) (= (type $generated@@567) $generated@@178)) (< ($generated@@564 $generated@@566) ($generated@@565 ($generated@@248 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@248 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@178) (= (type $generated@@569) $generated@@178)) (< ($generated@@564 $generated@@569) ($generated@@565 ($generated@@248 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@248 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@178) (= (type $generated@@571) $generated@@72)) (= (type $generated@@572) $generated@@72)) ($generated@@249 $generated@@570 ($generated@@436 $generated@@571 $generated@@572))) (and (= ($generated@@300 ($generated@@368 ($generated@@323 $generated@@178 $generated@@178) $generated@@570)) $generated@@570) ($generated@@90 ($generated@@368 ($generated@@323 $generated@@178 $generated@@178) $generated@@570) ($generated@@436 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@249 $generated@@570 ($generated@@436 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@178) (= (type $generated@@574) $generated@@72)) (= (type $generated@@575) $generated@@72)) ($generated@@249 $generated@@573 ($generated@@444 $generated@@574 $generated@@575))) (and (= ($generated@@300 ($generated@@368 ($generated@@341 $generated@@178 $generated@@178) $generated@@573)) $generated@@573) ($generated@@90 ($generated@@368 ($generated@@341 $generated@@178 $generated@@178) $generated@@573) ($generated@@444 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@249 $generated@@573 ($generated@@444 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@72) (= (type $generated@@577) $generated@@72)) (= (type $generated@@578) $generated@@178)) ($generated@@249 $generated@@578 ($generated@@168 $generated@@576 $generated@@577))) (and (= ($generated@@300 ($generated@@368 $generated@@169 $generated@@578)) $generated@@578) ($generated@@90 ($generated@@368 $generated@@169 $generated@@578) ($generated@@168 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@249 $generated@@578 ($generated@@168 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (not ($generated@@0 ($generated@@99 ($generated@@455 $generated@@580) $generated@@579))))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@99 ($generated@@455 $generated@@580) $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@79)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@72) (= (type $generated@@584) $generated@@72)) (and (= ($generated@@83 ($generated@@168 $generated@@583 $generated@@584)) $generated@@64) (= ($generated@@581 ($generated@@168 $generated@@583 $generated@@584)) $generated@@69)))
 :pattern ( ($generated@@168 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@169) (= ($generated@@564 ($generated@@300 $generated@@585)) ($generated@@565 $generated@@585)))
 :pattern ( ($generated@@564 ($generated@@300 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@178) ($generated@@249 $generated@@586 ($generated@@94 0))) (and (= ($generated@@300 ($generated@@368 $generated@@2 $generated@@586)) $generated@@586) ($generated@@90 ($generated@@368 ($generated@@95 $generated@@178 $generated@@4) $generated@@586) ($generated@@94 0))))
 :pattern ( ($generated@@249 $generated@@586 ($generated@@94 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@178) (= (type $generated@@588) $generated@@72)) ($generated@@249 $generated@@587 ($generated@@263 $generated@@588))) (and (= ($generated@@300 ($generated@@368 ($generated@@95 $generated@@178 $generated@@4) $generated@@587)) $generated@@587) ($generated@@90 ($generated@@368 ($generated@@95 $generated@@178 $generated@@4) $generated@@587) ($generated@@263 $generated@@588))))
 :pattern ( ($generated@@249 $generated@@587 ($generated@@263 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@178) (= (type $generated@@590) $generated@@72)) ($generated@@249 $generated@@589 ($generated@@268 $generated@@590))) (and (= ($generated@@300 ($generated@@368 ($generated@@95 $generated@@178 $generated@@4) $generated@@589)) $generated@@589) ($generated@@90 ($generated@@368 ($generated@@95 $generated@@178 $generated@@4) $generated@@589) ($generated@@268 $generated@@590))))
 :pattern ( ($generated@@249 $generated@@589 ($generated@@268 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@178) (= (type $generated@@592) $generated@@72)) ($generated@@249 $generated@@591 ($generated@@183 $generated@@592))) (and (= ($generated@@300 ($generated@@368 ($generated@@95 $generated@@178 $generated@@2) $generated@@591)) $generated@@591) ($generated@@90 ($generated@@368 ($generated@@95 $generated@@178 $generated@@2) $generated@@591) ($generated@@183 $generated@@592))))
 :pattern ( ($generated@@249 $generated@@591 ($generated@@183 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@178) (= (type $generated@@594) $generated@@72)) ($generated@@249 $generated@@593 ($generated@@526 $generated@@594))) (and (= ($generated@@300 ($generated@@368 ($generated@@293 $generated@@178) $generated@@593)) $generated@@593) ($generated@@90 ($generated@@368 ($generated@@293 $generated@@178) $generated@@593) ($generated@@526 $generated@@594))))
 :pattern ( ($generated@@249 $generated@@593 ($generated@@526 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
 (=> (and (and (and (= (type $generated@@595) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@596) $generated@@89)) (= (type $generated@@597) ($generated@@74 $generated@@599))) ($generated@@161 ($generated@@100 $generated@@595 $generated@@596 ($generated@@102 ($generated@@99 $generated@@595 $generated@@596) $generated@@597 $generated@@598)))) ($generated@@150 $generated@@595 ($generated@@100 $generated@@595 $generated@@596 ($generated@@102 ($generated@@99 $generated@@595 $generated@@596) $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@100 $generated@@595 $generated@@596 ($generated@@102 ($generated@@99 $generated@@595 $generated@@596) $generated@@597 $generated@@598)))
)))
(assert (= ($generated@@83 $generated@@91) $generated@@62))
(assert (= ($generated@@581 $generated@@91) $generated@@68))
(assert (= ($generated@@83 $generated@@156) $generated@@66))
(assert (= ($generated@@581 $generated@@156) $generated@@70))
(assert (= ($generated@@83 $generated@@245) $generated@@67))
(assert (= ($generated@@581 $generated@@245) $generated@@70))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@95 $generated@@178 $generated@@2)) (= (type $generated@@601) $generated@@72)) (= (type $generated@@602) ($generated@@95 $generated@@89 $generated@@96))) (= ($generated@@93 $generated@@600 ($generated@@183 $generated@@601) $generated@@602) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@178) (< 0 ($generated ($generated@@99 $generated@@600 $generated@@603)))) ($generated@@279 $generated@@603 $generated@@601 $generated@@602))
 :pattern ( ($generated@@99 $generated@@600 $generated@@603))
))))
 :pattern ( ($generated@@93 $generated@@600 ($generated@@183 $generated@@601) $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@169) (= (type $generated@@605) $generated@@72)) (= (type $generated@@606) ($generated@@95 $generated@@89 $generated@@96))) (and ($generated@@161 $generated@@606) (and ($generated@@167 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@72) ($generated@@93 $generated@@604 ($generated@@168 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@93 $generated@@604 ($generated@@168 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@279 ($generated@@176 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@279 ($generated@@176 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@169) (= (type $generated@@609) $generated@@72)) (= (type $generated@@610) ($generated@@95 $generated@@89 $generated@@96))) (and ($generated@@161 $generated@@610) (and ($generated@@167 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@72) ($generated@@93 $generated@@608 ($generated@@168 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@93 $generated@@608 ($generated@@168 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@279 ($generated@@177 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@279 ($generated@@177 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@178) (= (type $generated@@613) $generated@@178)) (= ($generated@@248 ($generated@@275 $generated@@612) ($generated@@275 $generated@@613)) ($generated@@275 ($generated@@248 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@248 ($generated@@275 $generated@@612) ($generated@@275 $generated@@613)))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@273 $generated@@614))) ($generated@@275 ($generated@@300 ($generated@@8 $generated@@614))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@273 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@300 ($generated@@275 $generated@@615)) ($generated@@275 ($generated@@300 $generated@@615)))
 :pattern ( ($generated@@300 ($generated@@275 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@294 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@293 $generated@@617)) (= ($generated@@292 $generated@@616) 0)) (= $generated@@616 ($generated@@291 $generated@@617))))
 :pattern ( ($generated@@292 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@95 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@315 ($generated@@100 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@315 $generated@@618) ($generated ($generated@@99 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@315 ($generated@@100 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@623) $generated@@2)) ($generated@@93 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@93 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@625) $generated@@3)) ($generated@@93 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@93 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@627) $generated@@4)) ($generated@@93 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@93 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@629) $generated@@484)) ($generated@@93 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@93 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@95 $generated@@89 $generated@@96)) (= (type $generated@@631) $generated@@178)) ($generated@@93 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@93 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@293 $generated@@178)) (= (type $generated@@633) $generated@@72)) (= ($generated@@90 $generated@@632 ($generated@@526 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@292 $generated@@632))) ($generated@@249 ($generated@@527 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@527 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@90 $generated@@632 ($generated@@526 $generated@@633)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (= (type $generated@@636) ($generated@@293 $generated@@178)) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@292 $generated@@636))) (< ($generated@@565 ($generated@@368 $generated@@169 ($generated@@527 $generated@@636 $generated@@637))) ($generated@@635 $generated@@636))))
 :pattern ( ($generated@@565 ($generated@@368 $generated@@169 ($generated@@527 $generated@@636 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@323 $generated@@178 $generated@@178)) (= (type $generated@@639) $generated@@72)) (= (type $generated@@640) $generated@@72)) ($generated@@90 $generated@@638 ($generated@@436 $generated@@639 $generated@@640))) (and (and ($generated@@90 ($generated@@321 $generated@@638) ($generated@@263 $generated@@639)) ($generated@@90 ($generated@@379 $generated@@638) ($generated@@263 $generated@@640))) ($generated@@90 ($generated@@410 $generated@@638) ($generated@@263 ($generated@@168 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@90 $generated@@638 ($generated@@436 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@341 $generated@@178 $generated@@178)) (= (type $generated@@642) $generated@@72)) (= (type $generated@@643) $generated@@72)) ($generated@@90 $generated@@641 ($generated@@444 $generated@@642 $generated@@643))) (and (and ($generated@@90 ($generated@@339 $generated@@641) ($generated@@268 $generated@@642)) ($generated@@90 ($generated@@390 $generated@@641) ($generated@@268 $generated@@643))) ($generated@@90 ($generated@@418 $generated@@641) ($generated@@268 ($generated@@168 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@90 $generated@@641 ($generated@@444 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) ($generated@@90 $generated@@644 $generated@@46))
 :pattern ( ($generated@@90 $generated@@644 $generated@@46))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@3) ($generated@@90 $generated@@645 $generated@@47))
 :pattern ( ($generated@@90 $generated@@645 $generated@@47))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@4) ($generated@@90 $generated@@646 $generated@@44))
 :pattern ( ($generated@@90 $generated@@646 $generated@@44))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@484) ($generated@@90 $generated@@647 $generated@@45))
 :pattern ( ($generated@@90 $generated@@647 $generated@@45))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@178) ($generated@@90 $generated@@648 $generated@@48))
 :pattern ( ($generated@@90 $generated@@648 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 (T@U) Bool)
(declare-fun $generated@@652 () T@U)
(assert  (and (and (= (type $generated@@649) ($generated@@191 $generated@@89 $generated@@4)) (= (type $generated@@650) ($generated@@95 $generated@@89 $generated@@96))) (= (type $generated@@652) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@653  (=> (and (= $generated@@649 ($generated@@190 $generated@@157 $generated@@650 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@90 ($generated@@8 ($generated@@273 65)) $generated@@91))))
(let (($generated@@654  (=> (and ($generated@@161 $generated@@650) ($generated@@651 $generated@@650)) (=> (and (and (not (= $generated@@652 $generated@@157)) ($generated@@90 $generated@@652 $generated@@245)) (and (= 2 $generated@@87) (= (ControlFlow 0 3) 2))) $generated@@653))))
$generated@@654)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (Int) Int)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@T T@T) T@U)
(declare-fun $generated@@280 (T@T T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 () T@U)
(declare-fun $generated@@320 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@T) T@U)
(declare-fun $generated@@425 () T@T)
(declare-fun $generated@@429 (T@U Int) Int)
(declare-fun $generated@@430 (T@U Int) Bool)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U Int) T@U)
(declare-fun $generated@@481 (T@U) Int)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@78) 11) (= (type $generated@@80) $generated@@66)))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@81 T@U) ) (!  (=> (= (type $generated@@81) $generated@@78) ($generated@@79 ($generated@@8 ($generated@@77 $generated@@81)) $generated@@80))
 :pattern ( ($generated@@77 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@69 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@69 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@66)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@140 $generated@@80 $generated@@141))
 :pattern ( ($generated@@82 $generated@@140 $generated@@80 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@79 $generated@@142 ($generated@@83 0)))
 :pattern ( ($generated@@79 $generated@@142 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@79 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@79 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@78)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@78)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@162) $generated@@66)) ($generated@@79 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@79 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@85 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@69 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@85) (= (type $generated@@213) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@214) ($generated@@68 $generated@@4))) (= (type $generated@@216) $generated@@85)) (= (type $generated@@217) ($generated@@68 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@221 $generated@@222)) $generated@@145)
 :pattern ( ($generated@@219 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@223) $generated@@66) (= (type $generated@@224) $generated@@66)) (= (type $generated@@225) $generated@@78)) (= (type $generated@@226) $generated@@78)) (= ($generated@@79 ($generated@@219 $generated@@225 $generated@@226) ($generated@@144 $generated@@223 $generated@@224))  (and ($generated@@220 $generated@@225 $generated@@223) ($generated@@220 $generated@@226 $generated@@224))))
 :pattern ( ($generated@@79 ($generated@@219 $generated@@225 $generated@@226) ($generated@@144 $generated@@223 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@145) (= (type $generated@@228) $generated@@145)) (= ($generated@@151 $generated@@227 $generated@@228) (= $generated@@227 $generated@@228)))
 :pattern ( ($generated@@151 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@66)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@232) $generated@@66)) (= ($generated@@79 $generated@@231 ($generated@@229 $generated@@232)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@78) ($generated@@0 ($generated@@89 $generated@@231 $generated@@233))) ($generated@@220 $generated@@233 $generated@@232))
 :pattern ( ($generated@@89 $generated@@231 $generated@@233))
))))
 :pattern ( ($generated@@79 $generated@@231 ($generated@@229 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@66)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@237) $generated@@66)) (= ($generated@@79 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@78) ($generated@@0 ($generated@@89 $generated@@236 $generated@@238))) ($generated@@220 $generated@@238 $generated@@237))
 :pattern ( ($generated@@89 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@79 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 Int) ) (! (= ($generated@@239 $generated@@240) $generated@@240)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@66) (= (type $generated@@248) $generated@@66)) (= (type $generated@@249) $generated@@78)) (= (type $generated@@250) $generated@@78)) (= (type $generated@@251) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@245 $generated@@251)) (= ($generated@@82 ($generated@@219 $generated@@249 $generated@@250) ($generated@@144 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@82 ($generated@@219 $generated@@249 $generated@@250) ($generated@@144 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@145) (= ($generated@@143 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@145) ($generated@@143 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@78) (= (type $generated@@257) $generated@@78)) (= $generated@@255 ($generated@@219 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@2) (= ($generated@@79 $generated@@266 $generated@@80) (<= ($generated@@239 0) ($generated $generated@@266))))
 :pattern ( ($generated@@79 $generated@@266 $generated@@80))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@78)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@246 ($generated@@267 $generated@@269) $generated@@270 $generated@@271) ($generated@@82 $generated@@269 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@246 ($generated@@267 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@T) ) (! (= (type ($generated@@273 $generated@@274)) ($generated@@84 $generated@@274 $generated@@2))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@87 (type $generated@@275))))
 (=> (= (type $generated@@275) ($generated@@84 $generated@@276 $generated@@2)) (and (= (= ($generated@@272 $generated@@275) 0) (= $generated@@275 ($generated@@273 $generated@@276))) (=> (not (= ($generated@@272 $generated@@275) 0)) (exists (($generated@@277 T@U) ) (!  (and (= (type $generated@@277) $generated@@276) (< 0 ($generated ($generated@@89 $generated@@275 $generated@@277))))
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
))))))
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert  (and (and (and (and (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@283 $generated@@284)) 18)) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@285 $generated@@286)) $generated@@285)
 :pattern ( ($generated@@280 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@280 $generated@@287 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@280 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@281 (type $generated@@289))))
(= (type ($generated@@278 $generated@@289)) ($generated@@84 $generated@@290 $generated@@4)))
 :pattern ( ($generated@@278 $generated@@289))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= (type ($generated@@279 $generated@@291 $generated@@292)) ($generated@@280 $generated@@291 $generated@@292))
 :pattern ( ($generated@@279 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@T) ) (! (let (($generated@@295 (type $generated@@293)))
 (not ($generated@@0 ($generated@@89 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293))))
 :pattern ( (let (($generated@@295 (type $generated@@293)))
($generated@@89 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293)))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 19)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@84 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@89 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@89 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert (= (type $generated@@314) $generated@@66))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@315) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@316) $generated@@78)) (and ($generated@@245 $generated@@315) ($generated@@246 $generated@@316 $generated@@314 $generated@@315))) ($generated@@82 ($generated@@8 ($generated@@77 $generated@@316)) $generated@@80 $generated@@315))
 :pattern ( ($generated@@77 $generated@@316) ($generated@@246 $generated@@316 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@87 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@84 $generated@@318 $generated@@2)) (= ($generated@@159 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@89 $generated@@317 $generated@@319))) (<= ($generated ($generated@@89 $generated@@317 $generated@@319)) ($generated@@272 $generated@@317))))
 :pattern ( ($generated@@89 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@159 $generated@@317))
)))
(assert (forall (($generated@@321 T@T) ($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@320 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@78) ($generated@@220 $generated@@323 $generated@@80)) (and (= ($generated@@267 ($generated@@320 $generated@@2 $generated@@323)) $generated@@323) ($generated@@79 ($generated@@320 $generated@@2 $generated@@323) $generated@@80)))
 :pattern ( ($generated@@220 $generated@@323 $generated@@80))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@282 (type $generated@@324))))
(let (($generated@@326 ($generated@@281 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@280 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@279 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@89 ($generated@@278 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@278 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@282 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@282 (type $generated@@331))))
(let (($generated@@333 ($generated@@281 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@280 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@279 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@89 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@300 (type $generated@@335))))
(let (($generated@@337 ($generated@@299 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@298 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@297 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@89 ($generated@@296 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@296 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@300 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@84 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@300 (type $generated@@342))))
(let (($generated@@344 ($generated@@299 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@298 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@297 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@89 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@347) $generated@@66)) (= ($generated@@79 $generated@@346 ($generated@@158 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@346 $generated@@348)))) ($generated@@220 $generated@@348 $generated@@347))
 :pattern ( ($generated@@89 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@79 $generated@@346 ($generated@@158 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@350) $generated@@66)) (= (type $generated@@351) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@349 ($generated@@229 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@78) ($generated@@0 ($generated@@89 $generated@@349 $generated@@352))) ($generated@@246 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@89 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@82 $generated@@349 ($generated@@229 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@354) $generated@@66)) (= (type $generated@@355) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@353 ($generated@@234 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@78) ($generated@@0 ($generated@@89 $generated@@353 $generated@@356))) ($generated@@246 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@89 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@82 $generated@@353 ($generated@@234 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@89 ($generated@@273 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@89 ($generated@@273 $generated@@358) $generated@@357)))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@282 (type $generated@@362))))
(let (($generated@@364 ($generated@@281 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@84 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@280 $generated@@78 $generated@@78)) (= (type $generated@@366) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@89 ($generated@@278 $generated@@365) ($generated@@152 ($generated@@320 $generated@@145 $generated@@366)))) (= ($generated@@89 ($generated@@360 $generated@@365) ($generated@@152 ($generated@@320 $generated@@145 $generated@@366))) ($generated@@153 ($generated@@320 $generated@@145 $generated@@366))))))
 :pattern ( ($generated@@89 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@300 (type $generated@@370))))
(let (($generated@@372 ($generated@@299 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@84 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@298 $generated@@78 $generated@@78)) (= (type $generated@@374) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@89 ($generated@@296 $generated@@373) ($generated@@152 ($generated@@320 $generated@@145 $generated@@374)))) (= ($generated@@89 ($generated@@368 $generated@@373) ($generated@@152 ($generated@@320 $generated@@145 $generated@@374))) ($generated@@153 ($generated@@320 $generated@@145 $generated@@374))))))
 :pattern ( ($generated@@89 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@281 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@280 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@89 ($generated@@328 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@89 ($generated@@278 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@89 ($generated@@360 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@89 ($generated@@278 $generated@@375) $generated@@379))
 :pattern ( ($generated@@89 ($generated@@360 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@89 ($generated@@328 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@299 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@298 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@89 ($generated@@339 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@89 ($generated@@296 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@89 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@89 ($generated@@296 $generated@@380) $generated@@384))
 :pattern ( ($generated@@89 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@89 ($generated@@339 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@66)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@280 $generated@@78 $generated@@78)) (= (type $generated@@389) $generated@@66)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@278 $generated@@388) $generated@@392))) (and ($generated@@246 ($generated@@89 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@246 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@89 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@89 ($generated@@278 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@82 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@298 $generated@@78 $generated@@78)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@296 $generated@@396) $generated@@400))) (and ($generated@@246 ($generated@@89 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@246 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@89 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@89 ($generated@@296 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@82 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@T) ) (! (= (type ($generated@@401 $generated@@402)) ($generated@@84 $generated@@402 $generated@@4))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@300 (type $generated@@403))))
(let (($generated@@405 ($generated@@299 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@298 $generated@@405 $generated@@404)) (= (= $generated@@403 ($generated@@297 $generated@@405 $generated@@404)) (= ($generated@@296 $generated@@403) ($generated@@401 $generated@@405))))))
 :pattern ( ($generated@@296 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@300 (type $generated@@406))))
(let (($generated@@408 ($generated@@299 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@298 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@297 $generated@@408 $generated@@407)) (= ($generated@@339 $generated@@406) ($generated@@401 $generated@@407))))))
 :pattern ( ($generated@@339 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@300 (type $generated@@409))))
(let (($generated@@411 ($generated@@299 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@298 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@297 $generated@@411 $generated@@410)) (= ($generated@@367 $generated@@409) ($generated@@401 $generated@@78))))))
 :pattern ( ($generated@@367 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@282 (type $generated@@412))))
(let (($generated@@414 ($generated@@281 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@280 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@279 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@78) (= (type $generated@@416) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@359 $generated@@412) ($generated@@267 ($generated@@219 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@300 (type $generated@@417))))
(let (($generated@@419 ($generated@@299 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@298 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@297 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@78) (= (type $generated@@421) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@367 $generated@@417) ($generated@@267 ($generated@@219 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@367 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@78) ($generated@@220 $generated@@422 $generated@@46)) (and (= ($generated@@267 ($generated@@320 $generated@@2 $generated@@422)) $generated@@422) ($generated@@79 ($generated@@320 $generated@@2 $generated@@422) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@422 $generated@@46))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@78) ($generated@@220 $generated@@423 $generated@@47)) (and (= ($generated@@267 ($generated@@320 $generated@@3 $generated@@423)) $generated@@423) ($generated@@79 ($generated@@320 $generated@@3 $generated@@423) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@423 $generated@@47))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@78) ($generated@@220 $generated@@424 $generated@@44)) (and (= ($generated@@267 ($generated@@320 $generated@@4 $generated@@424)) $generated@@424) ($generated@@79 ($generated@@320 $generated@@4 $generated@@424) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@424 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@425) 20))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@78) ($generated@@220 $generated@@426 $generated@@45)) (and (= ($generated@@267 ($generated@@320 $generated@@425 $generated@@426)) $generated@@426) ($generated@@79 ($generated@@320 $generated@@425 $generated@@426) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@426 $generated@@45))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@66) (= ($generated@@220 ($generated@@267 $generated@@427) $generated@@428) ($generated@@79 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@220 ($generated@@267 $generated@@427) $generated@@428))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@431 T@U) ($generated@@432 Int) ) (!  (=> (and (= (type $generated@@431) $generated@@78) (or ($generated@@430 $generated@@431 $generated@@432) (and (not (= 2 $generated@@76)) (and (and ($generated@@220 $generated@@431 $generated@@314) (<= ($generated@@239 0) $generated@@432)) (not (= $generated@@432 7)))))) (and (= ($generated@@429 $generated@@431 $generated@@432) ($generated@@77 $generated@@431)) (<= ($generated@@239 0) ($generated@@429 $generated@@431 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431 $generated@@432))
))))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@87 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@84 $generated@@434 $generated@@2)) (<= 0 ($generated@@272 $generated@@433))))
 :pattern ( ($generated@@272 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@261 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@260 $generated@@436)) (<= 0 ($generated@@259 $generated@@435))))
 :pattern ( ($generated@@259 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@66) (= (type $generated@@440) $generated@@66)) (= ($generated@@437 ($generated@@385 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@385 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@385 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@385 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@74 ($generated@@385 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@393 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@393 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@78) (= (type $generated@@458) $generated@@78)) (= ($generated@@252 ($generated@@219 $generated@@457 $generated@@458)) $generated@@62))
 :pattern ( ($generated@@219 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@144 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@144 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@144 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@78) (= (type $generated@@468) $generated@@78)) (= ($generated@@152 ($generated@@219 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@219 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@78) (= (type $generated@@470) $generated@@78)) (= ($generated@@153 ($generated@@219 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@219 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ($generated@@475 Int) ) (! (let (($generated@@476 ($generated@@261 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474 $generated@@475)) $generated@@476))
 :pattern ( ($generated@@472 $generated@@474 $generated@@475))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@260 $generated@@78)) (= (type $generated@@478) $generated@@66)) (= (type $generated@@479) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@477 ($generated@@471 $generated@@478) $generated@@479) (forall (($generated@@480 Int) ) (!  (=> (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@259 $generated@@477))) ($generated@@246 ($generated@@472 $generated@@477 $generated@@480) $generated@@478 $generated@@479))
 :pattern ( ($generated@@472 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@82 $generated@@477 ($generated@@471 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 Int) ) (! (= ($generated@@481 ($generated@@83 $generated@@482)) $generated@@482)
 :pattern ( ($generated@@83 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@66) (= ($generated@@483 ($generated@@229 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@229 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@66) (= ($generated@@74 ($generated@@229 $generated@@486)) $generated@@54))
 :pattern ( ($generated@@229 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@234 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@234 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@234 $generated@@490)) $generated@@55))
 :pattern ( ($generated@@234 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@158 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@158 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@158 $generated@@494)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@471 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@471 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@471 $generated@@498)) $generated@@57))
 :pattern ( ($generated@@471 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(= ($generated@@320 $generated@@500 ($generated@@267 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@267 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@280 $generated@@78 $generated@@78)) (= (type $generated@@502) $generated@@66)) (= (type $generated@@503) $generated@@66)) (= ($generated@@79 $generated@@501 ($generated@@385 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@278 $generated@@501) $generated@@504))) (and ($generated@@220 ($generated@@89 ($generated@@360 $generated@@501) $generated@@504) $generated@@503) ($generated@@220 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@89 ($generated@@360 $generated@@501) $generated@@504))
 :pattern ( ($generated@@89 ($generated@@278 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@79 $generated@@501 ($generated@@385 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@298 $generated@@78 $generated@@78)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@79 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@296 $generated@@505) $generated@@508))) (and ($generated@@220 ($generated@@89 ($generated@@368 $generated@@505) $generated@@508) $generated@@507) ($generated@@220 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@89 ($generated@@368 $generated@@505) $generated@@508))
 :pattern ( ($generated@@89 ($generated@@296 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@79 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@78) (= (type $generated@@512) $generated@@78)) (< ($generated@@509 $generated@@511) ($generated@@510 ($generated@@219 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@219 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@78) (= (type $generated@@514) $generated@@78)) (< ($generated@@509 $generated@@514) ($generated@@510 ($generated@@219 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@219 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@78) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) $generated@@66)) ($generated@@220 $generated@@515 ($generated@@385 $generated@@516 $generated@@517))) (and (= ($generated@@267 ($generated@@320 ($generated@@280 $generated@@78 $generated@@78) $generated@@515)) $generated@@515) ($generated@@79 ($generated@@320 ($generated@@280 $generated@@78 $generated@@78) $generated@@515) ($generated@@385 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@515 ($generated@@385 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@78) (= (type $generated@@519) $generated@@66)) (= (type $generated@@520) $generated@@66)) ($generated@@220 $generated@@518 ($generated@@393 $generated@@519 $generated@@520))) (and (= ($generated@@267 ($generated@@320 ($generated@@298 $generated@@78 $generated@@78) $generated@@518)) $generated@@518) ($generated@@79 ($generated@@320 ($generated@@298 $generated@@78 $generated@@78) $generated@@518) ($generated@@393 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@220 $generated@@518 ($generated@@393 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@78)) ($generated@@220 $generated@@523 ($generated@@144 $generated@@521 $generated@@522))) (and (= ($generated@@267 ($generated@@320 $generated@@145 $generated@@523)) $generated@@523) ($generated@@79 ($generated@@320 $generated@@145 $generated@@523) ($generated@@144 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@220 $generated@@523 ($generated@@144 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
 (not ($generated@@0 ($generated@@89 ($generated@@401 $generated@@525) $generated@@524))))
 :pattern ( (let (($generated@@525 (type $generated@@524)))
($generated@@89 ($generated@@401 $generated@@525) $generated@@524)))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@71)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@528 $generated@@529)) $generated@@63) (= ($generated@@526 ($generated@@144 $generated@@528 $generated@@529)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@145) (= ($generated@@509 ($generated@@267 $generated@@530)) ($generated@@510 $generated@@530)))
 :pattern ( ($generated@@509 ($generated@@267 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@78) ($generated@@220 $generated@@531 ($generated@@83 0))) (and (= ($generated@@267 ($generated@@320 $generated@@2 $generated@@531)) $generated@@531) ($generated@@79 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@531) ($generated@@83 0))))
 :pattern ( ($generated@@220 $generated@@531 ($generated@@83 0)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@78) (= (type $generated@@533) $generated@@66)) ($generated@@220 $generated@@532 ($generated@@229 $generated@@533))) (and (= ($generated@@267 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@532)) $generated@@532) ($generated@@79 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@532) ($generated@@229 $generated@@533))))
 :pattern ( ($generated@@220 $generated@@532 ($generated@@229 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@78) (= (type $generated@@535) $generated@@66)) ($generated@@220 $generated@@534 ($generated@@234 $generated@@535))) (and (= ($generated@@267 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@534)) $generated@@534) ($generated@@79 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@534) ($generated@@234 $generated@@535))))
 :pattern ( ($generated@@220 $generated@@534 ($generated@@234 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@78) (= (type $generated@@537) $generated@@66)) ($generated@@220 $generated@@536 ($generated@@158 $generated@@537))) (and (= ($generated@@267 ($generated@@320 ($generated@@84 $generated@@78 $generated@@2) $generated@@536)) $generated@@536) ($generated@@79 ($generated@@320 ($generated@@84 $generated@@78 $generated@@2) $generated@@536) ($generated@@158 $generated@@537))))
 :pattern ( ($generated@@220 $generated@@536 ($generated@@158 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@78) (= (type $generated@@539) $generated@@66)) ($generated@@220 $generated@@538 ($generated@@471 $generated@@539))) (and (= ($generated@@267 ($generated@@320 ($generated@@260 $generated@@78) $generated@@538)) $generated@@538) ($generated@@79 ($generated@@320 ($generated@@260 $generated@@78) $generated@@538) ($generated@@471 $generated@@539))))
 :pattern ( ($generated@@220 $generated@@538 ($generated@@471 $generated@@539)))
)))
(assert (= ($generated@@74 $generated@@80) $generated@@61))
(assert (= ($generated@@526 $generated@@80) $generated@@64))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@540 ($generated@@158 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@540 $generated@@543)))) ($generated@@246 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@89 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@82 $generated@@540 ($generated@@158 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@245 $generated@@546) (and ($generated@@143 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@66) ($generated@@82 $generated@@544 ($generated@@144 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@82 $generated@@544 ($generated@@144 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@246 ($generated@@152 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@246 ($generated@@152 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@245 $generated@@550) (and ($generated@@143 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@82 $generated@@548 ($generated@@144 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@82 $generated@@548 ($generated@@144 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@246 ($generated@@153 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@246 ($generated@@153 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@78) (= (type $generated@@553) $generated@@78)) (= ($generated@@219 ($generated@@241 $generated@@552) ($generated@@241 $generated@@553)) ($generated@@241 ($generated@@219 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@219 ($generated@@241 $generated@@552) ($generated@@241 $generated@@553)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@267 ($generated@@8 ($generated@@239 $generated@@554))) ($generated@@241 ($generated@@267 ($generated@@8 $generated@@554))))
 :pattern ( ($generated@@267 ($generated@@8 ($generated@@239 $generated@@554))))
)))
(assert (forall (($generated@@555 T@U) ) (! (= ($generated@@267 ($generated@@241 $generated@@555)) ($generated@@241 ($generated@@267 $generated@@555)))
 :pattern ( ($generated@@267 ($generated@@241 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@261 (type $generated@@556))))
 (=> (and (= (type $generated@@556) ($generated@@260 $generated@@557)) (= ($generated@@259 $generated@@556) 0)) (= $generated@@556 ($generated@@258 $generated@@557))))
 :pattern ( ($generated@@259 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@559)))
 (=> (and (and (= (type $generated@@558) ($generated@@84 $generated@@561 $generated@@2)) (= (type $generated@@560) $generated@@2)) (<= 0 ($generated $generated@@560))) (= ($generated@@272 ($generated@@90 $generated@@558 $generated@@559 $generated@@560)) (+ (- ($generated@@272 $generated@@558) ($generated ($generated@@89 $generated@@558 $generated@@559))) ($generated $generated@@560)))))
 :pattern ( ($generated@@272 ($generated@@90 $generated@@558 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@563) $generated@@2)) ($generated@@82 $generated@@563 $generated@@46 $generated@@562))
 :pattern ( ($generated@@82 $generated@@563 $generated@@46 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@565) $generated@@3)) ($generated@@82 $generated@@565 $generated@@47 $generated@@564))
 :pattern ( ($generated@@82 $generated@@565 $generated@@47 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@567) $generated@@4)) ($generated@@82 $generated@@567 $generated@@44 $generated@@566))
 :pattern ( ($generated@@82 $generated@@567 $generated@@44 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@569) $generated@@425)) ($generated@@82 $generated@@569 $generated@@45 $generated@@568))
 :pattern ( ($generated@@82 $generated@@569 $generated@@45 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@571) $generated@@78)) ($generated@@82 $generated@@571 $generated@@48 $generated@@570))
 :pattern ( ($generated@@82 $generated@@571 $generated@@48 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@260 $generated@@78)) (= (type $generated@@573) $generated@@66)) (= ($generated@@79 $generated@@572 ($generated@@471 $generated@@573)) (forall (($generated@@574 Int) ) (!  (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@259 $generated@@572))) ($generated@@220 ($generated@@472 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@472 $generated@@572 $generated@@574))
))))
 :pattern ( ($generated@@79 $generated@@572 ($generated@@471 $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ) (!  (=> (= (type $generated@@576) ($generated@@260 $generated@@78)) (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@259 $generated@@576))) (< ($generated@@510 ($generated@@320 $generated@@145 ($generated@@472 $generated@@576 $generated@@577))) ($generated@@575 $generated@@576))))
 :pattern ( ($generated@@510 ($generated@@320 $generated@@145 ($generated@@472 $generated@@576 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@280 $generated@@78 $generated@@78)) (= (type $generated@@579) $generated@@66)) (= (type $generated@@580) $generated@@66)) ($generated@@79 $generated@@578 ($generated@@385 $generated@@579 $generated@@580))) (and (and ($generated@@79 ($generated@@278 $generated@@578) ($generated@@229 $generated@@579)) ($generated@@79 ($generated@@328 $generated@@578) ($generated@@229 $generated@@580))) ($generated@@79 ($generated@@359 $generated@@578) ($generated@@229 ($generated@@144 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@79 $generated@@578 ($generated@@385 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@298 $generated@@78 $generated@@78)) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) $generated@@66)) ($generated@@79 $generated@@581 ($generated@@393 $generated@@582 $generated@@583))) (and (and ($generated@@79 ($generated@@296 $generated@@581) ($generated@@234 $generated@@582)) ($generated@@79 ($generated@@339 $generated@@581) ($generated@@234 $generated@@583))) ($generated@@79 ($generated@@367 $generated@@581) ($generated@@234 ($generated@@144 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@79 $generated@@581 ($generated@@393 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@2) ($generated@@79 $generated@@584 $generated@@46))
 :pattern ( ($generated@@79 $generated@@584 $generated@@46))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@3) ($generated@@79 $generated@@585 $generated@@47))
 :pattern ( ($generated@@79 $generated@@585 $generated@@47))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@4) ($generated@@79 $generated@@586 $generated@@44))
 :pattern ( ($generated@@79 $generated@@586 $generated@@44))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@425) ($generated@@79 $generated@@587 $generated@@45))
 :pattern ( ($generated@@79 $generated@@587 $generated@@45))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@78) ($generated@@79 $generated@@588 $generated@@48))
 :pattern ( ($generated@@79 $generated@@588 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@589) $generated@@78) (= (type $generated@@591) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@592) ($generated@@165 $generated@@85 $generated@@4))) (= (type $generated@@593) $generated@@85)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@595 true))
(let (($generated@@596  (=> (<= ($generated@@239 0) ($generated@@429 $generated@@589 $generated@@590)) (=> (and ($generated@@246 $generated@@589 $generated@@314 $generated@@591) ($generated@@82 ($generated@@8 $generated@@590) $generated@@80 $generated@@591)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@590 7))) (=> (not (= $generated@@590 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@590) (= $generated@@590 $generated@@590))) (=> (or (<= 0 $generated@@590) (= $generated@@590 $generated@@590)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@589 $generated@@589) (= $generated@@590 $generated@@590)) (< $generated@@590 $generated@@590)))))))))))
(let (($generated@@597  (=> (and (= $generated@@592 ($generated@@164 $generated@@593 $generated@@591 $generated@@60 false)) (not (= $generated@@590 7))) (and (=> (= (ControlFlow 0 6) 2) $generated@@596) (=> (= (ControlFlow 0 6) 5) $generated@@595)))))
(let (($generated@@598  (=> (and ($generated@@245 $generated@@591) ($generated@@594 $generated@@591)) (=> (and (and (and ($generated@@220 $generated@@589 $generated@@314) ($generated@@246 $generated@@589 $generated@@314 $generated@@591)) (<= ($generated@@239 0) $generated@@590)) (and (= 2 $generated@@76) (= (ControlFlow 0 7) 6))) $generated@@597))))
$generated@@598)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) Int)
(declare-fun $generated@@509 (T@U Int) Bool)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@80) 11) (= (type $generated@@82) $generated@@68)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@83 T@U) ) (!  (=> (= (type $generated@@83) $generated@@80) ($generated@@81 ($generated@@8 ($generated@@79 $generated@@83)) $generated@@82))
 :pattern ( ($generated@@79 $generated@@83))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@86 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@86 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@71 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@71 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@85 $generated@@139)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
 :pattern ( ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
 :pattern ( ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@81 $generated@@144 ($generated@@85 0)))
 :pattern ( ($generated@@81 $generated@@144 ($generated@@85 0)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@80)) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@80) (= (type $generated@@159) $generated@@80)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@81 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@81 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@87 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@87) (= (type $generated@@215) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@87)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@80)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@68) (= (type $generated@@226) $generated@@68)) (= (type $generated@@227) $generated@@155)) (= (type $generated@@228) $generated@@155)) (= ($generated@@81 ($generated@@221 $generated@@227 $generated@@228) ($generated@@146 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@81 ($generated@@221 $generated@@227 $generated@@228) ($generated@@146 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@80) (= (type $generated@@230) $generated@@80)) (= ($generated@@152 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@152 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@68)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@234) $generated@@68)) (= ($generated@@81 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@155) ($generated@@0 ($generated@@91 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@91 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@81 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@68)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@239) $generated@@68)) (= ($generated@@81 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@155) ($generated@@0 ($generated@@91 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@91 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@81 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) $generated@@68)) (= (type $generated@@251) $generated@@155)) (= (type $generated@@252) $generated@@155)) (= (type $generated@@253) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@247 $generated@@253)) (= ($generated@@84 ($generated@@221 $generated@@251 $generated@@252) ($generated@@146 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@84 ($generated@@221 $generated@@251 $generated@@252) ($generated@@146 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@80) (= ($generated@@145 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@62)))
 :pattern ( ($generated@@145 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@80) ($generated@@145 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@155) (= (type $generated@@259) $generated@@155)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@145 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@2) (= ($generated@@81 $generated@@268 $generated@@82) (<= ($generated@@241 0) ($generated $generated@@268))))
 :pattern ( ($generated@@81 $generated@@268 $generated@@82))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@155)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@84 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@86 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@89 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@86 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@91 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@86 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@91 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@91 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@86 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@91 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@91 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@89 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@86 $generated@@317 $generated@@2)) (= ($generated@@161 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@91 $generated@@316 $generated@@318))) (<= ($generated ($generated@@91 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@91 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@161 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@155) ($generated@@222 $generated@@322 $generated@@82)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@322)) $generated@@322) ($generated@@81 ($generated@@319 $generated@@2 $generated@@322) $generated@@82)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@82))
)))
(assert (= (type $generated@@323) $generated@@68))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@155) ($generated@@222 $generated@@324 $generated@@323)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@324)) $generated@@324) ($generated@@81 ($generated@@319 $generated@@80 $generated@@324) $generated@@323)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@91 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@86 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@91 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@91 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@86 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@91 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@348) $generated@@80)) (and ($generated@@247 $generated@@347) ($generated@@84 $generated@@348 $generated@@323 $generated@@347))) ($generated@@84 ($generated@@8 ($generated@@79 $generated@@348)) $generated@@82 $generated@@347))
 :pattern ( ($generated@@79 $generated@@348) ($generated@@84 $generated@@348 $generated@@323 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@350) $generated@@68)) (= ($generated@@81 $generated@@349 ($generated@@160 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@91 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@81 $generated@@349 ($generated@@160 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@353) $generated@@68)) (= (type $generated@@354) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@155) ($generated@@0 ($generated@@91 $generated@@352 $generated@@355))) ($generated@@248 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@91 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@84 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@357) $generated@@68)) (= (type $generated@@358) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@155) ($generated@@0 ($generated@@91 $generated@@356 $generated@@359))) ($generated@@248 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@91 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@84 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@91 ($generated@@275 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@91 ($generated@@275 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@284 (type $generated@@365))))
(let (($generated@@367 ($generated@@283 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@86 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@369) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@91 ($generated@@280 $generated@@368) ($generated@@153 ($generated@@319 $generated@@80 $generated@@369)))) (= ($generated@@91 ($generated@@363 $generated@@368) ($generated@@153 ($generated@@319 $generated@@80 $generated@@369))) ($generated@@154 ($generated@@319 $generated@@80 $generated@@369))))))
 :pattern ( ($generated@@91 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@302 (type $generated@@373))))
(let (($generated@@375 ($generated@@301 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@86 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@377) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@91 ($generated@@298 $generated@@376) ($generated@@153 ($generated@@319 $generated@@80 $generated@@377)))) (= ($generated@@91 ($generated@@371 $generated@@376) ($generated@@153 ($generated@@319 $generated@@80 $generated@@377))) ($generated@@154 ($generated@@319 $generated@@80 $generated@@377))))))
 :pattern ( ($generated@@91 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@283 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@282 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@91 ($generated@@329 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@91 ($generated@@280 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@91 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@91 ($generated@@280 $generated@@378) $generated@@382))
 :pattern ( ($generated@@91 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@91 ($generated@@329 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@301 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@300 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@91 ($generated@@340 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@91 ($generated@@298 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@91 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@91 ($generated@@298 $generated@@383) $generated@@387))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@91 ($generated@@340 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@68)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) $generated@@68)) (= (type $generated@@394) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@280 $generated@@391) $generated@@395))) (and ($generated@@248 ($generated@@91 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@248 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@91 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@91 ($generated@@280 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@84 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@68)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@298 $generated@@399) $generated@@403))) (and ($generated@@248 ($generated@@91 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@248 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@91 ($generated@@298 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@84 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@86 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@302 (type $generated@@406))))
(let (($generated@@408 ($generated@@301 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@300 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@299 $generated@@408 $generated@@407)) (= ($generated@@298 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@298 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@302 (type $generated@@409))))
(let (($generated@@411 ($generated@@301 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@300 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@299 $generated@@411 $generated@@410)) (= ($generated@@340 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@340 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@302 (type $generated@@412))))
(let (($generated@@414 ($generated@@301 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@300 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@299 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@155))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@284 (type $generated@@415))))
(let (($generated@@417 ($generated@@283 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@282 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@281 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@155) (= (type $generated@@419) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@362 $generated@@415) ($generated@@269 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@302 (type $generated@@420))))
(let (($generated@@422 ($generated@@301 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@300 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@299 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@155) (= (type $generated@@424) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@370 $generated@@420) ($generated@@269 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@155) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@425)) $generated@@425) ($generated@@81 ($generated@@319 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@155) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@426)) $generated@@426) ($generated@@81 ($generated@@319 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@155) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@427)) $generated@@427) ($generated@@81 ($generated@@319 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@155) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@428 $generated@@429)) $generated@@429) ($generated@@81 ($generated@@319 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@68) (= ($generated@@222 ($generated@@269 $generated@@430) $generated@@431) ($generated@@81 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@269 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@89 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@86 $generated@@433 $generated@@2)) (<= 0 ($generated@@274 $generated@@432))))
 :pattern ( ($generated@@274 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@263 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@262 $generated@@435)) (<= 0 ($generated@@261 $generated@@434))))
 :pattern ( ($generated@@261 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@68) (= (type $generated@@439) $generated@@68)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@68) (= (type $generated@@443) $generated@@68)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@68) (= (type $generated@@445) $generated@@68)) (= ($generated@@76 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@68) (= (type $generated@@449) $generated@@68)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@76 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@155) (= (type $generated@@457) $generated@@155)) (= ($generated@@254 ($generated@@221 $generated@@456 $generated@@457)) $generated@@62))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@146 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@146 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@146 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@146 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@155) (= (type $generated@@467) $generated@@155)) (= ($generated@@153 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@155) (= (type $generated@@469) $generated@@155)) (= ($generated@@154 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@263 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@262 $generated@@155)) (= (type $generated@@477) $generated@@68)) (= (type $generated@@478) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@261 $generated@@476))) ($generated@@248 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@84 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@85 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@85 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@68) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@76 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@68) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@68) (= ($generated@@76 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@490 ($generated@@160 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@160 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@76 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@319 $generated@@499 ($generated@@269 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@269 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) $generated@@68)) (= ($generated@@81 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@280 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@91 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@91 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@91 ($generated@@280 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@81 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) $generated@@68)) (= ($generated@@81 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@298 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@91 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@91 ($generated@@298 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@81 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (!  (=> (and (= (type $generated@@510) $generated@@80) (or ($generated@@509 $generated@@510 $generated@@511) (and (not (= 2 $generated@@78)) (and (and ($generated@@81 $generated@@510 $generated@@323) (<= ($generated@@241 0) $generated@@511)) (not (= $generated@@511 7)))))) (and (= ($generated@@508 $generated@@510 $generated@@511) ($generated@@79 $generated@@510)) (<= ($generated@@241 0) ($generated@@508 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@155) (= (type $generated@@515) $generated@@155)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@221 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@221 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@155) (= (type $generated@@517) $generated@@155)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@221 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@221 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@155) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) $generated@@68)) ($generated@@222 $generated@@518 ($generated@@388 $generated@@519 $generated@@520))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@518)) $generated@@518) ($generated@@81 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@518) ($generated@@388 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@222 $generated@@518 ($generated@@388 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@155) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) $generated@@68)) ($generated@@222 $generated@@521 ($generated@@396 $generated@@522 $generated@@523))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@521)) $generated@@521) ($generated@@81 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@521) ($generated@@396 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@222 $generated@@521 ($generated@@396 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) $generated@@155)) ($generated@@222 $generated@@526 ($generated@@146 $generated@@524 $generated@@525))) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@526)) $generated@@526) ($generated@@81 ($generated@@319 $generated@@80 $generated@@526) ($generated@@146 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@146 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@91 ($generated@@404 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@91 ($generated@@404 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@73)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (and (= ($generated@@76 ($generated@@146 $generated@@531 $generated@@532)) $generated@@63) (= ($generated@@529 ($generated@@146 $generated@@531 $generated@@532)) $generated@@66)))
 :pattern ( ($generated@@146 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@80) (= ($generated@@512 ($generated@@269 $generated@@533)) ($generated@@513 $generated@@533)))
 :pattern ( ($generated@@512 ($generated@@269 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@155) ($generated@@222 $generated@@534 ($generated@@85 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@534)) $generated@@534) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@534) ($generated@@85 0))))
 :pattern ( ($generated@@222 $generated@@534 ($generated@@85 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@155) (= (type $generated@@536) $generated@@68)) ($generated@@222 $generated@@535 ($generated@@231 $generated@@536))) (and (= ($generated@@269 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@535)) $generated@@535) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@535) ($generated@@231 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@231 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) ($generated@@222 $generated@@537 ($generated@@236 $generated@@538))) (and (= ($generated@@269 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@537)) $generated@@537) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@537) ($generated@@236 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@236 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@155) (= (type $generated@@540) $generated@@68)) ($generated@@222 $generated@@539 ($generated@@160 $generated@@540))) (and (= ($generated@@269 ($generated@@319 ($generated@@86 $generated@@155 $generated@@2) $generated@@539)) $generated@@539) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@2) $generated@@539) ($generated@@160 $generated@@540))))
 :pattern ( ($generated@@222 $generated@@539 ($generated@@160 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@155) (= (type $generated@@542) $generated@@68)) ($generated@@222 $generated@@541 ($generated@@470 $generated@@542))) (and (= ($generated@@269 ($generated@@319 ($generated@@262 $generated@@155) $generated@@541)) $generated@@541) ($generated@@81 ($generated@@319 ($generated@@262 $generated@@155) $generated@@541) ($generated@@470 $generated@@542))))
 :pattern ( ($generated@@222 $generated@@541 ($generated@@470 $generated@@542)))
)))
(assert (= ($generated@@76 $generated@@82) $generated@@61))
(assert (= ($generated@@529 $generated@@82) $generated@@65))
(assert (= ($generated@@76 $generated@@323) $generated@@64))
(assert (= ($generated@@529 $generated@@323) $generated@@67))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@543 ($generated@@160 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@543 $generated@@546)))) ($generated@@248 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@91 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@84 $generated@@543 ($generated@@160 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@80) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@247 $generated@@549) (and ($generated@@145 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@68) ($generated@@84 $generated@@547 ($generated@@146 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@84 $generated@@547 ($generated@@146 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@248 ($generated@@153 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@248 ($generated@@153 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@80) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@247 $generated@@553) (and ($generated@@145 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@68) ($generated@@84 $generated@@551 ($generated@@146 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@84 $generated@@551 ($generated@@146 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@248 ($generated@@154 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@248 ($generated@@154 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@155)) (= ($generated@@221 ($generated@@243 $generated@@555) ($generated@@243 $generated@@556)) ($generated@@243 ($generated@@221 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@555) ($generated@@243 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@269 ($generated@@8 ($generated@@241 $generated@@557))) ($generated@@243 ($generated@@269 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@269 ($generated@@8 ($generated@@241 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@269 ($generated@@243 $generated@@558)) ($generated@@243 ($generated@@269 $generated@@558)))
 :pattern ( ($generated@@269 ($generated@@243 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@263 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@262 $generated@@560)) (= ($generated@@261 $generated@@559) 0)) (= $generated@@559 ($generated@@260 $generated@@560))))
 :pattern ( ($generated@@261 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@86 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@274 ($generated@@92 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@274 $generated@@561) ($generated ($generated@@91 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@274 ($generated@@92 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@566) $generated@@2)) ($generated@@84 $generated@@566 $generated@@46 $generated@@565))
 :pattern ( ($generated@@84 $generated@@566 $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@568) $generated@@3)) ($generated@@84 $generated@@568 $generated@@47 $generated@@567))
 :pattern ( ($generated@@84 $generated@@568 $generated@@47 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@570) $generated@@4)) ($generated@@84 $generated@@570 $generated@@44 $generated@@569))
 :pattern ( ($generated@@84 $generated@@570 $generated@@44 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@572) $generated@@428)) ($generated@@84 $generated@@572 $generated@@45 $generated@@571))
 :pattern ( ($generated@@84 $generated@@572 $generated@@45 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@574) $generated@@155)) ($generated@@84 $generated@@574 $generated@@48 $generated@@573))
 :pattern ( ($generated@@84 $generated@@574 $generated@@48 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@262 $generated@@155)) (= (type $generated@@576) $generated@@68)) (= ($generated@@81 $generated@@575 ($generated@@470 $generated@@576)) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@261 $generated@@575))) ($generated@@222 ($generated@@471 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@471 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@81 $generated@@575 ($generated@@470 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) ($generated@@262 $generated@@155)) (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@261 $generated@@579))) (< ($generated@@513 ($generated@@319 $generated@@80 ($generated@@471 $generated@@579 $generated@@580))) ($generated@@578 $generated@@579))))
 :pattern ( ($generated@@513 ($generated@@319 $generated@@80 ($generated@@471 $generated@@579 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) ($generated@@81 $generated@@581 ($generated@@388 $generated@@582 $generated@@583))) (and (and ($generated@@81 ($generated@@280 $generated@@581) ($generated@@231 $generated@@582)) ($generated@@81 ($generated@@329 $generated@@581) ($generated@@231 $generated@@583))) ($generated@@81 ($generated@@362 $generated@@581) ($generated@@231 ($generated@@146 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@81 $generated@@581 ($generated@@388 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) ($generated@@81 $generated@@584 ($generated@@396 $generated@@585 $generated@@586))) (and (and ($generated@@81 ($generated@@298 $generated@@584) ($generated@@236 $generated@@585)) ($generated@@81 ($generated@@340 $generated@@584) ($generated@@236 $generated@@586))) ($generated@@81 ($generated@@370 $generated@@584) ($generated@@236 ($generated@@146 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@81 $generated@@584 ($generated@@396 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@2) ($generated@@81 $generated@@587 $generated@@46))
 :pattern ( ($generated@@81 $generated@@587 $generated@@46))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@3) ($generated@@81 $generated@@588 $generated@@47))
 :pattern ( ($generated@@81 $generated@@588 $generated@@47))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@4) ($generated@@81 $generated@@589 $generated@@44))
 :pattern ( ($generated@@81 $generated@@589 $generated@@44))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@428) ($generated@@81 $generated@@590 $generated@@45))
 :pattern ( ($generated@@81 $generated@@590 $generated@@45))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@155) ($generated@@81 $generated@@591 $generated@@48))
 :pattern ( ($generated@@81 $generated@@591 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@592) $generated@@80) (= (type $generated@@594) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@595) ($generated@@167 $generated@@87 $generated@@4))) (= (type $generated@@596) $generated@@87)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@598 true))
(let (($generated@@599  (=> (<= ($generated@@241 0) ($generated@@508 $generated@@592 $generated@@593)) (=> (and ($generated@@84 $generated@@592 $generated@@323 $generated@@594) ($generated@@84 ($generated@@8 $generated@@593) $generated@@82 $generated@@594)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@593 7))) (=> (not (= $generated@@593 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@593) (< ($generated@@513 $generated@@592) ($generated@@513 $generated@@592))) (= $generated@@593 $generated@@593))) (=> (or (or (<= 0 $generated@@593) (< ($generated@@513 $generated@@592) ($generated@@513 $generated@@592))) (= $generated@@593 $generated@@593)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@592 $generated@@592) (= $generated@@593 $generated@@593)) (or (< ($generated@@513 $generated@@592) ($generated@@513 $generated@@592)) (and (= ($generated@@513 $generated@@592) ($generated@@513 $generated@@592)) (< $generated@@593 $generated@@593)))))))))))))
(let (($generated@@600  (=> (and (= $generated@@595 ($generated@@166 $generated@@596 $generated@@594 $generated@@60 false)) (not (= $generated@@593 7))) (and (=> (= (ControlFlow 0 6) 2) $generated@@599) (=> (= (ControlFlow 0 6) 5) $generated@@598)))))
(let (($generated@@601  (=> (and ($generated@@247 $generated@@594) ($generated@@597 $generated@@594)) (=> (and (and (and ($generated@@81 $generated@@592 $generated@@323) ($generated@@84 $generated@@592 $generated@@323 $generated@@594)) (<= ($generated@@241 0) $generated@@593)) (and (= 2 $generated@@78) (= (ControlFlow 0 7) 6))) $generated@@600))))
$generated@@601)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (Int Int) Int)
(declare-fun $generated@@260 (Int Int) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@335 (T@T T@U) T@U)
(declare-fun $generated@@339 () T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert (= (type $generated@@81) $generated@@68))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@82 Int) ) (! ($generated@@80 ($generated@@8 ($generated@@79 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@71 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@71 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@68)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
 :pattern ( ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@80 $generated@@143 ($generated@@84 0)))
 :pattern ( ($generated@@80 $generated@@143 ($generated@@84 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@146)) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@80 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@80 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@86 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@86) (= (type $generated@@215) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@86)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@86 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@71 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@86) (= (type $generated@@227) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@228) ($generated@@70 $generated@@4))) (= (type $generated@@230) $generated@@86)) (= (type $generated@@231) ($generated@@70 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@146)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) $generated@@68)) (= (type $generated@@239) $generated@@155)) (= (type $generated@@240) $generated@@155)) (= ($generated@@80 ($generated@@233 $generated@@239 $generated@@240) ($generated@@145 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@80 ($generated@@233 $generated@@239 $generated@@240) ($generated@@145 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@146) (= (type $generated@@242) $generated@@146)) (= ($generated@@152 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@152 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@68)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@246) $generated@@68)) (= ($generated@@80 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@155) ($generated@@0 ($generated@@90 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@90 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@80 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@251) $generated@@68)) (= ($generated@@80 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@155) ($generated@@0 ($generated@@90 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@90 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@80 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@261 Int) ($generated@@262 Int) ) (!  (=> (or ($generated@@260 ($generated@@253 $generated@@261) ($generated@@253 $generated@@262)) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (<= ($generated@@253 0) $generated@@262)) ($generated@@0 ($generated@@255 ($generated@@11 (not (= $generated@@262 7)))))))) (= ($generated@@259 ($generated@@253 $generated@@261) ($generated@@253 $generated@@262)) ($generated@@253 $generated@@262)))
 :weight 3
 :pattern ( ($generated@@259 ($generated@@253 $generated@@261) ($generated@@253 $generated@@262)))
))))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@68) (= (type $generated@@266) $generated@@68)) (= (type $generated@@267) $generated@@155)) (= (type $generated@@268) $generated@@155)) (= (type $generated@@269) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@263 $generated@@269)) (= ($generated@@83 ($generated@@233 $generated@@267 $generated@@268) ($generated@@145 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@83 ($generated@@233 $generated@@267 $generated@@268) ($generated@@145 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@72)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@146) (= ($generated@@144 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@146) ($generated@@144 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@155) (= (type $generated@@275) $generated@@155)) (= $generated@@273 ($generated@@233 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@144 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@2) (= ($generated@@80 $generated@@284 $generated@@81) (<= ($generated@@253 0) ($generated $generated@@284))))
 :pattern ( ($generated@@80 $generated@@284 $generated@@81))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@155)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@264 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@83 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@264 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@85 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@88 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@85 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@90 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@85 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@90 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@90 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@85 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@90 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@90 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@88 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@85 $generated@@333 $generated@@2)) (= ($generated@@161 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@90 $generated@@332 $generated@@334))) (<= ($generated ($generated@@90 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@90 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@161 $generated@@332))
)))
(assert (forall (($generated@@336 T@T) ($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@155) ($generated@@234 $generated@@338 $generated@@81)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@338)) $generated@@338) ($generated@@80 ($generated@@335 $generated@@2 $generated@@338) $generated@@81)))
 :pattern ( ($generated@@234 $generated@@338 $generated@@81))
)))
(assert (= (type $generated@@339) $generated@@68))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@155) ($generated@@234 $generated@@340 $generated@@339)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@340)) $generated@@340) ($generated@@80 ($generated@@335 $generated@@2 $generated@@340) $generated@@339)))
 :pattern ( ($generated@@234 $generated@@340 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@300 (type $generated@@341))))
(let (($generated@@343 ($generated@@299 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@298 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@297 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@90 ($generated@@296 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@296 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@300 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@85 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@300 (type $generated@@348))))
(let (($generated@@350 ($generated@@299 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@298 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@297 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@90 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@318 (type $generated@@352))))
(let (($generated@@354 ($generated@@317 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@316 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@315 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@314 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@318 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@85 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@318 (type $generated@@359))))
(let (($generated@@361 ($generated@@317 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@316 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@315 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@90 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) ($generated@@85 $generated@@86 $generated@@87)) (=> (and ($generated@@263 $generated@@363) ($generated@@83 ($generated@@8 $generated@@364) $generated@@339 $generated@@363)) ($generated@@83 ($generated@@8 ($generated@@79 $generated@@364)) $generated@@81 $generated@@363)))
 :pattern ( ($generated@@79 $generated@@364) ($generated@@83 ($generated@@8 $generated@@364) $generated@@339 $generated@@363))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@366) $generated@@68)) (= ($generated@@80 $generated@@365 ($generated@@160 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@365 $generated@@367)))) ($generated@@234 $generated@@367 $generated@@366))
 :pattern ( ($generated@@90 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@80 $generated@@365 ($generated@@160 $generated@@366)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@368 Int) ($generated@@369 Int) ) (!  (=> (or ($generated@@260 $generated@@368 $generated@@369) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (<= ($generated@@253 0) $generated@@369)) (not (= $generated@@369 7))))) (= ($generated@@259 $generated@@368 $generated@@369) $generated@@369))
 :pattern ( ($generated@@259 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@371) $generated@@68)) (= (type $generated@@372) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@370 ($generated@@243 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@155) ($generated@@0 ($generated@@90 $generated@@370 $generated@@373))) ($generated@@264 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@90 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@83 $generated@@370 ($generated@@243 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@375) $generated@@68)) (= (type $generated@@376) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@374 ($generated@@248 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@155) ($generated@@0 ($generated@@90 $generated@@374 $generated@@377))) ($generated@@264 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@90 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@83 $generated@@374 ($generated@@248 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@90 ($generated@@291 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@90 ($generated@@291 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@300 (type $generated@@383))))
(let (($generated@@385 ($generated@@299 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@85 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@298 $generated@@155 $generated@@155)) (= (type $generated@@387) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@90 ($generated@@296 $generated@@386) ($generated@@153 ($generated@@335 $generated@@146 $generated@@387)))) (= ($generated@@90 ($generated@@381 $generated@@386) ($generated@@153 ($generated@@335 $generated@@146 $generated@@387))) ($generated@@154 ($generated@@335 $generated@@146 $generated@@387))))))
 :pattern ( ($generated@@90 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@318 (type $generated@@391))))
(let (($generated@@393 ($generated@@317 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@85 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@395) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@90 ($generated@@314 $generated@@394) ($generated@@153 ($generated@@335 $generated@@146 $generated@@395)))) (= ($generated@@90 ($generated@@389 $generated@@394) ($generated@@153 ($generated@@335 $generated@@146 $generated@@395))) ($generated@@154 ($generated@@335 $generated@@146 $generated@@395))))))
 :pattern ( ($generated@@90 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@299 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@298 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@90 ($generated@@345 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@90 ($generated@@296 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@90 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@396) $generated@@400))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@90 ($generated@@345 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@317 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@316 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@90 ($generated@@356 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@90 ($generated@@314 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@90 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@401) $generated@@405))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@90 ($generated@@356 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@68)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@298 $generated@@155 $generated@@155)) (= (type $generated@@410) $generated@@68)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@296 $generated@@409) $generated@@413))) (and ($generated@@264 ($generated@@90 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@264 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@83 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@90 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@83 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@85 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@318 (type $generated@@424))))
(let (($generated@@426 ($generated@@317 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@316 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@315 $generated@@426 $generated@@425)) (= ($generated@@314 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@314 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@318 (type $generated@@427))))
(let (($generated@@429 ($generated@@317 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@316 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@315 $generated@@429 $generated@@428)) (= ($generated@@356 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@356 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@318 (type $generated@@430))))
(let (($generated@@432 ($generated@@317 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@316 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@315 $generated@@432 $generated@@431)) (= ($generated@@388 $generated@@430) ($generated@@422 $generated@@155))))))
 :pattern ( ($generated@@388 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@300 (type $generated@@433))))
(let (($generated@@435 ($generated@@299 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@298 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@297 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@155) (= (type $generated@@437) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@380 $generated@@433) ($generated@@285 ($generated@@233 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@318 (type $generated@@438))))
(let (($generated@@440 ($generated@@317 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@316 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@315 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@155) (= (type $generated@@442) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@388 $generated@@438) ($generated@@285 ($generated@@233 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@388 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@155) ($generated@@234 $generated@@443 $generated@@46)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@443)) $generated@@443) ($generated@@80 ($generated@@335 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@155) ($generated@@234 $generated@@444 $generated@@47)) (and (= ($generated@@285 ($generated@@335 $generated@@3 $generated@@444)) $generated@@444) ($generated@@80 ($generated@@335 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@155) ($generated@@234 $generated@@445 $generated@@44)) (and (= ($generated@@285 ($generated@@335 $generated@@4 $generated@@445)) $generated@@445) ($generated@@80 ($generated@@335 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@155) ($generated@@234 $generated@@447 $generated@@45)) (and (= ($generated@@285 ($generated@@335 $generated@@446 $generated@@447)) $generated@@447) ($generated@@80 ($generated@@335 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@68) (= ($generated@@234 ($generated@@285 $generated@@448) $generated@@449) ($generated@@80 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@234 ($generated@@285 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@88 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@85 $generated@@451 $generated@@2)) (<= 0 ($generated@@290 $generated@@450))))
 :pattern ( ($generated@@290 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@279 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@278 $generated@@453)) (<= 0 ($generated@@277 $generated@@452))))
 :pattern ( ($generated@@277 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@68)) (= ($generated@@454 ($generated@@406 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@406 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@406 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@76 ($generated@@406 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@414 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@414 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@414 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@76 ($generated@@414 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@155) (= (type $generated@@475) $generated@@155)) (= ($generated@@270 ($generated@@233 $generated@@474 $generated@@475)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@145 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@145 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@145 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@145 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@155) (= (type $generated@@485) $generated@@155)) (= ($generated@@153 ($generated@@233 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@155) (= (type $generated@@487) $generated@@155)) (= ($generated@@154 ($generated@@233 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@233 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@279 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@278 $generated@@155)) (= (type $generated@@495) $generated@@68)) (= (type $generated@@496) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@277 $generated@@494))) ($generated@@264 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@83 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@84 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@84 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@500 ($generated@@243 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@76 ($generated@@243 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@504 ($generated@@248 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@248 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@76 ($generated@@248 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@508 ($generated@@160 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@160 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@76 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@335 $generated@@517 ($generated@@285 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@285 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@298 $generated@@155 $generated@@155)) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) $generated@@68)) (= ($generated@@80 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@296 $generated@@518) $generated@@521))) (and ($generated@@234 ($generated@@90 ($generated@@381 $generated@@518) $generated@@521) $generated@@520) ($generated@@234 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@518) $generated@@521))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@80 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@523) $generated@@68)) (= (type $generated@@524) $generated@@68)) (= ($generated@@80 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@522) $generated@@525))) (and ($generated@@234 ($generated@@90 ($generated@@389 $generated@@522) $generated@@525) $generated@@524) ($generated@@234 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@522) $generated@@525))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@80 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@526 Int) ($generated@@527 Int) ) (!  (=> (or ($generated@@260 $generated@@526 $generated@@527) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (<= ($generated@@253 0) $generated@@527)) (not (= $generated@@527 7))))) (and (= ($generated@@259 $generated@@526 $generated@@527) ($generated@@79 $generated@@526)) (<= ($generated@@253 0) ($generated@@259 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@259 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@155) (= (type $generated@@531) $generated@@155)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@233 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@233 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@155) (= (type $generated@@533) $generated@@155)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@233 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@233 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@155) (= (type $generated@@535) $generated@@68)) (= (type $generated@@536) $generated@@68)) ($generated@@234 $generated@@534 ($generated@@406 $generated@@535 $generated@@536))) (and (= ($generated@@285 ($generated@@335 ($generated@@298 $generated@@155 $generated@@155) $generated@@534)) $generated@@534) ($generated@@80 ($generated@@335 ($generated@@298 $generated@@155 $generated@@155) $generated@@534) ($generated@@406 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@534 ($generated@@406 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) ($generated@@234 $generated@@537 ($generated@@414 $generated@@538 $generated@@539))) (and (= ($generated@@285 ($generated@@335 ($generated@@316 $generated@@155 $generated@@155) $generated@@537)) $generated@@537) ($generated@@80 ($generated@@335 ($generated@@316 $generated@@155 $generated@@155) $generated@@537) ($generated@@414 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@234 $generated@@537 ($generated@@414 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@155)) ($generated@@234 $generated@@542 ($generated@@145 $generated@@540 $generated@@541))) (and (= ($generated@@285 ($generated@@335 $generated@@146 $generated@@542)) $generated@@542) ($generated@@80 ($generated@@335 $generated@@146 $generated@@542) ($generated@@145 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@234 $generated@@542 ($generated@@145 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@90 ($generated@@422 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@90 ($generated@@422 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@73)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@68) (= (type $generated@@548) $generated@@68)) (and (= ($generated@@76 ($generated@@145 $generated@@547 $generated@@548)) $generated@@63) (= ($generated@@545 ($generated@@145 $generated@@547 $generated@@548)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@146) (= ($generated@@528 ($generated@@285 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@285 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@155) ($generated@@234 $generated@@550 ($generated@@84 0))) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@550)) $generated@@550) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@550) ($generated@@84 0))))
 :pattern ( ($generated@@234 $generated@@550 ($generated@@84 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@68)) ($generated@@234 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@285 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@551)) $generated@@551) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@234 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@155) (= (type $generated@@554) $generated@@68)) ($generated@@234 $generated@@553 ($generated@@248 $generated@@554))) (and (= ($generated@@285 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@553)) $generated@@553) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@553) ($generated@@248 $generated@@554))))
 :pattern ( ($generated@@234 $generated@@553 ($generated@@248 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@68)) ($generated@@234 $generated@@555 ($generated@@160 $generated@@556))) (and (= ($generated@@285 ($generated@@335 ($generated@@85 $generated@@155 $generated@@2) $generated@@555)) $generated@@555) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@155 $generated@@2) $generated@@555) ($generated@@160 $generated@@556))))
 :pattern ( ($generated@@234 $generated@@555 ($generated@@160 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@155) (= (type $generated@@558) $generated@@68)) ($generated@@234 $generated@@557 ($generated@@488 $generated@@558))) (and (= ($generated@@285 ($generated@@335 ($generated@@278 $generated@@155) $generated@@557)) $generated@@557) ($generated@@80 ($generated@@335 ($generated@@278 $generated@@155) $generated@@557) ($generated@@488 $generated@@558))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@488 $generated@@558)))
)))
(assert (= ($generated@@76 $generated@@81) $generated@@61))
(assert (= ($generated@@545 $generated@@81) $generated@@65))
(assert (= ($generated@@76 $generated@@339) $generated@@64))
(assert (= ($generated@@545 $generated@@339) $generated@@67))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@559 ($generated@@160 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@559 $generated@@562)))) ($generated@@264 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@90 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@83 $generated@@559 ($generated@@160 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@146) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@263 $generated@@565) (and ($generated@@144 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@68) ($generated@@83 $generated@@563 ($generated@@145 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@83 $generated@@563 ($generated@@145 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@264 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@264 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@146) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@263 $generated@@569) (and ($generated@@144 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@68) ($generated@@83 $generated@@567 ($generated@@145 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@83 $generated@@567 ($generated@@145 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@264 ($generated@@154 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@264 ($generated@@154 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@155) (= (type $generated@@572) $generated@@155)) (= ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)) ($generated@@255 ($generated@@233 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@253 $generated@@573))) ($generated@@255 ($generated@@285 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@253 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@285 ($generated@@255 $generated@@574)) ($generated@@255 ($generated@@285 $generated@@574)))
 :pattern ( ($generated@@285 ($generated@@255 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@279 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@278 $generated@@576)) (= ($generated@@277 $generated@@575) 0)) (= $generated@@575 ($generated@@276 $generated@@576))))
 :pattern ( ($generated@@277 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@85 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@290 ($generated@@91 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@290 $generated@@577) ($generated ($generated@@90 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@290 ($generated@@91 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@582) $generated@@2)) ($generated@@83 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@83 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@584) $generated@@3)) ($generated@@83 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@83 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@586) $generated@@4)) ($generated@@83 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@83 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@588) $generated@@446)) ($generated@@83 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@83 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@590) $generated@@155)) ($generated@@83 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@83 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@278 $generated@@155)) (= (type $generated@@592) $generated@@68)) (= ($generated@@80 $generated@@591 ($generated@@488 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@277 $generated@@591))) ($generated@@234 ($generated@@489 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@489 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@488 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@278 $generated@@155)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@277 $generated@@595))) (< ($generated@@529 ($generated@@335 $generated@@146 ($generated@@489 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@529 ($generated@@335 $generated@@146 ($generated@@489 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@298 $generated@@155 $generated@@155)) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) $generated@@68)) ($generated@@80 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@80 ($generated@@296 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@80 ($generated@@345 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@80 ($generated@@380 $generated@@597) ($generated@@243 ($generated@@145 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@80 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@68)) ($generated@@80 $generated@@600 ($generated@@414 $generated@@601 $generated@@602))) (and (and ($generated@@80 ($generated@@314 $generated@@600) ($generated@@248 $generated@@601)) ($generated@@80 ($generated@@356 $generated@@600) ($generated@@248 $generated@@602))) ($generated@@80 ($generated@@388 $generated@@600) ($generated@@248 ($generated@@145 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@80 $generated@@600 ($generated@@414 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@80 $generated@@603 $generated@@46))
 :pattern ( ($generated@@80 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@80 $generated@@604 $generated@@47))
 :pattern ( ($generated@@80 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@80 $generated@@605 $generated@@44))
 :pattern ( ($generated@@80 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@446) ($generated@@80 $generated@@606 $generated@@45))
 :pattern ( ($generated@@80 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@155) ($generated@@80 $generated@@607 $generated@@48))
 :pattern ( ($generated@@80 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@612) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@610) ($generated@@167 $generated@@86 $generated@@4))) (= (type $generated@@611) $generated@@86)) (= (type $generated@@613) ($generated@@167 $generated@@86 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@615  (=> (= (ControlFlow 0 7) (- 0 6)) (= ($generated@@259 $generated@@608 $generated@@609) ($generated@@79 $generated@@608)))))
(let (($generated@@616  (=> (and (and (= $generated@@610 ($generated@@221 $generated@@611 $generated@@612 $generated@@60 false)) (= ($generated@@259 $generated@@608 $generated@@609) $generated@@609)) (and ($generated@@80 ($generated@@8 ($generated@@259 $generated@@608 $generated@@609)) $generated@@81) (= (ControlFlow 0 8) 7))) $generated@@615)))
(let (($generated@@617  (=> (<= ($generated@@253 0) ($generated@@259 $generated@@608 $generated@@609)) (=> (and ($generated@@83 ($generated@@8 $generated@@608) $generated@@339 $generated@@612) ($generated@@83 ($generated@@8 $generated@@609) $generated@@81 $generated@@612)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@609 7))) (=> (not (= $generated@@609 7)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (<= 0 $generated@@608) (= $generated@@608 $generated@@608))) (=> (or (<= 0 $generated@@608) (= $generated@@608 $generated@@608)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@609) (< $generated@@608 $generated@@608)) (= $generated@@609 $generated@@609))) (=> (or (or (<= 0 $generated@@609) (< $generated@@608 $generated@@608)) (= $generated@@609 $generated@@609)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@608 $generated@@608) (= $generated@@609 $generated@@609)) (or (< $generated@@608 $generated@@608) (and (= $generated@@608 $generated@@608) (< $generated@@609 $generated@@609)))))))))))))))
(let (($generated@@618  (=> (and (= $generated@@613 ($generated@@166 $generated@@611 $generated@@612 $generated@@60 false)) (not (= $generated@@609 7))) (and (=> (= (ControlFlow 0 9) 2) $generated@@617) (=> (= (ControlFlow 0 9) 8) $generated@@616)))))
(let (($generated@@619  (=> (and ($generated@@263 $generated@@612) ($generated@@614 $generated@@612)) (=> (and (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (<= ($generated@@253 0) $generated@@609)) (and (= 2 $generated@@78) (= (ControlFlow 0 10) 9))) $generated@@618))))
$generated@@619))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@252 (T@U Int) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Bool)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@72 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@221) ($generated@@71 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@71 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@72 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@81) (= (type $generated@@232) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@233) ($generated@@71 $generated@@4))) (= (type $generated@@235) $generated@@81)) (= (type $generated@@236) ($generated@@71 $generated@@237))) (= ($generated@@0 ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (= (type $generated@@238) $generated@@69))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@81) (= (type $generated@@240) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@239 $generated@@238 $generated@@240) ($generated@@85 $generated@@239 $generated@@144 $generated@@240)))
 :pattern ( ($generated@@85 $generated@@239 $generated@@238 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@151)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@69) (= (type $generated@@246) $generated@@69)) (= (type $generated@@247) $generated@@160)) (= (type $generated@@248) $generated@@160)) (= ($generated@@82 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@82 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@250 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@255 T@U) ($generated@@256 Int) ) (!  (=> (and (= (type $generated@@255) $generated@@81) (or ($generated@@252 ($generated@@250 $generated@@255) ($generated@@251 $generated@@256)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@255 $generated@@145)) ($generated@@82 $generated@@255 $generated@@238)) (<= ($generated@@251 0) $generated@@256)) ($generated@@0 ($generated@@250 ($generated@@11 (not (= $generated@@256 7))))))))) (= ($generated@@249 ($generated@@250 $generated@@255) ($generated@@251 $generated@@256)) ($generated@@251 $generated@@256)))
 :weight 3
 :pattern ( ($generated@@249 ($generated@@250 $generated@@255) ($generated@@251 $generated@@256)))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@151) (= (type $generated@@258) $generated@@151)) (= ($generated@@157 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@157 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@69)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@262) $generated@@69)) (= ($generated@@82 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@160) ($generated@@0 ($generated@@91 $generated@@261 $generated@@263))) ($generated@@242 $generated@@263 $generated@@262))
 :pattern ( ($generated@@91 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@82 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@69)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@267) $generated@@69)) (= ($generated@@82 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@160) ($generated@@0 ($generated@@91 $generated@@266 $generated@@268))) ($generated@@242 $generated@@268 $generated@@267))
 :pattern ( ($generated@@91 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@82 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@251 $generated@@269) $generated@@269)
 :pattern ( ($generated@@251 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@250 $generated@@270) $generated@@270)
 :pattern ( ($generated@@250 $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@69) (= (type $generated@@274) $generated@@69)) (= (type $generated@@275) $generated@@160)) (= (type $generated@@276) $generated@@160)) (= (type $generated@@277) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@271 $generated@@277)) (= ($generated@@85 ($generated@@241 $generated@@275 $generated@@276) ($generated@@150 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@85 ($generated@@241 $generated@@275 $generated@@276) ($generated@@150 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@73)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@151) (= ($generated@@149 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@151) ($generated@@149 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@160) (= (type $generated@@283) $generated@@160)) (= $generated@@281 ($generated@@241 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@149 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 17)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@2) (= ($generated@@82 $generated@@292 $generated@@83) (<= ($generated@@251 0) ($generated $generated@@292))))
 :pattern ( ($generated@@82 $generated@@292 $generated@@83))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@160)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@69) (= (type $generated@@297) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@272 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@85 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@272 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@87 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@89 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@87 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@91 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@87 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@91 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@91 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@87 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@91 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@91 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@341) $generated@@81)) (and ($generated@@271 $generated@@340) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@340 $generated@@341) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@341)) $generated@@83 $generated@@340))
 :pattern ( ($generated@@80 $generated@@341) ($generated@@93 ($generated@@91 $generated@@340 $generated@@341) $generated@@60))
))))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@342 T@U) ($generated@@343 Int) ) (!  (=> (and (= (type $generated@@342) $generated@@81) (or ($generated@@252 $generated@@342 $generated@@343) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@342 $generated@@145)) ($generated@@82 $generated@@342 $generated@@238)) (<= ($generated@@251 0) $generated@@343)) (not (= $generated@@343 7)))))) (= ($generated@@249 $generated@@342 $generated@@343) $generated@@343))
 :pattern ( ($generated@@249 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@89 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@87 $generated@@345 $generated@@2)) (= ($generated@@166 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@91 $generated@@344 $generated@@346))) (<= ($generated ($generated@@91 $generated@@344 $generated@@346)) ($generated@@298 $generated@@344))))
 :pattern ( ($generated@@91 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@166 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@160) ($generated@@242 $generated@@350 $generated@@83)) (and (= ($generated@@293 ($generated@@347 $generated@@2 $generated@@350)) $generated@@350) ($generated@@82 ($generated@@347 $generated@@2 $generated@@350) $generated@@83)))
 :pattern ( ($generated@@242 $generated@@350 $generated@@83))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@160) ($generated@@242 $generated@@351 $generated@@144)) (and (= ($generated@@293 ($generated@@347 $generated@@81 $generated@@351)) $generated@@351) ($generated@@82 ($generated@@347 $generated@@81 $generated@@351) $generated@@144)))
 :pattern ( ($generated@@242 $generated@@351 $generated@@144))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@160) ($generated@@242 $generated@@352 $generated@@238)) (and (= ($generated@@293 ($generated@@347 $generated@@81 $generated@@352)) $generated@@352) ($generated@@82 ($generated@@347 $generated@@81 $generated@@352) $generated@@238)))
 :pattern ( ($generated@@242 $generated@@352 $generated@@238))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@81) (= ($generated@@82 $generated@@353 $generated@@238)  (and ($generated@@82 $generated@@353 $generated@@144) (not (= $generated@@353 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@353 $generated@@238))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@308 (type $generated@@354))))
(let (($generated@@356 ($generated@@307 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@306 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@305 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@91 ($generated@@304 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@304 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@308 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@87 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@308 (type $generated@@361))))
(let (($generated@@363 ($generated@@307 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@306 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@305 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@91 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@326 (type $generated@@365))))
(let (($generated@@367 ($generated@@325 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@324 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@323 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@91 ($generated@@322 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@322 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@326 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@87 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@326 (type $generated@@372))))
(let (($generated@@374 ($generated@@325 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@324 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@323 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@91 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@377) $generated@@69)) (= ($generated@@82 $generated@@376 ($generated@@165 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@376 $generated@@378)))) ($generated@@242 $generated@@378 $generated@@377))
 :pattern ( ($generated@@91 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@82 $generated@@376 ($generated@@165 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@379 ($generated@@259 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@160) ($generated@@0 ($generated@@91 $generated@@379 $generated@@382))) ($generated@@272 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@91 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@85 $generated@@379 ($generated@@259 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@383 ($generated@@264 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@160) ($generated@@0 ($generated@@91 $generated@@383 $generated@@386))) ($generated@@272 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@91 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@85 $generated@@383 ($generated@@264 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@91 ($generated@@299 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@91 ($generated@@299 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@308 (type $generated@@392))))
(let (($generated@@394 ($generated@@307 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@87 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@306 $generated@@160 $generated@@160)) (= (type $generated@@396) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@91 ($generated@@304 $generated@@395) ($generated@@158 ($generated@@347 $generated@@151 $generated@@396)))) (= ($generated@@91 ($generated@@390 $generated@@395) ($generated@@158 ($generated@@347 $generated@@151 $generated@@396))) ($generated@@159 ($generated@@347 $generated@@151 $generated@@396))))))
 :pattern ( ($generated@@91 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@326 (type $generated@@400))))
(let (($generated@@402 ($generated@@325 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@87 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@324 $generated@@160 $generated@@160)) (= (type $generated@@404) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@91 ($generated@@322 $generated@@403) ($generated@@158 ($generated@@347 $generated@@151 $generated@@404)))) (= ($generated@@91 ($generated@@398 $generated@@403) ($generated@@158 ($generated@@347 $generated@@151 $generated@@404))) ($generated@@159 ($generated@@347 $generated@@151 $generated@@404))))))
 :pattern ( ($generated@@91 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@307 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@306 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@91 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@91 ($generated@@304 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@91 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@91 ($generated@@304 $generated@@405) $generated@@409))
 :pattern ( ($generated@@91 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@91 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@325 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@324 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@91 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@91 ($generated@@322 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@91 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@91 ($generated@@322 $generated@@410) $generated@@414))
 :pattern ( ($generated@@91 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@91 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@306 $generated@@160 $generated@@160)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@304 $generated@@418) $generated@@422))) (and ($generated@@272 ($generated@@91 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@272 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@91 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@91 ($generated@@304 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@85 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@324 $generated@@160 $generated@@160)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@322 $generated@@426) $generated@@430))) (and ($generated@@272 ($generated@@91 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@272 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@91 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@91 ($generated@@322 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@85 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@431 T@U) ($generated@@432 Int) ) (!  (=> (and (= (type $generated@@431) $generated@@81) (or ($generated@@252 $generated@@431 $generated@@432) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@431 $generated@@145)) ($generated@@82 $generated@@431 $generated@@238)) (<= ($generated@@251 0) $generated@@432)) (not (= $generated@@432 7)))))) (and (= ($generated@@249 $generated@@431 $generated@@432) ($generated@@80 $generated@@431)) (<= ($generated@@251 0) ($generated@@249 $generated@@431 $generated@@432))))
 :pattern ( ($generated@@249 $generated@@431 $generated@@432))
))))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@87 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@326 (type $generated@@435))))
(let (($generated@@437 ($generated@@325 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@324 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@323 $generated@@437 $generated@@436)) (= ($generated@@322 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@322 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@326 (type $generated@@438))))
(let (($generated@@440 ($generated@@325 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@324 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@323 $generated@@440 $generated@@439)) (= ($generated@@369 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@369 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@326 (type $generated@@441))))
(let (($generated@@443 ($generated@@325 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@324 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@323 $generated@@443 $generated@@442)) (= ($generated@@397 $generated@@441) ($generated@@433 $generated@@160))))))
 :pattern ( ($generated@@397 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@308 (type $generated@@444))))
(let (($generated@@446 ($generated@@307 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@306 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@305 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@160) (= (type $generated@@448) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@389 $generated@@444) ($generated@@293 ($generated@@241 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@389 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@326 (type $generated@@449))))
(let (($generated@@451 ($generated@@325 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@324 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@323 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@160) (= (type $generated@@453) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@397 $generated@@449) ($generated@@293 ($generated@@241 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@397 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@160) ($generated@@242 $generated@@454 $generated@@46)) (and (= ($generated@@293 ($generated@@347 $generated@@2 $generated@@454)) $generated@@454) ($generated@@82 ($generated@@347 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@160) ($generated@@242 $generated@@455 $generated@@47)) (and (= ($generated@@293 ($generated@@347 $generated@@3 $generated@@455)) $generated@@455) ($generated@@82 ($generated@@347 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@160) ($generated@@242 $generated@@456 $generated@@44)) (and (= ($generated@@293 ($generated@@347 $generated@@4 $generated@@456)) $generated@@456) ($generated@@82 ($generated@@347 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@160) ($generated@@242 $generated@@458 $generated@@45)) (and (= ($generated@@293 ($generated@@347 $generated@@457 $generated@@458)) $generated@@458) ($generated@@82 ($generated@@347 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@69) (= ($generated@@242 ($generated@@293 $generated@@459) $generated@@460) ($generated@@82 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@242 ($generated@@293 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@89 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@87 $generated@@462 $generated@@2)) (<= 0 ($generated@@298 $generated@@461))))
 :pattern ( ($generated@@298 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@287 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@286 $generated@@464)) (<= 0 ($generated@@285 $generated@@463))))
 :pattern ( ($generated@@285 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@69)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@69) (= (type $generated@@472) $generated@@69)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@160) (= (type $generated@@486) $generated@@160)) (= ($generated@@278 ($generated@@241 $generated@@485 $generated@@486)) $generated@@62))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@150 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@150 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@491 ($generated@@150 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@150 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@160) (= (type $generated@@496) $generated@@160)) (= ($generated@@158 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@160) (= (type $generated@@498) $generated@@160)) (= ($generated@@159 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@287 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@286 $generated@@160)) (= (type $generated@@506) $generated@@69)) (= (type $generated@@507) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@285 $generated@@505))) ($generated@@272 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@85 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@86 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@86 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@259 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@259 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@77 ($generated@@259 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@264 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@264 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@264 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@165 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@165 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@77 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@347 $generated@@528 ($generated@@293 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@293 $generated@@527))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@529 T@U) ($generated@@530 Int) ) (!  (=> (and (= (type $generated@@529) $generated@@81) (or ($generated@@252 $generated@@529 ($generated@@251 $generated@@530)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@529 $generated@@145)) ($generated@@82 $generated@@529 $generated@@238)) (<= ($generated@@251 0) $generated@@530)) ($generated@@0 ($generated@@250 ($generated@@11 (not (= $generated@@530 7))))))))) (= ($generated@@249 $generated@@529 ($generated@@251 $generated@@530)) ($generated@@251 $generated@@530)))
 :weight 3
 :pattern ( ($generated@@249 $generated@@529 ($generated@@251 $generated@@530)))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@306 $generated@@160 $generated@@160)) (= (type $generated@@532) $generated@@69)) (= (type $generated@@533) $generated@@69)) (= ($generated@@82 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@304 $generated@@531) $generated@@534))) (and ($generated@@242 ($generated@@91 ($generated@@390 $generated@@531) $generated@@534) $generated@@533) ($generated@@242 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@91 ($generated@@390 $generated@@531) $generated@@534))
 :pattern ( ($generated@@91 ($generated@@304 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@82 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@324 $generated@@160 $generated@@160)) (= (type $generated@@536) $generated@@69)) (= (type $generated@@537) $generated@@69)) (= ($generated@@82 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@322 $generated@@535) $generated@@538))) (and ($generated@@242 ($generated@@91 ($generated@@398 $generated@@535) $generated@@538) $generated@@537) ($generated@@242 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@91 ($generated@@398 $generated@@535) $generated@@538))
 :pattern ( ($generated@@91 ($generated@@322 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@82 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@160) (= (type $generated@@542) $generated@@160)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@160) (= (type $generated@@544) $generated@@160)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@241 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@241 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@160) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@69)) ($generated@@242 $generated@@545 ($generated@@415 $generated@@546 $generated@@547))) (and (= ($generated@@293 ($generated@@347 ($generated@@306 $generated@@160 $generated@@160) $generated@@545)) $generated@@545) ($generated@@82 ($generated@@347 ($generated@@306 $generated@@160 $generated@@160) $generated@@545) ($generated@@415 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@242 $generated@@545 ($generated@@415 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@160) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@69)) ($generated@@242 $generated@@548 ($generated@@423 $generated@@549 $generated@@550))) (and (= ($generated@@293 ($generated@@347 ($generated@@324 $generated@@160 $generated@@160) $generated@@548)) $generated@@548) ($generated@@82 ($generated@@347 ($generated@@324 $generated@@160 $generated@@160) $generated@@548) ($generated@@423 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@548 ($generated@@423 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@69) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@160)) ($generated@@242 $generated@@553 ($generated@@150 $generated@@551 $generated@@552))) (and (= ($generated@@293 ($generated@@347 $generated@@151 $generated@@553)) $generated@@553) ($generated@@82 ($generated@@347 $generated@@151 $generated@@553) ($generated@@150 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@242 $generated@@553 ($generated@@150 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@91 ($generated@@433 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@91 ($generated@@433 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@74)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@69) (= (type $generated@@559) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@558 $generated@@559)) $generated@@63) (= ($generated@@556 ($generated@@150 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@151) (= ($generated@@539 ($generated@@293 $generated@@560)) ($generated@@540 $generated@@560)))
 :pattern ( ($generated@@539 ($generated@@293 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@160) ($generated@@242 $generated@@561 ($generated@@86 0))) (and (= ($generated@@293 ($generated@@347 $generated@@2 $generated@@561)) $generated@@561) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@561) ($generated@@86 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@86 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@160) (= (type $generated@@563) $generated@@69)) ($generated@@242 $generated@@562 ($generated@@259 $generated@@563))) (and (= ($generated@@293 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@562)) $generated@@562) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@562) ($generated@@259 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@259 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@160) (= (type $generated@@565) $generated@@69)) ($generated@@242 $generated@@564 ($generated@@264 $generated@@565))) (and (= ($generated@@293 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@564)) $generated@@564) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@564) ($generated@@264 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@264 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@160) (= (type $generated@@567) $generated@@69)) ($generated@@242 $generated@@566 ($generated@@165 $generated@@567))) (and (= ($generated@@293 ($generated@@347 ($generated@@87 $generated@@160 $generated@@2) $generated@@566)) $generated@@566) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@160 $generated@@2) $generated@@566) ($generated@@165 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@165 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@160) (= (type $generated@@569) $generated@@69)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@293 ($generated@@347 ($generated@@286 $generated@@160) $generated@@568)) $generated@@568) ($generated@@82 ($generated@@347 ($generated@@286 $generated@@160) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@556 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@556 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@238) $generated@@65))
(assert (= ($generated@@556 $generated@@238) $generated@@68))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@570 ($generated@@165 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@570 $generated@@573)))) ($generated@@272 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@91 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@85 $generated@@570 ($generated@@165 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@69)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@81) (= ($generated@@82 $generated@@577 $generated@@144)  (or (= $generated@@577 $generated@@145) ($generated@@574 ($generated@@575 $generated@@577)))))
 :pattern ( ($generated@@82 $generated@@577 $generated@@144))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@151) (= (type $generated@@579) $generated@@69)) (= (type $generated@@580) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@271 $generated@@580) (and ($generated@@149 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@69) ($generated@@85 $generated@@578 ($generated@@150 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@85 $generated@@578 ($generated@@150 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@272 ($generated@@158 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@272 ($generated@@158 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@151) (= (type $generated@@583) $generated@@69)) (= (type $generated@@584) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@271 $generated@@584) (and ($generated@@149 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@69) ($generated@@85 $generated@@582 ($generated@@150 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@85 $generated@@582 ($generated@@150 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@272 ($generated@@159 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@272 ($generated@@159 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@160) (= (type $generated@@587) $generated@@160)) (= ($generated@@241 ($generated@@250 $generated@@586) ($generated@@250 $generated@@587)) ($generated@@250 ($generated@@241 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@241 ($generated@@250 $generated@@586) ($generated@@250 $generated@@587)))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@251 $generated@@588))) ($generated@@250 ($generated@@293 ($generated@@8 $generated@@588))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@251 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@293 ($generated@@250 $generated@@589)) ($generated@@250 ($generated@@293 $generated@@589)))
 :pattern ( ($generated@@293 ($generated@@250 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@287 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@286 $generated@@591)) (= ($generated@@285 $generated@@590) 0)) (= $generated@@590 ($generated@@284 $generated@@591))))
 :pattern ( ($generated@@285 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@87 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@298 ($generated@@92 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@298 $generated@@592) ($generated ($generated@@91 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@298 ($generated@@92 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@597) $generated@@2)) ($generated@@85 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@85 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@599) $generated@@3)) ($generated@@85 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@85 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@601) $generated@@4)) ($generated@@85 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@85 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@603) $generated@@457)) ($generated@@85 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@85 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@605) $generated@@160)) ($generated@@85 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@85 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@286 $generated@@160)) (= (type $generated@@607) $generated@@69)) (= ($generated@@82 $generated@@606 ($generated@@499 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@285 $generated@@606))) ($generated@@242 ($generated@@500 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@500 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@82 $generated@@606 ($generated@@499 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@286 $generated@@160)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@285 $generated@@610))) (< ($generated@@540 ($generated@@347 $generated@@151 ($generated@@500 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@540 ($generated@@347 $generated@@151 ($generated@@500 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@306 $generated@@160 $generated@@160)) (= (type $generated@@613) $generated@@69)) (= (type $generated@@614) $generated@@69)) ($generated@@82 $generated@@612 ($generated@@415 $generated@@613 $generated@@614))) (and (and ($generated@@82 ($generated@@304 $generated@@612) ($generated@@259 $generated@@613)) ($generated@@82 ($generated@@358 $generated@@612) ($generated@@259 $generated@@614))) ($generated@@82 ($generated@@389 $generated@@612) ($generated@@259 ($generated@@150 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@82 $generated@@612 ($generated@@415 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@324 $generated@@160 $generated@@160)) (= (type $generated@@616) $generated@@69)) (= (type $generated@@617) $generated@@69)) ($generated@@82 $generated@@615 ($generated@@423 $generated@@616 $generated@@617))) (and (and ($generated@@82 ($generated@@322 $generated@@615) ($generated@@264 $generated@@616)) ($generated@@82 ($generated@@369 $generated@@615) ($generated@@264 $generated@@617))) ($generated@@82 ($generated@@397 $generated@@615) ($generated@@264 ($generated@@150 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@82 $generated@@615 ($generated@@423 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@82 $generated@@618 $generated@@46))
 :pattern ( ($generated@@82 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@82 $generated@@619 $generated@@47))
 :pattern ( ($generated@@82 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@82 $generated@@620 $generated@@44))
 :pattern ( ($generated@@82 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@457) ($generated@@82 $generated@@621 $generated@@45))
 :pattern ( ($generated@@82 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@160) ($generated@@82 $generated@@622 $generated@@48))
 :pattern ( ($generated@@82 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@623) $generated@@81) (= (type $generated@@626) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@625) ($generated@@172 $generated@@81 $generated@@4))) (= (type $generated@@627) ($generated@@172 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@629  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@249 $generated@@623 $generated@@624) ($generated@@80 $generated@@623)))))
(let (($generated@@630  (=> (and (and (= $generated@@625 ($generated@@226 $generated@@145 $generated@@626 $generated@@60 false)) (= ($generated@@249 $generated@@623 $generated@@624) $generated@@624)) (and ($generated@@82 ($generated@@8 ($generated@@249 $generated@@623 $generated@@624)) $generated@@83) (= (ControlFlow 0 7) 6))) $generated@@629)))
(let (($generated@@631  (=> (<= ($generated@@251 0) ($generated@@249 $generated@@623 $generated@@624)) (=> (and ($generated@@85 $generated@@623 $generated@@144 $generated@@626) ($generated@@85 ($generated@@8 $generated@@624) $generated@@83 $generated@@626)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@624 7))) (=> (not (= $generated@@624 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@624) (= $generated@@624 $generated@@624))) (=> (or (<= 0 $generated@@624) (= $generated@@624 $generated@@624)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@623 $generated@@623) (= $generated@@624 $generated@@624)) (< $generated@@624 $generated@@624)))))))))))
(let (($generated@@632  (=> (and (= $generated@@627 ($generated@@171 $generated@@145 $generated@@626 $generated@@60 false)) (not (= $generated@@624 7))) (and (=> (= (ControlFlow 0 8) 2) $generated@@631) (=> (= (ControlFlow 0 8) 7) $generated@@630)))))
(let (($generated@@633  (=> (and ($generated@@271 $generated@@626) ($generated@@628 $generated@@626)) (=> (and (and (and (not (= $generated@@623 $generated@@145)) (and ($generated@@82 $generated@@623 $generated@@238) ($generated@@85 $generated@@623 $generated@@238 $generated@@626))) (<= ($generated@@251 0) $generated@@624)) (and (= 2 $generated@@79) (= (ControlFlow 0 9) 8))) $generated@@632))))
$generated@@633))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@245 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@246 (Int) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (Int) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@292 (T@U Int) Int)
(declare-fun $generated@@293 (T@U Int) Bool)
(declare-fun $generated@@296 (T@U) Bool)
(declare-fun $generated@@297 (T@U T@U T@U) Bool)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@318 (Int) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@336 (T@T) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@T T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@T) T@U)
(declare-fun $generated@@361 (T@T T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@377 (T@U) Bool)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@468 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@544 (T@U Int) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@662 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (= ($generated@@1 $generated@@87) 12) (forall (($generated@@88 T@U) ) (! (= (type ($generated@@86 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (= (type $generated@@89) $generated@@87) (= (type $generated@@90) $generated@@81)) (= (type $generated@@91) $generated@@81)) (= ($generated@@85 ($generated@@86 $generated@@89) $generated@@90 $generated@@91) (= $generated@@90 $generated@@91)))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@89) $generated@@90 $generated@@91))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 13)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@72 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 15)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@72 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (= ($generated@@1 $generated@@151) 16))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@151) (= (type $generated@@153) $generated@@151)) (= (type $generated@@154) $generated@@151)) (and ($generated@@150 $generated@@152 $generated@@153) ($generated@@150 $generated@@153 $generated@@154))) ($generated@@150 $generated@@152 $generated@@154))
 :pattern ( ($generated@@150 $generated@@152 $generated@@153) ($generated@@150 $generated@@153 $generated@@154))
 :pattern ( ($generated@@150 $generated@@152 $generated@@153) ($generated@@150 $generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@2) (= (type $generated@@156) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@155 $generated@@83 $generated@@156))
 :pattern ( ($generated@@92 $generated@@155 $generated@@83 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@82 $generated@@157 ($generated@@93 0)))
 :pattern ( ($generated@@82 $generated@@157 ($generated@@93 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@69)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@69) (= (type $generated@@163) $generated@@69)) (= (type $generated@@164) $generated@@81)) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@151)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@151)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@81) (= (type $generated@@171) $generated@@81)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@69)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@94 $generated@@151 $generated@@2)) (= (type $generated@@176) $generated@@69)) ($generated@@82 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@82 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@95 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@72 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@95) (= (type $generated@@227) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@228) ($generated@@71 $generated@@4))) (= (type $generated@@230) $generated@@95)) (= (type $generated@@231) ($generated@@71 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@179 $generated@@95 $generated@@4))
 :pattern ( ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@72 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@95) (= (type $generated@@239) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@240) ($generated@@71 $generated@@4))) (= (type $generated@@242) $generated@@95)) (= (type $generated@@243) ($generated@@71 $generated@@244))) (= ($generated@@0 ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@247 Int) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@151)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@87) (= (type $generated@@249) $generated@@81)) (= (type $generated@@250) $generated@@81)) (forall (($generated@@251 Int) ) (!  (=> (<= 0 $generated@@251) ($generated@@245 ($generated@@246 $generated@@251) ($generated@@86 $generated@@248) $generated@@249 $generated@@250))
 :pattern ( ($generated@@245 ($generated@@246 $generated@@251) ($generated@@86 $generated@@248) $generated@@249 $generated@@250))
))) ($generated@@85 ($generated@@86 $generated@@248) $generated@@249 $generated@@250))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@248) $generated@@249 $generated@@250))
)))
(assert (= (type $generated@@253) $generated@@69))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@81) ($generated@@82 $generated@@254 $generated@@253)) ($generated@@252 $generated@@254))
 :pattern ( ($generated@@252 $generated@@254) ($generated@@82 $generated@@254 $generated@@253))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= (type ($generated@@255 $generated@@257 $generated@@258)) $generated@@81)
 :pattern ( ($generated@@255 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) $generated@@69) (= (type $generated@@260) $generated@@69)) (= (type $generated@@261) $generated@@151)) (= (type $generated@@262) $generated@@151)) (= ($generated@@82 ($generated@@255 $generated@@261 $generated@@262) ($generated@@159 $generated@@259 $generated@@260))  (and ($generated@@256 $generated@@261 $generated@@259) ($generated@@256 $generated@@262 $generated@@260))))
 :pattern ( ($generated@@82 ($generated@@255 $generated@@261 $generated@@262) ($generated@@159 $generated@@259 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@81) (= (type $generated@@264) $generated@@81)) (= ($generated@@165 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@165 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@151) (= (type $generated@@266) $generated@@87)) (= (type $generated@@267) $generated@@81)) (= (type $generated@@268) $generated@@81)) (= (type $generated@@269) $generated@@151)) (and ($generated@@150 $generated@@265 $generated@@269) ($generated@@245 $generated@@269 ($generated@@86 $generated@@266) $generated@@267 $generated@@268))) ($generated@@245 $generated@@265 ($generated@@86 $generated@@266) $generated@@267 $generated@@268))
 :pattern ( ($generated@@245 $generated@@265 ($generated@@86 $generated@@266) $generated@@267 $generated@@268) ($generated@@245 $generated@@269 ($generated@@86 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@69)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@94 $generated@@151 $generated@@4)) (= (type $generated@@273) $generated@@69)) (= ($generated@@82 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@151) ($generated@@0 ($generated@@99 $generated@@272 $generated@@274))) ($generated@@256 $generated@@274 $generated@@273))
 :pattern ( ($generated@@99 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@82 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@69)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@94 $generated@@151 $generated@@4)) (= (type $generated@@278) $generated@@69)) (= ($generated@@82 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@151) ($generated@@0 ($generated@@99 $generated@@277 $generated@@279))) ($generated@@256 $generated@@279 $generated@@278))
 :pattern ( ($generated@@99 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@82 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 Int) ) (! (= ($generated@@280 $generated@@281) $generated@@281)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@288) $generated@@151) (= (type $generated@@289) $generated@@87)) (= (type $generated@@290) $generated@@81)) (= (type $generated@@291) $generated@@81)) (and ($generated@@82 $generated@@290 $generated@@253) ($generated@@82 $generated@@291 $generated@@253))) (= ($generated@@245 $generated@@288 ($generated@@86 $generated@@289) $generated@@290 $generated@@291)  (and (=> (< 0 ($generated@@286 $generated@@288)) (and (and ($generated@@252 $generated@@290) ($generated@@252 $generated@@291)) (=> (and ($generated@@252 $generated@@290) ($generated@@252 $generated@@291)) (= ($generated@@287 $generated@@290) ($generated@@287 $generated@@291))))) (=> (and (not (= $generated@@288 ($generated@@246 0))) (= ($generated@@286 $generated@@288) 0)) ($generated@@85 $generated@@289 $generated@@290 $generated@@291)))))
 :pattern ( ($generated@@245 $generated@@288 ($generated@@86 $generated@@289) $generated@@290 $generated@@291))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@294 T@U) ($generated@@295 Int) ) (!  (=> (and (= (type $generated@@294) $generated@@81) (or ($generated@@293 ($generated@@282 $generated@@294) ($generated@@280 $generated@@295)) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@294 $generated@@253) (<= ($generated@@280 0) $generated@@295)) ($generated@@0 ($generated@@282 ($generated@@11 (not (= $generated@@295 7))))))))) (= ($generated@@292 ($generated@@282 $generated@@294) ($generated@@280 $generated@@295)) ($generated@@280 $generated@@295)))
 :weight 3
 :pattern ( ($generated@@292 ($generated@@282 $generated@@294) ($generated@@280 $generated@@295)))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) $generated@@69) (= (type $generated@@299) $generated@@69)) (= (type $generated@@300) $generated@@151)) (= (type $generated@@301) $generated@@151)) (= (type $generated@@302) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@296 $generated@@302)) (= ($generated@@92 ($generated@@255 $generated@@300 $generated@@301) ($generated@@159 $generated@@298 $generated@@299) $generated@@302)  (and ($generated@@297 $generated@@300 $generated@@298 $generated@@302) ($generated@@297 $generated@@301 $generated@@299 $generated@@302))))
 :pattern ( ($generated@@92 ($generated@@255 $generated@@300 $generated@@301) ($generated@@159 $generated@@298 $generated@@299) $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@73)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@81) (= ($generated@@158 $generated@@305) (= ($generated@@303 $generated@@305) $generated@@62)))
 :pattern ( ($generated@@158 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@81) (= ($generated@@252 $generated@@306) (= ($generated@@303 $generated@@306) $generated@@64)))
 :pattern ( ($generated@@252 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@81) ($generated@@158 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@151) (= (type $generated@@309) $generated@@151)) (= $generated@@307 ($generated@@255 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@158 $generated@@307))
)))
(assert  (and (and (forall (($generated@@314 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@314)) 18)) (forall (($generated@@315 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@312 $generated@@315))
))) (forall (($generated@@316 T@T) ) (! (= (type ($generated@@310 $generated@@316)) ($generated@@312 $generated@@316))
 :pattern ( ($generated@@310 $generated@@316))
))))
(assert (forall (($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@317)) 0)
 :pattern ( ($generated@@310 $generated@@317))
)))
(assert (forall (($generated@@319 Int) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@81)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@81) ($generated@@252 $generated@@320)) (exists (($generated@@321 Int) ) (= $generated@@320 ($generated@@318 $generated@@321))))
 :pattern ( ($generated@@252 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@2) (= ($generated@@82 $generated@@322 $generated@@83) (<= ($generated@@280 0) ($generated $generated@@322))))
 :pattern ( ($generated@@82 $generated@@322 $generated@@83))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@323) $generated@@151) (= (type $generated@@324) $generated@@87)) (= (type $generated@@325) $generated@@81)) (= (type $generated@@326) $generated@@81)) (not (= $generated@@323 ($generated@@246 0)))) (= ($generated@@245 $generated@@323 ($generated@@86 $generated@@324) $generated@@325 $generated@@326) ($generated@@245 $generated@@323 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@245 $generated@@323 ($generated@@86 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@327) $generated@@87) (= (type $generated@@328) $generated@@81)) (= (type $generated@@329) $generated@@81)) (= ($generated@@85 ($generated@@86 $generated@@327) $generated@@328 $generated@@329) ($generated@@85 $generated@@327 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@327) $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@151)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@69) (= (type $generated@@334) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@297 ($generated@@330 $generated@@332) $generated@@333 $generated@@334) ($generated@@92 $generated@@332 $generated@@333 $generated@@334)))
 :pattern ( ($generated@@297 ($generated@@330 $generated@@332) $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@337 T@T) ) (! (= (type ($generated@@336 $generated@@337)) ($generated@@94 $generated@@337 $generated@@2))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@97 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@94 $generated@@339 $generated@@2)) (and (= (= ($generated@@335 $generated@@338) 0) (= $generated@@338 ($generated@@336 $generated@@339))) (=> (not (= ($generated@@335 $generated@@338) 0)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) (< 0 ($generated ($generated@@99 $generated@@338 $generated@@340))))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert  (and (and (and (and (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (= ($generated@@1 ($generated@@343 $generated@@346 $generated@@347)) 19)) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@344 ($generated@@343 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@343 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@345 ($generated@@343 $generated@@350 $generated@@351)) $generated@@351)
 :pattern ( ($generated@@343 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@344 (type $generated@@352))))
(= (type ($generated@@341 $generated@@352)) ($generated@@94 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@352))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@342 $generated@@354 $generated@@355)) ($generated@@343 $generated@@354 $generated@@355))
 :pattern ( ($generated@@342 $generated@@354 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@99 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@99 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert  (and (and (and (and (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (= ($generated@@1 ($generated@@361 $generated@@364 $generated@@365)) 20)) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@362 ($generated@@361 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@361 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@363 ($generated@@361 $generated@@368 $generated@@369)) $generated@@369)
 :pattern ( ($generated@@361 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@362 (type $generated@@370))))
(= (type ($generated@@359 $generated@@370)) ($generated@@94 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@370))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= (type ($generated@@360 $generated@@372 $generated@@373)) ($generated@@361 $generated@@372 $generated@@373))
 :pattern ( ($generated@@360 $generated@@372 $generated@@373))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@T) ) (! (let (($generated@@376 (type $generated@@374)))
 (not ($generated@@0 ($generated@@99 ($generated@@359 ($generated@@360 $generated@@376 $generated@@375)) $generated@@374))))
 :pattern ( (let (($generated@@376 (type $generated@@374)))
($generated@@99 ($generated@@359 ($generated@@360 $generated@@376 $generated@@375)) $generated@@374)))
)))
(assert (forall (($generated@@378 Int) ) (!  (=> (<= 0 $generated@@378) (and ($generated@@377 ($generated@@246 $generated@@378)) (= ($generated@@286 ($generated@@246 $generated@@378)) $generated@@378)))
 :pattern ( ($generated@@246 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@97 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@94 $generated@@380 $generated@@2)) (= ($generated@@173 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@99 $generated@@379 $generated@@381))) (<= ($generated ($generated@@99 $generated@@379 $generated@@381)) ($generated@@335 $generated@@379))))
 :pattern ( ($generated@@99 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@173 $generated@@379))
)))
(assert (forall (($generated@@383 T@T) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@151) ($generated@@256 $generated@@385 $generated@@83)) (and (= ($generated@@330 ($generated@@382 $generated@@2 $generated@@385)) $generated@@385) ($generated@@82 ($generated@@382 $generated@@2 $generated@@385) $generated@@83)))
 :pattern ( ($generated@@256 $generated@@385 $generated@@83))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@151) ($generated@@256 $generated@@386 $generated@@253)) (and (= ($generated@@330 ($generated@@382 $generated@@81 $generated@@386)) $generated@@386) ($generated@@82 ($generated@@382 $generated@@81 $generated@@386) $generated@@253)))
 :pattern ( ($generated@@256 $generated@@386 $generated@@253))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) $generated@@87) (= (type $generated@@388) $generated@@81)) (= (type $generated@@389) $generated@@81)) (= ($generated@@85 ($generated@@86 $generated@@387) $generated@@388 $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@151) ($generated@@245 $generated@@390 ($generated@@86 $generated@@387) $generated@@388 $generated@@389))
 :pattern ( ($generated@@245 $generated@@390 ($generated@@86 $generated@@387) $generated@@388 $generated@@389))
))))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@387) $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@345 (type $generated@@391))))
(let (($generated@@393 ($generated@@344 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@343 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@342 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) ($generated@@0 ($generated@@99 ($generated@@341 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@341 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@345 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396)) ($generated@@94 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@345 (type $generated@@398))))
(let (($generated@@400 ($generated@@344 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@343 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@342 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@399) ($generated@@0 ($generated@@99 ($generated@@395 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@395 $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@363 (type $generated@@402))))
(let (($generated@@404 ($generated@@362 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@361 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@360 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) ($generated@@0 ($generated@@99 ($generated@@359 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@359 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@363 (type $generated@@407))))
(= (type ($generated@@406 $generated@@407)) ($generated@@94 $generated@@408 $generated@@4)))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@363 (type $generated@@409))))
(let (($generated@@411 ($generated@@362 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@361 $generated@@411 $generated@@410)) (or (= $generated@@409 ($generated@@360 $generated@@411 $generated@@410)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@410) ($generated@@0 ($generated@@99 ($generated@@406 $generated@@409) $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@406 $generated@@409))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@414) $generated@@81)) (and ($generated@@296 $generated@@413) ($generated@@92 $generated@@414 $generated@@253 $generated@@413))) ($generated@@92 ($generated@@8 ($generated@@80 $generated@@414)) $generated@@83 $generated@@413))
 :pattern ( ($generated@@80 $generated@@414) ($generated@@92 $generated@@414 $generated@@253 $generated@@413))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@94 $generated@@151 $generated@@2)) (= (type $generated@@416) $generated@@69)) (= ($generated@@82 $generated@@415 ($generated@@172 $generated@@416)) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@151) (< 0 ($generated ($generated@@99 $generated@@415 $generated@@417)))) ($generated@@256 $generated@@417 $generated@@416))
 :pattern ( ($generated@@99 $generated@@415 $generated@@417))
))))
 :pattern ( ($generated@@82 $generated@@415 ($generated@@172 $generated@@416)))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@418 T@U) ($generated@@419 Int) ) (!  (=> (and (= (type $generated@@418) $generated@@81) (or ($generated@@293 $generated@@418 $generated@@419) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@418 $generated@@253) (<= ($generated@@280 0) $generated@@419)) (not (= $generated@@419 7)))))) (= ($generated@@292 $generated@@418 $generated@@419) $generated@@419))
 :pattern ( ($generated@@292 $generated@@418 $generated@@419))
))))
(assert (forall (($generated@@420 Int) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@296 $generated@@421)) (= ($generated@@92 ($generated@@318 $generated@@420) $generated@@253 $generated@@421) ($generated@@92 ($generated@@8 $generated@@420) $generated@@46 $generated@@421)))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@420) $generated@@253 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@151) (= (type $generated@@423) $generated@@151)) (or (or ($generated@@150 $generated@@422 $generated@@423) (= $generated@@422 $generated@@423)) ($generated@@150 $generated@@423 $generated@@422)))
 :pattern ( ($generated@@150 $generated@@422 $generated@@423) ($generated@@150 $generated@@423 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@424) ($generated@@94 $generated@@151 $generated@@4)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@424 ($generated@@270 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@151) ($generated@@0 ($generated@@99 $generated@@424 $generated@@427))) ($generated@@297 $generated@@427 $generated@@425 $generated@@426))
 :pattern ( ($generated@@99 $generated@@424 $generated@@427))
))))
 :pattern ( ($generated@@92 $generated@@424 ($generated@@270 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@94 $generated@@151 $generated@@4)) (= (type $generated@@429) $generated@@69)) (= (type $generated@@430) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@428 ($generated@@275 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@151) ($generated@@0 ($generated@@99 $generated@@428 $generated@@431))) ($generated@@297 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@99 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@92 $generated@@428 ($generated@@275 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(= ($generated ($generated@@99 ($generated@@336 $generated@@433) $generated@@432)) 0))
 :pattern ( (let (($generated@@433 (type $generated@@432)))
($generated@@99 ($generated@@336 $generated@@433) $generated@@432)))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@94 $generated@@151 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@345 (type $generated@@437))))
(let (($generated@@439 ($generated@@344 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@94 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@343 $generated@@151 $generated@@151)) (= (type $generated@@441) $generated@@151)) (= ($generated@@0 ($generated@@99 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@99 ($generated@@341 $generated@@440) ($generated@@166 ($generated@@382 $generated@@81 $generated@@441)))) (= ($generated@@99 ($generated@@435 $generated@@440) ($generated@@166 ($generated@@382 $generated@@81 $generated@@441))) ($generated@@167 ($generated@@382 $generated@@81 $generated@@441))))))
 :pattern ( ($generated@@99 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) ($generated@@94 $generated@@151 $generated@@4))
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@363 (type $generated@@445))))
(let (($generated@@447 ($generated@@362 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445)) ($generated@@94 $generated@@447 $generated@@446))))
 :pattern ( ($generated@@443 $generated@@445))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@361 $generated@@151 $generated@@151)) (= (type $generated@@449) $generated@@151)) (= ($generated@@0 ($generated@@99 ($generated@@442 $generated@@448) $generated@@449))  (and ($generated@@0 ($generated@@99 ($generated@@359 $generated@@448) ($generated@@166 ($generated@@382 $generated@@81 $generated@@449)))) (= ($generated@@99 ($generated@@443 $generated@@448) ($generated@@166 ($generated@@382 $generated@@81 $generated@@449))) ($generated@@167 ($generated@@382 $generated@@81 $generated@@449))))))
 :pattern ( ($generated@@99 ($generated@@442 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@344 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@343 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@99 ($generated@@395 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@99 ($generated@@341 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@99 ($generated@@435 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@99 ($generated@@341 $generated@@450) $generated@@454))
 :pattern ( ($generated@@99 ($generated@@435 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@99 ($generated@@395 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@456)))
(let (($generated@@458 ($generated@@362 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@361 $generated@@458 $generated@@457)) (= ($generated@@0 ($generated@@99 ($generated@@406 $generated@@455) $generated@@456)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@458) (and ($generated@@0 ($generated@@99 ($generated@@359 $generated@@455) $generated@@459)) (= $generated@@456 ($generated@@99 ($generated@@443 $generated@@455) $generated@@459))))
 :pattern ( ($generated@@99 ($generated@@359 $generated@@455) $generated@@459))
 :pattern ( ($generated@@99 ($generated@@443 $generated@@455) $generated@@459))
))))))
 :pattern ( ($generated@@99 ($generated@@406 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@69)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@343 $generated@@151 $generated@@151)) (= (type $generated@@464) $generated@@69)) (= (type $generated@@465) $generated@@69)) (= (type $generated@@466) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@151) ($generated@@0 ($generated@@99 ($generated@@341 $generated@@463) $generated@@467))) (and ($generated@@297 ($generated@@99 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@297 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@99 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@99 ($generated@@341 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@92 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (= (type ($generated@@468 $generated@@469 $generated@@470)) $generated@@69)
 :pattern ( ($generated@@468 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (and (= (type $generated@@471) ($generated@@361 $generated@@151 $generated@@151)) (= (type $generated@@472) $generated@@69)) (= (type $generated@@473) $generated@@69)) (= (type $generated@@474) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@471 ($generated@@468 $generated@@472 $generated@@473) $generated@@474) (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@151) ($generated@@0 ($generated@@99 ($generated@@359 $generated@@471) $generated@@475))) (and ($generated@@297 ($generated@@99 ($generated@@443 $generated@@471) $generated@@475) $generated@@473 $generated@@474) ($generated@@297 $generated@@475 $generated@@472 $generated@@474)))
 :pattern ( ($generated@@99 ($generated@@443 $generated@@471) $generated@@475))
 :pattern ( ($generated@@99 ($generated@@359 $generated@@471) $generated@@475))
))))
 :pattern ( ($generated@@92 $generated@@471 ($generated@@468 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@477 T@T) ) (! (= (type ($generated@@476 $generated@@477)) ($generated@@94 $generated@@477 $generated@@4))
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@363 (type $generated@@478))))
(let (($generated@@480 ($generated@@362 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@361 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@360 $generated@@480 $generated@@479)) (= ($generated@@359 $generated@@478) ($generated@@476 $generated@@480))))))
 :pattern ( ($generated@@359 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@363 (type $generated@@481))))
(let (($generated@@483 ($generated@@362 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@361 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@360 $generated@@483 $generated@@482)) (= ($generated@@406 $generated@@481) ($generated@@476 $generated@@482))))))
 :pattern ( ($generated@@406 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@363 (type $generated@@484))))
(let (($generated@@486 ($generated@@362 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@361 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@360 $generated@@486 $generated@@485)) (= ($generated@@442 $generated@@484) ($generated@@476 $generated@@151))))))
 :pattern ( ($generated@@442 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@345 (type $generated@@487))))
(let (($generated@@489 ($generated@@344 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@343 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@342 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@151) (= (type $generated@@491) $generated@@151)) ($generated@@0 ($generated@@99 ($generated@@434 $generated@@487) ($generated@@330 ($generated@@255 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@434 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@363 (type $generated@@492))))
(let (($generated@@494 ($generated@@362 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@361 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@360 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@151) (= (type $generated@@496) $generated@@151)) ($generated@@0 ($generated@@99 ($generated@@442 $generated@@492) ($generated@@330 ($generated@@255 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@442 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@151) ($generated@@256 $generated@@497 $generated@@46)) (and (= ($generated@@330 ($generated@@382 $generated@@2 $generated@@497)) $generated@@497) ($generated@@82 ($generated@@382 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@256 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@151) ($generated@@256 $generated@@498 $generated@@47)) (and (= ($generated@@330 ($generated@@382 $generated@@3 $generated@@498)) $generated@@498) ($generated@@82 ($generated@@382 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@256 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@151) ($generated@@256 $generated@@499 $generated@@44)) (and (= ($generated@@330 ($generated@@382 $generated@@4 $generated@@499)) $generated@@499) ($generated@@82 ($generated@@382 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@256 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 21))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@151) ($generated@@256 $generated@@501 $generated@@45)) (and (= ($generated@@330 ($generated@@382 $generated@@500 $generated@@501)) $generated@@501) ($generated@@82 ($generated@@382 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@256 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@69) (= ($generated@@256 ($generated@@330 $generated@@502) $generated@@503) ($generated@@82 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@256 ($generated@@330 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@151) (<= 0 ($generated@@286 $generated@@504)))
 :pattern ( ($generated@@286 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@97 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@94 $generated@@506 $generated@@2)) (<= 0 ($generated@@335 $generated@@505))))
 :pattern ( ($generated@@335 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@313 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@312 $generated@@508)) (<= 0 ($generated@@311 $generated@@507))))
 :pattern ( ($generated@@311 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@69) (= (type $generated@@512) $generated@@69)) (= ($generated@@509 ($generated@@460 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@460 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@69)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@69) (= (type $generated@@516) $generated@@69)) (= ($generated@@513 ($generated@@460 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@460 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@69) (= (type $generated@@518) $generated@@69)) (= ($generated@@77 ($generated@@460 $generated@@517 $generated@@518)) $generated@@58))
 :pattern ( ($generated@@460 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@69) (= (type $generated@@522) $generated@@69)) (= ($generated@@519 ($generated@@468 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@468 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@69) (= (type $generated@@526) $generated@@69)) (= ($generated@@523 ($generated@@468 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@468 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@69) (= (type $generated@@528) $generated@@69)) (= ($generated@@77 ($generated@@468 $generated@@527 $generated@@528)) $generated@@59))
 :pattern ( ($generated@@468 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@151) (= (type $generated@@530) $generated@@151)) (= ($generated@@303 ($generated@@255 $generated@@529 $generated@@530)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@69)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@69) (= (type $generated@@534) $generated@@69)) (= ($generated@@531 ($generated@@159 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@159 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@69)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@69) (= (type $generated@@538) $generated@@69)) (= ($generated@@535 ($generated@@159 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@159 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@151) (= (type $generated@@540) $generated@@151)) (= ($generated@@166 ($generated@@255 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@255 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@151) (= (type $generated@@542) $generated@@151)) (= ($generated@@167 ($generated@@255 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@255 $generated@@541 $generated@@542))
)))
(assert  (and (forall (($generated@@545 T@U) ) (! (= (type ($generated@@543 $generated@@545)) $generated@@69)
 :pattern ( ($generated@@543 $generated@@545))
)) (forall (($generated@@546 T@U) ($generated@@547 Int) ) (! (let (($generated@@548 ($generated@@313 (type $generated@@546))))
(= (type ($generated@@544 $generated@@546 $generated@@547)) $generated@@548))
 :pattern ( ($generated@@544 $generated@@546 $generated@@547))
))))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@312 $generated@@151)) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@549 ($generated@@543 $generated@@550) $generated@@551) (forall (($generated@@552 Int) ) (!  (=> (and (<= 0 $generated@@552) (< $generated@@552 ($generated@@311 $generated@@549))) ($generated@@297 ($generated@@544 $generated@@549 $generated@@552) $generated@@550 $generated@@551))
 :pattern ( ($generated@@544 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@92 $generated@@549 ($generated@@543 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@553 ($generated@@93 $generated@@554)) $generated@@554)
 :pattern ( ($generated@@93 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@69)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@69) (= ($generated@@555 ($generated@@270 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@270 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@69) (= ($generated@@77 ($generated@@270 $generated@@558)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@69)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@69) (= ($generated@@559 ($generated@@275 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@275 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@69) (= ($generated@@77 ($generated@@275 $generated@@562)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@69)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@69) (= ($generated@@563 ($generated@@172 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@172 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@69) (= ($generated@@77 ($generated@@172 $generated@@566)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@69)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@69) (= ($generated@@567 ($generated@@543 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@543 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@69) (= ($generated@@77 ($generated@@543 $generated@@570)) $generated@@57))
 :pattern ( ($generated@@543 $generated@@570))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@303 ($generated@@318 $generated@@571)) $generated@@64)
 :pattern ( ($generated@@318 $generated@@571))
)))
(assert (forall (($generated@@572 Int) ) (! (= ($generated@@287 ($generated@@318 $generated@@572)) $generated@@572)
 :pattern ( ($generated@@318 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
(= ($generated@@382 $generated@@574 ($generated@@330 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@330 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@343 $generated@@151 $generated@@151)) (= (type $generated@@576) $generated@@69)) (= (type $generated@@577) $generated@@69)) (= ($generated@@82 $generated@@575 ($generated@@460 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@151) ($generated@@0 ($generated@@99 ($generated@@341 $generated@@575) $generated@@578))) (and ($generated@@256 ($generated@@99 ($generated@@435 $generated@@575) $generated@@578) $generated@@577) ($generated@@256 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@99 ($generated@@435 $generated@@575) $generated@@578))
 :pattern ( ($generated@@99 ($generated@@341 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@82 $generated@@575 ($generated@@460 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@361 $generated@@151 $generated@@151)) (= (type $generated@@580) $generated@@69)) (= (type $generated@@581) $generated@@69)) (= ($generated@@82 $generated@@579 ($generated@@468 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@151) ($generated@@0 ($generated@@99 ($generated@@359 $generated@@579) $generated@@582))) (and ($generated@@256 ($generated@@99 ($generated@@443 $generated@@579) $generated@@582) $generated@@581) ($generated@@256 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@99 ($generated@@443 $generated@@579) $generated@@582))
 :pattern ( ($generated@@99 ($generated@@359 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@82 $generated@@579 ($generated@@468 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@151) (= (type $generated@@584) $generated@@151)) (and (and (and (=> ($generated@@150 $generated@@583 $generated@@584) (not (= $generated@@583 $generated@@584))) (=> (and ($generated@@377 $generated@@583) (not ($generated@@377 $generated@@584))) ($generated@@150 $generated@@583 $generated@@584))) (=> (and ($generated@@377 $generated@@583) ($generated@@377 $generated@@584)) (= ($generated@@150 $generated@@583 $generated@@584) (< ($generated@@286 $generated@@583) ($generated@@286 $generated@@584))))) (=> (and ($generated@@150 $generated@@583 $generated@@584) ($generated@@377 $generated@@584)) ($generated@@377 $generated@@583))))
 :pattern ( ($generated@@150 $generated@@583 $generated@@584))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (and (= (type $generated@@585) $generated@@81) (or ($generated@@293 $generated@@585 $generated@@586) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@585 $generated@@253) (<= ($generated@@280 0) $generated@@586)) (not (= $generated@@586 7)))))) (and (= ($generated@@292 $generated@@585 $generated@@586) ($generated@@80 $generated@@585)) (<= ($generated@@280 0) ($generated@@292 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@292 $generated@@585 $generated@@586))
))))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@151) (= (type $generated@@590) $generated@@151)) (< ($generated@@587 $generated@@589) ($generated@@588 ($generated@@255 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@255 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@151) (= (type $generated@@592) $generated@@151)) (< ($generated@@587 $generated@@592) ($generated@@588 ($generated@@255 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@255 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@82 ($generated@@318 $generated@@593) $generated@@253) ($generated@@82 ($generated@@8 $generated@@593) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@318 $generated@@593) $generated@@253))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@151) (= (type $generated@@595) $generated@@69)) (= (type $generated@@596) $generated@@69)) ($generated@@256 $generated@@594 ($generated@@460 $generated@@595 $generated@@596))) (and (= ($generated@@330 ($generated@@382 ($generated@@343 $generated@@151 $generated@@151) $generated@@594)) $generated@@594) ($generated@@82 ($generated@@382 ($generated@@343 $generated@@151 $generated@@151) $generated@@594) ($generated@@460 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@256 $generated@@594 ($generated@@460 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@151) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) $generated@@69)) ($generated@@256 $generated@@597 ($generated@@468 $generated@@598 $generated@@599))) (and (= ($generated@@330 ($generated@@382 ($generated@@361 $generated@@151 $generated@@151) $generated@@597)) $generated@@597) ($generated@@82 ($generated@@382 ($generated@@361 $generated@@151 $generated@@151) $generated@@597) ($generated@@468 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@256 $generated@@597 ($generated@@468 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@69) (= (type $generated@@601) $generated@@69)) (= (type $generated@@602) $generated@@151)) ($generated@@256 $generated@@602 ($generated@@159 $generated@@600 $generated@@601))) (and (= ($generated@@330 ($generated@@382 $generated@@81 $generated@@602)) $generated@@602) ($generated@@82 ($generated@@382 $generated@@81 $generated@@602) ($generated@@159 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@256 $generated@@602 ($generated@@159 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
 (not ($generated@@0 ($generated@@99 ($generated@@476 $generated@@604) $generated@@603))))
 :pattern ( (let (($generated@@604 (type $generated@@603)))
($generated@@99 ($generated@@476 $generated@@604) $generated@@603)))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (and (= (type $generated@@605) $generated@@81) (or ($generated@@293 $generated@@605 ($generated@@280 $generated@@606)) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@605 $generated@@253) (<= ($generated@@280 0) $generated@@606)) ($generated@@0 ($generated@@282 ($generated@@11 (not (= $generated@@606 7))))))))) (= ($generated@@292 $generated@@605 ($generated@@280 $generated@@606)) ($generated@@280 $generated@@606)))
 :weight 3
 :pattern ( ($generated@@292 $generated@@605 ($generated@@280 $generated@@606)))
))))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@74)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@69) (= (type $generated@@610) $generated@@69)) (and (= ($generated@@77 ($generated@@159 $generated@@609 $generated@@610)) $generated@@63) (= ($generated@@607 ($generated@@159 $generated@@609 $generated@@610)) $generated@@67)))
 :pattern ( ($generated@@159 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@81) (= (type $generated@@612) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@296 $generated@@612) (and ($generated@@252 $generated@@611) ($generated@@92 $generated@@611 $generated@@253 $generated@@612)))) ($generated@@92 ($generated@@8 ($generated@@287 $generated@@611)) $generated@@46 $generated@@612))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@287 $generated@@611)) $generated@@46 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@81) (= ($generated@@587 ($generated@@330 $generated@@613)) ($generated@@588 $generated@@613)))
 :pattern ( ($generated@@587 ($generated@@330 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@151) ($generated@@256 $generated@@614 ($generated@@93 0))) (and (= ($generated@@330 ($generated@@382 $generated@@2 $generated@@614)) $generated@@614) ($generated@@82 ($generated@@382 ($generated@@94 $generated@@151 $generated@@4) $generated@@614) ($generated@@93 0))))
 :pattern ( ($generated@@256 $generated@@614 ($generated@@93 0)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@151) (= (type $generated@@616) $generated@@69)) ($generated@@256 $generated@@615 ($generated@@270 $generated@@616))) (and (= ($generated@@330 ($generated@@382 ($generated@@94 $generated@@151 $generated@@4) $generated@@615)) $generated@@615) ($generated@@82 ($generated@@382 ($generated@@94 $generated@@151 $generated@@4) $generated@@615) ($generated@@270 $generated@@616))))
 :pattern ( ($generated@@256 $generated@@615 ($generated@@270 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@151) (= (type $generated@@618) $generated@@69)) ($generated@@256 $generated@@617 ($generated@@275 $generated@@618))) (and (= ($generated@@330 ($generated@@382 ($generated@@94 $generated@@151 $generated@@4) $generated@@617)) $generated@@617) ($generated@@82 ($generated@@382 ($generated@@94 $generated@@151 $generated@@4) $generated@@617) ($generated@@275 $generated@@618))))
 :pattern ( ($generated@@256 $generated@@617 ($generated@@275 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@151) (= (type $generated@@620) $generated@@69)) ($generated@@256 $generated@@619 ($generated@@172 $generated@@620))) (and (= ($generated@@330 ($generated@@382 ($generated@@94 $generated@@151 $generated@@2) $generated@@619)) $generated@@619) ($generated@@82 ($generated@@382 ($generated@@94 $generated@@151 $generated@@2) $generated@@619) ($generated@@172 $generated@@620))))
 :pattern ( ($generated@@256 $generated@@619 ($generated@@172 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@151) (= (type $generated@@622) $generated@@69)) ($generated@@256 $generated@@621 ($generated@@543 $generated@@622))) (and (= ($generated@@330 ($generated@@382 ($generated@@312 $generated@@151) $generated@@621)) $generated@@621) ($generated@@82 ($generated@@382 ($generated@@312 $generated@@151) $generated@@621) ($generated@@543 $generated@@622))))
 :pattern ( ($generated@@256 $generated@@621 ($generated@@543 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@151) ($generated@@377 $generated@@623)) (= $generated@@623 ($generated@@246 ($generated@@286 $generated@@623))))
 :pattern ( ($generated@@286 $generated@@623))
 :pattern ( ($generated@@377 $generated@@623))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@607 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@253) $generated@@65))
(assert (= ($generated@@607 $generated@@253) $generated@@68))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@624) ($generated@@94 $generated@@151 $generated@@2)) (= (type $generated@@625) $generated@@69)) (= (type $generated@@626) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@624 ($generated@@172 $generated@@625) $generated@@626) (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@151) (< 0 ($generated ($generated@@99 $generated@@624 $generated@@627)))) ($generated@@297 $generated@@627 $generated@@625 $generated@@626))
 :pattern ( ($generated@@99 $generated@@624 $generated@@627))
))))
 :pattern ( ($generated@@92 $generated@@624 ($generated@@172 $generated@@625) $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@87) (= (type $generated@@629) $generated@@81)) (= (type $generated@@630) $generated@@81)) (and ($generated@@82 $generated@@629 $generated@@253) ($generated@@82 $generated@@630 $generated@@253))) (= ($generated@@85 ($generated@@86 $generated@@628) $generated@@629 $generated@@630)  (and (and ($generated@@252 $generated@@629) ($generated@@252 $generated@@630)) (=> (and ($generated@@252 $generated@@629) ($generated@@252 $generated@@630)) (= ($generated@@287 $generated@@629) ($generated@@287 $generated@@630))))))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@81) (= (type $generated@@632) $generated@@69)) (= (type $generated@@633) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@296 $generated@@633) (and ($generated@@158 $generated@@631) (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) $generated@@69) ($generated@@92 $generated@@631 ($generated@@159 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@92 $generated@@631 ($generated@@159 $generated@@632 $generated@@634) $generated@@633))
))))) ($generated@@297 ($generated@@166 $generated@@631) $generated@@632 $generated@@633))
 :pattern ( ($generated@@297 ($generated@@166 $generated@@631) $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@81) (= (type $generated@@636) $generated@@69)) (= (type $generated@@637) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@296 $generated@@637) (and ($generated@@158 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@69) ($generated@@92 $generated@@635 ($generated@@159 $generated@@638 $generated@@636) $generated@@637))
 :pattern ( ($generated@@92 $generated@@635 ($generated@@159 $generated@@638 $generated@@636) $generated@@637))
))))) ($generated@@297 ($generated@@167 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@297 ($generated@@167 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@151) (= (type $generated@@640) $generated@@151)) (= ($generated@@255 ($generated@@282 $generated@@639) ($generated@@282 $generated@@640)) ($generated@@282 ($generated@@255 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@255 ($generated@@282 $generated@@639) ($generated@@282 $generated@@640)))
)))
(assert (forall (($generated@@641 Int) ) (! (= ($generated@@330 ($generated@@8 ($generated@@280 $generated@@641))) ($generated@@282 ($generated@@330 ($generated@@8 $generated@@641))))
 :pattern ( ($generated@@330 ($generated@@8 ($generated@@280 $generated@@641))))
)))
(assert (forall (($generated@@642 T@U) ) (! (= ($generated@@330 ($generated@@282 $generated@@642)) ($generated@@282 ($generated@@330 $generated@@642)))
 :pattern ( ($generated@@330 ($generated@@282 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@313 (type $generated@@643))))
 (=> (and (= (type $generated@@643) ($generated@@312 $generated@@644)) (= ($generated@@311 $generated@@643) 0)) (= $generated@@643 ($generated@@310 $generated@@644))))
 :pattern ( ($generated@@311 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 (type $generated@@646)))
 (=> (and (and (= (type $generated@@645) ($generated@@94 $generated@@648 $generated@@2)) (= (type $generated@@647) $generated@@2)) (<= 0 ($generated $generated@@647))) (= ($generated@@335 ($generated@@100 $generated@@645 $generated@@646 $generated@@647)) (+ (- ($generated@@335 $generated@@645) ($generated ($generated@@99 $generated@@645 $generated@@646))) ($generated $generated@@647)))))
 :pattern ( ($generated@@335 ($generated@@100 $generated@@645 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@650) $generated@@2)) ($generated@@92 $generated@@650 $generated@@46 $generated@@649))
 :pattern ( ($generated@@92 $generated@@650 $generated@@46 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@652) $generated@@3)) ($generated@@92 $generated@@652 $generated@@47 $generated@@651))
 :pattern ( ($generated@@92 $generated@@652 $generated@@47 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@654) $generated@@4)) ($generated@@92 $generated@@654 $generated@@44 $generated@@653))
 :pattern ( ($generated@@92 $generated@@654 $generated@@44 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@656) $generated@@500)) ($generated@@92 $generated@@656 $generated@@45 $generated@@655))
 :pattern ( ($generated@@92 $generated@@656 $generated@@45 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@658) $generated@@151)) ($generated@@92 $generated@@658 $generated@@48 $generated@@657))
 :pattern ( ($generated@@92 $generated@@658 $generated@@48 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@312 $generated@@151)) (= (type $generated@@660) $generated@@69)) (= ($generated@@82 $generated@@659 ($generated@@543 $generated@@660)) (forall (($generated@@661 Int) ) (!  (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@311 $generated@@659))) ($generated@@256 ($generated@@544 $generated@@659 $generated@@661) $generated@@660))
 :pattern ( ($generated@@544 $generated@@659 $generated@@661))
))))
 :pattern ( ($generated@@82 $generated@@659 ($generated@@543 $generated@@660)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ) (!  (=> (= (type $generated@@663) ($generated@@312 $generated@@151)) (=> (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@311 $generated@@663))) (< ($generated@@588 ($generated@@382 $generated@@81 ($generated@@544 $generated@@663 $generated@@664))) ($generated@@662 $generated@@663))))
 :pattern ( ($generated@@588 ($generated@@382 $generated@@81 ($generated@@544 $generated@@663 $generated@@664))))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@665) $generated@@151) (= (type $generated@@666) $generated@@87)) (= (type $generated@@667) $generated@@81)) (= (type $generated@@668) $generated@@81)) (= $generated@@667 $generated@@668)) ($generated@@245 $generated@@665 ($generated@@86 $generated@@666) $generated@@667 $generated@@668))
 :pattern ( ($generated@@245 $generated@@665 ($generated@@86 $generated@@666) $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@343 $generated@@151 $generated@@151)) (= (type $generated@@670) $generated@@69)) (= (type $generated@@671) $generated@@69)) ($generated@@82 $generated@@669 ($generated@@460 $generated@@670 $generated@@671))) (and (and ($generated@@82 ($generated@@341 $generated@@669) ($generated@@270 $generated@@670)) ($generated@@82 ($generated@@395 $generated@@669) ($generated@@270 $generated@@671))) ($generated@@82 ($generated@@434 $generated@@669) ($generated@@270 ($generated@@159 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@82 $generated@@669 ($generated@@460 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@361 $generated@@151 $generated@@151)) (= (type $generated@@673) $generated@@69)) (= (type $generated@@674) $generated@@69)) ($generated@@82 $generated@@672 ($generated@@468 $generated@@673 $generated@@674))) (and (and ($generated@@82 ($generated@@359 $generated@@672) ($generated@@275 $generated@@673)) ($generated@@82 ($generated@@406 $generated@@672) ($generated@@275 $generated@@674))) ($generated@@82 ($generated@@442 $generated@@672) ($generated@@275 ($generated@@159 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@82 $generated@@672 ($generated@@468 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@2) ($generated@@82 $generated@@675 $generated@@46))
 :pattern ( ($generated@@82 $generated@@675 $generated@@46))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@3) ($generated@@82 $generated@@676 $generated@@47))
 :pattern ( ($generated@@82 $generated@@676 $generated@@47))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@4) ($generated@@82 $generated@@677 $generated@@44))
 :pattern ( ($generated@@82 $generated@@677 $generated@@44))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@500) ($generated@@82 $generated@@678 $generated@@45))
 :pattern ( ($generated@@82 $generated@@678 $generated@@45))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@151) ($generated@@82 $generated@@679 $generated@@48))
 :pattern ( ($generated@@82 $generated@@679 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@680) $generated@@81) (= (type $generated@@684) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@682) ($generated@@179 $generated@@95 $generated@@4))) (= (type $generated@@683) $generated@@95)) (= (type $generated@@685) ($generated@@179 $generated@@95 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@687  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@292 $generated@@680 $generated@@681) ($generated@@80 $generated@@680)))))
(let (($generated@@688  (=> (and (and (= $generated@@682 ($generated@@233 $generated@@683 $generated@@684 $generated@@60 false)) (= ($generated@@292 $generated@@680 $generated@@681) $generated@@681)) (and ($generated@@82 ($generated@@8 ($generated@@292 $generated@@680 $generated@@681)) $generated@@83) (= (ControlFlow 0 7) 6))) $generated@@687)))
(let (($generated@@689  (=> (<= ($generated@@280 0) ($generated@@292 $generated@@680 $generated@@681)) (=> (and ($generated@@92 $generated@@680 $generated@@253 $generated@@684) ($generated@@92 ($generated@@8 $generated@@681) $generated@@83 $generated@@684)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@681 7))) (=> (not (= $generated@@681 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@681) (= $generated@@681 $generated@@681))) (=> (or (<= 0 $generated@@681) (= $generated@@681 $generated@@681)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@680 $generated@@680) (= $generated@@681 $generated@@681)) (< $generated@@681 $generated@@681)))))))))))
(let (($generated@@690  (=> (and (= $generated@@685 ($generated@@178 $generated@@683 $generated@@684 $generated@@60 false)) (not (= $generated@@681 7))) (and (=> (= (ControlFlow 0 8) 2) $generated@@689) (=> (= (ControlFlow 0 8) 7) $generated@@688)))))
(let (($generated@@691  (=> (and ($generated@@296 $generated@@684) ($generated@@686 $generated@@684)) (=> (and (and (and ($generated@@82 $generated@@680 $generated@@253) ($generated@@92 $generated@@680 $generated@@253 $generated@@684)) (<= ($generated@@280 0) $generated@@681)) (and (= 2 $generated@@79) (= (ControlFlow 0 9) 8))) $generated@@690))))
$generated@@691))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U Int) Int)
(declare-fun $generated@@260 (T@U Int) Bool)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@80) 11) (= (type $generated@@82) $generated@@68)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@83 T@U) ) (!  (=> (= (type $generated@@83) $generated@@80) ($generated@@81 ($generated@@8 ($generated@@79 $generated@@83)) $generated@@82))
 :pattern ( ($generated@@79 $generated@@83))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@86 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@86 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@71 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@71 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@85 $generated@@139)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
 :pattern ( ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
 :pattern ( ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@81 $generated@@144 ($generated@@85 0)))
 :pattern ( ($generated@@81 $generated@@144 ($generated@@85 0)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@80)) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@80) (= (type $generated@@159) $generated@@80)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@81 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@81 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@87 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@87) (= (type $generated@@215) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@87)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@87 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@71 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@87) (= (type $generated@@227) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@228) ($generated@@70 $generated@@4))) (= (type $generated@@230) $generated@@87)) (= (type $generated@@231) ($generated@@70 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@80)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) $generated@@68)) (= (type $generated@@239) $generated@@155)) (= (type $generated@@240) $generated@@155)) (= ($generated@@81 ($generated@@233 $generated@@239 $generated@@240) ($generated@@146 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@81 ($generated@@233 $generated@@239 $generated@@240) ($generated@@146 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@80) (= (type $generated@@242) $generated@@80)) (= ($generated@@152 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@152 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@68)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@246) $generated@@68)) (= ($generated@@81 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@155) ($generated@@0 ($generated@@91 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@91 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@81 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@251) $generated@@68)) (= ($generated@@81 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@155) ($generated@@0 ($generated@@91 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@91 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@81 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (= (type $generated@@261) $generated@@68))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@262 T@U) ($generated@@263 Int) ) (!  (=> (and (= (type $generated@@262) $generated@@80) (or ($generated@@260 ($generated@@255 $generated@@262) ($generated@@253 $generated@@263)) (and (not (= 2 $generated@@78)) (and (and ($generated@@81 $generated@@262 $generated@@261) (<= ($generated@@253 0) $generated@@263)) ($generated@@0 ($generated@@255 ($generated@@11 (not (= $generated@@263 7))))))))) (= ($generated@@259 ($generated@@255 $generated@@262) ($generated@@253 $generated@@263)) ($generated@@253 $generated@@263)))
 :weight 3
 :pattern ( ($generated@@259 ($generated@@255 $generated@@262) ($generated@@253 $generated@@263)))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@155)) (= (type $generated@@269) $generated@@155)) (= (type $generated@@270) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@264 $generated@@270)) (= ($generated@@84 ($generated@@233 $generated@@268 $generated@@269) ($generated@@146 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@84 ($generated@@233 $generated@@268 $generated@@269) ($generated@@146 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@72)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@80) (= ($generated@@145 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@62)))
 :pattern ( ($generated@@145 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@80) ($generated@@145 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@155) (= (type $generated@@276) $generated@@155)) (= $generated@@274 ($generated@@233 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@145 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@2) (= ($generated@@81 $generated@@285 $generated@@82) (<= ($generated@@253 0) ($generated $generated@@285))))
 :pattern ( ($generated@@81 $generated@@285 $generated@@82))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@155)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@68) (= (type $generated@@290) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@84 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@86 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@89 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@86 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@91 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@86 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@91 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@91 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@86 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@91 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@91 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@89 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@86 $generated@@334 $generated@@2)) (= ($generated@@161 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@91 $generated@@333 $generated@@335))) (<= ($generated ($generated@@91 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@91 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@161 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@155) ($generated@@234 $generated@@339 $generated@@82)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@339)) $generated@@339) ($generated@@81 ($generated@@336 $generated@@2 $generated@@339) $generated@@82)))
 :pattern ( ($generated@@234 $generated@@339 $generated@@82))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@155) ($generated@@234 $generated@@340 $generated@@261)) (and (= ($generated@@286 ($generated@@336 $generated@@80 $generated@@340)) $generated@@340) ($generated@@81 ($generated@@336 $generated@@80 $generated@@340) $generated@@261)))
 :pattern ( ($generated@@234 $generated@@340 $generated@@261))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(let (($generated@@343 ($generated@@300 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@299 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@298 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@91 ($generated@@297 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@297 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@301 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@86 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@301 (type $generated@@348))))
(let (($generated@@350 ($generated@@300 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@299 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@298 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@91 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(let (($generated@@354 ($generated@@318 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@317 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@316 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@91 ($generated@@315 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@315 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@319 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@86 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@319 (type $generated@@359))))
(let (($generated@@361 ($generated@@318 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@317 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@316 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@91 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@364) $generated@@80)) (and ($generated@@264 $generated@@363) ($generated@@84 $generated@@364 $generated@@261 $generated@@363))) ($generated@@84 ($generated@@8 ($generated@@79 $generated@@364)) $generated@@82 $generated@@363))
 :pattern ( ($generated@@79 $generated@@364) ($generated@@84 $generated@@364 $generated@@261 $generated@@363))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@366) $generated@@68)) (= ($generated@@81 $generated@@365 ($generated@@160 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@365 $generated@@367)))) ($generated@@234 $generated@@367 $generated@@366))
 :pattern ( ($generated@@91 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@81 $generated@@365 ($generated@@160 $generated@@366)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@368 T@U) ($generated@@369 Int) ) (!  (=> (and (= (type $generated@@368) $generated@@80) (or ($generated@@260 $generated@@368 $generated@@369) (and (not (= 2 $generated@@78)) (and (and ($generated@@81 $generated@@368 $generated@@261) (<= ($generated@@253 0) $generated@@369)) (not (= $generated@@369 7)))))) (= ($generated@@259 $generated@@368 $generated@@369) $generated@@369))
 :pattern ( ($generated@@259 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@371) $generated@@68)) (= (type $generated@@372) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@370 ($generated@@243 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@155) ($generated@@0 ($generated@@91 $generated@@370 $generated@@373))) ($generated@@265 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@91 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@84 $generated@@370 ($generated@@243 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@375) $generated@@68)) (= (type $generated@@376) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@374 ($generated@@248 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@155) ($generated@@0 ($generated@@91 $generated@@374 $generated@@377))) ($generated@@265 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@91 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@84 $generated@@374 ($generated@@248 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@91 ($generated@@292 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@91 ($generated@@292 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@301 (type $generated@@383))))
(let (($generated@@385 ($generated@@300 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@86 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@299 $generated@@155 $generated@@155)) (= (type $generated@@387) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@91 ($generated@@297 $generated@@386) ($generated@@153 ($generated@@336 $generated@@80 $generated@@387)))) (= ($generated@@91 ($generated@@381 $generated@@386) ($generated@@153 ($generated@@336 $generated@@80 $generated@@387))) ($generated@@154 ($generated@@336 $generated@@80 $generated@@387))))))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@319 (type $generated@@391))))
(let (($generated@@393 ($generated@@318 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@86 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@317 $generated@@155 $generated@@155)) (= (type $generated@@395) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@91 ($generated@@315 $generated@@394) ($generated@@153 ($generated@@336 $generated@@80 $generated@@395)))) (= ($generated@@91 ($generated@@389 $generated@@394) ($generated@@153 ($generated@@336 $generated@@80 $generated@@395))) ($generated@@154 ($generated@@336 $generated@@80 $generated@@395))))))
 :pattern ( ($generated@@91 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@300 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@299 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@91 ($generated@@345 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@91 ($generated@@297 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@91 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@91 ($generated@@297 $generated@@396) $generated@@400))
 :pattern ( ($generated@@91 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@91 ($generated@@345 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@318 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@317 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@91 ($generated@@356 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@91 ($generated@@315 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@91 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@91 ($generated@@315 $generated@@401) $generated@@405))
 :pattern ( ($generated@@91 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@91 ($generated@@356 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@68)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@299 $generated@@155 $generated@@155)) (= (type $generated@@410) $generated@@68)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@297 $generated@@409) $generated@@413))) (and ($generated@@265 ($generated@@91 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@265 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@91 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@91 ($generated@@297 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@84 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@317 $generated@@155 $generated@@155)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@315 $generated@@417) $generated@@421))) (and ($generated@@265 ($generated@@91 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@265 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@91 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@91 ($generated@@315 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@84 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@86 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@319 (type $generated@@424))))
(let (($generated@@426 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@316 $generated@@426 $generated@@425)) (= ($generated@@315 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@315 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@319 (type $generated@@427))))
(let (($generated@@429 ($generated@@318 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@317 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@316 $generated@@429 $generated@@428)) (= ($generated@@356 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@356 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@319 (type $generated@@430))))
(let (($generated@@432 ($generated@@318 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@317 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@316 $generated@@432 $generated@@431)) (= ($generated@@388 $generated@@430) ($generated@@422 $generated@@155))))))
 :pattern ( ($generated@@388 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@301 (type $generated@@433))))
(let (($generated@@435 ($generated@@300 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@299 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@298 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@155) (= (type $generated@@437) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@380 $generated@@433) ($generated@@286 ($generated@@233 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@319 (type $generated@@438))))
(let (($generated@@440 ($generated@@318 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@317 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@316 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@155) (= (type $generated@@442) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@388 $generated@@438) ($generated@@286 ($generated@@233 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@388 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@155) ($generated@@234 $generated@@443 $generated@@46)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@443)) $generated@@443) ($generated@@81 ($generated@@336 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@155) ($generated@@234 $generated@@444 $generated@@47)) (and (= ($generated@@286 ($generated@@336 $generated@@3 $generated@@444)) $generated@@444) ($generated@@81 ($generated@@336 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@155) ($generated@@234 $generated@@445 $generated@@44)) (and (= ($generated@@286 ($generated@@336 $generated@@4 $generated@@445)) $generated@@445) ($generated@@81 ($generated@@336 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@155) ($generated@@234 $generated@@447 $generated@@45)) (and (= ($generated@@286 ($generated@@336 $generated@@446 $generated@@447)) $generated@@447) ($generated@@81 ($generated@@336 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@68) (= ($generated@@234 ($generated@@286 $generated@@448) $generated@@449) ($generated@@81 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@234 ($generated@@286 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@89 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@86 $generated@@451 $generated@@2)) (<= 0 ($generated@@291 $generated@@450))))
 :pattern ( ($generated@@291 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@280 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@279 $generated@@453)) (<= 0 ($generated@@278 $generated@@452))))
 :pattern ( ($generated@@278 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@68)) (= ($generated@@454 ($generated@@406 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@406 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@406 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@76 ($generated@@406 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@414 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@414 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@414 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@76 ($generated@@414 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@155) (= (type $generated@@475) $generated@@155)) (= ($generated@@271 ($generated@@233 $generated@@474 $generated@@475)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@146 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@146 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@146 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@155) (= (type $generated@@485) $generated@@155)) (= ($generated@@153 ($generated@@233 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@155) (= (type $generated@@487) $generated@@155)) (= ($generated@@154 ($generated@@233 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@233 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@280 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@279 $generated@@155)) (= (type $generated@@495) $generated@@68)) (= (type $generated@@496) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@278 $generated@@494))) ($generated@@265 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@84 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@85 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@85 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@500 ($generated@@243 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@76 ($generated@@243 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@504 ($generated@@248 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@248 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@76 ($generated@@248 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@508 ($generated@@160 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@160 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@76 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@336 $generated@@517 ($generated@@286 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@286 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@155 $generated@@155)) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) $generated@@68)) (= ($generated@@81 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@297 $generated@@518) $generated@@521))) (and ($generated@@234 ($generated@@91 ($generated@@381 $generated@@518) $generated@@521) $generated@@520) ($generated@@234 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@91 ($generated@@381 $generated@@518) $generated@@521))
 :pattern ( ($generated@@91 ($generated@@297 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@81 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@317 $generated@@155 $generated@@155)) (= (type $generated@@523) $generated@@68)) (= (type $generated@@524) $generated@@68)) (= ($generated@@81 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@315 $generated@@522) $generated@@525))) (and ($generated@@234 ($generated@@91 ($generated@@389 $generated@@522) $generated@@525) $generated@@524) ($generated@@234 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@91 ($generated@@389 $generated@@522) $generated@@525))
 :pattern ( ($generated@@91 ($generated@@315 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@81 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (and (= (type $generated@@526) $generated@@80) (or ($generated@@260 $generated@@526 $generated@@527) (and (not (= 2 $generated@@78)) (and (and ($generated@@81 $generated@@526 $generated@@261) (<= ($generated@@253 0) $generated@@527)) (not (= $generated@@527 7)))))) (and (= ($generated@@259 $generated@@526 $generated@@527) ($generated@@79 $generated@@526)) (<= ($generated@@253 0) ($generated@@259 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@259 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@155) (= (type $generated@@531) $generated@@155)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@233 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@233 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@155) (= (type $generated@@533) $generated@@155)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@233 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@233 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@155) (= (type $generated@@535) $generated@@68)) (= (type $generated@@536) $generated@@68)) ($generated@@234 $generated@@534 ($generated@@406 $generated@@535 $generated@@536))) (and (= ($generated@@286 ($generated@@336 ($generated@@299 $generated@@155 $generated@@155) $generated@@534)) $generated@@534) ($generated@@81 ($generated@@336 ($generated@@299 $generated@@155 $generated@@155) $generated@@534) ($generated@@406 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@534 ($generated@@406 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) ($generated@@234 $generated@@537 ($generated@@414 $generated@@538 $generated@@539))) (and (= ($generated@@286 ($generated@@336 ($generated@@317 $generated@@155 $generated@@155) $generated@@537)) $generated@@537) ($generated@@81 ($generated@@336 ($generated@@317 $generated@@155 $generated@@155) $generated@@537) ($generated@@414 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@234 $generated@@537 ($generated@@414 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@155)) ($generated@@234 $generated@@542 ($generated@@146 $generated@@540 $generated@@541))) (and (= ($generated@@286 ($generated@@336 $generated@@80 $generated@@542)) $generated@@542) ($generated@@81 ($generated@@336 $generated@@80 $generated@@542) ($generated@@146 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@234 $generated@@542 ($generated@@146 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@91 ($generated@@422 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@91 ($generated@@422 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@73)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@68) (= (type $generated@@548) $generated@@68)) (and (= ($generated@@76 ($generated@@146 $generated@@547 $generated@@548)) $generated@@63) (= ($generated@@545 ($generated@@146 $generated@@547 $generated@@548)) $generated@@66)))
 :pattern ( ($generated@@146 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@80) (= ($generated@@528 ($generated@@286 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@286 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@155) ($generated@@234 $generated@@550 ($generated@@85 0))) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@550)) $generated@@550) ($generated@@81 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@550) ($generated@@85 0))))
 :pattern ( ($generated@@234 $generated@@550 ($generated@@85 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@68)) ($generated@@234 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@286 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@551)) $generated@@551) ($generated@@81 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@234 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@155) (= (type $generated@@554) $generated@@68)) ($generated@@234 $generated@@553 ($generated@@248 $generated@@554))) (and (= ($generated@@286 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@553)) $generated@@553) ($generated@@81 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@553) ($generated@@248 $generated@@554))))
 :pattern ( ($generated@@234 $generated@@553 ($generated@@248 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@68)) ($generated@@234 $generated@@555 ($generated@@160 $generated@@556))) (and (= ($generated@@286 ($generated@@336 ($generated@@86 $generated@@155 $generated@@2) $generated@@555)) $generated@@555) ($generated@@81 ($generated@@336 ($generated@@86 $generated@@155 $generated@@2) $generated@@555) ($generated@@160 $generated@@556))))
 :pattern ( ($generated@@234 $generated@@555 ($generated@@160 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@155) (= (type $generated@@558) $generated@@68)) ($generated@@234 $generated@@557 ($generated@@488 $generated@@558))) (and (= ($generated@@286 ($generated@@336 ($generated@@279 $generated@@155) $generated@@557)) $generated@@557) ($generated@@81 ($generated@@336 ($generated@@279 $generated@@155) $generated@@557) ($generated@@488 $generated@@558))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@488 $generated@@558)))
)))
(assert (= ($generated@@76 $generated@@82) $generated@@61))
(assert (= ($generated@@545 $generated@@82) $generated@@65))
(assert (= ($generated@@76 $generated@@261) $generated@@64))
(assert (= ($generated@@545 $generated@@261) $generated@@67))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@559 ($generated@@160 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@559 $generated@@562)))) ($generated@@265 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@91 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@84 $generated@@559 ($generated@@160 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@80) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@264 $generated@@565) (and ($generated@@145 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@68) ($generated@@84 $generated@@563 ($generated@@146 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@84 $generated@@563 ($generated@@146 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@265 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@265 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@80) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@264 $generated@@569) (and ($generated@@145 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@68) ($generated@@84 $generated@@567 ($generated@@146 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@84 $generated@@567 ($generated@@146 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@265 ($generated@@154 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@265 ($generated@@154 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@155) (= (type $generated@@572) $generated@@155)) (= ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)) ($generated@@255 ($generated@@233 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@253 $generated@@573))) ($generated@@255 ($generated@@286 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@253 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@286 ($generated@@255 $generated@@574)) ($generated@@255 ($generated@@286 $generated@@574)))
 :pattern ( ($generated@@286 ($generated@@255 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@280 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@279 $generated@@576)) (= ($generated@@278 $generated@@575) 0)) (= $generated@@575 ($generated@@277 $generated@@576))))
 :pattern ( ($generated@@278 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@86 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@291 ($generated@@92 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@291 $generated@@577) ($generated ($generated@@91 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@291 ($generated@@92 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@582) $generated@@2)) ($generated@@84 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@84 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@584) $generated@@3)) ($generated@@84 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@84 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@586) $generated@@4)) ($generated@@84 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@84 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@588) $generated@@446)) ($generated@@84 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@84 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@590) $generated@@155)) ($generated@@84 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@84 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@279 $generated@@155)) (= (type $generated@@592) $generated@@68)) (= ($generated@@81 $generated@@591 ($generated@@488 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@278 $generated@@591))) ($generated@@234 ($generated@@489 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@489 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@81 $generated@@591 ($generated@@488 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@279 $generated@@155)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@278 $generated@@595))) (< ($generated@@529 ($generated@@336 $generated@@80 ($generated@@489 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@529 ($generated@@336 $generated@@80 ($generated@@489 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@299 $generated@@155 $generated@@155)) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) $generated@@68)) ($generated@@81 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@81 ($generated@@297 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@81 ($generated@@345 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@81 ($generated@@380 $generated@@597) ($generated@@243 ($generated@@146 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@81 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@317 $generated@@155 $generated@@155)) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@68)) ($generated@@81 $generated@@600 ($generated@@414 $generated@@601 $generated@@602))) (and (and ($generated@@81 ($generated@@315 $generated@@600) ($generated@@248 $generated@@601)) ($generated@@81 ($generated@@356 $generated@@600) ($generated@@248 $generated@@602))) ($generated@@81 ($generated@@388 $generated@@600) ($generated@@248 ($generated@@146 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@81 $generated@@600 ($generated@@414 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@81 $generated@@603 $generated@@46))
 :pattern ( ($generated@@81 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@81 $generated@@604 $generated@@47))
 :pattern ( ($generated@@81 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@81 $generated@@605 $generated@@44))
 :pattern ( ($generated@@81 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@446) ($generated@@81 $generated@@606 $generated@@45))
 :pattern ( ($generated@@81 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@155) ($generated@@81 $generated@@607 $generated@@48))
 :pattern ( ($generated@@81 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@608) $generated@@80) (= (type $generated@@612) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@610) ($generated@@167 $generated@@87 $generated@@4))) (= (type $generated@@611) $generated@@87)) (= (type $generated@@613) ($generated@@167 $generated@@87 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@615  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@259 $generated@@608 $generated@@609) ($generated@@79 $generated@@608)))))
(let (($generated@@616  (=> (and (and (= $generated@@610 ($generated@@221 $generated@@611 $generated@@612 $generated@@60 false)) (= ($generated@@259 $generated@@608 $generated@@609) $generated@@609)) (and ($generated@@81 ($generated@@8 ($generated@@259 $generated@@608 $generated@@609)) $generated@@82) (= (ControlFlow 0 7) 6))) $generated@@615)))
(let (($generated@@617  (=> (<= ($generated@@253 0) ($generated@@259 $generated@@608 $generated@@609)) (=> (and ($generated@@84 $generated@@608 $generated@@261 $generated@@612) ($generated@@84 ($generated@@8 $generated@@609) $generated@@82 $generated@@612)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@609 7))) (=> (not (= $generated@@609 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@609) (< ($generated@@529 $generated@@608) ($generated@@529 $generated@@608))) (= $generated@@609 $generated@@609))) (=> (or (or (<= 0 $generated@@609) (< ($generated@@529 $generated@@608) ($generated@@529 $generated@@608))) (= $generated@@609 $generated@@609)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@608 $generated@@608) (= $generated@@609 $generated@@609)) (or (< ($generated@@529 $generated@@608) ($generated@@529 $generated@@608)) (and (= ($generated@@529 $generated@@608) ($generated@@529 $generated@@608)) (< $generated@@609 $generated@@609)))))))))))))
(let (($generated@@618  (=> (and (= $generated@@613 ($generated@@166 $generated@@611 $generated@@612 $generated@@60 false)) (not (= $generated@@609 7))) (and (=> (= (ControlFlow 0 8) 2) $generated@@617) (=> (= (ControlFlow 0 8) 7) $generated@@616)))))
(let (($generated@@619  (=> (and ($generated@@264 $generated@@612) ($generated@@614 $generated@@612)) (=> (and (and (and ($generated@@81 $generated@@608 $generated@@261) ($generated@@84 $generated@@608 $generated@@261 $generated@@612)) (<= ($generated@@253 0) $generated@@609)) (and (= 2 $generated@@78) (= (ControlFlow 0 9) 8))) $generated@@618))))
$generated@@619))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@244 (T@U Int) Bool)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 (T@U Int) T@U)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@78) 11) (= (type $generated@@80) $generated@@66)))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@81 T@U) ) (!  (=> (= (type $generated@@81) $generated@@78) ($generated@@79 ($generated@@8 ($generated@@77 $generated@@81)) $generated@@80))
 :pattern ( ($generated@@77 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@69 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@69 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@66)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@140 $generated@@80 $generated@@141))
 :pattern ( ($generated@@82 $generated@@140 $generated@@80 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@79 $generated@@142 ($generated@@83 0)))
 :pattern ( ($generated@@79 $generated@@142 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@79 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@79 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@78)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@78)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@162) $generated@@66)) ($generated@@79 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@79 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@85 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@69 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@85) (= (type $generated@@213) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@214) ($generated@@68 $generated@@4))) (= (type $generated@@216) $generated@@85)) (= (type $generated@@217) ($generated@@68 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@85 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@69 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@85) (= (type $generated@@225) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@226) ($generated@@68 $generated@@4))) (= (type $generated@@228) $generated@@85)) (= (type $generated@@229) ($generated@@68 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@145)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@66) (= (type $generated@@236) $generated@@66)) (= (type $generated@@237) $generated@@78)) (= (type $generated@@238) $generated@@78)) (= ($generated@@79 ($generated@@231 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@79 ($generated@@231 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) (= (type $generated@@240) $generated@@145)) (= ($generated@@151 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@151 $generated@@239 $generated@@240))
)))
(assert  (and (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@242 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@242 $generated@@246))
)) (= (type $generated@@245) $generated@@66)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@248 T@U) ($generated@@249 Int) ) (!  (=> (and (= (type $generated@@248) $generated@@78) (or ($generated@@244 ($generated@@242 $generated@@248) ($generated@@243 $generated@@249)) (and (not (= 2 $generated@@76)) (and (and ($generated@@232 $generated@@248 $generated@@245) (<= ($generated@@243 0) $generated@@249)) ($generated@@0 ($generated@@242 ($generated@@11 (not (= $generated@@249 7))))))))) (= ($generated@@241 ($generated@@242 $generated@@248) ($generated@@243 $generated@@249)) ($generated@@243 $generated@@249)))
 :weight 3
 :pattern ( ($generated@@241 ($generated@@242 $generated@@248) ($generated@@243 $generated@@249)))
))))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@66)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@253) $generated@@66)) (= ($generated@@79 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@78) ($generated@@0 ($generated@@89 $generated@@252 $generated@@254))) ($generated@@232 $generated@@254 $generated@@253))
 :pattern ( ($generated@@89 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@79 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@66)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@258) $generated@@66)) (= ($generated@@79 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@78) ($generated@@0 ($generated@@89 $generated@@257 $generated@@259))) ($generated@@232 $generated@@259 $generated@@258))
 :pattern ( ($generated@@89 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@79 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@243 $generated@@260) $generated@@260)
 :pattern ( ($generated@@243 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@242 $generated@@261) $generated@@261)
 :pattern ( ($generated@@242 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@66) (= (type $generated@@265) $generated@@66)) (= (type $generated@@266) $generated@@78)) (= (type $generated@@267) $generated@@78)) (= (type $generated@@268) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@262 $generated@@268)) (= ($generated@@82 ($generated@@231 $generated@@266 $generated@@267) ($generated@@144 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@82 ($generated@@231 $generated@@266 $generated@@267) ($generated@@144 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@145) (= ($generated@@143 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@145) ($generated@@143 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@78) (= (type $generated@@274) $generated@@78)) (= $generated@@272 ($generated@@231 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@143 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 17)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@2) (= ($generated@@79 $generated@@283 $generated@@80) (<= ($generated@@243 0) ($generated $generated@@283))))
 :pattern ( ($generated@@79 $generated@@283 $generated@@80))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@78)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@66) (= (type $generated@@288) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@263 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@82 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@263 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@84 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@87 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@84 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@89 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@84 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@89 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@89 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@84 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@332) $generated@@78)) (and ($generated@@262 $generated@@331) ($generated@@263 $generated@@332 $generated@@245 $generated@@331))) ($generated@@82 ($generated@@8 ($generated@@77 $generated@@332)) $generated@@80 $generated@@331))
 :pattern ( ($generated@@77 $generated@@332) ($generated@@263 $generated@@332 $generated@@245 $generated@@331))
))))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@87 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@84 $generated@@334 $generated@@2)) (= ($generated@@159 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@89 $generated@@333 $generated@@335))) (<= ($generated ($generated@@89 $generated@@333 $generated@@335)) ($generated@@289 $generated@@333))))
 :pattern ( ($generated@@89 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@159 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@78) ($generated@@232 $generated@@339 $generated@@80)) (and (= ($generated@@284 ($generated@@336 $generated@@2 $generated@@339)) $generated@@339) ($generated@@79 ($generated@@336 $generated@@2 $generated@@339) $generated@@80)))
 :pattern ( ($generated@@232 $generated@@339 $generated@@80))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@340 T@U) ($generated@@341 Int) ) (!  (=> (and (= (type $generated@@340) $generated@@78) (or ($generated@@244 $generated@@340 $generated@@341) (and (not (= 2 $generated@@76)) (and (and ($generated@@232 $generated@@340 $generated@@245) (<= ($generated@@243 0) $generated@@341)) (not (= $generated@@341 7)))))) (= ($generated@@241 $generated@@340 $generated@@341) $generated@@341))
 :pattern ( ($generated@@241 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@299 (type $generated@@342))))
(let (($generated@@344 ($generated@@298 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@297 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@296 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@295 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@299 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@299 (type $generated@@349))))
(let (($generated@@351 ($generated@@298 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@297 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@296 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@89 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@317 (type $generated@@353))))
(let (($generated@@355 ($generated@@316 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@315 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@314 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@313 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@317 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@84 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@317 (type $generated@@360))))
(let (($generated@@362 ($generated@@316 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@315 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@314 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@89 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@365) $generated@@66)) (= ($generated@@79 $generated@@364 ($generated@@158 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@364 $generated@@366)))) ($generated@@232 $generated@@366 $generated@@365))
 :pattern ( ($generated@@89 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@79 $generated@@364 ($generated@@158 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@368) $generated@@66)) (= (type $generated@@369) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@367 ($generated@@250 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@78) ($generated@@0 ($generated@@89 $generated@@367 $generated@@370))) ($generated@@263 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@89 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@82 $generated@@367 ($generated@@250 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@372) $generated@@66)) (= (type $generated@@373) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@371 ($generated@@255 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@78) ($generated@@0 ($generated@@89 $generated@@371 $generated@@374))) ($generated@@263 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@89 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@82 $generated@@371 ($generated@@255 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated ($generated@@89 ($generated@@290 $generated@@376) $generated@@375)) 0))
 :pattern ( (let (($generated@@376 (type $generated@@375)))
($generated@@89 ($generated@@290 $generated@@376) $generated@@375)))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@299 (type $generated@@380))))
(let (($generated@@382 ($generated@@298 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@84 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@297 $generated@@78 $generated@@78)) (= (type $generated@@384) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@89 ($generated@@295 $generated@@383) ($generated@@152 ($generated@@336 $generated@@145 $generated@@384)))) (= ($generated@@89 ($generated@@378 $generated@@383) ($generated@@152 ($generated@@336 $generated@@145 $generated@@384))) ($generated@@153 ($generated@@336 $generated@@145 $generated@@384))))))
 :pattern ( ($generated@@89 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@317 (type $generated@@388))))
(let (($generated@@390 ($generated@@316 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@84 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@315 $generated@@78 $generated@@78)) (= (type $generated@@392) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@391) ($generated@@152 ($generated@@336 $generated@@145 $generated@@392)))) (= ($generated@@89 ($generated@@386 $generated@@391) ($generated@@152 ($generated@@336 $generated@@145 $generated@@392))) ($generated@@153 ($generated@@336 $generated@@145 $generated@@392))))))
 :pattern ( ($generated@@89 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@298 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@297 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@89 ($generated@@346 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@89 ($generated@@295 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@89 ($generated@@378 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@393) $generated@@397))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@89 ($generated@@346 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@316 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@315 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@89 ($generated@@357 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@89 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@398) $generated@@402))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@89 ($generated@@357 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@66)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@297 $generated@@78 $generated@@78)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@406) $generated@@410))) (and ($generated@@263 ($generated@@89 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@263 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@82 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@66)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@315 $generated@@78 $generated@@78)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@414) $generated@@418))) (and ($generated@@263 ($generated@@89 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@263 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@82 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@84 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@317 (type $generated@@421))))
(let (($generated@@423 ($generated@@316 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@315 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@314 $generated@@423 $generated@@422)) (= ($generated@@313 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@313 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@317 (type $generated@@424))))
(let (($generated@@426 ($generated@@316 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@315 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@314 $generated@@426 $generated@@425)) (= ($generated@@357 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@357 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@317 (type $generated@@427))))
(let (($generated@@429 ($generated@@316 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@315 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@314 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@78))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@299 (type $generated@@430))))
(let (($generated@@432 ($generated@@298 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@297 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@296 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@78) (= (type $generated@@434) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@377 $generated@@430) ($generated@@284 ($generated@@231 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@377 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@317 (type $generated@@435))))
(let (($generated@@437 ($generated@@316 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@315 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@314 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@78) (= (type $generated@@439) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@385 $generated@@435) ($generated@@284 ($generated@@231 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@78) ($generated@@232 $generated@@440 $generated@@46)) (and (= ($generated@@284 ($generated@@336 $generated@@2 $generated@@440)) $generated@@440) ($generated@@79 ($generated@@336 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@78) ($generated@@232 $generated@@441 $generated@@47)) (and (= ($generated@@284 ($generated@@336 $generated@@3 $generated@@441)) $generated@@441) ($generated@@79 ($generated@@336 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@78) ($generated@@232 $generated@@442 $generated@@44)) (and (= ($generated@@284 ($generated@@336 $generated@@4 $generated@@442)) $generated@@442) ($generated@@79 ($generated@@336 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@78) ($generated@@232 $generated@@444 $generated@@45)) (and (= ($generated@@284 ($generated@@336 $generated@@443 $generated@@444)) $generated@@444) ($generated@@79 ($generated@@336 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@66) (= ($generated@@232 ($generated@@284 $generated@@445) $generated@@446) ($generated@@79 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@232 ($generated@@284 $generated@@445) $generated@@446))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@447 T@U) ($generated@@448 Int) ) (!  (=> (and (= (type $generated@@447) $generated@@78) (or ($generated@@244 $generated@@447 $generated@@448) (and (not (= 2 $generated@@76)) (and (and ($generated@@232 $generated@@447 $generated@@245) (<= ($generated@@243 0) $generated@@448)) (not (= $generated@@448 7)))))) (and (= ($generated@@241 $generated@@447 $generated@@448) ($generated@@77 $generated@@447)) (<= ($generated@@243 0) ($generated@@241 $generated@@447 $generated@@448))))
 :pattern ( ($generated@@241 $generated@@447 $generated@@448))
))))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@87 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@84 $generated@@450 $generated@@2)) (<= 0 ($generated@@289 $generated@@449))))
 :pattern ( ($generated@@289 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@278 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@277 $generated@@452)) (<= 0 ($generated@@276 $generated@@451))))
 :pattern ( ($generated@@276 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@403 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@403 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@403 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@74 ($generated@@403 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@411 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@74 ($generated@@411 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@78) (= (type $generated@@474) $generated@@78)) (= ($generated@@269 ($generated@@231 $generated@@473 $generated@@474)) $generated@@62))
 :pattern ( ($generated@@231 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@144 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@144 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@144 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@144 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@78) (= (type $generated@@484) $generated@@78)) (= ($generated@@152 ($generated@@231 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@231 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@78) (= (type $generated@@486) $generated@@78)) (= ($generated@@153 ($generated@@231 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@231 $generated@@485 $generated@@486))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@489))
)) (forall (($generated@@490 T@U) ($generated@@491 Int) ) (! (let (($generated@@492 ($generated@@278 (type $generated@@490))))
(= (type ($generated@@488 $generated@@490 $generated@@491)) $generated@@492))
 :pattern ( ($generated@@488 $generated@@490 $generated@@491))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@277 $generated@@78)) (= (type $generated@@494) $generated@@66)) (= (type $generated@@495) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@493 ($generated@@487 $generated@@494) $generated@@495) (forall (($generated@@496 Int) ) (!  (=> (and (<= 0 $generated@@496) (< $generated@@496 ($generated@@276 $generated@@493))) ($generated@@263 ($generated@@488 $generated@@493 $generated@@496) $generated@@494 $generated@@495))
 :pattern ( ($generated@@488 $generated@@493 $generated@@496))
))))
 :pattern ( ($generated@@82 $generated@@493 ($generated@@487 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@498 Int) ) (! (= ($generated@@497 ($generated@@83 $generated@@498)) $generated@@498)
 :pattern ( ($generated@@83 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@250 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@250 $generated@@502)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@503 ($generated@@255 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@255 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@74 ($generated@@255 $generated@@506)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@507 ($generated@@158 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@158 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@74 ($generated@@158 $generated@@510)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@511 ($generated@@487 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@487 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@74 ($generated@@487 $generated@@514)) $generated@@57))
 :pattern ( ($generated@@487 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
(= ($generated@@336 $generated@@516 ($generated@@284 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@284 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@297 $generated@@78 $generated@@78)) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) $generated@@66)) (= ($generated@@79 $generated@@517 ($generated@@403 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@517) $generated@@520))) (and ($generated@@232 ($generated@@89 ($generated@@378 $generated@@517) $generated@@520) $generated@@519) ($generated@@232 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@517) $generated@@520))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@79 $generated@@517 ($generated@@403 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@315 $generated@@78 $generated@@78)) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@66)) (= ($generated@@79 $generated@@521 ($generated@@411 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@521) $generated@@524))) (and ($generated@@232 ($generated@@89 ($generated@@386 $generated@@521) $generated@@524) $generated@@523) ($generated@@232 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@521) $generated@@524))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@79 $generated@@521 ($generated@@411 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@78) (= (type $generated@@528) $generated@@78)) (< ($generated@@525 $generated@@527) ($generated@@526 ($generated@@231 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@231 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@78) (= (type $generated@@530) $generated@@78)) (< ($generated@@525 $generated@@530) ($generated@@526 ($generated@@231 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@231 $generated@@529 $generated@@530))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@531 T@U) ($generated@@532 Int) ) (!  (=> (and (= (type $generated@@531) $generated@@78) (or ($generated@@244 $generated@@531 ($generated@@243 $generated@@532)) (and (not (= 2 $generated@@76)) (and (and ($generated@@232 $generated@@531 $generated@@245) (<= ($generated@@243 0) $generated@@532)) ($generated@@0 ($generated@@242 ($generated@@11 (not (= $generated@@532 7))))))))) (= ($generated@@241 $generated@@531 ($generated@@243 $generated@@532)) ($generated@@243 $generated@@532)))
 :weight 3
 :pattern ( ($generated@@241 $generated@@531 ($generated@@243 $generated@@532)))
))))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@78) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) ($generated@@232 $generated@@533 ($generated@@403 $generated@@534 $generated@@535))) (and (= ($generated@@284 ($generated@@336 ($generated@@297 $generated@@78 $generated@@78) $generated@@533)) $generated@@533) ($generated@@79 ($generated@@336 ($generated@@297 $generated@@78 $generated@@78) $generated@@533) ($generated@@403 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@232 $generated@@533 ($generated@@403 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@78) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@66)) ($generated@@232 $generated@@536 ($generated@@411 $generated@@537 $generated@@538))) (and (= ($generated@@284 ($generated@@336 ($generated@@315 $generated@@78 $generated@@78) $generated@@536)) $generated@@536) ($generated@@79 ($generated@@336 ($generated@@315 $generated@@78 $generated@@78) $generated@@536) ($generated@@411 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@232 $generated@@536 ($generated@@411 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@66) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@78)) ($generated@@232 $generated@@541 ($generated@@144 $generated@@539 $generated@@540))) (and (= ($generated@@284 ($generated@@336 $generated@@145 $generated@@541)) $generated@@541) ($generated@@79 ($generated@@336 $generated@@145 $generated@@541) ($generated@@144 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@232 $generated@@541 ($generated@@144 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@89 ($generated@@419 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@89 ($generated@@419 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@71)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@66) (= (type $generated@@547) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@546 $generated@@547)) $generated@@63) (= ($generated@@544 ($generated@@144 $generated@@546 $generated@@547)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@145) (= ($generated@@525 ($generated@@284 $generated@@548)) ($generated@@526 $generated@@548)))
 :pattern ( ($generated@@525 ($generated@@284 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@78) ($generated@@232 $generated@@549 ($generated@@83 0))) (and (= ($generated@@284 ($generated@@336 $generated@@2 $generated@@549)) $generated@@549) ($generated@@79 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@549) ($generated@@83 0))))
 :pattern ( ($generated@@232 $generated@@549 ($generated@@83 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@78) (= (type $generated@@551) $generated@@66)) ($generated@@232 $generated@@550 ($generated@@250 $generated@@551))) (and (= ($generated@@284 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@550)) $generated@@550) ($generated@@79 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@550) ($generated@@250 $generated@@551))))
 :pattern ( ($generated@@232 $generated@@550 ($generated@@250 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@78) (= (type $generated@@553) $generated@@66)) ($generated@@232 $generated@@552 ($generated@@255 $generated@@553))) (and (= ($generated@@284 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@552)) $generated@@552) ($generated@@79 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@552) ($generated@@255 $generated@@553))))
 :pattern ( ($generated@@232 $generated@@552 ($generated@@255 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@78) (= (type $generated@@555) $generated@@66)) ($generated@@232 $generated@@554 ($generated@@158 $generated@@555))) (and (= ($generated@@284 ($generated@@336 ($generated@@84 $generated@@78 $generated@@2) $generated@@554)) $generated@@554) ($generated@@79 ($generated@@336 ($generated@@84 $generated@@78 $generated@@2) $generated@@554) ($generated@@158 $generated@@555))))
 :pattern ( ($generated@@232 $generated@@554 ($generated@@158 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@78) (= (type $generated@@557) $generated@@66)) ($generated@@232 $generated@@556 ($generated@@487 $generated@@557))) (and (= ($generated@@284 ($generated@@336 ($generated@@277 $generated@@78) $generated@@556)) $generated@@556) ($generated@@79 ($generated@@336 ($generated@@277 $generated@@78) $generated@@556) ($generated@@487 $generated@@557))))
 :pattern ( ($generated@@232 $generated@@556 ($generated@@487 $generated@@557)))
)))
(assert (= ($generated@@74 $generated@@80) $generated@@61))
(assert (= ($generated@@544 $generated@@80) $generated@@64))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@558 ($generated@@158 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@558 $generated@@561)))) ($generated@@263 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@89 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@82 $generated@@558 ($generated@@158 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@145) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@262 $generated@@564) (and ($generated@@143 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@66) ($generated@@82 $generated@@562 ($generated@@144 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@82 $generated@@562 ($generated@@144 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@263 ($generated@@152 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@263 ($generated@@152 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@262 $generated@@568) (and ($generated@@143 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@66) ($generated@@82 $generated@@566 ($generated@@144 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@82 $generated@@566 ($generated@@144 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@263 ($generated@@153 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@263 ($generated@@153 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@78) (= (type $generated@@571) $generated@@78)) (= ($generated@@231 ($generated@@242 $generated@@570) ($generated@@242 $generated@@571)) ($generated@@242 ($generated@@231 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@231 ($generated@@242 $generated@@570) ($generated@@242 $generated@@571)))
)))
(assert (forall (($generated@@572 Int) ) (! (= ($generated@@284 ($generated@@8 ($generated@@243 $generated@@572))) ($generated@@242 ($generated@@284 ($generated@@8 $generated@@572))))
 :pattern ( ($generated@@284 ($generated@@8 ($generated@@243 $generated@@572))))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@284 ($generated@@242 $generated@@573)) ($generated@@242 ($generated@@284 $generated@@573)))
 :pattern ( ($generated@@284 ($generated@@242 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@278 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@277 $generated@@575)) (= ($generated@@276 $generated@@574) 0)) (= $generated@@574 ($generated@@275 $generated@@575))))
 :pattern ( ($generated@@276 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@84 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@289 ($generated@@90 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@289 $generated@@576) ($generated ($generated@@89 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@289 ($generated@@90 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@581) $generated@@2)) ($generated@@82 $generated@@581 $generated@@46 $generated@@580))
 :pattern ( ($generated@@82 $generated@@581 $generated@@46 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@583) $generated@@3)) ($generated@@82 $generated@@583 $generated@@47 $generated@@582))
 :pattern ( ($generated@@82 $generated@@583 $generated@@47 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@585) $generated@@4)) ($generated@@82 $generated@@585 $generated@@44 $generated@@584))
 :pattern ( ($generated@@82 $generated@@585 $generated@@44 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@587) $generated@@443)) ($generated@@82 $generated@@587 $generated@@45 $generated@@586))
 :pattern ( ($generated@@82 $generated@@587 $generated@@45 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@589) $generated@@78)) ($generated@@82 $generated@@589 $generated@@48 $generated@@588))
 :pattern ( ($generated@@82 $generated@@589 $generated@@48 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@277 $generated@@78)) (= (type $generated@@591) $generated@@66)) (= ($generated@@79 $generated@@590 ($generated@@487 $generated@@591)) (forall (($generated@@592 Int) ) (!  (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@276 $generated@@590))) ($generated@@232 ($generated@@488 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@488 $generated@@590 $generated@@592))
))))
 :pattern ( ($generated@@79 $generated@@590 ($generated@@487 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) ($generated@@277 $generated@@78)) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@276 $generated@@594))) (< ($generated@@526 ($generated@@336 $generated@@145 ($generated@@488 $generated@@594 $generated@@595))) ($generated@@593 $generated@@594))))
 :pattern ( ($generated@@526 ($generated@@336 $generated@@145 ($generated@@488 $generated@@594 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@297 $generated@@78 $generated@@78)) (= (type $generated@@597) $generated@@66)) (= (type $generated@@598) $generated@@66)) ($generated@@79 $generated@@596 ($generated@@403 $generated@@597 $generated@@598))) (and (and ($generated@@79 ($generated@@295 $generated@@596) ($generated@@250 $generated@@597)) ($generated@@79 ($generated@@346 $generated@@596) ($generated@@250 $generated@@598))) ($generated@@79 ($generated@@377 $generated@@596) ($generated@@250 ($generated@@144 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@79 $generated@@596 ($generated@@403 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@315 $generated@@78 $generated@@78)) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) $generated@@66)) ($generated@@79 $generated@@599 ($generated@@411 $generated@@600 $generated@@601))) (and (and ($generated@@79 ($generated@@313 $generated@@599) ($generated@@255 $generated@@600)) ($generated@@79 ($generated@@357 $generated@@599) ($generated@@255 $generated@@601))) ($generated@@79 ($generated@@385 $generated@@599) ($generated@@255 ($generated@@144 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@411 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@2) ($generated@@79 $generated@@602 $generated@@46))
 :pattern ( ($generated@@79 $generated@@602 $generated@@46))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@3) ($generated@@79 $generated@@603 $generated@@47))
 :pattern ( ($generated@@79 $generated@@603 $generated@@47))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@4) ($generated@@79 $generated@@604 $generated@@44))
 :pattern ( ($generated@@79 $generated@@604 $generated@@44))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@443) ($generated@@79 $generated@@605 $generated@@45))
 :pattern ( ($generated@@79 $generated@@605 $generated@@45))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@78) ($generated@@79 $generated@@606 $generated@@48))
 :pattern ( ($generated@@79 $generated@@606 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@607) $generated@@78) (= (type $generated@@611) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@609) ($generated@@165 $generated@@85 $generated@@4))) (= (type $generated@@610) $generated@@85)) (= (type $generated@@612) ($generated@@165 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@614  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@241 $generated@@607 $generated@@608) ($generated@@77 $generated@@607)))))
(let (($generated@@615  (=> (and (and (= $generated@@609 ($generated@@219 $generated@@610 $generated@@611 $generated@@60 false)) (= ($generated@@241 $generated@@607 $generated@@608) $generated@@608)) (and ($generated@@79 ($generated@@8 ($generated@@241 $generated@@607 $generated@@608)) $generated@@80) (= (ControlFlow 0 7) 6))) $generated@@614)))
(let (($generated@@616  (=> (<= ($generated@@243 0) ($generated@@241 $generated@@607 $generated@@608)) (=> (and ($generated@@263 $generated@@607 $generated@@245 $generated@@611) ($generated@@82 ($generated@@8 $generated@@608) $generated@@80 $generated@@611)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@608 7))) (=> (not (= $generated@@608 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@608) (= $generated@@608 $generated@@608))) (=> (or (<= 0 $generated@@608) (= $generated@@608 $generated@@608)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@607 $generated@@607) (= $generated@@608 $generated@@608)) (< $generated@@608 $generated@@608)))))))))))
(let (($generated@@617  (=> (and (= $generated@@612 ($generated@@164 $generated@@610 $generated@@611 $generated@@60 false)) (not (= $generated@@608 7))) (and (=> (= (ControlFlow 0 8) 2) $generated@@616) (=> (= (ControlFlow 0 8) 7) $generated@@615)))))
(let (($generated@@618  (=> (and ($generated@@262 $generated@@611) ($generated@@613 $generated@@611)) (=> (and (and (and ($generated@@232 $generated@@607 $generated@@245) ($generated@@263 $generated@@607 $generated@@245 $generated@@611)) (<= ($generated@@243 0) $generated@@608)) (and (= 2 $generated@@76) (= (ControlFlow 0 9) 8))) $generated@@617))))
$generated@@618))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@255 (T@U Int) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@T) T@U)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@81) (= ($generated@@82 $generated@@172 $generated@@144)  (or (= $generated@@172 $generated@@145) (= ($generated@@170 $generated@@172) $generated@@144))))
 :pattern ( ($generated@@82 $generated@@172 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@72 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@224) ($generated@@71 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@71 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@72 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@81) (= (type $generated@@235) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@236) ($generated@@71 $generated@@4))) (= (type $generated@@238) $generated@@81)) (= (type $generated@@239) ($generated@@71 $generated@@240))) (= ($generated@@0 ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (= (type $generated@@241) $generated@@69))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@81) (= (type $generated@@243) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@242 $generated@@241 $generated@@243) ($generated@@85 $generated@@242 $generated@@144 $generated@@243)))
 :pattern ( ($generated@@85 $generated@@242 $generated@@241 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@151)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@69) (= (type $generated@@249) $generated@@69)) (= (type $generated@@250) $generated@@160)) (= (type $generated@@251) $generated@@160)) (= ($generated@@82 ($generated@@244 $generated@@250 $generated@@251) ($generated@@150 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@82 ($generated@@244 $generated@@250 $generated@@251) ($generated@@150 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@253 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@258 T@U) ($generated@@259 Int) ) (!  (=> (and (= (type $generated@@258) $generated@@81) (or ($generated@@255 ($generated@@253 $generated@@258) ($generated@@254 $generated@@259)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@258 $generated@@145)) ($generated@@82 $generated@@258 $generated@@241)) (<= ($generated@@254 0) $generated@@259)) ($generated@@0 ($generated@@253 ($generated@@11 (not (= $generated@@259 7))))))))) (= ($generated@@252 ($generated@@253 $generated@@258) ($generated@@254 $generated@@259)) ($generated@@254 $generated@@259)))
 :weight 3
 :pattern ( ($generated@@252 ($generated@@253 $generated@@258) ($generated@@254 $generated@@259)))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@151) (= (type $generated@@261) $generated@@151)) (= ($generated@@157 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@157 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@69)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@265) $generated@@69)) (= ($generated@@82 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@160) ($generated@@0 ($generated@@91 $generated@@264 $generated@@266))) ($generated@@245 $generated@@266 $generated@@265))
 :pattern ( ($generated@@91 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@82 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@69)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@270) $generated@@69)) (= ($generated@@82 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@160) ($generated@@0 ($generated@@91 $generated@@269 $generated@@271))) ($generated@@245 $generated@@271 $generated@@270))
 :pattern ( ($generated@@91 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@82 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@254 $generated@@272) $generated@@272)
 :pattern ( ($generated@@254 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@253 $generated@@273) $generated@@273)
 :pattern ( ($generated@@253 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@69) (= (type $generated@@277) $generated@@69)) (= (type $generated@@278) $generated@@160)) (= (type $generated@@279) $generated@@160)) (= (type $generated@@280) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@274 $generated@@280)) (= ($generated@@85 ($generated@@244 $generated@@278 $generated@@279) ($generated@@150 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@85 ($generated@@244 $generated@@278 $generated@@279) ($generated@@150 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@73)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@151) (= ($generated@@149 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@151) ($generated@@149 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@160) (= (type $generated@@286) $generated@@160)) (= $generated@@284 ($generated@@244 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@149 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@2) (= ($generated@@82 $generated@@295 $generated@@83) (<= ($generated@@254 0) ($generated $generated@@295))))
 :pattern ( ($generated@@82 $generated@@295 $generated@@83))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@160)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@69) (= (type $generated@@300) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@85 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@87 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@89 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@87 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@91 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@87 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@91 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@91 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@87 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@91 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@91 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@344) $generated@@81)) (and ($generated@@274 $generated@@343) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@343 $generated@@344) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@344)) $generated@@83 $generated@@343))
 :pattern ( ($generated@@80 $generated@@344) ($generated@@93 ($generated@@91 $generated@@343 $generated@@344) $generated@@60))
))))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (!  (=> (and (= (type $generated@@345) $generated@@81) (or ($generated@@255 $generated@@345 $generated@@346) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@345 $generated@@145)) ($generated@@82 $generated@@345 $generated@@241)) (<= ($generated@@254 0) $generated@@346)) (not (= $generated@@346 7)))))) (= ($generated@@252 $generated@@345 $generated@@346) $generated@@346))
 :pattern ( ($generated@@252 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@89 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@87 $generated@@348 $generated@@2)) (= ($generated@@166 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@91 $generated@@347 $generated@@349))) (<= ($generated ($generated@@91 $generated@@347 $generated@@349)) ($generated@@301 $generated@@347))))
 :pattern ( ($generated@@91 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@166 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@160) ($generated@@245 $generated@@353 $generated@@83)) (and (= ($generated@@296 ($generated@@350 $generated@@2 $generated@@353)) $generated@@353) ($generated@@82 ($generated@@350 $generated@@2 $generated@@353) $generated@@83)))
 :pattern ( ($generated@@245 $generated@@353 $generated@@83))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@160) ($generated@@245 $generated@@354 $generated@@144)) (and (= ($generated@@296 ($generated@@350 $generated@@81 $generated@@354)) $generated@@354) ($generated@@82 ($generated@@350 $generated@@81 $generated@@354) $generated@@144)))
 :pattern ( ($generated@@245 $generated@@354 $generated@@144))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@160) ($generated@@245 $generated@@355 $generated@@241)) (and (= ($generated@@296 ($generated@@350 $generated@@81 $generated@@355)) $generated@@355) ($generated@@82 ($generated@@350 $generated@@81 $generated@@355) $generated@@241)))
 :pattern ( ($generated@@245 $generated@@355 $generated@@241))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@81) (= ($generated@@82 $generated@@356 $generated@@241)  (and ($generated@@82 $generated@@356 $generated@@144) (not (= $generated@@356 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@356 $generated@@241))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(let (($generated@@359 ($generated@@310 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@309 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@308 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@91 ($generated@@307 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@307 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@311 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@87 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@311 (type $generated@@364))))
(let (($generated@@366 ($generated@@310 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@309 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@308 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@91 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@91 ($generated@@325 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@325 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@329 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@329 (type $generated@@375))))
(let (($generated@@377 ($generated@@328 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@327 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@326 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@91 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@380) $generated@@69)) (= ($generated@@82 $generated@@379 ($generated@@165 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@379 $generated@@381)))) ($generated@@245 $generated@@381 $generated@@380))
 :pattern ( ($generated@@91 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@82 $generated@@379 ($generated@@165 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@383) $generated@@69)) (= (type $generated@@384) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@382 ($generated@@262 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@160) ($generated@@0 ($generated@@91 $generated@@382 $generated@@385))) ($generated@@275 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@91 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@85 $generated@@382 ($generated@@262 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@387) $generated@@69)) (= (type $generated@@388) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@386 ($generated@@267 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@160) ($generated@@0 ($generated@@91 $generated@@386 $generated@@389))) ($generated@@275 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@91 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@85 $generated@@386 ($generated@@267 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@91 ($generated@@302 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@91 ($generated@@302 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@311 (type $generated@@395))))
(let (($generated@@397 ($generated@@310 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@87 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@309 $generated@@160 $generated@@160)) (= (type $generated@@399) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@91 ($generated@@307 $generated@@398) ($generated@@158 ($generated@@350 $generated@@151 $generated@@399)))) (= ($generated@@91 ($generated@@393 $generated@@398) ($generated@@158 ($generated@@350 $generated@@151 $generated@@399))) ($generated@@159 ($generated@@350 $generated@@151 $generated@@399))))))
 :pattern ( ($generated@@91 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@329 (type $generated@@403))))
(let (($generated@@405 ($generated@@328 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@87 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@327 $generated@@160 $generated@@160)) (= (type $generated@@407) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@91 ($generated@@325 $generated@@406) ($generated@@158 ($generated@@350 $generated@@151 $generated@@407)))) (= ($generated@@91 ($generated@@401 $generated@@406) ($generated@@158 ($generated@@350 $generated@@151 $generated@@407))) ($generated@@159 ($generated@@350 $generated@@151 $generated@@407))))))
 :pattern ( ($generated@@91 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@310 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@309 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@91 ($generated@@361 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@91 ($generated@@307 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@91 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@91 ($generated@@307 $generated@@408) $generated@@412))
 :pattern ( ($generated@@91 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@91 ($generated@@361 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@328 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@327 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@91 ($generated@@372 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@91 ($generated@@325 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@91 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@91 ($generated@@325 $generated@@413) $generated@@417))
 :pattern ( ($generated@@91 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@69)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@309 $generated@@160 $generated@@160)) (= (type $generated@@422) $generated@@69)) (= (type $generated@@423) $generated@@69)) (= (type $generated@@424) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@307 $generated@@421) $generated@@425))) (and ($generated@@275 ($generated@@91 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@275 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@91 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@91 ($generated@@307 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@85 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@69)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@327 $generated@@160 $generated@@160)) (= (type $generated@@430) $generated@@69)) (= (type $generated@@431) $generated@@69)) (= (type $generated@@432) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@325 $generated@@429) $generated@@433))) (and ($generated@@275 ($generated@@91 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@275 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@91 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@91 ($generated@@325 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@85 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@434 T@U) ($generated@@435 Int) ) (!  (=> (and (= (type $generated@@434) $generated@@81) (or ($generated@@255 $generated@@434 $generated@@435) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@434 $generated@@145)) ($generated@@82 $generated@@434 $generated@@241)) (<= ($generated@@254 0) $generated@@435)) (not (= $generated@@435 7)))))) (and (= ($generated@@252 $generated@@434 $generated@@435) ($generated@@80 $generated@@434)) (<= ($generated@@254 0) ($generated@@252 $generated@@434 $generated@@435))))
 :pattern ( ($generated@@252 $generated@@434 $generated@@435))
))))
(assert (forall (($generated@@437 T@T) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@87 $generated@@437 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@327 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@326 $generated@@440 $generated@@439)) (= ($generated@@325 $generated@@438) ($generated@@436 $generated@@440))))))
 :pattern ( ($generated@@325 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@329 (type $generated@@441))))
(let (($generated@@443 ($generated@@328 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@327 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@326 $generated@@443 $generated@@442)) (= ($generated@@372 $generated@@441) ($generated@@436 $generated@@442))))))
 :pattern ( ($generated@@372 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@329 (type $generated@@444))))
(let (($generated@@446 ($generated@@328 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@327 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@326 $generated@@446 $generated@@445)) (= ($generated@@400 $generated@@444) ($generated@@436 $generated@@160))))))
 :pattern ( ($generated@@400 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@311 (type $generated@@447))))
(let (($generated@@449 ($generated@@310 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@309 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@308 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@160) (= (type $generated@@451) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@392 $generated@@447) ($generated@@296 ($generated@@244 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@392 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@329 (type $generated@@452))))
(let (($generated@@454 ($generated@@328 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@327 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@326 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@160) (= (type $generated@@456) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@400 $generated@@452) ($generated@@296 ($generated@@244 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@400 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@160) ($generated@@245 $generated@@457 $generated@@46)) (and (= ($generated@@296 ($generated@@350 $generated@@2 $generated@@457)) $generated@@457) ($generated@@82 ($generated@@350 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@160) ($generated@@245 $generated@@458 $generated@@47)) (and (= ($generated@@296 ($generated@@350 $generated@@3 $generated@@458)) $generated@@458) ($generated@@82 ($generated@@350 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@160) ($generated@@245 $generated@@459 $generated@@44)) (and (= ($generated@@296 ($generated@@350 $generated@@4 $generated@@459)) $generated@@459) ($generated@@82 ($generated@@350 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 20))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@160) ($generated@@245 $generated@@461 $generated@@45)) (and (= ($generated@@296 ($generated@@350 $generated@@460 $generated@@461)) $generated@@461) ($generated@@82 ($generated@@350 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@69) (= ($generated@@245 ($generated@@296 $generated@@462) $generated@@463) ($generated@@82 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@245 ($generated@@296 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@89 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@87 $generated@@465 $generated@@2)) (<= 0 ($generated@@301 $generated@@464))))
 :pattern ( ($generated@@301 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@290 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@289 $generated@@467)) (<= 0 ($generated@@288 $generated@@466))))
 :pattern ( ($generated@@288 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@69)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@69) (= (type $generated@@471) $generated@@69)) (= ($generated@@468 ($generated@@418 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@418 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@69)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@472 ($generated@@418 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@418 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@77 ($generated@@418 $generated@@476 $generated@@477)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@426 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@426 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@426 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@426 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@77 ($generated@@426 $generated@@486 $generated@@487)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@160) (= (type $generated@@489) $generated@@160)) (= ($generated@@281 ($generated@@244 $generated@@488 $generated@@489)) $generated@@62))
 :pattern ( ($generated@@244 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@69)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@69) (= (type $generated@@493) $generated@@69)) (= ($generated@@490 ($generated@@150 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@150 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@69)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@69) (= (type $generated@@497) $generated@@69)) (= ($generated@@494 ($generated@@150 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@150 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@160) (= (type $generated@@499) $generated@@160)) (= ($generated@@158 ($generated@@244 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@244 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@160) (= (type $generated@@501) $generated@@160)) (= ($generated@@159 ($generated@@244 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@244 $generated@@500 $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@290 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@289 $generated@@160)) (= (type $generated@@509) $generated@@69)) (= (type $generated@@510) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@288 $generated@@508))) ($generated@@275 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@85 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@86 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@86 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@262 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@262 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@77 ($generated@@262 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@69) (= ($generated@@518 ($generated@@267 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@267 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@77 ($generated@@267 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@522 ($generated@@165 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@165 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@77 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@350 $generated@@531 ($generated@@296 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@296 $generated@@530))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@532 T@U) ($generated@@533 Int) ) (!  (=> (and (= (type $generated@@532) $generated@@81) (or ($generated@@255 $generated@@532 ($generated@@254 $generated@@533)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@532 $generated@@145)) ($generated@@82 $generated@@532 $generated@@241)) (<= ($generated@@254 0) $generated@@533)) ($generated@@0 ($generated@@253 ($generated@@11 (not (= $generated@@533 7))))))))) (= ($generated@@252 $generated@@532 ($generated@@254 $generated@@533)) ($generated@@254 $generated@@533)))
 :weight 3
 :pattern ( ($generated@@252 $generated@@532 ($generated@@254 $generated@@533)))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@309 $generated@@160 $generated@@160)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@82 $generated@@534 ($generated@@418 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@307 $generated@@534) $generated@@537))) (and ($generated@@245 ($generated@@91 ($generated@@393 $generated@@534) $generated@@537) $generated@@536) ($generated@@245 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@91 ($generated@@393 $generated@@534) $generated@@537))
 :pattern ( ($generated@@91 ($generated@@307 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@82 $generated@@534 ($generated@@418 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@327 $generated@@160 $generated@@160)) (= (type $generated@@539) $generated@@69)) (= (type $generated@@540) $generated@@69)) (= ($generated@@82 $generated@@538 ($generated@@426 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@325 $generated@@538) $generated@@541))) (and ($generated@@245 ($generated@@91 ($generated@@401 $generated@@538) $generated@@541) $generated@@540) ($generated@@245 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@91 ($generated@@401 $generated@@538) $generated@@541))
 :pattern ( ($generated@@91 ($generated@@325 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@82 $generated@@538 ($generated@@426 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@160) (= (type $generated@@545) $generated@@160)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@244 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@244 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@160) (= (type $generated@@547) $generated@@160)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@244 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@244 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@160) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@69)) ($generated@@245 $generated@@548 ($generated@@418 $generated@@549 $generated@@550))) (and (= ($generated@@296 ($generated@@350 ($generated@@309 $generated@@160 $generated@@160) $generated@@548)) $generated@@548) ($generated@@82 ($generated@@350 ($generated@@309 $generated@@160 $generated@@160) $generated@@548) ($generated@@418 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@245 $generated@@548 ($generated@@418 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@160) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@69)) ($generated@@245 $generated@@551 ($generated@@426 $generated@@552 $generated@@553))) (and (= ($generated@@296 ($generated@@350 ($generated@@327 $generated@@160 $generated@@160) $generated@@551)) $generated@@551) ($generated@@82 ($generated@@350 ($generated@@327 $generated@@160 $generated@@160) $generated@@551) ($generated@@426 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@245 $generated@@551 ($generated@@426 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@69) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@160)) ($generated@@245 $generated@@556 ($generated@@150 $generated@@554 $generated@@555))) (and (= ($generated@@296 ($generated@@350 $generated@@151 $generated@@556)) $generated@@556) ($generated@@82 ($generated@@350 $generated@@151 $generated@@556) ($generated@@150 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@245 $generated@@556 ($generated@@150 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@91 ($generated@@436 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@91 ($generated@@436 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@74)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@69) (= (type $generated@@562) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@561 $generated@@562)) $generated@@63) (= ($generated@@559 ($generated@@150 $generated@@561 $generated@@562)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@151) (= ($generated@@542 ($generated@@296 $generated@@563)) ($generated@@543 $generated@@563)))
 :pattern ( ($generated@@542 ($generated@@296 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@160) ($generated@@245 $generated@@564 ($generated@@86 0))) (and (= ($generated@@296 ($generated@@350 $generated@@2 $generated@@564)) $generated@@564) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@564) ($generated@@86 0))))
 :pattern ( ($generated@@245 $generated@@564 ($generated@@86 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@160) (= (type $generated@@566) $generated@@69)) ($generated@@245 $generated@@565 ($generated@@262 $generated@@566))) (and (= ($generated@@296 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@565)) $generated@@565) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@565) ($generated@@262 $generated@@566))))
 :pattern ( ($generated@@245 $generated@@565 ($generated@@262 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@160) (= (type $generated@@568) $generated@@69)) ($generated@@245 $generated@@567 ($generated@@267 $generated@@568))) (and (= ($generated@@296 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@567)) $generated@@567) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@567) ($generated@@267 $generated@@568))))
 :pattern ( ($generated@@245 $generated@@567 ($generated@@267 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@160) (= (type $generated@@570) $generated@@69)) ($generated@@245 $generated@@569 ($generated@@165 $generated@@570))) (and (= ($generated@@296 ($generated@@350 ($generated@@87 $generated@@160 $generated@@2) $generated@@569)) $generated@@569) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@160 $generated@@2) $generated@@569) ($generated@@165 $generated@@570))))
 :pattern ( ($generated@@245 $generated@@569 ($generated@@165 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@160) (= (type $generated@@572) $generated@@69)) ($generated@@245 $generated@@571 ($generated@@502 $generated@@572))) (and (= ($generated@@296 ($generated@@350 ($generated@@289 $generated@@160) $generated@@571)) $generated@@571) ($generated@@82 ($generated@@350 ($generated@@289 $generated@@160) $generated@@571) ($generated@@502 $generated@@572))))
 :pattern ( ($generated@@245 $generated@@571 ($generated@@502 $generated@@572)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@559 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@559 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@241) $generated@@65))
(assert (= ($generated@@559 $generated@@241) $generated@@68))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@574) $generated@@69)) (= (type $generated@@575) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@573 ($generated@@165 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@573 $generated@@576)))) ($generated@@275 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@91 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@85 $generated@@573 ($generated@@165 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@151) (= (type $generated@@578) $generated@@69)) (= (type $generated@@579) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@274 $generated@@579) (and ($generated@@149 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@69) ($generated@@85 $generated@@577 ($generated@@150 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@85 $generated@@577 ($generated@@150 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@275 ($generated@@158 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@275 ($generated@@158 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@151) (= (type $generated@@582) $generated@@69)) (= (type $generated@@583) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@274 $generated@@583) (and ($generated@@149 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@69) ($generated@@85 $generated@@581 ($generated@@150 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@85 $generated@@581 ($generated@@150 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@275 ($generated@@159 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@275 ($generated@@159 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@160) (= (type $generated@@586) $generated@@160)) (= ($generated@@244 ($generated@@253 $generated@@585) ($generated@@253 $generated@@586)) ($generated@@253 ($generated@@244 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@244 ($generated@@253 $generated@@585) ($generated@@253 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@254 $generated@@587))) ($generated@@253 ($generated@@296 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@254 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@296 ($generated@@253 $generated@@588)) ($generated@@253 ($generated@@296 $generated@@588)))
 :pattern ( ($generated@@296 ($generated@@253 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@290 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@289 $generated@@590)) (= ($generated@@288 $generated@@589) 0)) (= $generated@@589 ($generated@@287 $generated@@590))))
 :pattern ( ($generated@@288 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@87 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@301 ($generated@@92 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@301 $generated@@591) ($generated ($generated@@91 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@301 ($generated@@92 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@596) $generated@@2)) ($generated@@85 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@85 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@598) $generated@@3)) ($generated@@85 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@85 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@600) $generated@@4)) ($generated@@85 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@85 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@602) $generated@@460)) ($generated@@85 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@85 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@604) $generated@@160)) ($generated@@85 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@85 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@289 $generated@@160)) (= (type $generated@@606) $generated@@69)) (= ($generated@@82 $generated@@605 ($generated@@502 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@288 $generated@@605))) ($generated@@245 ($generated@@503 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@503 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@82 $generated@@605 ($generated@@502 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@289 $generated@@160)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@288 $generated@@609))) (< ($generated@@543 ($generated@@350 $generated@@151 ($generated@@503 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@543 ($generated@@350 $generated@@151 ($generated@@503 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@309 $generated@@160 $generated@@160)) (= (type $generated@@612) $generated@@69)) (= (type $generated@@613) $generated@@69)) ($generated@@82 $generated@@611 ($generated@@418 $generated@@612 $generated@@613))) (and (and ($generated@@82 ($generated@@307 $generated@@611) ($generated@@262 $generated@@612)) ($generated@@82 ($generated@@361 $generated@@611) ($generated@@262 $generated@@613))) ($generated@@82 ($generated@@392 $generated@@611) ($generated@@262 ($generated@@150 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@82 $generated@@611 ($generated@@418 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@327 $generated@@160 $generated@@160)) (= (type $generated@@615) $generated@@69)) (= (type $generated@@616) $generated@@69)) ($generated@@82 $generated@@614 ($generated@@426 $generated@@615 $generated@@616))) (and (and ($generated@@82 ($generated@@325 $generated@@614) ($generated@@267 $generated@@615)) ($generated@@82 ($generated@@372 $generated@@614) ($generated@@267 $generated@@616))) ($generated@@82 ($generated@@400 $generated@@614) ($generated@@267 ($generated@@150 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@82 $generated@@614 ($generated@@426 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@82 $generated@@617 $generated@@46))
 :pattern ( ($generated@@82 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@82 $generated@@618 $generated@@47))
 :pattern ( ($generated@@82 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@82 $generated@@619 $generated@@44))
 :pattern ( ($generated@@82 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@460) ($generated@@82 $generated@@620 $generated@@45))
 :pattern ( ($generated@@82 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@160) ($generated@@82 $generated@@621 $generated@@48))
 :pattern ( ($generated@@82 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@622) $generated@@81) (= (type $generated@@625) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@624) ($generated@@175 $generated@@81 $generated@@4))) (= (type $generated@@626) ($generated@@175 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@628  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@252 $generated@@622 $generated@@623) ($generated@@80 $generated@@622)))))
(let (($generated@@629  (=> (and (and (= $generated@@624 ($generated@@229 $generated@@145 $generated@@625 $generated@@60 false)) (= ($generated@@252 $generated@@622 $generated@@623) $generated@@623)) (and ($generated@@82 ($generated@@8 ($generated@@252 $generated@@622 $generated@@623)) $generated@@83) (= (ControlFlow 0 7) 6))) $generated@@628)))
(let (($generated@@630  (=> (<= ($generated@@254 0) ($generated@@252 $generated@@622 $generated@@623)) (=> (and ($generated@@85 $generated@@622 $generated@@144 $generated@@625) ($generated@@85 ($generated@@8 $generated@@623) $generated@@83 $generated@@625)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@623 7))) (=> (not (= $generated@@623 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@623) (= $generated@@623 $generated@@623))) (=> (or (<= 0 $generated@@623) (= $generated@@623 $generated@@623)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@622 $generated@@622) (= $generated@@623 $generated@@623)) (< $generated@@623 $generated@@623)))))))))))
(let (($generated@@631  (=> (and (= $generated@@626 ($generated@@174 $generated@@145 $generated@@625 $generated@@60 false)) (not (= $generated@@623 7))) (and (=> (= (ControlFlow 0 8) 2) $generated@@630) (=> (= (ControlFlow 0 8) 7) $generated@@629)))))
(let (($generated@@632  (=> (and ($generated@@274 $generated@@625) ($generated@@627 $generated@@625)) (=> (and (and (and (not (= $generated@@622 $generated@@145)) (and ($generated@@82 $generated@@622 $generated@@241) ($generated@@85 $generated@@622 $generated@@241 $generated@@625))) (<= ($generated@@254 0) $generated@@623)) (and (= 2 $generated@@79) (= (ControlFlow 0 9) 8))) $generated@@631))))
$generated@@632))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@234 (Int) T@U)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@302 (Int) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) Bool)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@640 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (= ($generated@@1 $generated@@87) 12) (forall (($generated@@88 T@U) ) (! (= (type ($generated@@86 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (= (type $generated@@89) $generated@@87) (= (type $generated@@90) $generated@@81)) (= (type $generated@@91) $generated@@81)) (= ($generated@@85 ($generated@@86 $generated@@89) $generated@@90 $generated@@91) (= $generated@@90 $generated@@91)))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@89) $generated@@90 $generated@@91))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 13)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@72 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 15)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@72 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (= ($generated@@1 $generated@@151) 16))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@151) (= (type $generated@@153) $generated@@151)) (= (type $generated@@154) $generated@@151)) (and ($generated@@150 $generated@@152 $generated@@153) ($generated@@150 $generated@@153 $generated@@154))) ($generated@@150 $generated@@152 $generated@@154))
 :pattern ( ($generated@@150 $generated@@152 $generated@@153) ($generated@@150 $generated@@153 $generated@@154))
 :pattern ( ($generated@@150 $generated@@152 $generated@@153) ($generated@@150 $generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@2) (= (type $generated@@156) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@155 $generated@@83 $generated@@156))
 :pattern ( ($generated@@92 $generated@@155 $generated@@83 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@82 $generated@@157 ($generated@@93 0)))
 :pattern ( ($generated@@82 $generated@@157 ($generated@@93 0)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@69)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@69) (= (type $generated@@163) $generated@@69)) (= (type $generated@@164) $generated@@81)) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@82 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@151)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@151)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@81) (= (type $generated@@171) $generated@@81)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@69)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@94 $generated@@151 $generated@@2)) (= (type $generated@@176) $generated@@69)) ($generated@@82 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@82 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@95 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@72 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@95) (= (type $generated@@227) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@228) ($generated@@71 $generated@@4))) (= (type $generated@@230) $generated@@95)) (= (type $generated@@231) ($generated@@71 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 Int) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@151)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@87) (= (type $generated@@237) $generated@@81)) (= (type $generated@@238) $generated@@81)) (forall (($generated@@239 Int) ) (!  (=> (<= 0 $generated@@239) ($generated@@233 ($generated@@234 $generated@@239) ($generated@@86 $generated@@236) $generated@@237 $generated@@238))
 :pattern ( ($generated@@233 ($generated@@234 $generated@@239) ($generated@@86 $generated@@236) $generated@@237 $generated@@238))
))) ($generated@@85 ($generated@@86 $generated@@236) $generated@@237 $generated@@238))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (= (type $generated@@241) $generated@@69))
(assert (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@81) ($generated@@82 $generated@@242 $generated@@241)) ($generated@@240 $generated@@242))
 :pattern ( ($generated@@240 $generated@@242) ($generated@@82 $generated@@242 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@81)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@69) (= (type $generated@@248) $generated@@69)) (= (type $generated@@249) $generated@@151)) (= (type $generated@@250) $generated@@151)) (= ($generated@@82 ($generated@@243 $generated@@249 $generated@@250) ($generated@@159 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@82 ($generated@@243 $generated@@249 $generated@@250) ($generated@@159 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@81) (= (type $generated@@252) $generated@@81)) (= ($generated@@165 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@165 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@151) (= (type $generated@@254) $generated@@87)) (= (type $generated@@255) $generated@@81)) (= (type $generated@@256) $generated@@81)) (= (type $generated@@257) $generated@@151)) (and ($generated@@150 $generated@@253 $generated@@257) ($generated@@233 $generated@@257 ($generated@@86 $generated@@254) $generated@@255 $generated@@256))) ($generated@@233 $generated@@253 ($generated@@86 $generated@@254) $generated@@255 $generated@@256))
 :pattern ( ($generated@@233 $generated@@253 ($generated@@86 $generated@@254) $generated@@255 $generated@@256) ($generated@@233 $generated@@257 ($generated@@86 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@69)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@94 $generated@@151 $generated@@4)) (= (type $generated@@261) $generated@@69)) (= ($generated@@82 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@151) ($generated@@0 ($generated@@99 $generated@@260 $generated@@262))) ($generated@@244 $generated@@262 $generated@@261))
 :pattern ( ($generated@@99 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@82 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@69)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@94 $generated@@151 $generated@@4)) (= (type $generated@@266) $generated@@69)) (= ($generated@@82 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@151) ($generated@@0 ($generated@@99 $generated@@265 $generated@@267))) ($generated@@244 $generated@@267 $generated@@266))
 :pattern ( ($generated@@99 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@82 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@276) $generated@@151) (= (type $generated@@277) $generated@@87)) (= (type $generated@@278) $generated@@81)) (= (type $generated@@279) $generated@@81)) (and ($generated@@82 $generated@@278 $generated@@241) ($generated@@82 $generated@@279 $generated@@241))) (= ($generated@@233 $generated@@276 ($generated@@86 $generated@@277) $generated@@278 $generated@@279)  (and (=> (< 0 ($generated@@274 $generated@@276)) (and (and ($generated@@240 $generated@@278) ($generated@@240 $generated@@279)) (=> (and ($generated@@240 $generated@@278) ($generated@@240 $generated@@279)) (= ($generated@@275 $generated@@278) ($generated@@275 $generated@@279))))) (=> (and (not (= $generated@@276 ($generated@@234 0))) (= ($generated@@274 $generated@@276) 0)) ($generated@@85 $generated@@277 $generated@@278 $generated@@279)))))
 :pattern ( ($generated@@233 $generated@@276 ($generated@@86 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@69) (= (type $generated@@283) $generated@@69)) (= (type $generated@@284) $generated@@151)) (= (type $generated@@285) $generated@@151)) (= (type $generated@@286) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@280 $generated@@286)) (= ($generated@@92 ($generated@@243 $generated@@284 $generated@@285) ($generated@@159 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@92 ($generated@@243 $generated@@284 $generated@@285) ($generated@@159 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@73)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@81) (= ($generated@@158 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@62)))
 :pattern ( ($generated@@158 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@81) (= ($generated@@240 $generated@@290) (= ($generated@@287 $generated@@290) $generated@@64)))
 :pattern ( ($generated@@240 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@81) ($generated@@158 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@151) (= (type $generated@@293) $generated@@151)) (= $generated@@291 ($generated@@243 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@158 $generated@@291))
)))
(assert  (and (and (forall (($generated@@298 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@298)) 18)) (forall (($generated@@299 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
))) (forall (($generated@@300 T@T) ) (! (= (type ($generated@@294 $generated@@300)) ($generated@@296 $generated@@300))
 :pattern ( ($generated@@294 $generated@@300))
))))
(assert (forall (($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@301)) 0)
 :pattern ( ($generated@@294 $generated@@301))
)))
(assert (forall (($generated@@303 Int) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@81)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@81) ($generated@@240 $generated@@304)) (exists (($generated@@305 Int) ) (= $generated@@304 ($generated@@302 $generated@@305))))
 :pattern ( ($generated@@240 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@82 $generated@@306 $generated@@83) (<= ($generated@@268 0) ($generated $generated@@306))))
 :pattern ( ($generated@@82 $generated@@306 $generated@@83))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@307) $generated@@151) (= (type $generated@@308) $generated@@87)) (= (type $generated@@309) $generated@@81)) (= (type $generated@@310) $generated@@81)) (not (= $generated@@307 ($generated@@234 0)))) (= ($generated@@233 $generated@@307 ($generated@@86 $generated@@308) $generated@@309 $generated@@310) ($generated@@233 $generated@@307 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@233 $generated@@307 ($generated@@86 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) $generated@@87) (= (type $generated@@312) $generated@@81)) (= (type $generated@@313) $generated@@81)) (= ($generated@@85 ($generated@@86 $generated@@311) $generated@@312 $generated@@313) ($generated@@85 $generated@@311 $generated@@312 $generated@@313)))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@311) $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@151)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@69) (= (type $generated@@318) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@281 ($generated@@314 $generated@@316) $generated@@317 $generated@@318) ($generated@@92 $generated@@316 $generated@@317 $generated@@318)))
 :pattern ( ($generated@@281 ($generated@@314 $generated@@316) $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@94 $generated@@321 $generated@@2))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@97 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@94 $generated@@323 $generated@@2)) (and (= (= ($generated@@319 $generated@@322) 0) (= $generated@@322 ($generated@@320 $generated@@323))) (=> (not (= ($generated@@319 $generated@@322) 0)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (< 0 ($generated ($generated@@99 $generated@@322 $generated@@324))))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@94 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@99 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@99 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 20)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@94 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@99 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@99 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@362 Int) ) (!  (=> (<= 0 $generated@@362) (and ($generated@@361 ($generated@@234 $generated@@362)) (= ($generated@@274 ($generated@@234 $generated@@362)) $generated@@362)))
 :pattern ( ($generated@@234 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@97 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@94 $generated@@364 $generated@@2)) (= ($generated@@173 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@99 $generated@@363 $generated@@365))) (<= ($generated ($generated@@99 $generated@@363 $generated@@365)) ($generated@@319 $generated@@363))))
 :pattern ( ($generated@@99 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@173 $generated@@363))
)))
(assert (forall (($generated@@367 T@T) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@151) ($generated@@244 $generated@@369 $generated@@83)) (and (= ($generated@@314 ($generated@@366 $generated@@2 $generated@@369)) $generated@@369) ($generated@@82 ($generated@@366 $generated@@2 $generated@@369) $generated@@83)))
 :pattern ( ($generated@@244 $generated@@369 $generated@@83))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@151) ($generated@@244 $generated@@370 $generated@@241)) (and (= ($generated@@314 ($generated@@366 $generated@@81 $generated@@370)) $generated@@370) ($generated@@82 ($generated@@366 $generated@@81 $generated@@370) $generated@@241)))
 :pattern ( ($generated@@244 $generated@@370 $generated@@241))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) $generated@@87) (= (type $generated@@372) $generated@@81)) (= (type $generated@@373) $generated@@81)) (= ($generated@@85 ($generated@@86 $generated@@371) $generated@@372 $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@151) ($generated@@233 $generated@@374 ($generated@@86 $generated@@371) $generated@@372 $generated@@373))
 :pattern ( ($generated@@233 $generated@@374 ($generated@@86 $generated@@371) $generated@@372 $generated@@373))
))))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@371) $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@329 (type $generated@@375))))
(let (($generated@@377 ($generated@@328 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@327 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@326 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@99 ($generated@@325 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@325 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@329 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@94 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@329 (type $generated@@382))))
(let (($generated@@384 ($generated@@328 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@327 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@326 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@99 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@347 (type $generated@@386))))
(let (($generated@@388 ($generated@@346 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@345 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@344 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@99 ($generated@@343 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@343 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@347 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@94 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@347 (type $generated@@393))))
(let (($generated@@395 ($generated@@346 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@345 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@344 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@99 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@398) $generated@@81)) (and ($generated@@280 $generated@@397) ($generated@@92 $generated@@398 $generated@@241 $generated@@397))) ($generated@@92 ($generated@@8 ($generated@@80 $generated@@398)) $generated@@83 $generated@@397))
 :pattern ( ($generated@@80 $generated@@398) ($generated@@92 $generated@@398 $generated@@241 $generated@@397))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@94 $generated@@151 $generated@@2)) (= (type $generated@@400) $generated@@69)) (= ($generated@@82 $generated@@399 ($generated@@172 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@151) (< 0 ($generated ($generated@@99 $generated@@399 $generated@@401)))) ($generated@@244 $generated@@401 $generated@@400))
 :pattern ( ($generated@@99 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@399 ($generated@@172 $generated@@400)))
)))
(assert (forall (($generated@@402 Int) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@280 $generated@@403)) (= ($generated@@92 ($generated@@302 $generated@@402) $generated@@241 $generated@@403) ($generated@@92 ($generated@@8 $generated@@402) $generated@@46 $generated@@403)))
 :pattern ( ($generated@@92 ($generated@@302 $generated@@402) $generated@@241 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@151) (= (type $generated@@405) $generated@@151)) (or (or ($generated@@150 $generated@@404 $generated@@405) (= $generated@@404 $generated@@405)) ($generated@@150 $generated@@405 $generated@@404)))
 :pattern ( ($generated@@150 $generated@@404 $generated@@405) ($generated@@150 $generated@@405 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@94 $generated@@151 $generated@@4)) (= (type $generated@@407) $generated@@69)) (= (type $generated@@408) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@406 ($generated@@258 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@151) ($generated@@0 ($generated@@99 $generated@@406 $generated@@409))) ($generated@@281 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@99 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@92 $generated@@406 ($generated@@258 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@94 $generated@@151 $generated@@4)) (= (type $generated@@411) $generated@@69)) (= (type $generated@@412) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@410 ($generated@@263 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@151) ($generated@@0 ($generated@@99 $generated@@410 $generated@@413))) ($generated@@281 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@99 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@92 $generated@@410 ($generated@@263 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(= ($generated ($generated@@99 ($generated@@320 $generated@@415) $generated@@414)) 0))
 :pattern ( (let (($generated@@415 (type $generated@@414)))
($generated@@99 ($generated@@320 $generated@@415) $generated@@414)))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@94 $generated@@151 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@329 (type $generated@@419))))
(let (($generated@@421 ($generated@@328 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@94 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@327 $generated@@151 $generated@@151)) (= (type $generated@@423) $generated@@151)) (= ($generated@@0 ($generated@@99 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@99 ($generated@@325 $generated@@422) ($generated@@166 ($generated@@366 $generated@@81 $generated@@423)))) (= ($generated@@99 ($generated@@417 $generated@@422) ($generated@@166 ($generated@@366 $generated@@81 $generated@@423))) ($generated@@167 ($generated@@366 $generated@@81 $generated@@423))))))
 :pattern ( ($generated@@99 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@94 $generated@@151 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@347 (type $generated@@427))))
(let (($generated@@429 ($generated@@346 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@94 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@345 $generated@@151 $generated@@151)) (= (type $generated@@431) $generated@@151)) (= ($generated@@0 ($generated@@99 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@99 ($generated@@343 $generated@@430) ($generated@@166 ($generated@@366 $generated@@81 $generated@@431)))) (= ($generated@@99 ($generated@@425 $generated@@430) ($generated@@166 ($generated@@366 $generated@@81 $generated@@431))) ($generated@@167 ($generated@@366 $generated@@81 $generated@@431))))))
 :pattern ( ($generated@@99 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@328 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@327 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@99 ($generated@@379 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@99 ($generated@@325 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@99 ($generated@@417 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@99 ($generated@@325 $generated@@432) $generated@@436))
 :pattern ( ($generated@@99 ($generated@@417 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@99 ($generated@@379 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@346 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@345 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@99 ($generated@@390 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@99 ($generated@@343 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@99 ($generated@@425 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@99 ($generated@@343 $generated@@437) $generated@@441))
 :pattern ( ($generated@@99 ($generated@@425 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@99 ($generated@@390 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@69)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@327 $generated@@151 $generated@@151)) (= (type $generated@@446) $generated@@69)) (= (type $generated@@447) $generated@@69)) (= (type $generated@@448) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@151) ($generated@@0 ($generated@@99 ($generated@@325 $generated@@445) $generated@@449))) (and ($generated@@281 ($generated@@99 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@281 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@99 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@99 ($generated@@325 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@92 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@69)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@345 $generated@@151 $generated@@151)) (= (type $generated@@454) $generated@@69)) (= (type $generated@@455) $generated@@69)) (= (type $generated@@456) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@151) ($generated@@0 ($generated@@99 ($generated@@343 $generated@@453) $generated@@457))) (and ($generated@@281 ($generated@@99 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@281 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@99 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@99 ($generated@@343 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@92 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@94 $generated@@459 $generated@@4))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@347 (type $generated@@460))))
(let (($generated@@462 ($generated@@346 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@345 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@344 $generated@@462 $generated@@461)) (= ($generated@@343 $generated@@460) ($generated@@458 $generated@@462))))))
 :pattern ( ($generated@@343 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@347 (type $generated@@463))))
(let (($generated@@465 ($generated@@346 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@345 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@344 $generated@@465 $generated@@464)) (= ($generated@@390 $generated@@463) ($generated@@458 $generated@@464))))))
 :pattern ( ($generated@@390 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@347 (type $generated@@466))))
(let (($generated@@468 ($generated@@346 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@345 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@344 $generated@@468 $generated@@467)) (= ($generated@@424 $generated@@466) ($generated@@458 $generated@@151))))))
 :pattern ( ($generated@@424 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@329 (type $generated@@469))))
(let (($generated@@471 ($generated@@328 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@327 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@326 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@151) (= (type $generated@@473) $generated@@151)) ($generated@@0 ($generated@@99 ($generated@@416 $generated@@469) ($generated@@314 ($generated@@243 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@416 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@347 (type $generated@@474))))
(let (($generated@@476 ($generated@@346 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@345 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@344 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@151) (= (type $generated@@478) $generated@@151)) ($generated@@0 ($generated@@99 ($generated@@424 $generated@@474) ($generated@@314 ($generated@@243 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@424 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@151) ($generated@@244 $generated@@479 $generated@@46)) (and (= ($generated@@314 ($generated@@366 $generated@@2 $generated@@479)) $generated@@479) ($generated@@82 ($generated@@366 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@151) ($generated@@244 $generated@@480 $generated@@47)) (and (= ($generated@@314 ($generated@@366 $generated@@3 $generated@@480)) $generated@@480) ($generated@@82 ($generated@@366 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@151) ($generated@@244 $generated@@481 $generated@@44)) (and (= ($generated@@314 ($generated@@366 $generated@@4 $generated@@481)) $generated@@481) ($generated@@82 ($generated@@366 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 21))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@151) ($generated@@244 $generated@@483 $generated@@45)) (and (= ($generated@@314 ($generated@@366 $generated@@482 $generated@@483)) $generated@@483) ($generated@@82 ($generated@@366 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@69) (= ($generated@@244 ($generated@@314 $generated@@484) $generated@@485) ($generated@@82 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@244 ($generated@@314 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@151) (<= 0 ($generated@@274 $generated@@486)))
 :pattern ( ($generated@@274 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@97 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@94 $generated@@488 $generated@@2)) (<= 0 ($generated@@319 $generated@@487))))
 :pattern ( ($generated@@319 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@297 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@296 $generated@@490)) (<= 0 ($generated@@295 $generated@@489))))
 :pattern ( ($generated@@295 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@491 ($generated@@442 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@442 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@69) (= (type $generated@@498) $generated@@69)) (= ($generated@@495 ($generated@@442 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@442 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@69) (= (type $generated@@500) $generated@@69)) (= ($generated@@77 ($generated@@442 $generated@@499 $generated@@500)) $generated@@58))
 :pattern ( ($generated@@442 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@69) (= (type $generated@@504) $generated@@69)) (= ($generated@@501 ($generated@@450 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@450 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@69) (= (type $generated@@508) $generated@@69)) (= ($generated@@505 ($generated@@450 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@450 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@69) (= (type $generated@@510) $generated@@69)) (= ($generated@@77 ($generated@@450 $generated@@509 $generated@@510)) $generated@@59))
 :pattern ( ($generated@@450 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@151) (= (type $generated@@512) $generated@@151)) (= ($generated@@287 ($generated@@243 $generated@@511 $generated@@512)) $generated@@62))
 :pattern ( ($generated@@243 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@69)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@69) (= (type $generated@@516) $generated@@69)) (= ($generated@@513 ($generated@@159 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@159 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@69) (= (type $generated@@520) $generated@@69)) (= ($generated@@517 ($generated@@159 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@159 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@151) (= (type $generated@@522) $generated@@151)) (= ($generated@@166 ($generated@@243 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@243 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@151) (= (type $generated@@524) $generated@@151)) (= ($generated@@167 ($generated@@243 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@243 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@297 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@296 $generated@@151)) (= (type $generated@@532) $generated@@69)) (= (type $generated@@533) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@295 $generated@@531))) ($generated@@281 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@92 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@93 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@93 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@69)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@69) (= ($generated@@537 ($generated@@258 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@258 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@69) (= ($generated@@77 ($generated@@258 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@69) (= ($generated@@541 ($generated@@263 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@263 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@69) (= ($generated@@77 ($generated@@263 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@69) (= ($generated@@545 ($generated@@172 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@172 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@69) (= ($generated@@77 ($generated@@172 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@69)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@69) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@69) (= ($generated@@77 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@287 ($generated@@302 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@302 $generated@@553))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@275 ($generated@@302 $generated@@554)) $generated@@554)
 :pattern ( ($generated@@302 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
(= ($generated@@366 $generated@@556 ($generated@@314 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@314 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@327 $generated@@151 $generated@@151)) (= (type $generated@@558) $generated@@69)) (= (type $generated@@559) $generated@@69)) (= ($generated@@82 $generated@@557 ($generated@@442 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@151) ($generated@@0 ($generated@@99 ($generated@@325 $generated@@557) $generated@@560))) (and ($generated@@244 ($generated@@99 ($generated@@417 $generated@@557) $generated@@560) $generated@@559) ($generated@@244 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@99 ($generated@@417 $generated@@557) $generated@@560))
 :pattern ( ($generated@@99 ($generated@@325 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@82 $generated@@557 ($generated@@442 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@345 $generated@@151 $generated@@151)) (= (type $generated@@562) $generated@@69)) (= (type $generated@@563) $generated@@69)) (= ($generated@@82 $generated@@561 ($generated@@450 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@151) ($generated@@0 ($generated@@99 ($generated@@343 $generated@@561) $generated@@564))) (and ($generated@@244 ($generated@@99 ($generated@@425 $generated@@561) $generated@@564) $generated@@563) ($generated@@244 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@99 ($generated@@425 $generated@@561) $generated@@564))
 :pattern ( ($generated@@99 ($generated@@343 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@82 $generated@@561 ($generated@@450 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@151) (= (type $generated@@566) $generated@@151)) (and (and (and (=> ($generated@@150 $generated@@565 $generated@@566) (not (= $generated@@565 $generated@@566))) (=> (and ($generated@@361 $generated@@565) (not ($generated@@361 $generated@@566))) ($generated@@150 $generated@@565 $generated@@566))) (=> (and ($generated@@361 $generated@@565) ($generated@@361 $generated@@566)) (= ($generated@@150 $generated@@565 $generated@@566) (< ($generated@@274 $generated@@565) ($generated@@274 $generated@@566))))) (=> (and ($generated@@150 $generated@@565 $generated@@566) ($generated@@361 $generated@@566)) ($generated@@361 $generated@@565))))
 :pattern ( ($generated@@150 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@151) (= (type $generated@@570) $generated@@151)) (< ($generated@@567 $generated@@569) ($generated@@568 ($generated@@243 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@243 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@151) (= (type $generated@@572) $generated@@151)) (< ($generated@@567 $generated@@572) ($generated@@568 ($generated@@243 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@243 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@82 ($generated@@302 $generated@@573) $generated@@241) ($generated@@82 ($generated@@8 $generated@@573) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@302 $generated@@573) $generated@@241))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@151) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) $generated@@69)) ($generated@@244 $generated@@574 ($generated@@442 $generated@@575 $generated@@576))) (and (= ($generated@@314 ($generated@@366 ($generated@@327 $generated@@151 $generated@@151) $generated@@574)) $generated@@574) ($generated@@82 ($generated@@366 ($generated@@327 $generated@@151 $generated@@151) $generated@@574) ($generated@@442 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@244 $generated@@574 ($generated@@442 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@151) (= (type $generated@@578) $generated@@69)) (= (type $generated@@579) $generated@@69)) ($generated@@244 $generated@@577 ($generated@@450 $generated@@578 $generated@@579))) (and (= ($generated@@314 ($generated@@366 ($generated@@345 $generated@@151 $generated@@151) $generated@@577)) $generated@@577) ($generated@@82 ($generated@@366 ($generated@@345 $generated@@151 $generated@@151) $generated@@577) ($generated@@450 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@244 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@69) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) $generated@@151)) ($generated@@244 $generated@@582 ($generated@@159 $generated@@580 $generated@@581))) (and (= ($generated@@314 ($generated@@366 $generated@@81 $generated@@582)) $generated@@582) ($generated@@82 ($generated@@366 $generated@@81 $generated@@582) ($generated@@159 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@244 $generated@@582 ($generated@@159 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
 (not ($generated@@0 ($generated@@99 ($generated@@458 $generated@@584) $generated@@583))))
 :pattern ( (let (($generated@@584 (type $generated@@583)))
($generated@@99 ($generated@@458 $generated@@584) $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@74)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@69) (= (type $generated@@588) $generated@@69)) (and (= ($generated@@77 ($generated@@159 $generated@@587 $generated@@588)) $generated@@63) (= ($generated@@585 ($generated@@159 $generated@@587 $generated@@588)) $generated@@67)))
 :pattern ( ($generated@@159 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@280 $generated@@590) (and ($generated@@240 $generated@@589) ($generated@@92 $generated@@589 $generated@@241 $generated@@590)))) ($generated@@92 ($generated@@8 ($generated@@275 $generated@@589)) $generated@@46 $generated@@590))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@275 $generated@@589)) $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@81) (= ($generated@@567 ($generated@@314 $generated@@591)) ($generated@@568 $generated@@591)))
 :pattern ( ($generated@@567 ($generated@@314 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@151) ($generated@@244 $generated@@592 ($generated@@93 0))) (and (= ($generated@@314 ($generated@@366 $generated@@2 $generated@@592)) $generated@@592) ($generated@@82 ($generated@@366 ($generated@@94 $generated@@151 $generated@@4) $generated@@592) ($generated@@93 0))))
 :pattern ( ($generated@@244 $generated@@592 ($generated@@93 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@151) (= (type $generated@@594) $generated@@69)) ($generated@@244 $generated@@593 ($generated@@258 $generated@@594))) (and (= ($generated@@314 ($generated@@366 ($generated@@94 $generated@@151 $generated@@4) $generated@@593)) $generated@@593) ($generated@@82 ($generated@@366 ($generated@@94 $generated@@151 $generated@@4) $generated@@593) ($generated@@258 $generated@@594))))
 :pattern ( ($generated@@244 $generated@@593 ($generated@@258 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@151) (= (type $generated@@596) $generated@@69)) ($generated@@244 $generated@@595 ($generated@@263 $generated@@596))) (and (= ($generated@@314 ($generated@@366 ($generated@@94 $generated@@151 $generated@@4) $generated@@595)) $generated@@595) ($generated@@82 ($generated@@366 ($generated@@94 $generated@@151 $generated@@4) $generated@@595) ($generated@@263 $generated@@596))))
 :pattern ( ($generated@@244 $generated@@595 ($generated@@263 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@151) (= (type $generated@@598) $generated@@69)) ($generated@@244 $generated@@597 ($generated@@172 $generated@@598))) (and (= ($generated@@314 ($generated@@366 ($generated@@94 $generated@@151 $generated@@2) $generated@@597)) $generated@@597) ($generated@@82 ($generated@@366 ($generated@@94 $generated@@151 $generated@@2) $generated@@597) ($generated@@172 $generated@@598))))
 :pattern ( ($generated@@244 $generated@@597 ($generated@@172 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@151) (= (type $generated@@600) $generated@@69)) ($generated@@244 $generated@@599 ($generated@@525 $generated@@600))) (and (= ($generated@@314 ($generated@@366 ($generated@@296 $generated@@151) $generated@@599)) $generated@@599) ($generated@@82 ($generated@@366 ($generated@@296 $generated@@151) $generated@@599) ($generated@@525 $generated@@600))))
 :pattern ( ($generated@@244 $generated@@599 ($generated@@525 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@151) ($generated@@361 $generated@@601)) (= $generated@@601 ($generated@@234 ($generated@@274 $generated@@601))))
 :pattern ( ($generated@@274 $generated@@601))
 :pattern ( ($generated@@361 $generated@@601))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@585 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@241) $generated@@65))
(assert (= ($generated@@585 $generated@@241) $generated@@68))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@94 $generated@@151 $generated@@2)) (= (type $generated@@603) $generated@@69)) (= (type $generated@@604) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@602 ($generated@@172 $generated@@603) $generated@@604) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@151) (< 0 ($generated ($generated@@99 $generated@@602 $generated@@605)))) ($generated@@281 $generated@@605 $generated@@603 $generated@@604))
 :pattern ( ($generated@@99 $generated@@602 $generated@@605))
))))
 :pattern ( ($generated@@92 $generated@@602 ($generated@@172 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@87) (= (type $generated@@607) $generated@@81)) (= (type $generated@@608) $generated@@81)) (and ($generated@@82 $generated@@607 $generated@@241) ($generated@@82 $generated@@608 $generated@@241))) (= ($generated@@85 ($generated@@86 $generated@@606) $generated@@607 $generated@@608)  (and (and ($generated@@240 $generated@@607) ($generated@@240 $generated@@608)) (=> (and ($generated@@240 $generated@@607) ($generated@@240 $generated@@608)) (= ($generated@@275 $generated@@607) ($generated@@275 $generated@@608))))))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@606) $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@69)) (= (type $generated@@611) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@280 $generated@@611) (and ($generated@@158 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@69) ($generated@@92 $generated@@609 ($generated@@159 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@92 $generated@@609 ($generated@@159 $generated@@610 $generated@@612) $generated@@611))
))))) ($generated@@281 ($generated@@166 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@281 ($generated@@166 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@81) (= (type $generated@@614) $generated@@69)) (= (type $generated@@615) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@280 $generated@@615) (and ($generated@@158 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@69) ($generated@@92 $generated@@613 ($generated@@159 $generated@@616 $generated@@614) $generated@@615))
 :pattern ( ($generated@@92 $generated@@613 ($generated@@159 $generated@@616 $generated@@614) $generated@@615))
))))) ($generated@@281 ($generated@@167 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@281 ($generated@@167 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@151) (= (type $generated@@618) $generated@@151)) (= ($generated@@243 ($generated@@270 $generated@@617) ($generated@@270 $generated@@618)) ($generated@@270 ($generated@@243 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@243 ($generated@@270 $generated@@617) ($generated@@270 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@314 ($generated@@8 ($generated@@268 $generated@@619))) ($generated@@270 ($generated@@314 ($generated@@8 $generated@@619))))
 :pattern ( ($generated@@314 ($generated@@8 ($generated@@268 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@314 ($generated@@270 $generated@@620)) ($generated@@270 ($generated@@314 $generated@@620)))
 :pattern ( ($generated@@314 ($generated@@270 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@297 (type $generated@@621))))
 (=> (and (= (type $generated@@621) ($generated@@296 $generated@@622)) (= ($generated@@295 $generated@@621) 0)) (= $generated@@621 ($generated@@294 $generated@@622))))
 :pattern ( ($generated@@295 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@624)))
 (=> (and (and (= (type $generated@@623) ($generated@@94 $generated@@626 $generated@@2)) (= (type $generated@@625) $generated@@2)) (<= 0 ($generated $generated@@625))) (= ($generated@@319 ($generated@@100 $generated@@623 $generated@@624 $generated@@625)) (+ (- ($generated@@319 $generated@@623) ($generated ($generated@@99 $generated@@623 $generated@@624))) ($generated $generated@@625)))))
 :pattern ( ($generated@@319 ($generated@@100 $generated@@623 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@628) $generated@@2)) ($generated@@92 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@92 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@630) $generated@@3)) ($generated@@92 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@92 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@632) $generated@@4)) ($generated@@92 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@92 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@634) $generated@@482)) ($generated@@92 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@92 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@636) $generated@@151)) ($generated@@92 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@92 $generated@@636 $generated@@48 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@296 $generated@@151)) (= (type $generated@@638) $generated@@69)) (= ($generated@@82 $generated@@637 ($generated@@525 $generated@@638)) (forall (($generated@@639 Int) ) (!  (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@295 $generated@@637))) ($generated@@244 ($generated@@526 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@526 $generated@@637 $generated@@639))
))))
 :pattern ( ($generated@@82 $generated@@637 ($generated@@525 $generated@@638)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 Int) ) (!  (=> (= (type $generated@@641) ($generated@@296 $generated@@151)) (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@295 $generated@@641))) (< ($generated@@568 ($generated@@366 $generated@@81 ($generated@@526 $generated@@641 $generated@@642))) ($generated@@640 $generated@@641))))
 :pattern ( ($generated@@568 ($generated@@366 $generated@@81 ($generated@@526 $generated@@641 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@643) $generated@@151) (= (type $generated@@644) $generated@@87)) (= (type $generated@@645) $generated@@81)) (= (type $generated@@646) $generated@@81)) (= $generated@@645 $generated@@646)) ($generated@@233 $generated@@643 ($generated@@86 $generated@@644) $generated@@645 $generated@@646))
 :pattern ( ($generated@@233 $generated@@643 ($generated@@86 $generated@@644) $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@327 $generated@@151 $generated@@151)) (= (type $generated@@648) $generated@@69)) (= (type $generated@@649) $generated@@69)) ($generated@@82 $generated@@647 ($generated@@442 $generated@@648 $generated@@649))) (and (and ($generated@@82 ($generated@@325 $generated@@647) ($generated@@258 $generated@@648)) ($generated@@82 ($generated@@379 $generated@@647) ($generated@@258 $generated@@649))) ($generated@@82 ($generated@@416 $generated@@647) ($generated@@258 ($generated@@159 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@82 $generated@@647 ($generated@@442 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@345 $generated@@151 $generated@@151)) (= (type $generated@@651) $generated@@69)) (= (type $generated@@652) $generated@@69)) ($generated@@82 $generated@@650 ($generated@@450 $generated@@651 $generated@@652))) (and (and ($generated@@82 ($generated@@343 $generated@@650) ($generated@@263 $generated@@651)) ($generated@@82 ($generated@@390 $generated@@650) ($generated@@263 $generated@@652))) ($generated@@82 ($generated@@424 $generated@@650) ($generated@@263 ($generated@@159 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@82 $generated@@650 ($generated@@450 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@82 $generated@@653 $generated@@46))
 :pattern ( ($generated@@82 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@82 $generated@@654 $generated@@47))
 :pattern ( ($generated@@82 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@82 $generated@@655 $generated@@44))
 :pattern ( ($generated@@82 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@482) ($generated@@82 $generated@@656 $generated@@45))
 :pattern ( ($generated@@82 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@151) ($generated@@82 $generated@@657 $generated@@48))
 :pattern ( ($generated@@82 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 (T@U) Bool)
(declare-fun $generated@@665 () Int)
(assert  (and (and (and (= (type $generated@@658) ($generated@@179 $generated@@95 $generated@@4)) (= (type $generated@@659) $generated@@95)) (= (type $generated@@660) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@662) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@666  (=> (= $generated@@658 ($generated@@178 $generated@@659 $generated@@660 $generated@@60 false)) (=> (and (= $generated@@661 ($generated@@80 $generated@@662)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@661 $generated@@663)))))
(let (($generated@@667  (=> (and ($generated@@280 $generated@@660) ($generated@@664 $generated@@660)) (=> (and (and (and ($generated@@82 $generated@@662 $generated@@241) ($generated@@92 $generated@@662 $generated@@241 $generated@@660)) (<= ($generated@@268 0) $generated@@663)) (and (and (<= ($generated@@268 0) $generated@@665) (= 2 $generated@@79)) (and (not (= $generated@@663 9)) (= (ControlFlow 0 3) 2)))) $generated@@666))))
$generated@@667)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@80) 11) (= (type $generated@@82) $generated@@68)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@83 T@U) ) (!  (=> (= (type $generated@@83) $generated@@80) ($generated@@81 ($generated@@8 ($generated@@79 $generated@@83)) $generated@@82))
 :pattern ( ($generated@@79 $generated@@83))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@86 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@86 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@71 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@71 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@85 $generated@@139)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
 :pattern ( ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
 :pattern ( ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@81 $generated@@144 ($generated@@85 0)))
 :pattern ( ($generated@@81 $generated@@144 ($generated@@85 0)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@80)) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@80) (= (type $generated@@159) $generated@@80)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@81 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@81 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@87 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@87) (= (type $generated@@215) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@87)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@80)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@68) (= (type $generated@@226) $generated@@68)) (= (type $generated@@227) $generated@@155)) (= (type $generated@@228) $generated@@155)) (= ($generated@@81 ($generated@@221 $generated@@227 $generated@@228) ($generated@@146 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@81 ($generated@@221 $generated@@227 $generated@@228) ($generated@@146 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@80) (= (type $generated@@230) $generated@@80)) (= ($generated@@152 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@152 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@68)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@234) $generated@@68)) (= ($generated@@81 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@155) ($generated@@0 ($generated@@91 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@91 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@81 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@68)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@239) $generated@@68)) (= ($generated@@81 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@155) ($generated@@0 ($generated@@91 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@91 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@81 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) $generated@@68)) (= (type $generated@@251) $generated@@155)) (= (type $generated@@252) $generated@@155)) (= (type $generated@@253) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@247 $generated@@253)) (= ($generated@@84 ($generated@@221 $generated@@251 $generated@@252) ($generated@@146 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@84 ($generated@@221 $generated@@251 $generated@@252) ($generated@@146 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@80) (= ($generated@@145 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@62)))
 :pattern ( ($generated@@145 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@80) ($generated@@145 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@155) (= (type $generated@@259) $generated@@155)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@145 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@2) (= ($generated@@81 $generated@@268 $generated@@82) (<= ($generated@@241 0) ($generated $generated@@268))))
 :pattern ( ($generated@@81 $generated@@268 $generated@@82))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@155)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@84 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@86 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@89 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@86 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@91 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@86 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@91 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@91 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@86 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@91 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@91 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@89 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@86 $generated@@317 $generated@@2)) (= ($generated@@161 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@91 $generated@@316 $generated@@318))) (<= ($generated ($generated@@91 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@91 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@161 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@155) ($generated@@222 $generated@@322 $generated@@82)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@322)) $generated@@322) ($generated@@81 ($generated@@319 $generated@@2 $generated@@322) $generated@@82)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@82))
)))
(assert (= (type $generated@@323) $generated@@68))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@155) ($generated@@222 $generated@@324 $generated@@323)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@324)) $generated@@324) ($generated@@81 ($generated@@319 $generated@@80 $generated@@324) $generated@@323)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@91 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@86 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@91 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@91 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@86 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@91 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@348) $generated@@80)) (and ($generated@@247 $generated@@347) ($generated@@84 $generated@@348 $generated@@323 $generated@@347))) ($generated@@84 ($generated@@8 ($generated@@79 $generated@@348)) $generated@@82 $generated@@347))
 :pattern ( ($generated@@79 $generated@@348) ($generated@@84 $generated@@348 $generated@@323 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@350) $generated@@68)) (= ($generated@@81 $generated@@349 ($generated@@160 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@91 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@81 $generated@@349 ($generated@@160 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@353) $generated@@68)) (= (type $generated@@354) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@155) ($generated@@0 ($generated@@91 $generated@@352 $generated@@355))) ($generated@@248 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@91 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@84 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@357) $generated@@68)) (= (type $generated@@358) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@155) ($generated@@0 ($generated@@91 $generated@@356 $generated@@359))) ($generated@@248 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@91 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@84 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@91 ($generated@@275 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@91 ($generated@@275 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@284 (type $generated@@365))))
(let (($generated@@367 ($generated@@283 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@86 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@369) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@91 ($generated@@280 $generated@@368) ($generated@@153 ($generated@@319 $generated@@80 $generated@@369)))) (= ($generated@@91 ($generated@@363 $generated@@368) ($generated@@153 ($generated@@319 $generated@@80 $generated@@369))) ($generated@@154 ($generated@@319 $generated@@80 $generated@@369))))))
 :pattern ( ($generated@@91 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@302 (type $generated@@373))))
(let (($generated@@375 ($generated@@301 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@86 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@377) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@91 ($generated@@298 $generated@@376) ($generated@@153 ($generated@@319 $generated@@80 $generated@@377)))) (= ($generated@@91 ($generated@@371 $generated@@376) ($generated@@153 ($generated@@319 $generated@@80 $generated@@377))) ($generated@@154 ($generated@@319 $generated@@80 $generated@@377))))))
 :pattern ( ($generated@@91 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@283 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@282 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@91 ($generated@@329 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@91 ($generated@@280 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@91 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@91 ($generated@@280 $generated@@378) $generated@@382))
 :pattern ( ($generated@@91 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@91 ($generated@@329 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@301 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@300 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@91 ($generated@@340 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@91 ($generated@@298 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@91 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@91 ($generated@@298 $generated@@383) $generated@@387))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@91 ($generated@@340 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@68)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) $generated@@68)) (= (type $generated@@394) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@280 $generated@@391) $generated@@395))) (and ($generated@@248 ($generated@@91 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@248 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@91 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@91 ($generated@@280 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@84 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@68)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@298 $generated@@399) $generated@@403))) (and ($generated@@248 ($generated@@91 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@248 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@91 ($generated@@298 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@84 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@86 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@302 (type $generated@@406))))
(let (($generated@@408 ($generated@@301 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@300 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@299 $generated@@408 $generated@@407)) (= ($generated@@298 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@298 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@302 (type $generated@@409))))
(let (($generated@@411 ($generated@@301 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@300 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@299 $generated@@411 $generated@@410)) (= ($generated@@340 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@340 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@302 (type $generated@@412))))
(let (($generated@@414 ($generated@@301 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@300 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@299 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@155))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@284 (type $generated@@415))))
(let (($generated@@417 ($generated@@283 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@282 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@281 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@155) (= (type $generated@@419) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@362 $generated@@415) ($generated@@269 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@302 (type $generated@@420))))
(let (($generated@@422 ($generated@@301 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@300 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@299 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@155) (= (type $generated@@424) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@370 $generated@@420) ($generated@@269 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@155) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@425)) $generated@@425) ($generated@@81 ($generated@@319 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@155) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@426)) $generated@@426) ($generated@@81 ($generated@@319 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@155) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@427)) $generated@@427) ($generated@@81 ($generated@@319 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@155) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@428 $generated@@429)) $generated@@429) ($generated@@81 ($generated@@319 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@68) (= ($generated@@222 ($generated@@269 $generated@@430) $generated@@431) ($generated@@81 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@269 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@89 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@86 $generated@@433 $generated@@2)) (<= 0 ($generated@@274 $generated@@432))))
 :pattern ( ($generated@@274 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@263 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@262 $generated@@435)) (<= 0 ($generated@@261 $generated@@434))))
 :pattern ( ($generated@@261 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@68) (= (type $generated@@439) $generated@@68)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@68) (= (type $generated@@443) $generated@@68)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@68) (= (type $generated@@445) $generated@@68)) (= ($generated@@76 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@68) (= (type $generated@@449) $generated@@68)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@76 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@155) (= (type $generated@@457) $generated@@155)) (= ($generated@@254 ($generated@@221 $generated@@456 $generated@@457)) $generated@@62))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@146 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@146 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@146 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@146 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@155) (= (type $generated@@467) $generated@@155)) (= ($generated@@153 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@155) (= (type $generated@@469) $generated@@155)) (= ($generated@@154 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@263 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@262 $generated@@155)) (= (type $generated@@477) $generated@@68)) (= (type $generated@@478) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@261 $generated@@476))) ($generated@@248 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@84 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@85 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@85 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@68) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@76 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@68) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@68) (= ($generated@@76 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@490 ($generated@@160 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@160 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@76 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@319 $generated@@499 ($generated@@269 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@269 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) $generated@@68)) (= ($generated@@81 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@280 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@91 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@91 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@91 ($generated@@280 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@81 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) $generated@@68)) (= ($generated@@81 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@298 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@91 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@91 ($generated@@298 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@81 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@155) (= (type $generated@@511) $generated@@155)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@155) (= (type $generated@@513) $generated@@155)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@155) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) $generated@@68)) ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@514)) $generated@@514) ($generated@@81 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@155) (= (type $generated@@518) $generated@@68)) (= (type $generated@@519) $generated@@68)) ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@517)) $generated@@517) ($generated@@81 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) $generated@@155)) ($generated@@222 $generated@@522 ($generated@@146 $generated@@520 $generated@@521))) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@522)) $generated@@522) ($generated@@81 ($generated@@319 $generated@@80 $generated@@522) ($generated@@146 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@146 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@91 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@91 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@73)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (and (= ($generated@@76 ($generated@@146 $generated@@527 $generated@@528)) $generated@@63) (= ($generated@@525 ($generated@@146 $generated@@527 $generated@@528)) $generated@@66)))
 :pattern ( ($generated@@146 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@80) (= ($generated@@508 ($generated@@269 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@269 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@155) ($generated@@222 $generated@@530 ($generated@@85 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@530)) $generated@@530) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@530) ($generated@@85 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@85 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@155) (= (type $generated@@532) $generated@@68)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@269 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@531)) $generated@@531) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@155) (= (type $generated@@534) $generated@@68)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@269 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@533)) $generated@@533) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@155) (= (type $generated@@536) $generated@@68)) ($generated@@222 $generated@@535 ($generated@@160 $generated@@536))) (and (= ($generated@@269 ($generated@@319 ($generated@@86 $generated@@155 $generated@@2) $generated@@535)) $generated@@535) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@2) $generated@@535) ($generated@@160 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@160 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@269 ($generated@@319 ($generated@@262 $generated@@155) $generated@@537)) $generated@@537) ($generated@@81 ($generated@@319 ($generated@@262 $generated@@155) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@76 $generated@@82) $generated@@61))
(assert (= ($generated@@525 $generated@@82) $generated@@65))
(assert (= ($generated@@76 $generated@@323) $generated@@64))
(assert (= ($generated@@525 $generated@@323) $generated@@67))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@539 ($generated@@160 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@539 $generated@@542)))) ($generated@@248 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@91 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@84 $generated@@539 ($generated@@160 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@80) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@247 $generated@@545) (and ($generated@@145 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@68) ($generated@@84 $generated@@543 ($generated@@146 $generated@@544 $generated@@546) $generated@@545))
 :pattern ( ($generated@@84 $generated@@543 ($generated@@146 $generated@@544 $generated@@546) $generated@@545))
))))) ($generated@@248 ($generated@@153 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@248 ($generated@@153 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@80) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@247 $generated@@549) (and ($generated@@145 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@68) ($generated@@84 $generated@@547 ($generated@@146 $generated@@550 $generated@@548) $generated@@549))
 :pattern ( ($generated@@84 $generated@@547 ($generated@@146 $generated@@550 $generated@@548) $generated@@549))
))))) ($generated@@248 ($generated@@154 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@248 ($generated@@154 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@155)) (= ($generated@@221 ($generated@@243 $generated@@551) ($generated@@243 $generated@@552)) ($generated@@243 ($generated@@221 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@551) ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@269 ($generated@@8 ($generated@@241 $generated@@553))) ($generated@@243 ($generated@@269 ($generated@@8 $generated@@553))))
 :pattern ( ($generated@@269 ($generated@@8 ($generated@@241 $generated@@553))))
)))
(assert (forall (($generated@@554 T@U) ) (! (= ($generated@@269 ($generated@@243 $generated@@554)) ($generated@@243 ($generated@@269 $generated@@554)))
 :pattern ( ($generated@@269 ($generated@@243 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@263 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@262 $generated@@556)) (= ($generated@@261 $generated@@555) 0)) (= $generated@@555 ($generated@@260 $generated@@556))))
 :pattern ( ($generated@@261 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@558)))
 (=> (and (and (= (type $generated@@557) ($generated@@86 $generated@@560 $generated@@2)) (= (type $generated@@559) $generated@@2)) (<= 0 ($generated $generated@@559))) (= ($generated@@274 ($generated@@92 $generated@@557 $generated@@558 $generated@@559)) (+ (- ($generated@@274 $generated@@557) ($generated ($generated@@91 $generated@@557 $generated@@558))) ($generated $generated@@559)))))
 :pattern ( ($generated@@274 ($generated@@92 $generated@@557 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@562) $generated@@2)) ($generated@@84 $generated@@562 $generated@@46 $generated@@561))
 :pattern ( ($generated@@84 $generated@@562 $generated@@46 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@564) $generated@@3)) ($generated@@84 $generated@@564 $generated@@47 $generated@@563))
 :pattern ( ($generated@@84 $generated@@564 $generated@@47 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@566) $generated@@4)) ($generated@@84 $generated@@566 $generated@@44 $generated@@565))
 :pattern ( ($generated@@84 $generated@@566 $generated@@44 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@568) $generated@@428)) ($generated@@84 $generated@@568 $generated@@45 $generated@@567))
 :pattern ( ($generated@@84 $generated@@568 $generated@@45 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@570) $generated@@155)) ($generated@@84 $generated@@570 $generated@@48 $generated@@569))
 :pattern ( ($generated@@84 $generated@@570 $generated@@48 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@262 $generated@@155)) (= (type $generated@@572) $generated@@68)) (= ($generated@@81 $generated@@571 ($generated@@470 $generated@@572)) (forall (($generated@@573 Int) ) (!  (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@261 $generated@@571))) ($generated@@222 ($generated@@471 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@471 $generated@@571 $generated@@573))
))))
 :pattern ( ($generated@@81 $generated@@571 ($generated@@470 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (= (type $generated@@575) ($generated@@262 $generated@@155)) (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@261 $generated@@575))) (< ($generated@@509 ($generated@@319 $generated@@80 ($generated@@471 $generated@@575 $generated@@576))) ($generated@@574 $generated@@575))))
 :pattern ( ($generated@@509 ($generated@@319 $generated@@80 ($generated@@471 $generated@@575 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) ($generated@@81 $generated@@577 ($generated@@388 $generated@@578 $generated@@579))) (and (and ($generated@@81 ($generated@@280 $generated@@577) ($generated@@231 $generated@@578)) ($generated@@81 ($generated@@329 $generated@@577) ($generated@@231 $generated@@579))) ($generated@@81 ($generated@@362 $generated@@577) ($generated@@231 ($generated@@146 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@81 $generated@@577 ($generated@@388 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) ($generated@@81 $generated@@580 ($generated@@396 $generated@@581 $generated@@582))) (and (and ($generated@@81 ($generated@@298 $generated@@580) ($generated@@236 $generated@@581)) ($generated@@81 ($generated@@340 $generated@@580) ($generated@@236 $generated@@582))) ($generated@@81 ($generated@@370 $generated@@580) ($generated@@236 ($generated@@146 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@81 $generated@@580 ($generated@@396 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) ($generated@@81 $generated@@583 $generated@@46))
 :pattern ( ($generated@@81 $generated@@583 $generated@@46))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@3) ($generated@@81 $generated@@584 $generated@@47))
 :pattern ( ($generated@@81 $generated@@584 $generated@@47))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@4) ($generated@@81 $generated@@585 $generated@@44))
 :pattern ( ($generated@@81 $generated@@585 $generated@@44))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@428) ($generated@@81 $generated@@586 $generated@@45))
 :pattern ( ($generated@@81 $generated@@586 $generated@@45))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@155) ($generated@@81 $generated@@587 $generated@@48))
 :pattern ( ($generated@@81 $generated@@587 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 (T@U) Bool)
(declare-fun $generated@@595 () Int)
(assert  (and (and (and (= (type $generated@@588) ($generated@@167 $generated@@87 $generated@@4)) (= (type $generated@@589) $generated@@87)) (= (type $generated@@590) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@592) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@596  (=> (= $generated@@588 ($generated@@166 $generated@@589 $generated@@590 $generated@@60 false)) (=> (and (= $generated@@591 ($generated@@79 $generated@@592)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@591 $generated@@593)))))
(let (($generated@@597  (=> (and ($generated@@247 $generated@@590) ($generated@@594 $generated@@590)) (=> (and (and (and ($generated@@81 $generated@@592 $generated@@323) ($generated@@84 $generated@@592 $generated@@323 $generated@@590)) (<= ($generated@@241 0) $generated@@593)) (and (and (<= ($generated@@241 0) $generated@@595) (= 2 $generated@@78)) (and (not (= $generated@@593 9)) (= (ControlFlow 0 3) 2)))) $generated@@596))))
$generated@@597)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (Int) Int)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@T) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@T T@T) T@U)
(declare-fun $generated@@280 (T@T T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 () T@U)
(declare-fun $generated@@320 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@T) T@U)
(declare-fun $generated@@425 () T@T)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U Int) T@U)
(declare-fun $generated@@477 (T@U) Int)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@78) 11) (= (type $generated@@80) $generated@@66)))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@81 T@U) ) (!  (=> (= (type $generated@@81) $generated@@78) ($generated@@79 ($generated@@8 ($generated@@77 $generated@@81)) $generated@@80))
 :pattern ( ($generated@@77 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@69 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@69 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@66)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@140 $generated@@80 $generated@@141))
 :pattern ( ($generated@@82 $generated@@140 $generated@@80 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@79 $generated@@142 ($generated@@83 0)))
 :pattern ( ($generated@@79 $generated@@142 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@79 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@79 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@78)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@78)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@162) $generated@@66)) ($generated@@79 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@79 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@85 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@69 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@85) (= (type $generated@@213) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@214) ($generated@@68 $generated@@4))) (= (type $generated@@216) $generated@@85)) (= (type $generated@@217) ($generated@@68 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@221 $generated@@222)) $generated@@145)
 :pattern ( ($generated@@219 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@223) $generated@@66) (= (type $generated@@224) $generated@@66)) (= (type $generated@@225) $generated@@78)) (= (type $generated@@226) $generated@@78)) (= ($generated@@79 ($generated@@219 $generated@@225 $generated@@226) ($generated@@144 $generated@@223 $generated@@224))  (and ($generated@@220 $generated@@225 $generated@@223) ($generated@@220 $generated@@226 $generated@@224))))
 :pattern ( ($generated@@79 ($generated@@219 $generated@@225 $generated@@226) ($generated@@144 $generated@@223 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@145) (= (type $generated@@228) $generated@@145)) (= ($generated@@151 $generated@@227 $generated@@228) (= $generated@@227 $generated@@228)))
 :pattern ( ($generated@@151 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@66)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@232) $generated@@66)) (= ($generated@@79 $generated@@231 ($generated@@229 $generated@@232)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@78) ($generated@@0 ($generated@@89 $generated@@231 $generated@@233))) ($generated@@220 $generated@@233 $generated@@232))
 :pattern ( ($generated@@89 $generated@@231 $generated@@233))
))))
 :pattern ( ($generated@@79 $generated@@231 ($generated@@229 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@66)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@237) $generated@@66)) (= ($generated@@79 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@78) ($generated@@0 ($generated@@89 $generated@@236 $generated@@238))) ($generated@@220 $generated@@238 $generated@@237))
 :pattern ( ($generated@@89 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@79 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 Int) ) (! (= ($generated@@239 $generated@@240) $generated@@240)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@66) (= (type $generated@@248) $generated@@66)) (= (type $generated@@249) $generated@@78)) (= (type $generated@@250) $generated@@78)) (= (type $generated@@251) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@245 $generated@@251)) (= ($generated@@82 ($generated@@219 $generated@@249 $generated@@250) ($generated@@144 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@82 ($generated@@219 $generated@@249 $generated@@250) ($generated@@144 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@145) (= ($generated@@143 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@145) ($generated@@143 $generated@@255)) (exists (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (and (and (= (type $generated@@256) $generated@@78) (= (type $generated@@257) $generated@@78)) (= $generated@@255 ($generated@@219 $generated@@256 $generated@@257)))
 :no-pattern (type $generated@@256)
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@262)) 17)) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@T) ) (! (= (type ($generated@@258 $generated@@264)) ($generated@@260 $generated@@264))
 :pattern ( ($generated@@258 $generated@@264))
))))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@265)) 0)
 :pattern ( ($generated@@258 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@2) (= ($generated@@79 $generated@@266 $generated@@80) (<= ($generated@@239 0) ($generated $generated@@266))))
 :pattern ( ($generated@@79 $generated@@266 $generated@@80))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@78)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@246 ($generated@@267 $generated@@269) $generated@@270 $generated@@271) ($generated@@82 $generated@@269 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@246 ($generated@@267 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@274 T@T) ) (! (= (type ($generated@@273 $generated@@274)) ($generated@@84 $generated@@274 $generated@@2))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@87 (type $generated@@275))))
 (=> (= (type $generated@@275) ($generated@@84 $generated@@276 $generated@@2)) (and (= (= ($generated@@272 $generated@@275) 0) (= $generated@@275 ($generated@@273 $generated@@276))) (=> (not (= ($generated@@272 $generated@@275) 0)) (exists (($generated@@277 T@U) ) (!  (and (= (type $generated@@277) $generated@@276) (< 0 ($generated ($generated@@89 $generated@@275 $generated@@277))))
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
))))))
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert  (and (and (and (and (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@283 $generated@@284)) 18)) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@285 $generated@@286)) $generated@@285)
 :pattern ( ($generated@@280 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@280 $generated@@287 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@280 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@281 (type $generated@@289))))
(= (type ($generated@@278 $generated@@289)) ($generated@@84 $generated@@290 $generated@@4)))
 :pattern ( ($generated@@278 $generated@@289))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= (type ($generated@@279 $generated@@291 $generated@@292)) ($generated@@280 $generated@@291 $generated@@292))
 :pattern ( ($generated@@279 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@T) ) (! (let (($generated@@295 (type $generated@@293)))
 (not ($generated@@0 ($generated@@89 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293))))
 :pattern ( (let (($generated@@295 (type $generated@@293)))
($generated@@89 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293)))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 19)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@84 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@89 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@89 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert (= (type $generated@@314) $generated@@66))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@315) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@316) $generated@@78)) (and ($generated@@245 $generated@@315) ($generated@@246 $generated@@316 $generated@@314 $generated@@315))) ($generated@@82 ($generated@@8 ($generated@@77 $generated@@316)) $generated@@80 $generated@@315))
 :pattern ( ($generated@@77 $generated@@316) ($generated@@246 $generated@@316 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@87 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@84 $generated@@318 $generated@@2)) (= ($generated@@159 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@89 $generated@@317 $generated@@319))) (<= ($generated ($generated@@89 $generated@@317 $generated@@319)) ($generated@@272 $generated@@317))))
 :pattern ( ($generated@@89 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@159 $generated@@317))
)))
(assert (forall (($generated@@321 T@T) ($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@320 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@78) ($generated@@220 $generated@@323 $generated@@80)) (and (= ($generated@@267 ($generated@@320 $generated@@2 $generated@@323)) $generated@@323) ($generated@@79 ($generated@@320 $generated@@2 $generated@@323) $generated@@80)))
 :pattern ( ($generated@@220 $generated@@323 $generated@@80))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@282 (type $generated@@324))))
(let (($generated@@326 ($generated@@281 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@280 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@279 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@89 ($generated@@278 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@278 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@282 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@282 (type $generated@@331))))
(let (($generated@@333 ($generated@@281 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@280 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@279 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@89 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@300 (type $generated@@335))))
(let (($generated@@337 ($generated@@299 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@298 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@297 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@89 ($generated@@296 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@296 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@300 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@84 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@300 (type $generated@@342))))
(let (($generated@@344 ($generated@@299 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@298 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@297 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@89 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@347) $generated@@66)) (= ($generated@@79 $generated@@346 ($generated@@158 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@346 $generated@@348)))) ($generated@@220 $generated@@348 $generated@@347))
 :pattern ( ($generated@@89 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@79 $generated@@346 ($generated@@158 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@350) $generated@@66)) (= (type $generated@@351) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@349 ($generated@@229 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@78) ($generated@@0 ($generated@@89 $generated@@349 $generated@@352))) ($generated@@246 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@89 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@82 $generated@@349 ($generated@@229 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@354) $generated@@66)) (= (type $generated@@355) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@353 ($generated@@234 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@78) ($generated@@0 ($generated@@89 $generated@@353 $generated@@356))) ($generated@@246 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@89 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@82 $generated@@353 ($generated@@234 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@89 ($generated@@273 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@89 ($generated@@273 $generated@@358) $generated@@357)))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@282 (type $generated@@362))))
(let (($generated@@364 ($generated@@281 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@84 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@280 $generated@@78 $generated@@78)) (= (type $generated@@366) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@89 ($generated@@278 $generated@@365) ($generated@@152 ($generated@@320 $generated@@145 $generated@@366)))) (= ($generated@@89 ($generated@@360 $generated@@365) ($generated@@152 ($generated@@320 $generated@@145 $generated@@366))) ($generated@@153 ($generated@@320 $generated@@145 $generated@@366))))))
 :pattern ( ($generated@@89 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@300 (type $generated@@370))))
(let (($generated@@372 ($generated@@299 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@84 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@298 $generated@@78 $generated@@78)) (= (type $generated@@374) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@89 ($generated@@296 $generated@@373) ($generated@@152 ($generated@@320 $generated@@145 $generated@@374)))) (= ($generated@@89 ($generated@@368 $generated@@373) ($generated@@152 ($generated@@320 $generated@@145 $generated@@374))) ($generated@@153 ($generated@@320 $generated@@145 $generated@@374))))))
 :pattern ( ($generated@@89 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@281 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@280 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@89 ($generated@@328 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@89 ($generated@@278 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@89 ($generated@@360 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@89 ($generated@@278 $generated@@375) $generated@@379))
 :pattern ( ($generated@@89 ($generated@@360 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@89 ($generated@@328 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@299 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@298 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@89 ($generated@@339 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@89 ($generated@@296 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@89 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@89 ($generated@@296 $generated@@380) $generated@@384))
 :pattern ( ($generated@@89 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@89 ($generated@@339 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@66)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@280 $generated@@78 $generated@@78)) (= (type $generated@@389) $generated@@66)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@278 $generated@@388) $generated@@392))) (and ($generated@@246 ($generated@@89 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@246 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@89 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@89 ($generated@@278 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@82 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@298 $generated@@78 $generated@@78)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@296 $generated@@396) $generated@@400))) (and ($generated@@246 ($generated@@89 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@246 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@89 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@89 ($generated@@296 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@82 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@T) ) (! (= (type ($generated@@401 $generated@@402)) ($generated@@84 $generated@@402 $generated@@4))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@300 (type $generated@@403))))
(let (($generated@@405 ($generated@@299 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@298 $generated@@405 $generated@@404)) (= (= $generated@@403 ($generated@@297 $generated@@405 $generated@@404)) (= ($generated@@296 $generated@@403) ($generated@@401 $generated@@405))))))
 :pattern ( ($generated@@296 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@300 (type $generated@@406))))
(let (($generated@@408 ($generated@@299 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@298 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@297 $generated@@408 $generated@@407)) (= ($generated@@339 $generated@@406) ($generated@@401 $generated@@407))))))
 :pattern ( ($generated@@339 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@300 (type $generated@@409))))
(let (($generated@@411 ($generated@@299 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@298 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@297 $generated@@411 $generated@@410)) (= ($generated@@367 $generated@@409) ($generated@@401 $generated@@78))))))
 :pattern ( ($generated@@367 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@282 (type $generated@@412))))
(let (($generated@@414 ($generated@@281 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@280 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@279 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@78) (= (type $generated@@416) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@359 $generated@@412) ($generated@@267 ($generated@@219 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@300 (type $generated@@417))))
(let (($generated@@419 ($generated@@299 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@298 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@297 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@78) (= (type $generated@@421) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@367 $generated@@417) ($generated@@267 ($generated@@219 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@367 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@78) ($generated@@220 $generated@@422 $generated@@46)) (and (= ($generated@@267 ($generated@@320 $generated@@2 $generated@@422)) $generated@@422) ($generated@@79 ($generated@@320 $generated@@2 $generated@@422) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@422 $generated@@46))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@78) ($generated@@220 $generated@@423 $generated@@47)) (and (= ($generated@@267 ($generated@@320 $generated@@3 $generated@@423)) $generated@@423) ($generated@@79 ($generated@@320 $generated@@3 $generated@@423) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@423 $generated@@47))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@78) ($generated@@220 $generated@@424 $generated@@44)) (and (= ($generated@@267 ($generated@@320 $generated@@4 $generated@@424)) $generated@@424) ($generated@@79 ($generated@@320 $generated@@4 $generated@@424) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@424 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@425) 20))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@78) ($generated@@220 $generated@@426 $generated@@45)) (and (= ($generated@@267 ($generated@@320 $generated@@425 $generated@@426)) $generated@@426) ($generated@@79 ($generated@@320 $generated@@425 $generated@@426) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@426 $generated@@45))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@66) (= ($generated@@220 ($generated@@267 $generated@@427) $generated@@428) ($generated@@79 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@220 ($generated@@267 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@87 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@84 $generated@@430 $generated@@2)) (<= 0 ($generated@@272 $generated@@429))))
 :pattern ( ($generated@@272 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@261 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@260 $generated@@432)) (<= 0 ($generated@@259 $generated@@431))))
 :pattern ( ($generated@@259 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@66)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@66) (= (type $generated@@436) $generated@@66)) (= ($generated@@433 ($generated@@385 $generated@@435 $generated@@436)) $generated@@435))
 :pattern ( ($generated@@385 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@66) (= (type $generated@@440) $generated@@66)) (= ($generated@@437 ($generated@@385 $generated@@439 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@385 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@66) (= (type $generated@@442) $generated@@66)) (= ($generated@@74 ($generated@@385 $generated@@441 $generated@@442)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@66)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@443 ($generated@@393 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@393 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@451 $generated@@452)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@78) (= (type $generated@@454) $generated@@78)) (= ($generated@@252 ($generated@@219 $generated@@453 $generated@@454)) $generated@@62))
 :pattern ( ($generated@@219 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@144 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@144 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@144 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@144 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@78) (= (type $generated@@464) $generated@@78)) (= ($generated@@152 ($generated@@219 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@219 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@78) (= (type $generated@@466) $generated@@78)) (= ($generated@@153 ($generated@@219 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@219 $generated@@465 $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ($generated@@471 Int) ) (! (let (($generated@@472 ($generated@@261 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470 $generated@@471)) $generated@@472))
 :pattern ( ($generated@@468 $generated@@470 $generated@@471))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@260 $generated@@78)) (= (type $generated@@474) $generated@@66)) (= (type $generated@@475) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@473 ($generated@@467 $generated@@474) $generated@@475) (forall (($generated@@476 Int) ) (!  (=> (and (<= 0 $generated@@476) (< $generated@@476 ($generated@@259 $generated@@473))) ($generated@@246 ($generated@@468 $generated@@473 $generated@@476) $generated@@474 $generated@@475))
 :pattern ( ($generated@@468 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@82 $generated@@473 ($generated@@467 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 Int) ) (! (= ($generated@@477 ($generated@@83 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@83 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@66) (= ($generated@@479 ($generated@@229 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@229 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@66) (= ($generated@@74 ($generated@@229 $generated@@482)) $generated@@54))
 :pattern ( ($generated@@229 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@66) (= ($generated@@483 ($generated@@234 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@234 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@66) (= ($generated@@74 ($generated@@234 $generated@@486)) $generated@@55))
 :pattern ( ($generated@@234 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@158 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@158 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@158 $generated@@490)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@467 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@467 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@467 $generated@@494)) $generated@@57))
 :pattern ( ($generated@@467 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(= ($generated@@320 $generated@@496 ($generated@@267 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@267 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@280 $generated@@78 $generated@@78)) (= (type $generated@@498) $generated@@66)) (= (type $generated@@499) $generated@@66)) (= ($generated@@79 $generated@@497 ($generated@@385 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@278 $generated@@497) $generated@@500))) (and ($generated@@220 ($generated@@89 ($generated@@360 $generated@@497) $generated@@500) $generated@@499) ($generated@@220 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@89 ($generated@@360 $generated@@497) $generated@@500))
 :pattern ( ($generated@@89 ($generated@@278 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@79 $generated@@497 ($generated@@385 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@298 $generated@@78 $generated@@78)) (= (type $generated@@502) $generated@@66)) (= (type $generated@@503) $generated@@66)) (= ($generated@@79 $generated@@501 ($generated@@393 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@296 $generated@@501) $generated@@504))) (and ($generated@@220 ($generated@@89 ($generated@@368 $generated@@501) $generated@@504) $generated@@503) ($generated@@220 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@89 ($generated@@368 $generated@@501) $generated@@504))
 :pattern ( ($generated@@89 ($generated@@296 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@79 $generated@@501 ($generated@@393 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@78) (= (type $generated@@508) $generated@@78)) (< ($generated@@505 $generated@@507) ($generated@@506 ($generated@@219 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@219 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@78) (= (type $generated@@510) $generated@@78)) (< ($generated@@505 $generated@@510) ($generated@@506 ($generated@@219 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@219 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@78) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@66)) ($generated@@220 $generated@@511 ($generated@@385 $generated@@512 $generated@@513))) (and (= ($generated@@267 ($generated@@320 ($generated@@280 $generated@@78 $generated@@78) $generated@@511)) $generated@@511) ($generated@@79 ($generated@@320 ($generated@@280 $generated@@78 $generated@@78) $generated@@511) ($generated@@385 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@220 $generated@@511 ($generated@@385 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@78) (= (type $generated@@515) $generated@@66)) (= (type $generated@@516) $generated@@66)) ($generated@@220 $generated@@514 ($generated@@393 $generated@@515 $generated@@516))) (and (= ($generated@@267 ($generated@@320 ($generated@@298 $generated@@78 $generated@@78) $generated@@514)) $generated@@514) ($generated@@79 ($generated@@320 ($generated@@298 $generated@@78 $generated@@78) $generated@@514) ($generated@@393 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@220 $generated@@514 ($generated@@393 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) $generated@@78)) ($generated@@220 $generated@@519 ($generated@@144 $generated@@517 $generated@@518))) (and (= ($generated@@267 ($generated@@320 $generated@@145 $generated@@519)) $generated@@519) ($generated@@79 ($generated@@320 $generated@@145 $generated@@519) ($generated@@144 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@220 $generated@@519 ($generated@@144 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
 (not ($generated@@0 ($generated@@89 ($generated@@401 $generated@@521) $generated@@520))))
 :pattern ( (let (($generated@@521 (type $generated@@520)))
($generated@@89 ($generated@@401 $generated@@521) $generated@@520)))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@71)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@66) (= (type $generated@@525) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@524 $generated@@525)) $generated@@63) (= ($generated@@522 ($generated@@144 $generated@@524 $generated@@525)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@145) (= ($generated@@505 ($generated@@267 $generated@@526)) ($generated@@506 $generated@@526)))
 :pattern ( ($generated@@505 ($generated@@267 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@78) ($generated@@220 $generated@@527 ($generated@@83 0))) (and (= ($generated@@267 ($generated@@320 $generated@@2 $generated@@527)) $generated@@527) ($generated@@79 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@527) ($generated@@83 0))))
 :pattern ( ($generated@@220 $generated@@527 ($generated@@83 0)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@78) (= (type $generated@@529) $generated@@66)) ($generated@@220 $generated@@528 ($generated@@229 $generated@@529))) (and (= ($generated@@267 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@528)) $generated@@528) ($generated@@79 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@528) ($generated@@229 $generated@@529))))
 :pattern ( ($generated@@220 $generated@@528 ($generated@@229 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@78) (= (type $generated@@531) $generated@@66)) ($generated@@220 $generated@@530 ($generated@@234 $generated@@531))) (and (= ($generated@@267 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@530)) $generated@@530) ($generated@@79 ($generated@@320 ($generated@@84 $generated@@78 $generated@@4) $generated@@530) ($generated@@234 $generated@@531))))
 :pattern ( ($generated@@220 $generated@@530 ($generated@@234 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@78) (= (type $generated@@533) $generated@@66)) ($generated@@220 $generated@@532 ($generated@@158 $generated@@533))) (and (= ($generated@@267 ($generated@@320 ($generated@@84 $generated@@78 $generated@@2) $generated@@532)) $generated@@532) ($generated@@79 ($generated@@320 ($generated@@84 $generated@@78 $generated@@2) $generated@@532) ($generated@@158 $generated@@533))))
 :pattern ( ($generated@@220 $generated@@532 ($generated@@158 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@78) (= (type $generated@@535) $generated@@66)) ($generated@@220 $generated@@534 ($generated@@467 $generated@@535))) (and (= ($generated@@267 ($generated@@320 ($generated@@260 $generated@@78) $generated@@534)) $generated@@534) ($generated@@79 ($generated@@320 ($generated@@260 $generated@@78) $generated@@534) ($generated@@467 $generated@@535))))
 :pattern ( ($generated@@220 $generated@@534 ($generated@@467 $generated@@535)))
)))
(assert (= ($generated@@74 $generated@@80) $generated@@61))
(assert (= ($generated@@522 $generated@@80) $generated@@64))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@536 ($generated@@158 $generated@@537) $generated@@538) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@536 $generated@@539)))) ($generated@@246 $generated@@539 $generated@@537 $generated@@538))
 :pattern ( ($generated@@89 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@82 $generated@@536 ($generated@@158 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@245 $generated@@542) (and ($generated@@143 $generated@@540) (exists (($generated@@543 T@U) ) (!  (and (= (type $generated@@543) $generated@@66) ($generated@@82 $generated@@540 ($generated@@144 $generated@@541 $generated@@543) $generated@@542))
 :pattern ( ($generated@@82 $generated@@540 ($generated@@144 $generated@@541 $generated@@543) $generated@@542))
))))) ($generated@@246 ($generated@@152 $generated@@540) $generated@@541 $generated@@542))
 :pattern ( ($generated@@246 ($generated@@152 $generated@@540) $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@245 $generated@@546) (and ($generated@@143 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@66) ($generated@@82 $generated@@544 ($generated@@144 $generated@@547 $generated@@545) $generated@@546))
 :pattern ( ($generated@@82 $generated@@544 ($generated@@144 $generated@@547 $generated@@545) $generated@@546))
))))) ($generated@@246 ($generated@@153 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@246 ($generated@@153 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@78) (= (type $generated@@549) $generated@@78)) (= ($generated@@219 ($generated@@241 $generated@@548) ($generated@@241 $generated@@549)) ($generated@@241 ($generated@@219 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@219 ($generated@@241 $generated@@548) ($generated@@241 $generated@@549)))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@267 ($generated@@8 ($generated@@239 $generated@@550))) ($generated@@241 ($generated@@267 ($generated@@8 $generated@@550))))
 :pattern ( ($generated@@267 ($generated@@8 ($generated@@239 $generated@@550))))
)))
(assert (forall (($generated@@551 T@U) ) (! (= ($generated@@267 ($generated@@241 $generated@@551)) ($generated@@241 ($generated@@267 $generated@@551)))
 :pattern ( ($generated@@267 ($generated@@241 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@261 (type $generated@@552))))
 (=> (and (= (type $generated@@552) ($generated@@260 $generated@@553)) (= ($generated@@259 $generated@@552) 0)) (= $generated@@552 ($generated@@258 $generated@@553))))
 :pattern ( ($generated@@259 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@555)))
 (=> (and (and (= (type $generated@@554) ($generated@@84 $generated@@557 $generated@@2)) (= (type $generated@@556) $generated@@2)) (<= 0 ($generated $generated@@556))) (= ($generated@@272 ($generated@@90 $generated@@554 $generated@@555 $generated@@556)) (+ (- ($generated@@272 $generated@@554) ($generated ($generated@@89 $generated@@554 $generated@@555))) ($generated $generated@@556)))))
 :pattern ( ($generated@@272 ($generated@@90 $generated@@554 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@559) $generated@@2)) ($generated@@82 $generated@@559 $generated@@46 $generated@@558))
 :pattern ( ($generated@@82 $generated@@559 $generated@@46 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@561) $generated@@3)) ($generated@@82 $generated@@561 $generated@@47 $generated@@560))
 :pattern ( ($generated@@82 $generated@@561 $generated@@47 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@563) $generated@@4)) ($generated@@82 $generated@@563 $generated@@44 $generated@@562))
 :pattern ( ($generated@@82 $generated@@563 $generated@@44 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@565) $generated@@425)) ($generated@@82 $generated@@565 $generated@@45 $generated@@564))
 :pattern ( ($generated@@82 $generated@@565 $generated@@45 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@567) $generated@@78)) ($generated@@82 $generated@@567 $generated@@48 $generated@@566))
 :pattern ( ($generated@@82 $generated@@567 $generated@@48 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@260 $generated@@78)) (= (type $generated@@569) $generated@@66)) (= ($generated@@79 $generated@@568 ($generated@@467 $generated@@569)) (forall (($generated@@570 Int) ) (!  (=> (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@259 $generated@@568))) ($generated@@220 ($generated@@468 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@468 $generated@@568 $generated@@570))
))))
 :pattern ( ($generated@@79 $generated@@568 ($generated@@467 $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 Int) ) (!  (=> (= (type $generated@@572) ($generated@@260 $generated@@78)) (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@259 $generated@@572))) (< ($generated@@506 ($generated@@320 $generated@@145 ($generated@@468 $generated@@572 $generated@@573))) ($generated@@571 $generated@@572))))
 :pattern ( ($generated@@506 ($generated@@320 $generated@@145 ($generated@@468 $generated@@572 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) ($generated@@280 $generated@@78 $generated@@78)) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) $generated@@66)) ($generated@@79 $generated@@574 ($generated@@385 $generated@@575 $generated@@576))) (and (and ($generated@@79 ($generated@@278 $generated@@574) ($generated@@229 $generated@@575)) ($generated@@79 ($generated@@328 $generated@@574) ($generated@@229 $generated@@576))) ($generated@@79 ($generated@@359 $generated@@574) ($generated@@229 ($generated@@144 $generated@@575 $generated@@576)))))
 :pattern ( ($generated@@79 $generated@@574 ($generated@@385 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@298 $generated@@78 $generated@@78)) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) $generated@@66)) ($generated@@79 $generated@@577 ($generated@@393 $generated@@578 $generated@@579))) (and (and ($generated@@79 ($generated@@296 $generated@@577) ($generated@@234 $generated@@578)) ($generated@@79 ($generated@@339 $generated@@577) ($generated@@234 $generated@@579))) ($generated@@79 ($generated@@367 $generated@@577) ($generated@@234 ($generated@@144 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@79 $generated@@577 ($generated@@393 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@2) ($generated@@79 $generated@@580 $generated@@46))
 :pattern ( ($generated@@79 $generated@@580 $generated@@46))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@3) ($generated@@79 $generated@@581 $generated@@47))
 :pattern ( ($generated@@79 $generated@@581 $generated@@47))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@4) ($generated@@79 $generated@@582 $generated@@44))
 :pattern ( ($generated@@79 $generated@@582 $generated@@44))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@425) ($generated@@79 $generated@@583 $generated@@45))
 :pattern ( ($generated@@79 $generated@@583 $generated@@45))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@78) ($generated@@79 $generated@@584 $generated@@48))
 :pattern ( ($generated@@79 $generated@@584 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () Int)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 (T@U) Bool)
(declare-fun $generated@@592 () Int)
(assert  (and (and (and (= (type $generated@@585) ($generated@@165 $generated@@85 $generated@@4)) (= (type $generated@@586) $generated@@85)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@589) $generated@@78)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@593  (=> (= $generated@@585 ($generated@@164 $generated@@586 $generated@@587 $generated@@60 false)) (=> (and (= $generated@@588 ($generated@@77 $generated@@589)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@588 $generated@@590)))))
(let (($generated@@594  (=> (and ($generated@@245 $generated@@587) ($generated@@591 $generated@@587)) (=> (and (and (and ($generated@@220 $generated@@589 $generated@@314) ($generated@@246 $generated@@589 $generated@@314 $generated@@587)) (<= ($generated@@239 0) $generated@@590)) (and (and (<= ($generated@@239 0) $generated@@592) (= 2 $generated@@76)) (and (not (= $generated@@590 9)) (= (ControlFlow 0 3) 2)))) $generated@@593))))
$generated@@594)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@186 (T@T T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@241 (Int) T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@286 (T@U Int) Int)
(declare-fun $generated@@287 (T@U Int) Bool)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@312 (Int) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@379 (T@U) Bool)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@481 (T@T) T@U)
(declare-fun $generated@@505 () T@T)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@549 (T@U Int) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@618 (Int Int) Int)
(declare-fun $generated@@670 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (= ($generated@@1 $generated@@87) 12) (forall (($generated@@88 T@U) ) (! (= (type ($generated@@86 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (= (type $generated@@89) $generated@@87) (= (type $generated@@90) $generated@@81)) (= (type $generated@@91) $generated@@81)) (= ($generated@@85 ($generated@@86 $generated@@89) $generated@@90 $generated@@91) (= $generated@@90 $generated@@91)))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@89) $generated@@90 $generated@@91))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 13)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@72 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 15)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@72 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@152) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@95) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (= ($generated@@1 $generated@@155) 16))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@155) (= (type $generated@@157) $generated@@155)) (= (type $generated@@158) $generated@@155)) (and ($generated@@154 $generated@@156 $generated@@157) ($generated@@154 $generated@@157 $generated@@158))) ($generated@@154 $generated@@156 $generated@@158))
 :pattern ( ($generated@@154 $generated@@156 $generated@@157) ($generated@@154 $generated@@157 $generated@@158))
 :pattern ( ($generated@@154 $generated@@156 $generated@@157) ($generated@@154 $generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@159 $generated@@83 $generated@@160))
 :pattern ( ($generated@@92 $generated@@159 $generated@@83 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@81) ($generated@@161 $generated@@163)) ($generated@@162 $generated@@163))
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@82 $generated@@164 ($generated@@93 0)))
 :pattern ( ($generated@@82 $generated@@164 ($generated@@93 0)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@167 $generated@@168)) $generated@@69)
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@69) (= (type $generated@@170) $generated@@69)) (= (type $generated@@171) $generated@@81)) ($generated@@82 $generated@@171 ($generated@@166 $generated@@169 $generated@@170))) ($generated@@165 $generated@@171))
 :pattern ( ($generated@@165 $generated@@171) ($generated@@82 $generated@@171 ($generated@@166 $generated@@169 $generated@@170)))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@155)
 :pattern ( ($generated@@173 $generated@@175))
)) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@155)
 :pattern ( ($generated@@174 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@81) (= (type $generated@@178) $generated@@81)) true) (= ($generated@@172 $generated@@177 $generated@@178)  (and (= ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)) (= ($generated@@174 $generated@@177) ($generated@@174 $generated@@178)))))
 :pattern ( ($generated@@172 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@69)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@94 $generated@@155 $generated@@2)) (= (type $generated@@183) $generated@@69)) ($generated@@82 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@82 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@1 ($generated@@186 $generated@@190 $generated@@191)) 17)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@187 ($generated@@186 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@186 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@188 ($generated@@186 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@186 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@188 (type $generated@@196))))
(= (type ($generated@@184 $generated@@196 $generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@184 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(let (($generated@@205 (type $generated@@201)))
(= (type ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@186 $generated@@205 $generated@@204))))
 :pattern ( ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@188 (type $generated@@206))))
 (=> (= (type $generated@@209) $generated@@210) (= ($generated@@184 ($generated@@189 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@207 $generated@@208) $generated@@209)))
 :weight 0
))) (and (and (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@184 ($generated@@189 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@184 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@184 ($generated@@189 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@184 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or true (= ($generated@@184 ($generated@@189 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@184 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ) (! (= (type ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@186 $generated@@95 $generated@@4))
 :pattern ( ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@72 (type $generated@@238))))
 (=> (and (and (and (and (= (type $generated@@233) $generated@@95) (= (type $generated@@234) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@235) ($generated@@71 $generated@@4))) (= (type $generated@@237) $generated@@95)) (= (type $generated@@238) ($generated@@71 $generated@@239))) (= ($generated@@0 ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))  (=> (and (not (= $generated@@237 $generated@@233)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@234 $generated@@237) $generated@@235))) $generated@@236))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@242 Int) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@155)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@87) (= (type $generated@@244) $generated@@81)) (= (type $generated@@245) $generated@@81)) (forall (($generated@@246 Int) ) (!  (=> (<= 0 $generated@@246) ($generated@@240 ($generated@@241 $generated@@246) ($generated@@86 $generated@@243) $generated@@244 $generated@@245))
 :pattern ( ($generated@@240 ($generated@@241 $generated@@246) ($generated@@86 $generated@@243) $generated@@244 $generated@@245))
))) ($generated@@85 ($generated@@86 $generated@@243) $generated@@244 $generated@@245))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (= (type $generated@@247) $generated@@69))
(assert (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@81) ($generated@@82 $generated@@248 $generated@@247)) ($generated@@162 $generated@@248))
 :pattern ( ($generated@@162 $generated@@248) ($generated@@82 $generated@@248 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@81)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@69) (= (type $generated@@254) $generated@@69)) (= (type $generated@@255) $generated@@155)) (= (type $generated@@256) $generated@@155)) (= ($generated@@82 ($generated@@249 $generated@@255 $generated@@256) ($generated@@166 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@82 ($generated@@249 $generated@@255 $generated@@256) ($generated@@166 $generated@@253 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@81) (= (type $generated@@258) $generated@@81)) (= ($generated@@172 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@172 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@155) (= (type $generated@@260) $generated@@87)) (= (type $generated@@261) $generated@@81)) (= (type $generated@@262) $generated@@81)) (= (type $generated@@263) $generated@@155)) (and ($generated@@154 $generated@@259 $generated@@263) ($generated@@240 $generated@@263 ($generated@@86 $generated@@260) $generated@@261 $generated@@262))) ($generated@@240 $generated@@259 ($generated@@86 $generated@@260) $generated@@261 $generated@@262))
 :pattern ( ($generated@@240 $generated@@259 ($generated@@86 $generated@@260) $generated@@261 $generated@@262) ($generated@@240 $generated@@263 ($generated@@86 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@69)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@94 $generated@@155 $generated@@4)) (= (type $generated@@267) $generated@@69)) (= ($generated@@82 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@155) ($generated@@0 ($generated@@99 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@99 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@82 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@69)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@94 $generated@@155 $generated@@4)) (= (type $generated@@272) $generated@@69)) (= ($generated@@82 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@155) ($generated@@0 ($generated@@99 $generated@@271 $generated@@273))) ($generated@@250 $generated@@273 $generated@@272))
 :pattern ( ($generated@@99 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@82 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) $generated@@155) (= (type $generated@@283) $generated@@87)) (= (type $generated@@284) $generated@@81)) (= (type $generated@@285) $generated@@81)) (and ($generated@@82 $generated@@284 $generated@@247) ($generated@@82 $generated@@285 $generated@@247))) (= ($generated@@240 $generated@@282 ($generated@@86 $generated@@283) $generated@@284 $generated@@285)  (and (=> (< 0 ($generated@@280 $generated@@282)) (and (and ($generated@@162 $generated@@284) ($generated@@162 $generated@@285)) (=> (and ($generated@@162 $generated@@284) ($generated@@162 $generated@@285)) (= ($generated@@281 $generated@@284) ($generated@@281 $generated@@285))))) (=> (and (not (= $generated@@282 ($generated@@241 0))) (= ($generated@@280 $generated@@282) 0)) ($generated@@85 $generated@@283 $generated@@284 $generated@@285)))))
 :pattern ( ($generated@@240 $generated@@282 ($generated@@86 $generated@@283) $generated@@284 $generated@@285))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@288 T@U) ($generated@@289 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@81) (or ($generated@@287 ($generated@@276 $generated@@288) ($generated@@274 $generated@@289)) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@288 $generated@@247) (<= ($generated@@274 0) $generated@@289)) ($generated@@0 ($generated@@276 ($generated@@11 (not (= $generated@@289 7))))))))) (= ($generated@@286 ($generated@@276 $generated@@288) ($generated@@274 $generated@@289)) ($generated@@274 $generated@@289)))
 :weight 3
 :pattern ( ($generated@@286 ($generated@@276 $generated@@288) ($generated@@274 $generated@@289)))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@69) (= (type $generated@@293) $generated@@69)) (= (type $generated@@294) $generated@@155)) (= (type $generated@@295) $generated@@155)) (= (type $generated@@296) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@290 $generated@@296)) (= ($generated@@92 ($generated@@249 $generated@@294 $generated@@295) ($generated@@166 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@92 ($generated@@249 $generated@@294 $generated@@295) ($generated@@166 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@73)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@81) (= ($generated@@165 $generated@@299) (= ($generated@@297 $generated@@299) $generated@@62)))
 :pattern ( ($generated@@165 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@81) (= ($generated@@162 $generated@@300) (= ($generated@@297 $generated@@300) $generated@@64)))
 :pattern ( ($generated@@162 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@81) ($generated@@165 $generated@@301)) (exists (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (and (and (= (type $generated@@302) $generated@@155) (= (type $generated@@303) $generated@@155)) (= $generated@@301 ($generated@@249 $generated@@302 $generated@@303)))
 :no-pattern (type $generated@@302)
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@165 $generated@@301))
)))
(assert  (and (and (forall (($generated@@308 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@308)) 18)) (forall (($generated@@309 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@306 $generated@@309))
))) (forall (($generated@@310 T@T) ) (! (= (type ($generated@@304 $generated@@310)) ($generated@@306 $generated@@310))
 :pattern ( ($generated@@304 $generated@@310))
))))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@311)) 0)
 :pattern ( ($generated@@304 $generated@@311))
)))
(assert (forall (($generated@@313 Int) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@81)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@81) ($generated@@162 $generated@@314)) (exists (($generated@@315 Int) ) (= $generated@@314 ($generated@@312 $generated@@315))))
 :pattern ( ($generated@@162 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@2) (= ($generated@@82 $generated@@316 $generated@@83) (<= ($generated@@274 0) ($generated $generated@@316))))
 :pattern ( ($generated@@82 $generated@@316 $generated@@83))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) $generated@@155) (= (type $generated@@318) $generated@@87)) (= (type $generated@@319) $generated@@81)) (= (type $generated@@320) $generated@@81)) (not (= $generated@@317 ($generated@@241 0)))) (= ($generated@@240 $generated@@317 ($generated@@86 $generated@@318) $generated@@319 $generated@@320) ($generated@@240 $generated@@317 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@240 $generated@@317 ($generated@@86 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) $generated@@87) (= (type $generated@@322) $generated@@81)) (= (type $generated@@323) $generated@@81)) (= ($generated@@85 ($generated@@86 $generated@@321) $generated@@322 $generated@@323) ($generated@@85 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@155)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@69) (= (type $generated@@328) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@291 ($generated@@324 $generated@@326) $generated@@327 $generated@@328) ($generated@@92 $generated@@326 $generated@@327 $generated@@328)))
 :pattern ( ($generated@@291 ($generated@@324 $generated@@326) $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@329) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@330) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@331) $generated@@155)) (= (type $generated@@332) $generated@@69)) ($generated@@150 $generated@@329 $generated@@330)) ($generated@@291 $generated@@331 $generated@@332 $generated@@329)) ($generated@@291 $generated@@331 $generated@@332 $generated@@330))
 :pattern ( ($generated@@150 $generated@@329 $generated@@330) ($generated@@291 $generated@@331 $generated@@332 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@333) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@334) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@336) $generated@@69)) ($generated@@150 $generated@@333 $generated@@334)) ($generated@@92 $generated@@335 $generated@@336 $generated@@333)) ($generated@@92 $generated@@335 $generated@@336 $generated@@334))
 :pattern ( ($generated@@150 $generated@@333 $generated@@334) ($generated@@92 $generated@@335 $generated@@336 $generated@@333))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@94 $generated@@339 $generated@@2))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@97 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@94 $generated@@341 $generated@@2)) (and (= (= ($generated@@337 $generated@@340) 0) (= $generated@@340 ($generated@@338 $generated@@341))) (=> (not (= ($generated@@337 $generated@@340) 0)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (< 0 ($generated ($generated@@99 $generated@@340 $generated@@342))))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@94 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@99 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@99 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 20)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@94 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@99 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@99 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert (forall (($generated@@380 Int) ) (!  (=> (<= 0 $generated@@380) (and ($generated@@379 ($generated@@241 $generated@@380)) (= ($generated@@280 ($generated@@241 $generated@@380)) $generated@@380)))
 :pattern ( ($generated@@241 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@97 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@94 $generated@@382 $generated@@2)) (= ($generated@@180 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@99 $generated@@381 $generated@@383))) (<= ($generated ($generated@@99 $generated@@381 $generated@@383)) ($generated@@337 $generated@@381))))
 :pattern ( ($generated@@99 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@180 $generated@@381))
)))
(assert (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@155) ($generated@@250 $generated@@387 $generated@@83)) (and (= ($generated@@324 ($generated@@384 $generated@@2 $generated@@387)) $generated@@387) ($generated@@82 ($generated@@384 $generated@@2 $generated@@387) $generated@@83)))
 :pattern ( ($generated@@250 $generated@@387 $generated@@83))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@155) ($generated@@250 $generated@@388 $generated@@247)) (and (= ($generated@@324 ($generated@@384 $generated@@81 $generated@@388)) $generated@@388) ($generated@@82 ($generated@@384 $generated@@81 $generated@@388) $generated@@247)))
 :pattern ( ($generated@@250 $generated@@388 $generated@@247))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@87) (= (type $generated@@390) $generated@@81)) (= (type $generated@@391) $generated@@81)) (= ($generated@@85 ($generated@@86 $generated@@389) $generated@@390 $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@155) ($generated@@240 $generated@@392 ($generated@@86 $generated@@389) $generated@@390 $generated@@391))
 :pattern ( ($generated@@240 $generated@@392 ($generated@@86 $generated@@389) $generated@@390 $generated@@391))
))))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@389) $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@347 (type $generated@@393))))
(let (($generated@@395 ($generated@@346 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@345 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@344 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@99 ($generated@@343 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@343 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@347 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@94 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@347 (type $generated@@400))))
(let (($generated@@402 ($generated@@346 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@345 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@344 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@99 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@365 (type $generated@@404))))
(let (($generated@@406 ($generated@@364 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@363 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@362 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@99 ($generated@@361 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@361 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@365 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@94 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@365 (type $generated@@411))))
(let (($generated@@413 ($generated@@364 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@363 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@362 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@99 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@416) $generated@@81)) (and ($generated@@290 $generated@@415) ($generated@@92 $generated@@416 $generated@@247 $generated@@415))) ($generated@@92 ($generated@@8 ($generated@@80 $generated@@416)) $generated@@83 $generated@@415))
 :pattern ( ($generated@@80 $generated@@416) ($generated@@92 $generated@@416 $generated@@247 $generated@@415))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@94 $generated@@155 $generated@@2)) (= (type $generated@@418) $generated@@69)) (= ($generated@@82 $generated@@417 ($generated@@179 $generated@@418)) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@155) (< 0 ($generated ($generated@@99 $generated@@417 $generated@@419)))) ($generated@@250 $generated@@419 $generated@@418))
 :pattern ( ($generated@@99 $generated@@417 $generated@@419))
))))
 :pattern ( ($generated@@82 $generated@@417 ($generated@@179 $generated@@418)))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@420 T@U) ($generated@@421 Int) ) (!  (=> (and (= (type $generated@@420) $generated@@81) (or ($generated@@287 $generated@@420 $generated@@421) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@420 $generated@@247) (<= ($generated@@274 0) $generated@@421)) (not (= $generated@@421 7)))))) (= ($generated@@286 $generated@@420 $generated@@421) $generated@@421))
 :pattern ( ($generated@@286 $generated@@420 $generated@@421))
))))
(assert (forall (($generated@@422 Int) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@290 $generated@@423)) (= ($generated@@92 ($generated@@312 $generated@@422) $generated@@247 $generated@@423) ($generated@@92 ($generated@@8 $generated@@422) $generated@@46 $generated@@423)))
 :pattern ( ($generated@@92 ($generated@@312 $generated@@422) $generated@@247 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@155) (= (type $generated@@425) $generated@@155)) (or (or ($generated@@154 $generated@@424 $generated@@425) (= $generated@@424 $generated@@425)) ($generated@@154 $generated@@425 $generated@@424)))
 :pattern ( ($generated@@154 $generated@@424 $generated@@425) ($generated@@154 $generated@@425 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@94 $generated@@155 $generated@@4)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@426 ($generated@@264 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@155) ($generated@@0 ($generated@@99 $generated@@426 $generated@@429))) ($generated@@291 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@99 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@92 $generated@@426 ($generated@@264 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@94 $generated@@155 $generated@@4)) (= (type $generated@@431) $generated@@69)) (= (type $generated@@432) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@430 ($generated@@269 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@155) ($generated@@0 ($generated@@99 $generated@@430 $generated@@433))) ($generated@@291 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@99 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@92 $generated@@430 ($generated@@269 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= ($generated ($generated@@99 ($generated@@338 $generated@@435) $generated@@434)) 0))
 :pattern ( (let (($generated@@435 (type $generated@@434)))
($generated@@99 ($generated@@338 $generated@@435) $generated@@434)))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@94 $generated@@155 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@347 (type $generated@@439))))
(let (($generated@@441 ($generated@@346 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@94 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@345 $generated@@155 $generated@@155)) (= (type $generated@@443) $generated@@155)) (= ($generated@@0 ($generated@@99 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@99 ($generated@@343 $generated@@442) ($generated@@173 ($generated@@384 $generated@@81 $generated@@443)))) (= ($generated@@99 ($generated@@437 $generated@@442) ($generated@@173 ($generated@@384 $generated@@81 $generated@@443))) ($generated@@174 ($generated@@384 $generated@@81 $generated@@443))))))
 :pattern ( ($generated@@99 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert  (and (forall (($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@446)) ($generated@@94 $generated@@155 $generated@@4))
 :pattern ( ($generated@@444 $generated@@446))
)) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@365 (type $generated@@447))))
(let (($generated@@449 ($generated@@364 (type $generated@@447))))
(= (type ($generated@@445 $generated@@447)) ($generated@@94 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@445 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@363 $generated@@155 $generated@@155)) (= (type $generated@@451) $generated@@155)) (= ($generated@@0 ($generated@@99 ($generated@@444 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@99 ($generated@@361 $generated@@450) ($generated@@173 ($generated@@384 $generated@@81 $generated@@451)))) (= ($generated@@99 ($generated@@445 $generated@@450) ($generated@@173 ($generated@@384 $generated@@81 $generated@@451))) ($generated@@174 ($generated@@384 $generated@@81 $generated@@451))))))
 :pattern ( ($generated@@99 ($generated@@444 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@346 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@345 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@99 ($generated@@397 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@99 ($generated@@343 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@99 ($generated@@437 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@99 ($generated@@343 $generated@@452) $generated@@456))
 :pattern ( ($generated@@99 ($generated@@437 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@99 ($generated@@397 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@364 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@363 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@99 ($generated@@408 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@99 ($generated@@361 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@99 ($generated@@445 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@99 ($generated@@361 $generated@@457) $generated@@461))
 :pattern ( ($generated@@99 ($generated@@445 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@99 ($generated@@408 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@69)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@345 $generated@@155 $generated@@155)) (= (type $generated@@466) $generated@@69)) (= (type $generated@@467) $generated@@69)) (= (type $generated@@468) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@155) ($generated@@0 ($generated@@99 ($generated@@343 $generated@@465) $generated@@469))) (and ($generated@@291 ($generated@@99 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@291 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@99 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@99 ($generated@@343 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@92 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@363 $generated@@155 $generated@@155)) (= (type $generated@@474) $generated@@69)) (= (type $generated@@475) $generated@@69)) (= (type $generated@@476) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@155) ($generated@@0 ($generated@@99 ($generated@@361 $generated@@473) $generated@@477))) (and ($generated@@291 ($generated@@99 ($generated@@445 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@291 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@99 ($generated@@445 $generated@@473) $generated@@477))
 :pattern ( ($generated@@99 ($generated@@361 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@92 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@478) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@479) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@480) ($generated@@94 $generated@@95 $generated@@96))) (not (= $generated@@478 $generated@@480))) (and ($generated@@150 $generated@@478 $generated@@479) ($generated@@150 $generated@@479 $generated@@480))) ($generated@@150 $generated@@478 $generated@@480))
 :pattern ( ($generated@@150 $generated@@478 $generated@@479) ($generated@@150 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@T) ) (! (= (type ($generated@@481 $generated@@482)) ($generated@@94 $generated@@482 $generated@@4))
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@365 (type $generated@@483))))
(let (($generated@@485 ($generated@@364 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@363 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@362 $generated@@485 $generated@@484)) (= ($generated@@361 $generated@@483) ($generated@@481 $generated@@485))))))
 :pattern ( ($generated@@361 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@365 (type $generated@@486))))
(let (($generated@@488 ($generated@@364 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@363 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@362 $generated@@488 $generated@@487)) (= ($generated@@408 $generated@@486) ($generated@@481 $generated@@487))))))
 :pattern ( ($generated@@408 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@365 (type $generated@@489))))
(let (($generated@@491 ($generated@@364 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@363 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@362 $generated@@491 $generated@@490)) (= ($generated@@444 $generated@@489) ($generated@@481 $generated@@155))))))
 :pattern ( ($generated@@444 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@347 (type $generated@@492))))
(let (($generated@@494 ($generated@@346 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@345 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@344 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@155) (= (type $generated@@496) $generated@@155)) ($generated@@0 ($generated@@99 ($generated@@436 $generated@@492) ($generated@@324 ($generated@@249 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@436 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@365 (type $generated@@497))))
(let (($generated@@499 ($generated@@364 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@363 $generated@@499 $generated@@498)) (or (= $generated@@497 ($generated@@362 $generated@@499 $generated@@498)) (exists (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (and (and (= (type $generated@@500) $generated@@155) (= (type $generated@@501) $generated@@155)) ($generated@@0 ($generated@@99 ($generated@@444 $generated@@497) ($generated@@324 ($generated@@249 $generated@@500 $generated@@501)))))
 :no-pattern (type $generated@@500)
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@444 $generated@@497))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@155) ($generated@@250 $generated@@502 $generated@@46)) (and (= ($generated@@324 ($generated@@384 $generated@@2 $generated@@502)) $generated@@502) ($generated@@82 ($generated@@384 $generated@@2 $generated@@502) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@502 $generated@@46))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@155) ($generated@@250 $generated@@503 $generated@@47)) (and (= ($generated@@324 ($generated@@384 $generated@@3 $generated@@503)) $generated@@503) ($generated@@82 ($generated@@384 $generated@@3 $generated@@503) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@503 $generated@@47))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@155) ($generated@@250 $generated@@504 $generated@@44)) (and (= ($generated@@324 ($generated@@384 $generated@@4 $generated@@504)) $generated@@504) ($generated@@82 ($generated@@384 $generated@@4 $generated@@504) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@504 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@505) 21))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@155) ($generated@@250 $generated@@506 $generated@@45)) (and (= ($generated@@324 ($generated@@384 $generated@@505 $generated@@506)) $generated@@506) ($generated@@82 ($generated@@384 $generated@@505 $generated@@506) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@506 $generated@@45))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@250 ($generated@@324 $generated@@507) $generated@@508) ($generated@@82 $generated@@507 $generated@@508)))
 :pattern ( ($generated@@250 ($generated@@324 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@155) (<= 0 ($generated@@280 $generated@@509)))
 :pattern ( ($generated@@280 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@97 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@94 $generated@@511 $generated@@2)) (<= 0 ($generated@@337 $generated@@510))))
 :pattern ( ($generated@@337 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@307 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@306 $generated@@513)) (<= 0 ($generated@@305 $generated@@512))))
 :pattern ( ($generated@@305 $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@69) (= (type $generated@@517) $generated@@69)) (= ($generated@@514 ($generated@@462 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@462 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@69) (= (type $generated@@521) $generated@@69)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@69) (= (type $generated@@523) $generated@@69)) (= ($generated@@77 ($generated@@462 $generated@@522 $generated@@523)) $generated@@58))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@69) (= (type $generated@@527) $generated@@69)) (= ($generated@@524 ($generated@@470 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@470 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@69)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@69) (= (type $generated@@531) $generated@@69)) (= ($generated@@528 ($generated@@470 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@470 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@69) (= (type $generated@@533) $generated@@69)) (= ($generated@@77 ($generated@@470 $generated@@532 $generated@@533)) $generated@@59))
 :pattern ( ($generated@@470 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@155) (= (type $generated@@535) $generated@@155)) (= ($generated@@297 ($generated@@249 $generated@@534 $generated@@535)) $generated@@62))
 :pattern ( ($generated@@249 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@69)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@69) (= (type $generated@@539) $generated@@69)) (= ($generated@@536 ($generated@@166 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@166 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@69) (= (type $generated@@543) $generated@@69)) (= ($generated@@540 ($generated@@166 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@166 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@155) (= (type $generated@@545) $generated@@155)) (= ($generated@@173 ($generated@@249 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@249 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@155) (= (type $generated@@547) $generated@@155)) (= ($generated@@174 ($generated@@249 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@249 $generated@@546 $generated@@547))
)))
(assert  (and (forall (($generated@@550 T@U) ) (! (= (type ($generated@@548 $generated@@550)) $generated@@69)
 :pattern ( ($generated@@548 $generated@@550))
)) (forall (($generated@@551 T@U) ($generated@@552 Int) ) (! (let (($generated@@553 ($generated@@307 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551 $generated@@552)) $generated@@553))
 :pattern ( ($generated@@549 $generated@@551 $generated@@552))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@306 $generated@@155)) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@554 ($generated@@548 $generated@@555) $generated@@556) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@305 $generated@@554))) ($generated@@291 ($generated@@549 $generated@@554 $generated@@557) $generated@@555 $generated@@556))
 :pattern ( ($generated@@549 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@92 $generated@@554 ($generated@@548 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@558 ($generated@@93 $generated@@559)) $generated@@559)
 :pattern ( ($generated@@93 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@69)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@69) (= ($generated@@560 ($generated@@264 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@264 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@69) (= ($generated@@77 ($generated@@264 $generated@@563)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@69)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@69) (= ($generated@@564 ($generated@@269 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@269 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@69) (= ($generated@@77 ($generated@@269 $generated@@567)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@69)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@69) (= ($generated@@568 ($generated@@179 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@179 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@69) (= ($generated@@77 ($generated@@179 $generated@@571)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@69)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@69) (= ($generated@@572 ($generated@@548 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@548 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@69) (= ($generated@@77 ($generated@@548 $generated@@575)) $generated@@57))
 :pattern ( ($generated@@548 $generated@@575))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@297 ($generated@@312 $generated@@576)) $generated@@64)
 :pattern ( ($generated@@312 $generated@@576))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@281 ($generated@@312 $generated@@577)) $generated@@577)
 :pattern ( ($generated@@312 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
(= ($generated@@384 $generated@@579 ($generated@@324 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@324 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@345 $generated@@155 $generated@@155)) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) $generated@@69)) (= ($generated@@82 $generated@@580 ($generated@@462 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@155) ($generated@@0 ($generated@@99 ($generated@@343 $generated@@580) $generated@@583))) (and ($generated@@250 ($generated@@99 ($generated@@437 $generated@@580) $generated@@583) $generated@@582) ($generated@@250 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@99 ($generated@@437 $generated@@580) $generated@@583))
 :pattern ( ($generated@@99 ($generated@@343 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@82 $generated@@580 ($generated@@462 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@363 $generated@@155 $generated@@155)) (= (type $generated@@585) $generated@@69)) (= (type $generated@@586) $generated@@69)) (= ($generated@@82 $generated@@584 ($generated@@470 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@155) ($generated@@0 ($generated@@99 ($generated@@361 $generated@@584) $generated@@587))) (and ($generated@@250 ($generated@@99 ($generated@@445 $generated@@584) $generated@@587) $generated@@586) ($generated@@250 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@99 ($generated@@445 $generated@@584) $generated@@587))
 :pattern ( ($generated@@99 ($generated@@361 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@82 $generated@@584 ($generated@@470 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@155) (= (type $generated@@589) $generated@@155)) (and (and (and (=> ($generated@@154 $generated@@588 $generated@@589) (not (= $generated@@588 $generated@@589))) (=> (and ($generated@@379 $generated@@588) (not ($generated@@379 $generated@@589))) ($generated@@154 $generated@@588 $generated@@589))) (=> (and ($generated@@379 $generated@@588) ($generated@@379 $generated@@589)) (= ($generated@@154 $generated@@588 $generated@@589) (< ($generated@@280 $generated@@588) ($generated@@280 $generated@@589))))) (=> (and ($generated@@154 $generated@@588 $generated@@589) ($generated@@379 $generated@@589)) ($generated@@379 $generated@@588))))
 :pattern ( ($generated@@154 $generated@@588 $generated@@589))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (and (= (type $generated@@590) $generated@@81) (or ($generated@@287 $generated@@590 $generated@@591) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@590 $generated@@247) (<= ($generated@@274 0) $generated@@591)) (not (= $generated@@591 7)))))) (and (= ($generated@@286 $generated@@590 $generated@@591) ($generated@@80 $generated@@590)) (<= ($generated@@274 0) ($generated@@286 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@286 $generated@@590 $generated@@591))
))))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@155) (= (type $generated@@595) $generated@@155)) (< ($generated@@592 $generated@@594) ($generated@@593 ($generated@@249 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@249 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@155) (= (type $generated@@597) $generated@@155)) (< ($generated@@592 $generated@@597) ($generated@@593 ($generated@@249 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@249 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@82 ($generated@@312 $generated@@598) $generated@@247) ($generated@@82 ($generated@@8 $generated@@598) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@312 $generated@@598) $generated@@247))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@155) (= (type $generated@@600) $generated@@69)) (= (type $generated@@601) $generated@@69)) ($generated@@250 $generated@@599 ($generated@@462 $generated@@600 $generated@@601))) (and (= ($generated@@324 ($generated@@384 ($generated@@345 $generated@@155 $generated@@155) $generated@@599)) $generated@@599) ($generated@@82 ($generated@@384 ($generated@@345 $generated@@155 $generated@@155) $generated@@599) ($generated@@462 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@250 $generated@@599 ($generated@@462 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@155) (= (type $generated@@603) $generated@@69)) (= (type $generated@@604) $generated@@69)) ($generated@@250 $generated@@602 ($generated@@470 $generated@@603 $generated@@604))) (and (= ($generated@@324 ($generated@@384 ($generated@@363 $generated@@155 $generated@@155) $generated@@602)) $generated@@602) ($generated@@82 ($generated@@384 ($generated@@363 $generated@@155 $generated@@155) $generated@@602) ($generated@@470 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@250 $generated@@602 ($generated@@470 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@69) (= (type $generated@@606) $generated@@69)) (= (type $generated@@607) $generated@@155)) ($generated@@250 $generated@@607 ($generated@@166 $generated@@605 $generated@@606))) (and (= ($generated@@324 ($generated@@384 $generated@@81 $generated@@607)) $generated@@607) ($generated@@82 ($generated@@384 $generated@@81 $generated@@607) ($generated@@166 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@250 $generated@@607 ($generated@@166 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@99 ($generated@@481 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@99 ($generated@@481 $generated@@609) $generated@@608)))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (and (= (type $generated@@610) $generated@@81) (or ($generated@@287 $generated@@610 ($generated@@274 $generated@@611)) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@610 $generated@@247) (<= ($generated@@274 0) $generated@@611)) ($generated@@0 ($generated@@276 ($generated@@11 (not (= $generated@@611 7))))))))) (= ($generated@@286 $generated@@610 ($generated@@274 $generated@@611)) ($generated@@274 $generated@@611)))
 :weight 3
 :pattern ( ($generated@@286 $generated@@610 ($generated@@274 $generated@@611)))
))))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@74)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@69) (= (type $generated@@615) $generated@@69)) (and (= ($generated@@77 ($generated@@166 $generated@@614 $generated@@615)) $generated@@63) (= ($generated@@612 ($generated@@166 $generated@@614 $generated@@615)) $generated@@67)))
 :pattern ( ($generated@@166 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@81) (= (type $generated@@617) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@290 $generated@@617) (and ($generated@@162 $generated@@616) ($generated@@92 $generated@@616 $generated@@247 $generated@@617)))) ($generated@@92 ($generated@@8 ($generated@@281 $generated@@616)) $generated@@46 $generated@@617))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@281 $generated@@616)) $generated@@46 $generated@@617))
)))
(assert (forall (($generated@@619 Int) ($generated@@620 Int) ) (! (= ($generated@@618 $generated@@619 $generated@@620) (* $generated@@619 $generated@@620))
 :pattern ( ($generated@@618 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@81) (= ($generated@@592 ($generated@@324 $generated@@621)) ($generated@@593 $generated@@621)))
 :pattern ( ($generated@@592 ($generated@@324 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@155) ($generated@@250 $generated@@622 ($generated@@93 0))) (and (= ($generated@@324 ($generated@@384 $generated@@2 $generated@@622)) $generated@@622) ($generated@@82 ($generated@@384 ($generated@@94 $generated@@155 $generated@@4) $generated@@622) ($generated@@93 0))))
 :pattern ( ($generated@@250 $generated@@622 ($generated@@93 0)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@155) (= (type $generated@@624) $generated@@69)) ($generated@@250 $generated@@623 ($generated@@264 $generated@@624))) (and (= ($generated@@324 ($generated@@384 ($generated@@94 $generated@@155 $generated@@4) $generated@@623)) $generated@@623) ($generated@@82 ($generated@@384 ($generated@@94 $generated@@155 $generated@@4) $generated@@623) ($generated@@264 $generated@@624))))
 :pattern ( ($generated@@250 $generated@@623 ($generated@@264 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@155) (= (type $generated@@626) $generated@@69)) ($generated@@250 $generated@@625 ($generated@@269 $generated@@626))) (and (= ($generated@@324 ($generated@@384 ($generated@@94 $generated@@155 $generated@@4) $generated@@625)) $generated@@625) ($generated@@82 ($generated@@384 ($generated@@94 $generated@@155 $generated@@4) $generated@@625) ($generated@@269 $generated@@626))))
 :pattern ( ($generated@@250 $generated@@625 ($generated@@269 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@155) (= (type $generated@@628) $generated@@69)) ($generated@@250 $generated@@627 ($generated@@179 $generated@@628))) (and (= ($generated@@324 ($generated@@384 ($generated@@94 $generated@@155 $generated@@2) $generated@@627)) $generated@@627) ($generated@@82 ($generated@@384 ($generated@@94 $generated@@155 $generated@@2) $generated@@627) ($generated@@179 $generated@@628))))
 :pattern ( ($generated@@250 $generated@@627 ($generated@@179 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@155) (= (type $generated@@630) $generated@@69)) ($generated@@250 $generated@@629 ($generated@@548 $generated@@630))) (and (= ($generated@@324 ($generated@@384 ($generated@@306 $generated@@155) $generated@@629)) $generated@@629) ($generated@@82 ($generated@@384 ($generated@@306 $generated@@155) $generated@@629) ($generated@@548 $generated@@630))))
 :pattern ( ($generated@@250 $generated@@629 ($generated@@548 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@155) ($generated@@379 $generated@@631)) (= $generated@@631 ($generated@@241 ($generated@@280 $generated@@631))))
 :pattern ( ($generated@@280 $generated@@631))
 :pattern ( ($generated@@379 $generated@@631))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@612 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@247) $generated@@65))
(assert (= ($generated@@612 $generated@@247) $generated@@68))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@94 $generated@@155 $generated@@2)) (= (type $generated@@633) $generated@@69)) (= (type $generated@@634) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@632 ($generated@@179 $generated@@633) $generated@@634) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@155) (< 0 ($generated ($generated@@99 $generated@@632 $generated@@635)))) ($generated@@291 $generated@@635 $generated@@633 $generated@@634))
 :pattern ( ($generated@@99 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@92 $generated@@632 ($generated@@179 $generated@@633) $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@87) (= (type $generated@@637) $generated@@81)) (= (type $generated@@638) $generated@@81)) (and ($generated@@82 $generated@@637 $generated@@247) ($generated@@82 $generated@@638 $generated@@247))) (= ($generated@@85 ($generated@@86 $generated@@636) $generated@@637 $generated@@638)  (and (and ($generated@@162 $generated@@637) ($generated@@162 $generated@@638)) (=> (and ($generated@@162 $generated@@637) ($generated@@162 $generated@@638)) (= ($generated@@281 $generated@@637) ($generated@@281 $generated@@638))))))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@81) (= (type $generated@@640) $generated@@69)) (= (type $generated@@641) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@290 $generated@@641) (and ($generated@@165 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@69) ($generated@@92 $generated@@639 ($generated@@166 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@92 $generated@@639 ($generated@@166 $generated@@640 $generated@@642) $generated@@641))
))))) ($generated@@291 ($generated@@173 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@291 ($generated@@173 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@81) (= (type $generated@@644) $generated@@69)) (= (type $generated@@645) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@290 $generated@@645) (and ($generated@@165 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@69) ($generated@@92 $generated@@643 ($generated@@166 $generated@@646 $generated@@644) $generated@@645))
 :pattern ( ($generated@@92 $generated@@643 ($generated@@166 $generated@@646 $generated@@644) $generated@@645))
))))) ($generated@@291 ($generated@@174 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@291 ($generated@@174 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@155) (= (type $generated@@648) $generated@@155)) (= ($generated@@249 ($generated@@276 $generated@@647) ($generated@@276 $generated@@648)) ($generated@@276 ($generated@@249 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@249 ($generated@@276 $generated@@647) ($generated@@276 $generated@@648)))
)))
(assert (forall (($generated@@649 Int) ) (! (= ($generated@@324 ($generated@@8 ($generated@@274 $generated@@649))) ($generated@@276 ($generated@@324 ($generated@@8 $generated@@649))))
 :pattern ( ($generated@@324 ($generated@@8 ($generated@@274 $generated@@649))))
)))
(assert (forall (($generated@@650 T@U) ) (! (= ($generated@@324 ($generated@@276 $generated@@650)) ($generated@@276 ($generated@@324 $generated@@650)))
 :pattern ( ($generated@@324 ($generated@@276 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@307 (type $generated@@651))))
 (=> (and (= (type $generated@@651) ($generated@@306 $generated@@652)) (= ($generated@@305 $generated@@651) 0)) (= $generated@@651 ($generated@@304 $generated@@652))))
 :pattern ( ($generated@@305 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 (type $generated@@654)))
 (=> (and (and (= (type $generated@@653) ($generated@@94 $generated@@656 $generated@@2)) (= (type $generated@@655) $generated@@2)) (<= 0 ($generated $generated@@655))) (= ($generated@@337 ($generated@@100 $generated@@653 $generated@@654 $generated@@655)) (+ (- ($generated@@337 $generated@@653) ($generated ($generated@@99 $generated@@653 $generated@@654))) ($generated $generated@@655)))))
 :pattern ( ($generated@@337 ($generated@@100 $generated@@653 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@658) $generated@@2)) ($generated@@92 $generated@@658 $generated@@46 $generated@@657))
 :pattern ( ($generated@@92 $generated@@658 $generated@@46 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@660) $generated@@3)) ($generated@@92 $generated@@660 $generated@@47 $generated@@659))
 :pattern ( ($generated@@92 $generated@@660 $generated@@47 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@662) $generated@@4)) ($generated@@92 $generated@@662 $generated@@44 $generated@@661))
 :pattern ( ($generated@@92 $generated@@662 $generated@@44 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@664) $generated@@505)) ($generated@@92 $generated@@664 $generated@@45 $generated@@663))
 :pattern ( ($generated@@92 $generated@@664 $generated@@45 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@666) $generated@@155)) ($generated@@92 $generated@@666 $generated@@48 $generated@@665))
 :pattern ( ($generated@@92 $generated@@666 $generated@@48 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@306 $generated@@155)) (= (type $generated@@668) $generated@@69)) (= ($generated@@82 $generated@@667 ($generated@@548 $generated@@668)) (forall (($generated@@669 Int) ) (!  (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@305 $generated@@667))) ($generated@@250 ($generated@@549 $generated@@667 $generated@@669) $generated@@668))
 :pattern ( ($generated@@549 $generated@@667 $generated@@669))
))))
 :pattern ( ($generated@@82 $generated@@667 ($generated@@548 $generated@@668)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 Int) ) (!  (=> (= (type $generated@@671) ($generated@@306 $generated@@155)) (=> (and (<= 0 $generated@@672) (< $generated@@672 ($generated@@305 $generated@@671))) (< ($generated@@593 ($generated@@384 $generated@@81 ($generated@@549 $generated@@671 $generated@@672))) ($generated@@670 $generated@@671))))
 :pattern ( ($generated@@593 ($generated@@384 $generated@@81 ($generated@@549 $generated@@671 $generated@@672))))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@673) $generated@@155) (= (type $generated@@674) $generated@@87)) (= (type $generated@@675) $generated@@81)) (= (type $generated@@676) $generated@@81)) (= $generated@@675 $generated@@676)) ($generated@@240 $generated@@673 ($generated@@86 $generated@@674) $generated@@675 $generated@@676))
 :pattern ( ($generated@@240 $generated@@673 ($generated@@86 $generated@@674) $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@345 $generated@@155 $generated@@155)) (= (type $generated@@678) $generated@@69)) (= (type $generated@@679) $generated@@69)) ($generated@@82 $generated@@677 ($generated@@462 $generated@@678 $generated@@679))) (and (and ($generated@@82 ($generated@@343 $generated@@677) ($generated@@264 $generated@@678)) ($generated@@82 ($generated@@397 $generated@@677) ($generated@@264 $generated@@679))) ($generated@@82 ($generated@@436 $generated@@677) ($generated@@264 ($generated@@166 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@82 $generated@@677 ($generated@@462 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@363 $generated@@155 $generated@@155)) (= (type $generated@@681) $generated@@69)) (= (type $generated@@682) $generated@@69)) ($generated@@82 $generated@@680 ($generated@@470 $generated@@681 $generated@@682))) (and (and ($generated@@82 ($generated@@361 $generated@@680) ($generated@@269 $generated@@681)) ($generated@@82 ($generated@@408 $generated@@680) ($generated@@269 $generated@@682))) ($generated@@82 ($generated@@444 $generated@@680) ($generated@@269 ($generated@@166 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@82 $generated@@680 ($generated@@470 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@82 $generated@@683 $generated@@46))
 :pattern ( ($generated@@82 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@82 $generated@@684 $generated@@47))
 :pattern ( ($generated@@82 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@82 $generated@@685 $generated@@44))
 :pattern ( ($generated@@82 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@505) ($generated@@82 $generated@@686 $generated@@45))
 :pattern ( ($generated@@82 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@155) ($generated@@82 $generated@@687 $generated@@48))
 :pattern ( ($generated@@82 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 (T@U) Bool)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () Int)
(assert  (and (and (and (= (type $generated@@690) $generated@@81) (= (type $generated@@692) ($generated@@186 $generated@@95 $generated@@4))) (= (type $generated@@693) $generated@@95)) (= (type $generated@@694) ($generated@@94 $generated@@95 $generated@@96))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@699 true))
(let (($generated@@700  (=> (and (and (not (= $generated@@688 9)) (= $generated@@689 ($generated@@80 $generated@@690))) (and (<= ($generated@@274 0) $generated@@691) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@689 9)))))
(let (($generated@@701  (=> (and (= $generated@@692 ($generated@@185 $generated@@693 $generated@@694 $generated@@60 false)) (= $generated@@688 ($generated@@80 $generated@@690))) (and (=> (= (ControlFlow 0 4) 2) $generated@@700) (=> (= (ControlFlow 0 4) 3) $generated@@699)))))
(let (($generated@@702  (=> (and ($generated@@290 $generated@@694) ($generated@@695 $generated@@694)) (=> (and (and ($generated@@82 $generated@@690 $generated@@247) ($generated@@92 $generated@@690 $generated@@247 $generated@@694)) ($generated@@161 $generated@@690)) (=> (and (and (and (<= ($generated@@274 0) $generated@@696) true) (and (<= ($generated@@274 0) $generated@@697) true)) (and (and (<= ($generated@@274 0) $generated@@698) true) (and (= 3 $generated@@79) (= (ControlFlow 0 5) 4)))) $generated@@701)))))
$generated@@702)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U Int) Int)
(declare-fun $generated@@261 (T@U Int) Bool)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@289 (Int) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@575 (Int Int) Int)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 12)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@72 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@72 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@147 $generated@@83 $generated@@148))
 :pattern ( ($generated@@85 $generated@@147 $generated@@83 $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@81) ($generated@@149 $generated@@151)) ($generated@@150 $generated@@151))
 :pattern ( ($generated@@149 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@82 $generated@@152 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@152 ($generated@@86 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@69)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@69) (= (type $generated@@158) $generated@@69)) (= (type $generated@@159) $generated@@81)) ($generated@@82 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@82 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@81) (= (type $generated@@167) $generated@@81)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@69)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@87 $generated@@163 $generated@@2)) (= (type $generated@@172) $generated@@69)) ($generated@@82 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@82 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@88 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@72 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@88) (= (type $generated@@223) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@224) ($generated@@71 $generated@@4))) (= (type $generated@@226) $generated@@88)) (= (type $generated@@227) ($generated@@71 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (= (type $generated@@229) $generated@@69))
(assert (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@81) ($generated@@82 $generated@@230 $generated@@229)) ($generated@@150 $generated@@230))
 :pattern ( ($generated@@150 $generated@@230) ($generated@@82 $generated@@230 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@81)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@69) (= (type $generated@@236) $generated@@69)) (= (type $generated@@237) $generated@@163)) (= (type $generated@@238) $generated@@163)) (= ($generated@@82 ($generated@@231 $generated@@237 $generated@@238) ($generated@@154 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@82 ($generated@@231 $generated@@237 $generated@@238) ($generated@@154 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@81) (= (type $generated@@240) $generated@@81)) (= ($generated@@160 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@160 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@81) (= (type $generated@@243) $generated@@81)) (= ($generated@@241 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@241 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@69)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@163 $generated@@4)) (= (type $generated@@247) $generated@@69)) (= ($generated@@82 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@163) ($generated@@0 ($generated@@92 $generated@@246 $generated@@248))) ($generated@@232 $generated@@248 $generated@@247))
 :pattern ( ($generated@@92 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@82 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@69)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@87 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@69)) (= ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@92 $generated@@251 $generated@@253))) ($generated@@232 $generated@@253 $generated@@252))
 :pattern ( ($generated@@92 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@82 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@262 T@U) ($generated@@263 Int) ) (!  (=> (and (= (type $generated@@262) $generated@@81) (or ($generated@@261 ($generated@@256 $generated@@262) ($generated@@254 $generated@@263)) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@262 $generated@@229) (<= ($generated@@254 0) $generated@@263)) ($generated@@0 ($generated@@256 ($generated@@11 (not (= $generated@@263 7))))))))) (= ($generated@@260 ($generated@@256 $generated@@262) ($generated@@254 $generated@@263)) ($generated@@254 $generated@@263)))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@256 $generated@@262) ($generated@@254 $generated@@263)))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@69) (= (type $generated@@267) $generated@@69)) (= (type $generated@@268) $generated@@163)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@264 $generated@@270)) (= ($generated@@85 ($generated@@231 $generated@@268 $generated@@269) ($generated@@154 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@85 ($generated@@231 $generated@@268 $generated@@269) ($generated@@154 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@73)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@81) (= ($generated@@153 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@81) (= ($generated@@150 $generated@@274) (= ($generated@@271 $generated@@274) $generated@@64)))
 :pattern ( ($generated@@150 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@81) ($generated@@153 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@231 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@153 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (= (type $generated@@287) $generated@@81) (= (type $generated@@288) $generated@@81)) true) (= ($generated@@241 $generated@@287 $generated@@288) (= ($generated@@286 $generated@@287) ($generated@@286 $generated@@288))))
 :pattern ( ($generated@@241 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 Int) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@81)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@81) ($generated@@150 $generated@@291)) (exists (($generated@@292 Int) ) (= $generated@@291 ($generated@@289 $generated@@292))))
 :pattern ( ($generated@@150 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@2) (= ($generated@@82 $generated@@293 $generated@@83) (<= ($generated@@254 0) ($generated $generated@@293))))
 :pattern ( ($generated@@82 $generated@@293 $generated@@83))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@163)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@69) (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@265 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@85 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@265 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@301) $generated@@163)) (= (type $generated@@302) $generated@@69)) ($generated@@143 $generated@@299 $generated@@300)) ($generated@@265 $generated@@301 $generated@@302 $generated@@299)) ($generated@@265 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@143 $generated@@299 $generated@@300) ($generated@@265 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@306) $generated@@69)) ($generated@@143 $generated@@303 $generated@@304)) ($generated@@85 $generated@@305 $generated@@306 $generated@@303)) ($generated@@85 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@143 $generated@@303 $generated@@304) ($generated@@85 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@309 T@T) ) (! (= (type ($generated@@308 $generated@@309)) ($generated@@87 $generated@@309 $generated@@2))
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@90 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@87 $generated@@311 $generated@@2)) (and (= (= ($generated@@307 $generated@@310) 0) (= $generated@@310 ($generated@@308 $generated@@311))) (=> (not (= ($generated@@307 $generated@@310) 0)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@311) (< 0 ($generated ($generated@@92 $generated@@310 $generated@@312))))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@87 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@92 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@92 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@87 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@92 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@92 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@90 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@87 $generated@@350 $generated@@2)) (= ($generated@@169 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@92 $generated@@349 $generated@@351))) (<= ($generated ($generated@@92 $generated@@349 $generated@@351)) ($generated@@307 $generated@@349))))
 :pattern ( ($generated@@92 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@169 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@163) ($generated@@232 $generated@@355 $generated@@83)) (and (= ($generated@@294 ($generated@@352 $generated@@2 $generated@@355)) $generated@@355) ($generated@@82 ($generated@@352 $generated@@2 $generated@@355) $generated@@83)))
 :pattern ( ($generated@@232 $generated@@355 $generated@@83))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@163) ($generated@@232 $generated@@356 $generated@@229)) (and (= ($generated@@294 ($generated@@352 $generated@@81 $generated@@356)) $generated@@356) ($generated@@82 ($generated@@352 $generated@@81 $generated@@356) $generated@@229)))
 :pattern ( ($generated@@232 $generated@@356 $generated@@229))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@317 (type $generated@@357))))
(let (($generated@@359 ($generated@@316 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@315 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@314 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@92 ($generated@@313 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@313 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@317 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@87 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@317 (type $generated@@364))))
(let (($generated@@366 ($generated@@316 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@315 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@314 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@92 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@335 (type $generated@@368))))
(let (($generated@@370 ($generated@@334 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@333 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@332 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@92 ($generated@@331 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@331 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@335 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@335 (type $generated@@375))))
(let (($generated@@377 ($generated@@334 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@333 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@332 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@92 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@380) $generated@@81)) (and ($generated@@264 $generated@@379) ($generated@@85 $generated@@380 $generated@@229 $generated@@379))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@380)) $generated@@83 $generated@@379))
 :pattern ( ($generated@@80 $generated@@380) ($generated@@85 $generated@@380 $generated@@229 $generated@@379))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@87 $generated@@163 $generated@@2)) (= (type $generated@@382) $generated@@69)) (= ($generated@@82 $generated@@381 ($generated@@168 $generated@@382)) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@163) (< 0 ($generated ($generated@@92 $generated@@381 $generated@@383)))) ($generated@@232 $generated@@383 $generated@@382))
 :pattern ( ($generated@@92 $generated@@381 $generated@@383))
))))
 :pattern ( ($generated@@82 $generated@@381 ($generated@@168 $generated@@382)))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@384 T@U) ($generated@@385 Int) ) (!  (=> (and (= (type $generated@@384) $generated@@81) (or ($generated@@261 $generated@@384 $generated@@385) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@384 $generated@@229) (<= ($generated@@254 0) $generated@@385)) (not (= $generated@@385 7)))))) (= ($generated@@260 $generated@@384 $generated@@385) $generated@@385))
 :pattern ( ($generated@@260 $generated@@384 $generated@@385))
))))
(assert (forall (($generated@@386 Int) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@87 $generated@@88 $generated@@89)) ($generated@@264 $generated@@387)) (= ($generated@@85 ($generated@@289 $generated@@386) $generated@@229 $generated@@387) ($generated@@85 ($generated@@8 $generated@@386) $generated@@46 $generated@@387)))
 :pattern ( ($generated@@85 ($generated@@289 $generated@@386) $generated@@229 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@87 $generated@@163 $generated@@4)) (= (type $generated@@389) $generated@@69)) (= (type $generated@@390) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@388 ($generated@@244 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@163) ($generated@@0 ($generated@@92 $generated@@388 $generated@@391))) ($generated@@265 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@92 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@85 $generated@@388 ($generated@@244 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@87 $generated@@163 $generated@@4)) (= (type $generated@@393) $generated@@69)) (= (type $generated@@394) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@392 ($generated@@249 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@163) ($generated@@0 ($generated@@92 $generated@@392 $generated@@395))) ($generated@@265 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@92 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@85 $generated@@392 ($generated@@249 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@92 ($generated@@308 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@92 ($generated@@308 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@87 $generated@@163 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@317 (type $generated@@401))))
(let (($generated@@403 ($generated@@316 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@87 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@315 $generated@@163 $generated@@163)) (= (type $generated@@405) $generated@@163)) (= ($generated@@0 ($generated@@92 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@92 ($generated@@313 $generated@@404) ($generated@@161 ($generated@@352 $generated@@81 $generated@@405)))) (= ($generated@@92 ($generated@@399 $generated@@404) ($generated@@161 ($generated@@352 $generated@@81 $generated@@405))) ($generated@@162 ($generated@@352 $generated@@81 $generated@@405))))))
 :pattern ( ($generated@@92 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@87 $generated@@163 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@335 (type $generated@@409))))
(let (($generated@@411 ($generated@@334 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@87 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@333 $generated@@163 $generated@@163)) (= (type $generated@@413) $generated@@163)) (= ($generated@@0 ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@92 ($generated@@331 $generated@@412) ($generated@@161 ($generated@@352 $generated@@81 $generated@@413)))) (= ($generated@@92 ($generated@@407 $generated@@412) ($generated@@161 ($generated@@352 $generated@@81 $generated@@413))) ($generated@@162 ($generated@@352 $generated@@81 $generated@@413))))))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@316 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@315 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@92 ($generated@@361 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@92 ($generated@@313 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@92 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@92 ($generated@@313 $generated@@414) $generated@@418))
 :pattern ( ($generated@@92 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@92 ($generated@@361 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@334 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@333 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@92 ($generated@@372 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@92 ($generated@@331 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@92 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@92 ($generated@@331 $generated@@419) $generated@@423))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@92 ($generated@@372 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@69)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@315 $generated@@163 $generated@@163)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) $generated@@69)) (= (type $generated@@430) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@163) ($generated@@0 ($generated@@92 ($generated@@313 $generated@@427) $generated@@431))) (and ($generated@@265 ($generated@@92 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@265 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@92 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@92 ($generated@@313 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@85 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@69)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@333 $generated@@163 $generated@@163)) (= (type $generated@@436) $generated@@69)) (= (type $generated@@437) $generated@@69)) (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@163) ($generated@@0 ($generated@@92 ($generated@@331 $generated@@435) $generated@@439))) (and ($generated@@265 ($generated@@92 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@265 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@92 ($generated@@331 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@441) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@442) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@440 $generated@@442))) (and ($generated@@143 $generated@@440 $generated@@441) ($generated@@143 $generated@@441 $generated@@442))) ($generated@@143 $generated@@440 $generated@@442))
 :pattern ( ($generated@@143 $generated@@440 $generated@@441) ($generated@@143 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@87 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@335 (type $generated@@445))))
(let (($generated@@447 ($generated@@334 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@333 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@331 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@331 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@335 (type $generated@@448))))
(let (($generated@@450 ($generated@@334 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@333 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@332 $generated@@450 $generated@@449)) (= ($generated@@372 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@372 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@335 (type $generated@@451))))
(let (($generated@@453 ($generated@@334 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@333 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@332 $generated@@453 $generated@@452)) (= ($generated@@406 $generated@@451) ($generated@@443 $generated@@163))))))
 :pattern ( ($generated@@406 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@317 (type $generated@@454))))
(let (($generated@@456 ($generated@@316 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@315 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@314 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@163) (= (type $generated@@458) $generated@@163)) ($generated@@0 ($generated@@92 ($generated@@398 $generated@@454) ($generated@@294 ($generated@@231 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@398 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@335 (type $generated@@459))))
(let (($generated@@461 ($generated@@334 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@333 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@332 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@163) (= (type $generated@@463) $generated@@163)) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@459) ($generated@@294 ($generated@@231 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@406 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@163) ($generated@@232 $generated@@464 $generated@@46)) (and (= ($generated@@294 ($generated@@352 $generated@@2 $generated@@464)) $generated@@464) ($generated@@82 ($generated@@352 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@163) ($generated@@232 $generated@@465 $generated@@47)) (and (= ($generated@@294 ($generated@@352 $generated@@3 $generated@@465)) $generated@@465) ($generated@@82 ($generated@@352 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@163) ($generated@@232 $generated@@466 $generated@@44)) (and (= ($generated@@294 ($generated@@352 $generated@@4 $generated@@466)) $generated@@466) ($generated@@82 ($generated@@352 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@163) ($generated@@232 $generated@@468 $generated@@45)) (and (= ($generated@@294 ($generated@@352 $generated@@467 $generated@@468)) $generated@@468) ($generated@@82 ($generated@@352 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@69) (= ($generated@@232 ($generated@@294 $generated@@469) $generated@@470) ($generated@@82 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@232 ($generated@@294 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@90 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@87 $generated@@472 $generated@@2)) (<= 0 ($generated@@307 $generated@@471))))
 :pattern ( ($generated@@307 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@281 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@280 $generated@@474)) (<= 0 ($generated@@279 $generated@@473))))
 :pattern ( ($generated@@279 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@424 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@424 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@424 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@424 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@77 ($generated@@424 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@69)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@69) (= (type $generated@@488) $generated@@69)) (= ($generated@@485 ($generated@@432 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@432 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@69)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@69) (= (type $generated@@492) $generated@@69)) (= ($generated@@489 ($generated@@432 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@432 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@77 ($generated@@432 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) (= (type $generated@@496) $generated@@163)) (= ($generated@@271 ($generated@@231 $generated@@495 $generated@@496)) $generated@@62))
 :pattern ( ($generated@@231 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@69)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@69) (= (type $generated@@500) $generated@@69)) (= ($generated@@497 ($generated@@154 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@154 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@69) (= (type $generated@@504) $generated@@69)) (= ($generated@@501 ($generated@@154 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@154 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@163) (= (type $generated@@506) $generated@@163)) (= ($generated@@161 ($generated@@231 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@231 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@163) (= (type $generated@@508) $generated@@163)) (= ($generated@@162 ($generated@@231 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@231 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@281 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@280 $generated@@163)) (= (type $generated@@516) $generated@@69)) (= (type $generated@@517) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@279 $generated@@515))) ($generated@@265 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@85 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@86 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@86 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@521 ($generated@@244 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@244 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@77 ($generated@@244 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@525 ($generated@@249 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@249 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@77 ($generated@@249 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@69) (= ($generated@@529 ($generated@@168 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@168 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@69) (= ($generated@@77 ($generated@@168 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@69) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@69) (= ($generated@@77 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@271 ($generated@@289 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@289 $generated@@537))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@286 ($generated@@289 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@289 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@352 $generated@@540 ($generated@@294 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@294 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@315 $generated@@163 $generated@@163)) (= (type $generated@@542) $generated@@69)) (= (type $generated@@543) $generated@@69)) (= ($generated@@82 $generated@@541 ($generated@@424 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@163) ($generated@@0 ($generated@@92 ($generated@@313 $generated@@541) $generated@@544))) (and ($generated@@232 ($generated@@92 ($generated@@399 $generated@@541) $generated@@544) $generated@@543) ($generated@@232 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@92 ($generated@@399 $generated@@541) $generated@@544))
 :pattern ( ($generated@@92 ($generated@@313 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@82 $generated@@541 ($generated@@424 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@333 $generated@@163 $generated@@163)) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@69)) (= ($generated@@82 $generated@@545 ($generated@@432 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) ($generated@@0 ($generated@@92 ($generated@@331 $generated@@545) $generated@@548))) (and ($generated@@232 ($generated@@92 ($generated@@407 $generated@@545) $generated@@548) $generated@@547) ($generated@@232 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@545) $generated@@548))
 :pattern ( ($generated@@92 ($generated@@331 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@82 $generated@@545 ($generated@@432 $generated@@546 $generated@@547)))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@549 T@U) ($generated@@550 Int) ) (!  (=> (and (= (type $generated@@549) $generated@@81) (or ($generated@@261 $generated@@549 $generated@@550) (and (not (= 2 $generated@@79)) (and (and ($generated@@82 $generated@@549 $generated@@229) (<= ($generated@@254 0) $generated@@550)) (not (= $generated@@550 7)))))) (and (= ($generated@@260 $generated@@549 $generated@@550) ($generated@@80 $generated@@549)) (<= ($generated@@254 0) ($generated@@260 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@260 $generated@@549 $generated@@550))
))))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@163) (= (type $generated@@554) $generated@@163)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@231 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@231 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@163)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@231 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@231 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@82 ($generated@@289 $generated@@557) $generated@@229) ($generated@@82 ($generated@@8 $generated@@557) $generated@@46))
 :pattern ( ($generated@@82 ($generated@@289 $generated@@557) $generated@@229))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@69)) (= (type $generated@@560) $generated@@69)) ($generated@@232 $generated@@558 ($generated@@424 $generated@@559 $generated@@560))) (and (= ($generated@@294 ($generated@@352 ($generated@@315 $generated@@163 $generated@@163) $generated@@558)) $generated@@558) ($generated@@82 ($generated@@352 ($generated@@315 $generated@@163 $generated@@163) $generated@@558) ($generated@@424 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@232 $generated@@558 ($generated@@424 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@163) (= (type $generated@@562) $generated@@69)) (= (type $generated@@563) $generated@@69)) ($generated@@232 $generated@@561 ($generated@@432 $generated@@562 $generated@@563))) (and (= ($generated@@294 ($generated@@352 ($generated@@333 $generated@@163 $generated@@163) $generated@@561)) $generated@@561) ($generated@@82 ($generated@@352 ($generated@@333 $generated@@163 $generated@@163) $generated@@561) ($generated@@432 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@232 $generated@@561 ($generated@@432 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@69) (= (type $generated@@565) $generated@@69)) (= (type $generated@@566) $generated@@163)) ($generated@@232 $generated@@566 ($generated@@154 $generated@@564 $generated@@565))) (and (= ($generated@@294 ($generated@@352 $generated@@81 $generated@@566)) $generated@@566) ($generated@@82 ($generated@@352 $generated@@81 $generated@@566) ($generated@@154 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@232 $generated@@566 ($generated@@154 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@92 ($generated@@443 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@92 ($generated@@443 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@74)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@69) (= (type $generated@@572) $generated@@69)) (and (= ($generated@@77 ($generated@@154 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@154 $generated@@571 $generated@@572)) $generated@@67)))
 :pattern ( ($generated@@154 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@81) (= (type $generated@@574) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@264 $generated@@574) (and ($generated@@150 $generated@@573) ($generated@@85 $generated@@573 $generated@@229 $generated@@574)))) ($generated@@85 ($generated@@8 ($generated@@286 $generated@@573)) $generated@@46 $generated@@574))
 :pattern ( ($generated@@85 ($generated@@8 ($generated@@286 $generated@@573)) $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 Int) ($generated@@577 Int) ) (! (= ($generated@@575 $generated@@576 $generated@@577) (* $generated@@576 $generated@@577))
 :pattern ( ($generated@@575 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@81) (= ($generated@@551 ($generated@@294 $generated@@578)) ($generated@@552 $generated@@578)))
 :pattern ( ($generated@@551 ($generated@@294 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@163) ($generated@@232 $generated@@579 ($generated@@86 0))) (and (= ($generated@@294 ($generated@@352 $generated@@2 $generated@@579)) $generated@@579) ($generated@@82 ($generated@@352 ($generated@@87 $generated@@163 $generated@@4) $generated@@579) ($generated@@86 0))))
 :pattern ( ($generated@@232 $generated@@579 ($generated@@86 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@163) (= (type $generated@@581) $generated@@69)) ($generated@@232 $generated@@580 ($generated@@244 $generated@@581))) (and (= ($generated@@294 ($generated@@352 ($generated@@87 $generated@@163 $generated@@4) $generated@@580)) $generated@@580) ($generated@@82 ($generated@@352 ($generated@@87 $generated@@163 $generated@@4) $generated@@580) ($generated@@244 $generated@@581))))
 :pattern ( ($generated@@232 $generated@@580 ($generated@@244 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@163) (= (type $generated@@583) $generated@@69)) ($generated@@232 $generated@@582 ($generated@@249 $generated@@583))) (and (= ($generated@@294 ($generated@@352 ($generated@@87 $generated@@163 $generated@@4) $generated@@582)) $generated@@582) ($generated@@82 ($generated@@352 ($generated@@87 $generated@@163 $generated@@4) $generated@@582) ($generated@@249 $generated@@583))))
 :pattern ( ($generated@@232 $generated@@582 ($generated@@249 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@163) (= (type $generated@@585) $generated@@69)) ($generated@@232 $generated@@584 ($generated@@168 $generated@@585))) (and (= ($generated@@294 ($generated@@352 ($generated@@87 $generated@@163 $generated@@2) $generated@@584)) $generated@@584) ($generated@@82 ($generated@@352 ($generated@@87 $generated@@163 $generated@@2) $generated@@584) ($generated@@168 $generated@@585))))
 :pattern ( ($generated@@232 $generated@@584 ($generated@@168 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@163) (= (type $generated@@587) $generated@@69)) ($generated@@232 $generated@@586 ($generated@@509 $generated@@587))) (and (= ($generated@@294 ($generated@@352 ($generated@@280 $generated@@163) $generated@@586)) $generated@@586) ($generated@@82 ($generated@@352 ($generated@@280 $generated@@163) $generated@@586) ($generated@@509 $generated@@587))))
 :pattern ( ($generated@@232 $generated@@586 ($generated@@509 $generated@@587)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@569 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@229) $generated@@65))
(assert (= ($generated@@569 $generated@@229) $generated@@68))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@87 $generated@@163 $generated@@2)) (= (type $generated@@589) $generated@@69)) (= (type $generated@@590) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@588 ($generated@@168 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@163) (< 0 ($generated ($generated@@92 $generated@@588 $generated@@591)))) ($generated@@265 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@85 $generated@@588 ($generated@@168 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@81) (= (type $generated@@593) $generated@@69)) (= (type $generated@@594) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@264 $generated@@594) (and ($generated@@153 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@69) ($generated@@85 $generated@@592 ($generated@@154 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@85 $generated@@592 ($generated@@154 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@265 ($generated@@161 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@265 ($generated@@161 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@81) (= (type $generated@@597) $generated@@69)) (= (type $generated@@598) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@264 $generated@@598) (and ($generated@@153 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@69) ($generated@@85 $generated@@596 ($generated@@154 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 ($generated@@154 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@265 ($generated@@162 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@265 ($generated@@162 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@163) (= (type $generated@@601) $generated@@163)) (= ($generated@@231 ($generated@@256 $generated@@600) ($generated@@256 $generated@@601)) ($generated@@256 ($generated@@231 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@231 ($generated@@256 $generated@@600) ($generated@@256 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@254 $generated@@602))) ($generated@@256 ($generated@@294 ($generated@@8 $generated@@602))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@254 $generated@@602))))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@289 ($generated@@254 $generated@@603)) ($generated@@256 ($generated@@289 $generated@@603)))
 :pattern ( ($generated@@289 ($generated@@254 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@294 ($generated@@256 $generated@@604)) ($generated@@256 ($generated@@294 $generated@@604)))
 :pattern ( ($generated@@294 ($generated@@256 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@281 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@280 $generated@@606)) (= ($generated@@279 $generated@@605) 0)) (= $generated@@605 ($generated@@278 $generated@@606))))
 :pattern ( ($generated@@279 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@607) ($generated@@87 $generated@@610 $generated@@2)) (= (type $generated@@609) $generated@@2)) (<= 0 ($generated $generated@@609))) (= ($generated@@307 ($generated@@93 $generated@@607 $generated@@608 $generated@@609)) (+ (- ($generated@@307 $generated@@607) ($generated ($generated@@92 $generated@@607 $generated@@608))) ($generated $generated@@609)))))
 :pattern ( ($generated@@307 ($generated@@93 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@2)) ($generated@@85 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@85 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@3)) ($generated@@85 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@616) $generated@@4)) ($generated@@85 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@85 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@618) $generated@@467)) ($generated@@85 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@85 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@620) $generated@@163)) ($generated@@85 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@85 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@280 $generated@@163)) (= (type $generated@@622) $generated@@69)) (= ($generated@@82 $generated@@621 ($generated@@509 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@279 $generated@@621))) ($generated@@232 ($generated@@510 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@510 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@82 $generated@@621 ($generated@@509 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@279 $generated@@625))) (< ($generated@@552 ($generated@@352 $generated@@81 ($generated@@510 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@552 ($generated@@352 $generated@@81 ($generated@@510 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@315 $generated@@163 $generated@@163)) (= (type $generated@@628) $generated@@69)) (= (type $generated@@629) $generated@@69)) ($generated@@82 $generated@@627 ($generated@@424 $generated@@628 $generated@@629))) (and (and ($generated@@82 ($generated@@313 $generated@@627) ($generated@@244 $generated@@628)) ($generated@@82 ($generated@@361 $generated@@627) ($generated@@244 $generated@@629))) ($generated@@82 ($generated@@398 $generated@@627) ($generated@@244 ($generated@@154 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@82 $generated@@627 ($generated@@424 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@333 $generated@@163 $generated@@163)) (= (type $generated@@631) $generated@@69)) (= (type $generated@@632) $generated@@69)) ($generated@@82 $generated@@630 ($generated@@432 $generated@@631 $generated@@632))) (and (and ($generated@@82 ($generated@@331 $generated@@630) ($generated@@249 $generated@@631)) ($generated@@82 ($generated@@372 $generated@@630) ($generated@@249 $generated@@632))) ($generated@@82 ($generated@@406 $generated@@630) ($generated@@249 ($generated@@154 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@82 $generated@@630 ($generated@@432 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@82 $generated@@633 $generated@@46))
 :pattern ( ($generated@@82 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@82 $generated@@634 $generated@@47))
 :pattern ( ($generated@@82 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@82 $generated@@635 $generated@@44))
 :pattern ( ($generated@@82 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@467) ($generated@@82 $generated@@636 $generated@@45))
 :pattern ( ($generated@@82 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@163) ($generated@@82 $generated@@637 $generated@@48))
 :pattern ( ($generated@@82 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(assert  (and (and (and (= (type $generated@@640) $generated@@81) (= (type $generated@@642) ($generated@@175 $generated@@88 $generated@@4))) (= (type $generated@@643) $generated@@88)) (= (type $generated@@644) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@649 true))
(let (($generated@@650  (=> (and (and (not (= $generated@@638 9)) (= $generated@@639 ($generated@@80 $generated@@640))) (and (<= ($generated@@254 0) $generated@@641) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@639 9)))))
(let (($generated@@651  (=> (and (= $generated@@642 ($generated@@174 $generated@@643 $generated@@644 $generated@@60 false)) (= $generated@@638 ($generated@@80 $generated@@640))) (and (=> (= (ControlFlow 0 4) 2) $generated@@650) (=> (= (ControlFlow 0 4) 3) $generated@@649)))))
(let (($generated@@652  (=> (and ($generated@@264 $generated@@644) ($generated@@645 $generated@@644)) (=> (and (and ($generated@@82 $generated@@640 $generated@@229) ($generated@@85 $generated@@640 $generated@@229 $generated@@644)) ($generated@@149 $generated@@640)) (=> (and (and (and (<= ($generated@@254 0) $generated@@646) true) (and (<= ($generated@@254 0) $generated@@647) true)) (and (and (<= ($generated@@254 0) $generated@@648) true) (and (= 3 $generated@@79) (= (ControlFlow 0 5) 4)))) $generated@@651)))))
$generated@@652)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U Int) Int)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@236 (T@U Int) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (Int Int) Int)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@78) 11) (= (type $generated@@80) $generated@@66)))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@81 T@U) ) (!  (=> (= (type $generated@@81) $generated@@78) ($generated@@79 ($generated@@8 ($generated@@77 $generated@@81)) $generated@@80))
 :pattern ( ($generated@@77 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@69 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@69 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@66)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@144 $generated@@80 $generated@@145))
 :pattern ( ($generated@@82 $generated@@144 $generated@@80 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@79 $generated@@146 ($generated@@83 0)))
 :pattern ( ($generated@@79 $generated@@146 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@79 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@79 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@78)
 :pattern ( ($generated@@156 $generated@@158))
)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@78)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@149) (= (type $generated@@161) $generated@@149)) true) (= ($generated@@155 $generated@@160 $generated@@161)  (and (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)) (= ($generated@@157 $generated@@160) ($generated@@157 $generated@@161)))))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@166) $generated@@66)) ($generated@@79 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@79 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@85 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@69 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@85) (= (type $generated@@217) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@218) ($generated@@68 $generated@@4))) (= (type $generated@@220) $generated@@85)) (= (type $generated@@221) ($generated@@68 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@149)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@66) (= (type $generated@@228) $generated@@66)) (= (type $generated@@229) $generated@@78)) (= (type $generated@@230) $generated@@78)) (= ($generated@@79 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@79 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@149) (= (type $generated@@232) $generated@@149)) (= ($generated@@155 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@155 $generated@@231 $generated@@232))
)))
(assert  (and (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@234 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@234 $generated@@238))
)) (= (type $generated@@237) $generated@@66)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@240 T@U) ($generated@@241 Int) ) (!  (=> (and (= (type $generated@@240) $generated@@78) (or ($generated@@236 ($generated@@234 $generated@@240) ($generated@@235 $generated@@241)) (and (not (= 2 $generated@@76)) (and (and ($generated@@224 $generated@@240 $generated@@237) (<= ($generated@@235 0) $generated@@241)) ($generated@@0 ($generated@@234 ($generated@@11 (not (= $generated@@241 7))))))))) (= ($generated@@233 ($generated@@234 $generated@@240) ($generated@@235 $generated@@241)) ($generated@@235 $generated@@241)))
 :weight 3
 :pattern ( ($generated@@233 ($generated@@234 $generated@@240) ($generated@@235 $generated@@241)))
))))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@66)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@245) $generated@@66)) (= ($generated@@79 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@78) ($generated@@0 ($generated@@89 $generated@@244 $generated@@246))) ($generated@@224 $generated@@246 $generated@@245))
 :pattern ( ($generated@@89 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@79 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@250) $generated@@66)) (= ($generated@@79 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@78) ($generated@@0 ($generated@@89 $generated@@249 $generated@@251))) ($generated@@224 $generated@@251 $generated@@250))
 :pattern ( ($generated@@89 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@79 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@235 $generated@@252) $generated@@252)
 :pattern ( ($generated@@235 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@234 $generated@@253) $generated@@253)
 :pattern ( ($generated@@234 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@78)) (= (type $generated@@259) $generated@@78)) (= (type $generated@@260) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@254 $generated@@260)) (= ($generated@@82 ($generated@@223 $generated@@258 $generated@@259) ($generated@@148 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@82 ($generated@@223 $generated@@258 $generated@@259) ($generated@@148 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@149) (= ($generated@@147 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@149) ($generated@@147 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@78) (= (type $generated@@266) $generated@@78)) (= $generated@@264 ($generated@@223 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@147 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@2) (= ($generated@@79 $generated@@275 $generated@@80) (<= ($generated@@235 0) ($generated $generated@@275))))
 :pattern ( ($generated@@79 $generated@@275 $generated@@80))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@78)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@66) (= (type $generated@@280) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@255 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@82 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@255 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@282) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@283) $generated@@78)) (= (type $generated@@284) $generated@@66)) ($generated@@140 $generated@@281 $generated@@282)) ($generated@@255 $generated@@283 $generated@@284 $generated@@281)) ($generated@@255 $generated@@283 $generated@@284 $generated@@282))
 :pattern ( ($generated@@140 $generated@@281 $generated@@282) ($generated@@255 $generated@@283 $generated@@284 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@286) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@288) $generated@@66)) ($generated@@140 $generated@@285 $generated@@286)) ($generated@@82 $generated@@287 $generated@@288 $generated@@285)) ($generated@@82 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@140 $generated@@285 $generated@@286) ($generated@@82 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@84 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@87 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@84 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@89 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@84 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@89 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@89 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@84 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@89 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@332) $generated@@78)) (and ($generated@@254 $generated@@331) ($generated@@255 $generated@@332 $generated@@237 $generated@@331))) ($generated@@82 ($generated@@8 ($generated@@77 $generated@@332)) $generated@@80 $generated@@331))
 :pattern ( ($generated@@77 $generated@@332) ($generated@@255 $generated@@332 $generated@@237 $generated@@331))
))))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@87 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@84 $generated@@334 $generated@@2)) (= ($generated@@163 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@89 $generated@@333 $generated@@335))) (<= ($generated ($generated@@89 $generated@@333 $generated@@335)) ($generated@@289 $generated@@333))))
 :pattern ( ($generated@@89 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@163 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@78) ($generated@@224 $generated@@339 $generated@@80)) (and (= ($generated@@276 ($generated@@336 $generated@@2 $generated@@339)) $generated@@339) ($generated@@79 ($generated@@336 $generated@@2 $generated@@339) $generated@@80)))
 :pattern ( ($generated@@224 $generated@@339 $generated@@80))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@340 T@U) ($generated@@341 Int) ) (!  (=> (and (= (type $generated@@340) $generated@@78) (or ($generated@@236 $generated@@340 $generated@@341) (and (not (= 2 $generated@@76)) (and (and ($generated@@224 $generated@@340 $generated@@237) (<= ($generated@@235 0) $generated@@341)) (not (= $generated@@341 7)))))) (= ($generated@@233 $generated@@340 $generated@@341) $generated@@341))
 :pattern ( ($generated@@233 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@299 (type $generated@@342))))
(let (($generated@@344 ($generated@@298 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@297 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@296 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@295 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@299 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@299 (type $generated@@349))))
(let (($generated@@351 ($generated@@298 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@297 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@296 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@89 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@317 (type $generated@@353))))
(let (($generated@@355 ($generated@@316 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@315 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@314 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@313 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@317 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@84 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@317 (type $generated@@360))))
(let (($generated@@362 ($generated@@316 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@315 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@314 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@89 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@365) $generated@@66)) (= ($generated@@79 $generated@@364 ($generated@@162 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@364 $generated@@366)))) ($generated@@224 $generated@@366 $generated@@365))
 :pattern ( ($generated@@89 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@79 $generated@@364 ($generated@@162 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@368) $generated@@66)) (= (type $generated@@369) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@367 ($generated@@242 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@78) ($generated@@0 ($generated@@89 $generated@@367 $generated@@370))) ($generated@@255 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@89 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@82 $generated@@367 ($generated@@242 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@372) $generated@@66)) (= (type $generated@@373) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@371 ($generated@@247 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@78) ($generated@@0 ($generated@@89 $generated@@371 $generated@@374))) ($generated@@255 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@89 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@82 $generated@@371 ($generated@@247 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated ($generated@@89 ($generated@@290 $generated@@376) $generated@@375)) 0))
 :pattern ( (let (($generated@@376 (type $generated@@375)))
($generated@@89 ($generated@@290 $generated@@376) $generated@@375)))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@299 (type $generated@@380))))
(let (($generated@@382 ($generated@@298 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@84 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@297 $generated@@78 $generated@@78)) (= (type $generated@@384) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@89 ($generated@@295 $generated@@383) ($generated@@156 ($generated@@336 $generated@@149 $generated@@384)))) (= ($generated@@89 ($generated@@378 $generated@@383) ($generated@@156 ($generated@@336 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@336 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@89 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@317 (type $generated@@388))))
(let (($generated@@390 ($generated@@316 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@84 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@315 $generated@@78 $generated@@78)) (= (type $generated@@392) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@391) ($generated@@156 ($generated@@336 $generated@@149 $generated@@392)))) (= ($generated@@89 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@336 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@336 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@89 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@298 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@297 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@89 ($generated@@346 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@89 ($generated@@295 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@89 ($generated@@378 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@393) $generated@@397))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@89 ($generated@@346 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@316 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@315 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@89 ($generated@@357 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@89 ($generated@@313 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@89 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@398) $generated@@402))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@89 ($generated@@357 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@66)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@297 $generated@@78 $generated@@78)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@406) $generated@@410))) (and ($generated@@255 ($generated@@89 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@255 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@82 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@66)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@315 $generated@@78 $generated@@78)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@414) $generated@@418))) (and ($generated@@255 ($generated@@89 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@255 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@82 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@419) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@420) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@421) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@419 $generated@@421))) (and ($generated@@140 $generated@@419 $generated@@420) ($generated@@140 $generated@@420 $generated@@421))) ($generated@@140 $generated@@419 $generated@@421))
 :pattern ( ($generated@@140 $generated@@419 $generated@@420) ($generated@@140 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@84 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@317 (type $generated@@424))))
(let (($generated@@426 ($generated@@316 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@315 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@314 $generated@@426 $generated@@425)) (= ($generated@@313 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@313 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@317 (type $generated@@427))))
(let (($generated@@429 ($generated@@316 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@315 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@314 $generated@@429 $generated@@428)) (= ($generated@@357 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@357 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@317 (type $generated@@430))))
(let (($generated@@432 ($generated@@316 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@315 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@314 $generated@@432 $generated@@431)) (= ($generated@@385 $generated@@430) ($generated@@422 $generated@@78))))))
 :pattern ( ($generated@@385 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@299 (type $generated@@433))))
(let (($generated@@435 ($generated@@298 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@297 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@296 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@78) (= (type $generated@@437) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@377 $generated@@433) ($generated@@276 ($generated@@223 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@377 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@317 (type $generated@@438))))
(let (($generated@@440 ($generated@@316 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@315 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@314 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@78) (= (type $generated@@442) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@385 $generated@@438) ($generated@@276 ($generated@@223 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@78) ($generated@@224 $generated@@443 $generated@@46)) (and (= ($generated@@276 ($generated@@336 $generated@@2 $generated@@443)) $generated@@443) ($generated@@79 ($generated@@336 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@78) ($generated@@224 $generated@@444 $generated@@47)) (and (= ($generated@@276 ($generated@@336 $generated@@3 $generated@@444)) $generated@@444) ($generated@@79 ($generated@@336 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@78) ($generated@@224 $generated@@445 $generated@@44)) (and (= ($generated@@276 ($generated@@336 $generated@@4 $generated@@445)) $generated@@445) ($generated@@79 ($generated@@336 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@78) ($generated@@224 $generated@@447 $generated@@45)) (and (= ($generated@@276 ($generated@@336 $generated@@446 $generated@@447)) $generated@@447) ($generated@@79 ($generated@@336 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@66) (= ($generated@@224 ($generated@@276 $generated@@448) $generated@@449) ($generated@@79 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@224 ($generated@@276 $generated@@448) $generated@@449))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@450 T@U) ($generated@@451 Int) ) (!  (=> (and (= (type $generated@@450) $generated@@78) (or ($generated@@236 $generated@@450 $generated@@451) (and (not (= 2 $generated@@76)) (and (and ($generated@@224 $generated@@450 $generated@@237) (<= ($generated@@235 0) $generated@@451)) (not (= $generated@@451 7)))))) (and (= ($generated@@233 $generated@@450 $generated@@451) ($generated@@77 $generated@@450)) (<= ($generated@@235 0) ($generated@@233 $generated@@450 $generated@@451))))
 :pattern ( ($generated@@233 $generated@@450 $generated@@451))
))))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@87 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@84 $generated@@453 $generated@@2)) (<= 0 ($generated@@289 $generated@@452))))
 :pattern ( ($generated@@289 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@270 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@269 $generated@@455)) (<= 0 ($generated@@268 $generated@@454))))
 :pattern ( ($generated@@268 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@403 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@403 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@74 ($generated@@403 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@411 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@411 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@411 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@74 ($generated@@411 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@78) (= (type $generated@@477) $generated@@78)) (= ($generated@@261 ($generated@@223 $generated@@476 $generated@@477)) $generated@@62))
 :pattern ( ($generated@@223 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@148 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@148 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@148 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@148 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@78) (= (type $generated@@487) $generated@@78)) (= ($generated@@156 ($generated@@223 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@223 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@78) (= (type $generated@@489) $generated@@78)) (= ($generated@@157 ($generated@@223 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@223 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@270 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@269 $generated@@78)) (= (type $generated@@497) $generated@@66)) (= (type $generated@@498) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@268 $generated@@496))) ($generated@@255 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@82 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@83 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@83 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@242 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@242 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@242 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@247 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@247 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@162 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@162 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@162 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@74 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@336 $generated@@519 ($generated@@276 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@276 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@297 $generated@@78 $generated@@78)) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) (= ($generated@@79 $generated@@520 ($generated@@403 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@295 $generated@@520) $generated@@523))) (and ($generated@@224 ($generated@@89 ($generated@@378 $generated@@520) $generated@@523) $generated@@522) ($generated@@224 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@520) $generated@@523))
 :pattern ( ($generated@@89 ($generated@@295 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@79 $generated@@520 ($generated@@403 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@315 $generated@@78 $generated@@78)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@79 $generated@@524 ($generated@@411 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@313 $generated@@524) $generated@@527))) (and ($generated@@224 ($generated@@89 ($generated@@386 $generated@@524) $generated@@527) $generated@@526) ($generated@@224 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@524) $generated@@527))
 :pattern ( ($generated@@89 ($generated@@313 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@79 $generated@@524 ($generated@@411 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@78) (= (type $generated@@531) $generated@@78)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@223 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@223 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@78) (= (type $generated@@533) $generated@@78)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@223 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@223 $generated@@532 $generated@@533))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@534 T@U) ($generated@@535 Int) ) (!  (=> (and (= (type $generated@@534) $generated@@78) (or ($generated@@236 $generated@@534 ($generated@@235 $generated@@535)) (and (not (= 2 $generated@@76)) (and (and ($generated@@224 $generated@@534 $generated@@237) (<= ($generated@@235 0) $generated@@535)) ($generated@@0 ($generated@@234 ($generated@@11 (not (= $generated@@535 7))))))))) (= ($generated@@233 $generated@@534 ($generated@@235 $generated@@535)) ($generated@@235 $generated@@535)))
 :weight 3
 :pattern ( ($generated@@233 $generated@@534 ($generated@@235 $generated@@535)))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@78) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@66)) ($generated@@224 $generated@@536 ($generated@@403 $generated@@537 $generated@@538))) (and (= ($generated@@276 ($generated@@336 ($generated@@297 $generated@@78 $generated@@78) $generated@@536)) $generated@@536) ($generated@@79 ($generated@@336 ($generated@@297 $generated@@78 $generated@@78) $generated@@536) ($generated@@403 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@403 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@78) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) ($generated@@224 $generated@@539 ($generated@@411 $generated@@540 $generated@@541))) (and (= ($generated@@276 ($generated@@336 ($generated@@315 $generated@@78 $generated@@78) $generated@@539)) $generated@@539) ($generated@@79 ($generated@@336 ($generated@@315 $generated@@78 $generated@@78) $generated@@539) ($generated@@411 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@411 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@66) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@78)) ($generated@@224 $generated@@544 ($generated@@148 $generated@@542 $generated@@543))) (and (= ($generated@@276 ($generated@@336 $generated@@149 $generated@@544)) $generated@@544) ($generated@@79 ($generated@@336 $generated@@149 $generated@@544) ($generated@@148 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@148 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@89 ($generated@@422 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@89 ($generated@@422 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@71)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@549 $generated@@550)) $generated@@63) (= ($generated@@547 ($generated@@148 $generated@@549 $generated@@550)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 Int) ($generated@@553 Int) ) (! (= ($generated@@551 $generated@@552 $generated@@553) (* $generated@@552 $generated@@553))
 :pattern ( ($generated@@551 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@149) (= ($generated@@528 ($generated@@276 $generated@@554)) ($generated@@529 $generated@@554)))
 :pattern ( ($generated@@528 ($generated@@276 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@78) ($generated@@224 $generated@@555 ($generated@@83 0))) (and (= ($generated@@276 ($generated@@336 $generated@@2 $generated@@555)) $generated@@555) ($generated@@79 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@555) ($generated@@83 0))))
 :pattern ( ($generated@@224 $generated@@555 ($generated@@83 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@78) (= (type $generated@@557) $generated@@66)) ($generated@@224 $generated@@556 ($generated@@242 $generated@@557))) (and (= ($generated@@276 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@556)) $generated@@556) ($generated@@79 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@556) ($generated@@242 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@242 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@78) (= (type $generated@@559) $generated@@66)) ($generated@@224 $generated@@558 ($generated@@247 $generated@@559))) (and (= ($generated@@276 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@558)) $generated@@558) ($generated@@79 ($generated@@336 ($generated@@84 $generated@@78 $generated@@4) $generated@@558) ($generated@@247 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@247 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@78) (= (type $generated@@561) $generated@@66)) ($generated@@224 $generated@@560 ($generated@@162 $generated@@561))) (and (= ($generated@@276 ($generated@@336 ($generated@@84 $generated@@78 $generated@@2) $generated@@560)) $generated@@560) ($generated@@79 ($generated@@336 ($generated@@84 $generated@@78 $generated@@2) $generated@@560) ($generated@@162 $generated@@561))))
 :pattern ( ($generated@@224 $generated@@560 ($generated@@162 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@78) (= (type $generated@@563) $generated@@66)) ($generated@@224 $generated@@562 ($generated@@490 $generated@@563))) (and (= ($generated@@276 ($generated@@336 ($generated@@269 $generated@@78) $generated@@562)) $generated@@562) ($generated@@79 ($generated@@336 ($generated@@269 $generated@@78) $generated@@562) ($generated@@490 $generated@@563))))
 :pattern ( ($generated@@224 $generated@@562 ($generated@@490 $generated@@563)))
)))
(assert (= ($generated@@74 $generated@@80) $generated@@61))
(assert (= ($generated@@547 $generated@@80) $generated@@64))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@564 ($generated@@162 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@564 $generated@@567)))) ($generated@@255 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@89 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@82 $generated@@564 ($generated@@162 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@149) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@254 $generated@@570) (and ($generated@@147 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@66) ($generated@@82 $generated@@568 ($generated@@148 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@82 $generated@@568 ($generated@@148 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@255 ($generated@@156 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@255 ($generated@@156 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@149) (= (type $generated@@573) $generated@@66)) (= (type $generated@@574) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@254 $generated@@574) (and ($generated@@147 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@66) ($generated@@82 $generated@@572 ($generated@@148 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@82 $generated@@572 ($generated@@148 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@255 ($generated@@157 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@255 ($generated@@157 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@78) (= (type $generated@@577) $generated@@78)) (= ($generated@@223 ($generated@@234 $generated@@576) ($generated@@234 $generated@@577)) ($generated@@234 ($generated@@223 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@223 ($generated@@234 $generated@@576) ($generated@@234 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@235 $generated@@578))) ($generated@@234 ($generated@@276 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@235 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@276 ($generated@@234 $generated@@579)) ($generated@@234 ($generated@@276 $generated@@579)))
 :pattern ( ($generated@@276 ($generated@@234 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@270 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@269 $generated@@581)) (= ($generated@@268 $generated@@580) 0)) (= $generated@@580 ($generated@@267 $generated@@581))))
 :pattern ( ($generated@@268 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@84 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@289 ($generated@@90 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@289 $generated@@582) ($generated ($generated@@89 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@289 ($generated@@90 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@587) $generated@@2)) ($generated@@82 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@82 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@589) $generated@@3)) ($generated@@82 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@82 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@591) $generated@@4)) ($generated@@82 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@82 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@593) $generated@@446)) ($generated@@82 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@82 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@595) $generated@@78)) ($generated@@82 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@82 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@269 $generated@@78)) (= (type $generated@@597) $generated@@66)) (= ($generated@@79 $generated@@596 ($generated@@490 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@268 $generated@@596))) ($generated@@224 ($generated@@491 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@491 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@79 $generated@@596 ($generated@@490 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@269 $generated@@78)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@268 $generated@@600))) (< ($generated@@529 ($generated@@336 $generated@@149 ($generated@@491 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@529 ($generated@@336 $generated@@149 ($generated@@491 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@297 $generated@@78 $generated@@78)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@79 $generated@@602 ($generated@@403 $generated@@603 $generated@@604))) (and (and ($generated@@79 ($generated@@295 $generated@@602) ($generated@@242 $generated@@603)) ($generated@@79 ($generated@@346 $generated@@602) ($generated@@242 $generated@@604))) ($generated@@79 ($generated@@377 $generated@@602) ($generated@@242 ($generated@@148 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@79 $generated@@602 ($generated@@403 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@315 $generated@@78 $generated@@78)) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) $generated@@66)) ($generated@@79 $generated@@605 ($generated@@411 $generated@@606 $generated@@607))) (and (and ($generated@@79 ($generated@@313 $generated@@605) ($generated@@247 $generated@@606)) ($generated@@79 ($generated@@357 $generated@@605) ($generated@@247 $generated@@607))) ($generated@@79 ($generated@@385 $generated@@605) ($generated@@247 ($generated@@148 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@79 $generated@@605 ($generated@@411 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@79 $generated@@608 $generated@@46))
 :pattern ( ($generated@@79 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@79 $generated@@609 $generated@@47))
 :pattern ( ($generated@@79 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@79 $generated@@610 $generated@@44))
 :pattern ( ($generated@@79 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@446) ($generated@@79 $generated@@611 $generated@@45))
 :pattern ( ($generated@@79 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@78) ($generated@@79 $generated@@612 $generated@@48))
 :pattern ( ($generated@@79 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(assert  (and (and (and (= (type $generated@@615) $generated@@78) (= (type $generated@@617) ($generated@@169 $generated@@85 $generated@@4))) (= (type $generated@@618) $generated@@85)) (= (type $generated@@619) ($generated@@84 $generated@@85 $generated@@86))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@624 true))
(let (($generated@@625  (=> (and (and (not (= $generated@@613 9)) (= $generated@@614 ($generated@@77 $generated@@615))) (and (<= ($generated@@235 0) $generated@@616) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@614 9)))))
(let (($generated@@626  (=> (and (= $generated@@617 ($generated@@168 $generated@@618 $generated@@619 $generated@@60 false)) (= $generated@@613 ($generated@@77 $generated@@615))) (and (=> (= (ControlFlow 0 4) 2) $generated@@625) (=> (= (ControlFlow 0 4) 3) $generated@@624)))))
(let (($generated@@627  (=> (and (and ($generated@@254 $generated@@619) ($generated@@620 $generated@@619)) (and ($generated@@224 $generated@@615 $generated@@237) ($generated@@255 $generated@@615 $generated@@237 $generated@@619))) (=> (and (and (and (<= ($generated@@235 0) $generated@@621) true) (and (<= ($generated@@235 0) $generated@@622) true)) (and (and (<= ($generated@@235 0) $generated@@623) true) (and (= 3 $generated@@76) (= (ControlFlow 0 5) 4)))) $generated@@626))))
$generated@@627)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@326 () T@U)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@444 (T@U Int) Int)
(declare-fun $generated@@445 (T@U Int) Bool)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (Int Int) Int)
(declare-fun $generated@@593 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@78) 11) (= (type $generated@@80) $generated@@66)))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@81 T@U) ) (!  (=> (= (type $generated@@81) $generated@@78) ($generated@@79 ($generated@@8 ($generated@@77 $generated@@81)) $generated@@80))
 :pattern ( ($generated@@77 $generated@@81))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 12)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@69 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@69 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@66)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@140 $generated@@141 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@85) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@141 $generated@@143) $generated@@60))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60)))
 :pattern ( ($generated@@91 ($generated@@89 $generated@@142 $generated@@143) $generated@@60))
)))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@144 $generated@@80 $generated@@145))
 :pattern ( ($generated@@82 $generated@@144 $generated@@80 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@79 $generated@@146 ($generated@@83 0)))
 :pattern ( ($generated@@79 $generated@@146 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@79 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@79 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@78)
 :pattern ( ($generated@@156 $generated@@158))
)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@78)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@149) (= (type $generated@@161) $generated@@149)) true) (= ($generated@@155 $generated@@160 $generated@@161)  (and (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)) (= ($generated@@157 $generated@@160) ($generated@@157 $generated@@161)))))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@166) $generated@@66)) ($generated@@79 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@79 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@85 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@69 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@85) (= (type $generated@@217) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@218) ($generated@@68 $generated@@4))) (= (type $generated@@220) $generated@@85)) (= (type $generated@@221) ($generated@@68 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@149)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@66) (= (type $generated@@228) $generated@@66)) (= (type $generated@@229) $generated@@78)) (= (type $generated@@230) $generated@@78)) (= ($generated@@79 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@79 ($generated@@223 $generated@@229 $generated@@230) ($generated@@148 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@149) (= (type $generated@@232) $generated@@149)) (= ($generated@@155 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@155 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@66)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@236) $generated@@66)) (= ($generated@@79 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@78) ($generated@@0 ($generated@@89 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@89 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@79 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@79 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@78) ($generated@@0 ($generated@@89 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@89 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@79 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@66) (= (type $generated@@252) $generated@@66)) (= (type $generated@@253) $generated@@78)) (= (type $generated@@254) $generated@@78)) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@249 $generated@@255)) (= ($generated@@82 ($generated@@223 $generated@@253 $generated@@254) ($generated@@148 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@82 ($generated@@223 $generated@@253 $generated@@254) ($generated@@148 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@149) (= ($generated@@147 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@149) ($generated@@147 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@78) (= (type $generated@@261) $generated@@78)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@147 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@2) (= ($generated@@79 $generated@@270 $generated@@80) (<= ($generated@@243 0) ($generated $generated@@270))))
 :pattern ( ($generated@@79 $generated@@270 $generated@@80))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@78)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@66) (= (type $generated@@275) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@250 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@82 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@250 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@277) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@278) $generated@@78)) (= (type $generated@@279) $generated@@66)) ($generated@@140 $generated@@276 $generated@@277)) ($generated@@250 $generated@@278 $generated@@279 $generated@@276)) ($generated@@250 $generated@@278 $generated@@279 $generated@@277))
 :pattern ( ($generated@@140 $generated@@276 $generated@@277) ($generated@@250 $generated@@278 $generated@@279 $generated@@276))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@280) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@281) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@283) $generated@@66)) ($generated@@140 $generated@@280 $generated@@281)) ($generated@@82 $generated@@282 $generated@@283 $generated@@280)) ($generated@@82 $generated@@282 $generated@@283 $generated@@281))
 :pattern ( ($generated@@140 $generated@@280 $generated@@281) ($generated@@82 $generated@@282 $generated@@283 $generated@@280))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@84 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@87 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@84 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@89 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 18)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@84 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@89 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@89 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 19)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@84 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@89 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@89 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert (= (type $generated@@326) $generated@@66))
(assert  (=> (< 1 $generated@@76) (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@327) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@328) $generated@@78)) (and ($generated@@249 $generated@@327) ($generated@@250 $generated@@328 $generated@@326 $generated@@327))) ($generated@@82 ($generated@@8 ($generated@@77 $generated@@328)) $generated@@80 $generated@@327))
 :pattern ( ($generated@@77 $generated@@328) ($generated@@250 $generated@@328 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@87 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@84 $generated@@330 $generated@@2)) (= ($generated@@163 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@89 $generated@@329 $generated@@331))) (<= ($generated ($generated@@89 $generated@@329 $generated@@331)) ($generated@@284 $generated@@329))))
 :pattern ( ($generated@@89 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@163 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@78) ($generated@@224 $generated@@335 $generated@@80)) (and (= ($generated@@271 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@79 ($generated@@332 $generated@@2 $generated@@335) $generated@@80)))
 :pattern ( ($generated@@224 $generated@@335 $generated@@80))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@294 (type $generated@@336))))
(let (($generated@@338 ($generated@@293 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@292 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@291 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@89 ($generated@@290 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@290 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@294 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@84 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@294 (type $generated@@343))))
(let (($generated@@345 ($generated@@293 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@292 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@291 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@89 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@312 (type $generated@@347))))
(let (($generated@@349 ($generated@@311 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@310 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@309 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@308 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@312 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@84 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@312 (type $generated@@354))))
(let (($generated@@356 ($generated@@311 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@310 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@309 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@89 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@359) $generated@@66)) (= ($generated@@79 $generated@@358 ($generated@@162 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@358 $generated@@360)))) ($generated@@224 $generated@@360 $generated@@359))
 :pattern ( ($generated@@89 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@79 $generated@@358 ($generated@@162 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@361 ($generated@@233 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@78) ($generated@@0 ($generated@@89 $generated@@361 $generated@@364))) ($generated@@250 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@89 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@82 $generated@@361 ($generated@@233 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@84 $generated@@78 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@365 ($generated@@238 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@78) ($generated@@0 ($generated@@89 $generated@@365 $generated@@368))) ($generated@@250 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@89 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@82 $generated@@365 ($generated@@238 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@89 ($generated@@285 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@89 ($generated@@285 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@294 (type $generated@@374))))
(let (($generated@@376 ($generated@@293 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@84 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@292 $generated@@78 $generated@@78)) (= (type $generated@@378) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@89 ($generated@@290 $generated@@377) ($generated@@156 ($generated@@332 $generated@@149 $generated@@378)))) (= ($generated@@89 ($generated@@372 $generated@@377) ($generated@@156 ($generated@@332 $generated@@149 $generated@@378))) ($generated@@157 ($generated@@332 $generated@@149 $generated@@378))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@84 $generated@@78 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@312 (type $generated@@382))))
(let (($generated@@384 ($generated@@311 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@84 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@310 $generated@@78 $generated@@78)) (= (type $generated@@386) $generated@@78)) (= ($generated@@0 ($generated@@89 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@89 ($generated@@308 $generated@@385) ($generated@@156 ($generated@@332 $generated@@149 $generated@@386)))) (= ($generated@@89 ($generated@@380 $generated@@385) ($generated@@156 ($generated@@332 $generated@@149 $generated@@386))) ($generated@@157 ($generated@@332 $generated@@149 $generated@@386))))))
 :pattern ( ($generated@@89 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@293 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@292 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@89 ($generated@@340 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@89 ($generated@@290 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@89 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@89 ($generated@@290 $generated@@387) $generated@@391))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@89 ($generated@@340 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@311 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@310 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@89 ($generated@@351 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@89 ($generated@@308 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@89 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@392) $generated@@396))
 :pattern ( ($generated@@89 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@89 ($generated@@351 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@292 $generated@@78 $generated@@78)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@290 $generated@@400) $generated@@404))) (and ($generated@@250 ($generated@@89 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@250 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@89 ($generated@@290 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@82 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@310 $generated@@78 $generated@@78)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@408) $generated@@412))) (and ($generated@@250 ($generated@@89 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@250 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@89 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@82 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@413) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@414) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@415) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@413 $generated@@415))) (and ($generated@@140 $generated@@413 $generated@@414) ($generated@@140 $generated@@414 $generated@@415))) ($generated@@140 $generated@@413 $generated@@415))
 :pattern ( ($generated@@140 $generated@@413 $generated@@414) ($generated@@140 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@84 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@312 (type $generated@@418))))
(let (($generated@@420 ($generated@@311 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@310 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@309 $generated@@420 $generated@@419)) (= ($generated@@308 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@308 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@312 (type $generated@@421))))
(let (($generated@@423 ($generated@@311 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@310 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@309 $generated@@423 $generated@@422)) (= ($generated@@351 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@351 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@312 (type $generated@@424))))
(let (($generated@@426 ($generated@@311 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@310 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@309 $generated@@426 $generated@@425)) (= ($generated@@379 $generated@@424) ($generated@@416 $generated@@78))))))
 :pattern ( ($generated@@379 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@294 (type $generated@@427))))
(let (($generated@@429 ($generated@@293 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@292 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@291 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@78) (= (type $generated@@431) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@427) ($generated@@271 ($generated@@223 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@371 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@312 (type $generated@@432))))
(let (($generated@@434 ($generated@@311 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@310 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@309 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@78) (= (type $generated@@436) $generated@@78)) ($generated@@0 ($generated@@89 ($generated@@379 $generated@@432) ($generated@@271 ($generated@@223 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@379 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@78) ($generated@@224 $generated@@437 $generated@@46)) (and (= ($generated@@271 ($generated@@332 $generated@@2 $generated@@437)) $generated@@437) ($generated@@79 ($generated@@332 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@78) ($generated@@224 $generated@@438 $generated@@47)) (and (= ($generated@@271 ($generated@@332 $generated@@3 $generated@@438)) $generated@@438) ($generated@@79 ($generated@@332 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@78) ($generated@@224 $generated@@439 $generated@@44)) (and (= ($generated@@271 ($generated@@332 $generated@@4 $generated@@439)) $generated@@439) ($generated@@79 ($generated@@332 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@78) ($generated@@224 $generated@@441 $generated@@45)) (and (= ($generated@@271 ($generated@@332 $generated@@440 $generated@@441)) $generated@@441) ($generated@@79 ($generated@@332 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@66) (= ($generated@@224 ($generated@@271 $generated@@442) $generated@@443) ($generated@@79 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@224 ($generated@@271 $generated@@442) $generated@@443))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@446 T@U) ($generated@@447 Int) ) (!  (=> (and (= (type $generated@@446) $generated@@78) (or ($generated@@445 $generated@@446 $generated@@447) (and (not (= 2 $generated@@76)) (and (and ($generated@@224 $generated@@446 $generated@@326) (<= ($generated@@243 0) $generated@@447)) (not (= $generated@@447 7)))))) (and (= ($generated@@444 $generated@@446 $generated@@447) ($generated@@77 $generated@@446)) (<= ($generated@@243 0) ($generated@@444 $generated@@446 $generated@@447))))
 :pattern ( ($generated@@444 $generated@@446 $generated@@447))
))))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@87 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@84 $generated@@449 $generated@@2)) (<= 0 ($generated@@284 $generated@@448))))
 :pattern ( ($generated@@284 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@265 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@264 $generated@@451)) (<= 0 ($generated@@263 $generated@@450))))
 :pattern ( ($generated@@263 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@397 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@397 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@397 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@397 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@405 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@405 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@405 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@405 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@78) (= (type $generated@@473) $generated@@78)) (= ($generated@@256 ($generated@@223 $generated@@472 $generated@@473)) $generated@@62))
 :pattern ( ($generated@@223 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@148 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@148 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@148 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@148 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@78) (= (type $generated@@483) $generated@@78)) (= ($generated@@156 ($generated@@223 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@223 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@78) (= (type $generated@@485) $generated@@78)) (= ($generated@@157 ($generated@@223 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@223 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@265 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@264 $generated@@78)) (= (type $generated@@493) $generated@@66)) (= (type $generated@@494) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@263 $generated@@492))) ($generated@@250 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@82 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@83 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@83 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@233 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@233 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@233 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@238 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@238 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@162 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@162 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@162 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@486 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@486 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@486 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@332 $generated@@515 ($generated@@271 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@271 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@292 $generated@@78 $generated@@78)) (= (type $generated@@517) $generated@@66)) (= (type $generated@@518) $generated@@66)) (= ($generated@@79 $generated@@516 ($generated@@397 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@290 $generated@@516) $generated@@519))) (and ($generated@@224 ($generated@@89 ($generated@@372 $generated@@516) $generated@@519) $generated@@518) ($generated@@224 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@516) $generated@@519))
 :pattern ( ($generated@@89 ($generated@@290 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@79 $generated@@516 ($generated@@397 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@310 $generated@@78 $generated@@78)) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) (= ($generated@@79 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@78) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@520) $generated@@523))) (and ($generated@@224 ($generated@@89 ($generated@@380 $generated@@520) $generated@@523) $generated@@522) ($generated@@224 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@89 ($generated@@380 $generated@@520) $generated@@523))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@79 $generated@@520 ($generated@@405 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@78) (= (type $generated@@527) $generated@@78)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@223 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@223 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@78) (= (type $generated@@529) $generated@@78)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@223 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@223 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@78) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@66)) ($generated@@224 $generated@@530 ($generated@@397 $generated@@531 $generated@@532))) (and (= ($generated@@271 ($generated@@332 ($generated@@292 $generated@@78 $generated@@78) $generated@@530)) $generated@@530) ($generated@@79 ($generated@@332 ($generated@@292 $generated@@78 $generated@@78) $generated@@530) ($generated@@397 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@224 $generated@@530 ($generated@@397 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@78) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) ($generated@@224 $generated@@533 ($generated@@405 $generated@@534 $generated@@535))) (and (= ($generated@@271 ($generated@@332 ($generated@@310 $generated@@78 $generated@@78) $generated@@533)) $generated@@533) ($generated@@79 ($generated@@332 ($generated@@310 $generated@@78 $generated@@78) $generated@@533) ($generated@@405 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@224 $generated@@533 ($generated@@405 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@78)) ($generated@@224 $generated@@538 ($generated@@148 $generated@@536 $generated@@537))) (and (= ($generated@@271 ($generated@@332 $generated@@149 $generated@@538)) $generated@@538) ($generated@@79 ($generated@@332 $generated@@149 $generated@@538) ($generated@@148 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@148 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@89 ($generated@@416 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@89 ($generated@@416 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@543 $generated@@544)) $generated@@63) (= ($generated@@541 ($generated@@148 $generated@@543 $generated@@544)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 Int) ($generated@@547 Int) ) (! (= ($generated@@545 $generated@@546 $generated@@547) (* $generated@@546 $generated@@547))
 :pattern ( ($generated@@545 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@149) (= ($generated@@524 ($generated@@271 $generated@@548)) ($generated@@525 $generated@@548)))
 :pattern ( ($generated@@524 ($generated@@271 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@78) ($generated@@224 $generated@@549 ($generated@@83 0))) (and (= ($generated@@271 ($generated@@332 $generated@@2 $generated@@549)) $generated@@549) ($generated@@79 ($generated@@332 ($generated@@84 $generated@@78 $generated@@4) $generated@@549) ($generated@@83 0))))
 :pattern ( ($generated@@224 $generated@@549 ($generated@@83 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@78) (= (type $generated@@551) $generated@@66)) ($generated@@224 $generated@@550 ($generated@@233 $generated@@551))) (and (= ($generated@@271 ($generated@@332 ($generated@@84 $generated@@78 $generated@@4) $generated@@550)) $generated@@550) ($generated@@79 ($generated@@332 ($generated@@84 $generated@@78 $generated@@4) $generated@@550) ($generated@@233 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@233 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@78) (= (type $generated@@553) $generated@@66)) ($generated@@224 $generated@@552 ($generated@@238 $generated@@553))) (and (= ($generated@@271 ($generated@@332 ($generated@@84 $generated@@78 $generated@@4) $generated@@552)) $generated@@552) ($generated@@79 ($generated@@332 ($generated@@84 $generated@@78 $generated@@4) $generated@@552) ($generated@@238 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@238 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@78) (= (type $generated@@555) $generated@@66)) ($generated@@224 $generated@@554 ($generated@@162 $generated@@555))) (and (= ($generated@@271 ($generated@@332 ($generated@@84 $generated@@78 $generated@@2) $generated@@554)) $generated@@554) ($generated@@79 ($generated@@332 ($generated@@84 $generated@@78 $generated@@2) $generated@@554) ($generated@@162 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@162 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@78) (= (type $generated@@557) $generated@@66)) ($generated@@224 $generated@@556 ($generated@@486 $generated@@557))) (and (= ($generated@@271 ($generated@@332 ($generated@@264 $generated@@78) $generated@@556)) $generated@@556) ($generated@@79 ($generated@@332 ($generated@@264 $generated@@78) $generated@@556) ($generated@@486 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@486 $generated@@557)))
)))
(assert (= ($generated@@74 $generated@@80) $generated@@61))
(assert (= ($generated@@541 $generated@@80) $generated@@64))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@84 $generated@@78 $generated@@2)) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@558 ($generated@@162 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@78) (< 0 ($generated ($generated@@89 $generated@@558 $generated@@561)))) ($generated@@250 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@89 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@82 $generated@@558 ($generated@@162 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@149) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@249 $generated@@564) (and ($generated@@147 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@66) ($generated@@82 $generated@@562 ($generated@@148 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@82 $generated@@562 ($generated@@148 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@250 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@156 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@149) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@249 $generated@@568) (and ($generated@@147 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@66) ($generated@@82 $generated@@566 ($generated@@148 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@82 $generated@@566 ($generated@@148 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@250 ($generated@@157 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@250 ($generated@@157 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@78) (= (type $generated@@571) $generated@@78)) (= ($generated@@223 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)) ($generated@@245 ($generated@@223 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)))
)))
(assert (forall (($generated@@572 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@243 $generated@@572))) ($generated@@245 ($generated@@271 ($generated@@8 $generated@@572))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@243 $generated@@572))))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@271 ($generated@@245 $generated@@573)) ($generated@@245 ($generated@@271 $generated@@573)))
 :pattern ( ($generated@@271 ($generated@@245 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@265 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@264 $generated@@575)) (= ($generated@@263 $generated@@574) 0)) (= $generated@@574 ($generated@@262 $generated@@575))))
 :pattern ( ($generated@@263 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@84 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@284 ($generated@@90 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@284 $generated@@576) ($generated ($generated@@89 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@284 ($generated@@90 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@581) $generated@@2)) ($generated@@82 $generated@@581 $generated@@46 $generated@@580))
 :pattern ( ($generated@@82 $generated@@581 $generated@@46 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@583) $generated@@3)) ($generated@@82 $generated@@583 $generated@@47 $generated@@582))
 :pattern ( ($generated@@82 $generated@@583 $generated@@47 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@585) $generated@@4)) ($generated@@82 $generated@@585 $generated@@44 $generated@@584))
 :pattern ( ($generated@@82 $generated@@585 $generated@@44 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@587) $generated@@440)) ($generated@@82 $generated@@587 $generated@@45 $generated@@586))
 :pattern ( ($generated@@82 $generated@@587 $generated@@45 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@589) $generated@@78)) ($generated@@82 $generated@@589 $generated@@48 $generated@@588))
 :pattern ( ($generated@@82 $generated@@589 $generated@@48 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@264 $generated@@78)) (= (type $generated@@591) $generated@@66)) (= ($generated@@79 $generated@@590 ($generated@@486 $generated@@591)) (forall (($generated@@592 Int) ) (!  (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@263 $generated@@590))) ($generated@@224 ($generated@@487 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@487 $generated@@590 $generated@@592))
))))
 :pattern ( ($generated@@79 $generated@@590 ($generated@@486 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) ($generated@@264 $generated@@78)) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@263 $generated@@594))) (< ($generated@@525 ($generated@@332 $generated@@149 ($generated@@487 $generated@@594 $generated@@595))) ($generated@@593 $generated@@594))))
 :pattern ( ($generated@@525 ($generated@@332 $generated@@149 ($generated@@487 $generated@@594 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@292 $generated@@78 $generated@@78)) (= (type $generated@@597) $generated@@66)) (= (type $generated@@598) $generated@@66)) ($generated@@79 $generated@@596 ($generated@@397 $generated@@597 $generated@@598))) (and (and ($generated@@79 ($generated@@290 $generated@@596) ($generated@@233 $generated@@597)) ($generated@@79 ($generated@@340 $generated@@596) ($generated@@233 $generated@@598))) ($generated@@79 ($generated@@371 $generated@@596) ($generated@@233 ($generated@@148 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@79 $generated@@596 ($generated@@397 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@310 $generated@@78 $generated@@78)) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) $generated@@66)) ($generated@@79 $generated@@599 ($generated@@405 $generated@@600 $generated@@601))) (and (and ($generated@@79 ($generated@@308 $generated@@599) ($generated@@238 $generated@@600)) ($generated@@79 ($generated@@351 $generated@@599) ($generated@@238 $generated@@601))) ($generated@@79 ($generated@@379 $generated@@599) ($generated@@238 ($generated@@148 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@405 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@2) ($generated@@79 $generated@@602 $generated@@46))
 :pattern ( ($generated@@79 $generated@@602 $generated@@46))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@3) ($generated@@79 $generated@@603 $generated@@47))
 :pattern ( ($generated@@79 $generated@@603 $generated@@47))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@4) ($generated@@79 $generated@@604 $generated@@44))
 :pattern ( ($generated@@79 $generated@@604 $generated@@44))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@440) ($generated@@79 $generated@@605 $generated@@45))
 :pattern ( ($generated@@79 $generated@@605 $generated@@45))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@78) ($generated@@79 $generated@@606 $generated@@48))
 :pattern ( ($generated@@79 $generated@@606 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(assert  (and (and (and (and (= (type $generated@@609) $generated@@78) (= (type $generated@@611) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@614) $generated@@85)) (= (type $generated@@615) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@619) ($generated@@169 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@623 true))
(let (($generated@@624  (=> (not (= $generated@@607 9)) (=> (and (= $generated@@608 ($generated@@77 $generated@@609)) (<= ($generated@@243 0) $generated@@610)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@608 9))) (=> (not (= $generated@@608 9)) (=> (and (and (and ($generated@@249 $generated@@611) ($generated@@612 $generated@@611)) (and (<= ($generated@@243 0) $generated@@613) (= $generated@@613 $generated@@608))) (and (and (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@85) (=> (and (not (= $generated@@625 $generated@@614)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@615 $generated@@625) $generated@@60))) (= ($generated@@89 $generated@@611 $generated@@625) ($generated@@89 $generated@@615 $generated@@625))))
 :pattern ( ($generated@@89 $generated@@611 $generated@@625))
)) ($generated@@140 $generated@@615 $generated@@611)) (and ($generated@@250 $generated@@609 $generated@@326 $generated@@611) (= $generated@@616 ($generated@@545 ($generated@@243 2) $generated@@607))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@243 0) $generated@@616)) (=> (<= ($generated@@243 0) $generated@@616) (=> (and (= $generated@@617 ($generated@@545 ($generated@@243 2) $generated@@607)) ($generated@@82 ($generated@@8 $generated@@617) $generated@@80 $generated@@611)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@617 7))) (=> (not (= $generated@@617 7)) (=> (and (and ($generated@@445 $generated@@609 ($generated@@545 ($generated@@243 2) $generated@@607)) ($generated@@445 $generated@@609 ($generated@@545 ($generated@@243 2) $generated@@607))) (and (= $generated@@618 ($generated@@444 $generated@@609 ($generated@@545 ($generated@@243 2) $generated@@607))) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@613 $generated@@618))))))))))))))
(let (($generated@@626  (=> (and (= $generated@@619 ($generated@@168 $generated@@614 $generated@@615 $generated@@60 false)) (= $generated@@607 ($generated@@77 $generated@@609))) (and (=> (= (ControlFlow 0 7) 2) $generated@@624) (=> (= (ControlFlow 0 7) 6) $generated@@623)))))
(let (($generated@@627  (=> (and (and ($generated@@249 $generated@@615) ($generated@@612 $generated@@615)) (and ($generated@@224 $generated@@609 $generated@@326) ($generated@@250 $generated@@609 $generated@@326 $generated@@615))) (=> (and (and (and (<= ($generated@@243 0) $generated@@620) true) (and (<= ($generated@@243 0) $generated@@621) true)) (and (and (<= ($generated@@243 0) $generated@@622) true) (and (= 3 $generated@@76) (= (ControlFlow 0 8) 7)))) $generated@@626))))
$generated@@627)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (Int) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@81) (= ($generated@@82 $generated@@172 $generated@@144)  (or (= $generated@@172 $generated@@145) (= ($generated@@170 $generated@@172) $generated@@144))))
 :pattern ( ($generated@@82 $generated@@172 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@72 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@224) ($generated@@71 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@71 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (= (type $generated@@229) $generated@@69))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@81) (= (type $generated@@231) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@230 $generated@@229 $generated@@231) ($generated@@85 $generated@@230 $generated@@144 $generated@@231)))
 :pattern ( ($generated@@85 $generated@@230 $generated@@229 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@151)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@69) (= (type $generated@@237) $generated@@69)) (= (type $generated@@238) $generated@@160)) (= (type $generated@@239) $generated@@160)) (= ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@150 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@150 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@151) (= (type $generated@@241) $generated@@151)) (= ($generated@@157 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@157 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@69)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@245) $generated@@69)) (= ($generated@@82 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@160) ($generated@@0 ($generated@@91 $generated@@244 $generated@@246))) ($generated@@233 $generated@@246 $generated@@245))
 :pattern ( ($generated@@91 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@82 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@69)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@250) $generated@@69)) (= ($generated@@82 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@160) ($generated@@0 ($generated@@91 $generated@@249 $generated@@251))) ($generated@@233 $generated@@251 $generated@@250))
 :pattern ( ($generated@@91 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@82 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@252 $generated@@253) $generated@@253)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@69) (= (type $generated@@261) $generated@@69)) (= (type $generated@@262) $generated@@160)) (= (type $generated@@263) $generated@@160)) (= (type $generated@@264) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@258 $generated@@264)) (= ($generated@@85 ($generated@@232 $generated@@262 $generated@@263) ($generated@@150 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@85 ($generated@@232 $generated@@262 $generated@@263) ($generated@@150 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@73)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@151) (= ($generated@@149 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@151) ($generated@@149 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@160) (= (type $generated@@270) $generated@@160)) (= $generated@@268 ($generated@@232 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@149 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@2) (= ($generated@@82 $generated@@279 $generated@@83) (<= ($generated@@252 0) ($generated $generated@@279))))
 :pattern ( ($generated@@82 $generated@@279 $generated@@83))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@160)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@69) (= (type $generated@@284) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@85 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@87 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@89 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@87 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@91 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@87 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@91 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@91 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@87 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@91 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@91 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@327) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@328) $generated@@81)) (and ($generated@@258 $generated@@327) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@327 $generated@@328) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@328)) $generated@@83 $generated@@327))
 :pattern ( ($generated@@80 $generated@@328) ($generated@@93 ($generated@@91 $generated@@327 $generated@@328) $generated@@60))
))))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@89 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@87 $generated@@330 $generated@@2)) (= ($generated@@166 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@91 $generated@@329 $generated@@331))) (<= ($generated ($generated@@91 $generated@@329 $generated@@331)) ($generated@@285 $generated@@329))))
 :pattern ( ($generated@@91 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@166 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@160) ($generated@@233 $generated@@335 $generated@@83)) (and (= ($generated@@280 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@82 ($generated@@332 $generated@@2 $generated@@335) $generated@@83)))
 :pattern ( ($generated@@233 $generated@@335 $generated@@83))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@160) ($generated@@233 $generated@@336 $generated@@144)) (and (= ($generated@@280 ($generated@@332 $generated@@81 $generated@@336)) $generated@@336) ($generated@@82 ($generated@@332 $generated@@81 $generated@@336) $generated@@144)))
 :pattern ( ($generated@@233 $generated@@336 $generated@@144))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@160) ($generated@@233 $generated@@337 $generated@@229)) (and (= ($generated@@280 ($generated@@332 $generated@@81 $generated@@337)) $generated@@337) ($generated@@82 ($generated@@332 $generated@@81 $generated@@337) $generated@@229)))
 :pattern ( ($generated@@233 $generated@@337 $generated@@229))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@81) (= ($generated@@82 $generated@@338 $generated@@229)  (and ($generated@@82 $generated@@338 $generated@@144) (not (= $generated@@338 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@338 $generated@@229))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(let (($generated@@341 ($generated@@294 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@293 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@292 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@91 ($generated@@291 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@291 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@295 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@87 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@295 (type $generated@@346))))
(let (($generated@@348 ($generated@@294 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@293 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@292 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@91 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@91 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@87 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@91 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@362) $generated@@69)) (= ($generated@@82 $generated@@361 ($generated@@165 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@361 $generated@@363)))) ($generated@@233 $generated@@363 $generated@@362))
 :pattern ( ($generated@@91 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@82 $generated@@361 ($generated@@165 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@365) $generated@@69)) (= (type $generated@@366) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@364 ($generated@@242 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@160) ($generated@@0 ($generated@@91 $generated@@364 $generated@@367))) ($generated@@259 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@91 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@85 $generated@@364 ($generated@@242 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@369) $generated@@69)) (= (type $generated@@370) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@368 ($generated@@247 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@160) ($generated@@0 ($generated@@91 $generated@@368 $generated@@371))) ($generated@@259 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@91 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@85 $generated@@368 ($generated@@247 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@91 ($generated@@286 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@91 ($generated@@286 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@295 (type $generated@@377))))
(let (($generated@@379 ($generated@@294 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@87 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@381) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@91 ($generated@@291 $generated@@380) ($generated@@158 ($generated@@332 $generated@@151 $generated@@381)))) (= ($generated@@91 ($generated@@375 $generated@@380) ($generated@@158 ($generated@@332 $generated@@151 $generated@@381))) ($generated@@159 ($generated@@332 $generated@@151 $generated@@381))))))
 :pattern ( ($generated@@91 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@313 (type $generated@@385))))
(let (($generated@@387 ($generated@@312 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@87 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@389) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@91 ($generated@@309 $generated@@388) ($generated@@158 ($generated@@332 $generated@@151 $generated@@389)))) (= ($generated@@91 ($generated@@383 $generated@@388) ($generated@@158 ($generated@@332 $generated@@151 $generated@@389))) ($generated@@159 ($generated@@332 $generated@@151 $generated@@389))))))
 :pattern ( ($generated@@91 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@294 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@293 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@91 ($generated@@343 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@91 ($generated@@291 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@91 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@91 ($generated@@291 $generated@@390) $generated@@394))
 :pattern ( ($generated@@91 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@91 ($generated@@343 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@312 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@311 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@91 ($generated@@354 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@91 ($generated@@309 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@91 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@91 ($generated@@309 $generated@@395) $generated@@399))
 :pattern ( ($generated@@91 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@91 ($generated@@354 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@69)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@404) $generated@@69)) (= (type $generated@@405) $generated@@69)) (= (type $generated@@406) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@291 $generated@@403) $generated@@407))) (and ($generated@@259 ($generated@@91 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@259 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@91 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@91 ($generated@@291 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@85 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@69)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@309 $generated@@411) $generated@@415))) (and ($generated@@259 ($generated@@91 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@259 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@91 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@91 ($generated@@309 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@85 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@87 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@309 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@309 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@313 (type $generated@@421))))
(let (($generated@@423 ($generated@@312 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@311 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@310 $generated@@423 $generated@@422)) (= ($generated@@354 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@354 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@313 (type $generated@@424))))
(let (($generated@@426 ($generated@@312 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@311 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@310 $generated@@426 $generated@@425)) (= ($generated@@382 $generated@@424) ($generated@@416 $generated@@160))))))
 :pattern ( ($generated@@382 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@295 (type $generated@@427))))
(let (($generated@@429 ($generated@@294 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@293 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@292 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@160) (= (type $generated@@431) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@374 $generated@@427) ($generated@@280 ($generated@@232 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@374 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@313 (type $generated@@432))))
(let (($generated@@434 ($generated@@312 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@311 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@310 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@160) (= (type $generated@@436) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@382 $generated@@432) ($generated@@280 ($generated@@232 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@382 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@160) ($generated@@233 $generated@@437 $generated@@46)) (and (= ($generated@@280 ($generated@@332 $generated@@2 $generated@@437)) $generated@@437) ($generated@@82 ($generated@@332 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@160) ($generated@@233 $generated@@438 $generated@@47)) (and (= ($generated@@280 ($generated@@332 $generated@@3 $generated@@438)) $generated@@438) ($generated@@82 ($generated@@332 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@160) ($generated@@233 $generated@@439 $generated@@44)) (and (= ($generated@@280 ($generated@@332 $generated@@4 $generated@@439)) $generated@@439) ($generated@@82 ($generated@@332 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@160) ($generated@@233 $generated@@441 $generated@@45)) (and (= ($generated@@280 ($generated@@332 $generated@@440 $generated@@441)) $generated@@441) ($generated@@82 ($generated@@332 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@69) (= ($generated@@233 ($generated@@280 $generated@@442) $generated@@443) ($generated@@82 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@233 ($generated@@280 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@89 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@87 $generated@@445 $generated@@2)) (<= 0 ($generated@@285 $generated@@444))))
 :pattern ( ($generated@@285 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@274 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@273 $generated@@447)) (<= 0 ($generated@@272 $generated@@446))))
 :pattern ( ($generated@@272 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@69)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@69) (= (type $generated@@451) $generated@@69)) (= ($generated@@448 ($generated@@400 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@400 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@69)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@69) (= (type $generated@@455) $generated@@69)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@69) (= (type $generated@@457) $generated@@69)) (= ($generated@@77 ($generated@@400 $generated@@456 $generated@@457)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@69)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@69) (= (type $generated@@461) $generated@@69)) (= ($generated@@458 ($generated@@408 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@408 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@69)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@69) (= (type $generated@@467) $generated@@69)) (= ($generated@@77 ($generated@@408 $generated@@466 $generated@@467)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@160) (= (type $generated@@469) $generated@@160)) (= ($generated@@265 ($generated@@232 $generated@@468 $generated@@469)) $generated@@62))
 :pattern ( ($generated@@232 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@150 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@150 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@150 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@150 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@160) (= (type $generated@@479) $generated@@160)) (= ($generated@@158 ($generated@@232 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@232 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@160) (= (type $generated@@481) $generated@@160)) (= ($generated@@159 ($generated@@232 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@232 $generated@@480 $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@274 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@273 $generated@@160)) (= (type $generated@@489) $generated@@69)) (= (type $generated@@490) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@272 $generated@@488))) ($generated@@259 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@85 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@86 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@86 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@69)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@69) (= ($generated@@494 ($generated@@242 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@242 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@69) (= ($generated@@77 ($generated@@242 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@69)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@69) (= ($generated@@498 ($generated@@247 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@247 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@69) (= ($generated@@77 ($generated@@247 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@502 ($generated@@165 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@165 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@77 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@332 $generated@@511 ($generated@@280 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@280 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@513) $generated@@69)) (= (type $generated@@514) $generated@@69)) (= ($generated@@82 $generated@@512 ($generated@@400 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@291 $generated@@512) $generated@@515))) (and ($generated@@233 ($generated@@91 ($generated@@375 $generated@@512) $generated@@515) $generated@@514) ($generated@@233 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@91 ($generated@@375 $generated@@512) $generated@@515))
 :pattern ( ($generated@@91 ($generated@@291 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@82 $generated@@512 ($generated@@400 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@517) $generated@@69)) (= (type $generated@@518) $generated@@69)) (= ($generated@@82 $generated@@516 ($generated@@408 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@309 $generated@@516) $generated@@519))) (and ($generated@@233 ($generated@@91 ($generated@@383 $generated@@516) $generated@@519) $generated@@518) ($generated@@233 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@91 ($generated@@383 $generated@@516) $generated@@519))
 :pattern ( ($generated@@91 ($generated@@309 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@82 $generated@@516 ($generated@@408 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@160) (= (type $generated@@523) $generated@@160)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@232 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@232 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@160) (= (type $generated@@525) $generated@@160)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@232 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@232 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@160) (= (type $generated@@527) $generated@@69)) (= (type $generated@@528) $generated@@69)) ($generated@@233 $generated@@526 ($generated@@400 $generated@@527 $generated@@528))) (and (= ($generated@@280 ($generated@@332 ($generated@@293 $generated@@160 $generated@@160) $generated@@526)) $generated@@526) ($generated@@82 ($generated@@332 ($generated@@293 $generated@@160 $generated@@160) $generated@@526) ($generated@@400 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@233 $generated@@526 ($generated@@400 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@160) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@69)) ($generated@@233 $generated@@529 ($generated@@408 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@332 ($generated@@311 $generated@@160 $generated@@160) $generated@@529)) $generated@@529) ($generated@@82 ($generated@@332 ($generated@@311 $generated@@160 $generated@@160) $generated@@529) ($generated@@408 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@233 $generated@@529 ($generated@@408 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@69) (= (type $generated@@533) $generated@@69)) (= (type $generated@@534) $generated@@160)) ($generated@@233 $generated@@534 ($generated@@150 $generated@@532 $generated@@533))) (and (= ($generated@@280 ($generated@@332 $generated@@151 $generated@@534)) $generated@@534) ($generated@@82 ($generated@@332 $generated@@151 $generated@@534) ($generated@@150 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@233 $generated@@534 ($generated@@150 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@91 ($generated@@416 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@91 ($generated@@416 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@74)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@69) (= (type $generated@@540) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@539 $generated@@540)) $generated@@63) (= ($generated@@537 ($generated@@150 $generated@@539 $generated@@540)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@151) (= ($generated@@520 ($generated@@280 $generated@@541)) ($generated@@521 $generated@@541)))
 :pattern ( ($generated@@520 ($generated@@280 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@160) ($generated@@233 $generated@@542 ($generated@@86 0))) (and (= ($generated@@280 ($generated@@332 $generated@@2 $generated@@542)) $generated@@542) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@542) ($generated@@86 0))))
 :pattern ( ($generated@@233 $generated@@542 ($generated@@86 0)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@160) (= (type $generated@@544) $generated@@69)) ($generated@@233 $generated@@543 ($generated@@242 $generated@@544))) (and (= ($generated@@280 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@543)) $generated@@543) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@543) ($generated@@242 $generated@@544))))
 :pattern ( ($generated@@233 $generated@@543 ($generated@@242 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@160) (= (type $generated@@546) $generated@@69)) ($generated@@233 $generated@@545 ($generated@@247 $generated@@546))) (and (= ($generated@@280 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@545)) $generated@@545) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@545) ($generated@@247 $generated@@546))))
 :pattern ( ($generated@@233 $generated@@545 ($generated@@247 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@160) (= (type $generated@@548) $generated@@69)) ($generated@@233 $generated@@547 ($generated@@165 $generated@@548))) (and (= ($generated@@280 ($generated@@332 ($generated@@87 $generated@@160 $generated@@2) $generated@@547)) $generated@@547) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@2) $generated@@547) ($generated@@165 $generated@@548))))
 :pattern ( ($generated@@233 $generated@@547 ($generated@@165 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@160) (= (type $generated@@550) $generated@@69)) ($generated@@233 $generated@@549 ($generated@@482 $generated@@550))) (and (= ($generated@@280 ($generated@@332 ($generated@@273 $generated@@160) $generated@@549)) $generated@@549) ($generated@@82 ($generated@@332 ($generated@@273 $generated@@160) $generated@@549) ($generated@@482 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@549 ($generated@@482 $generated@@550)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@537 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@537 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@229) $generated@@65))
(assert (= ($generated@@537 $generated@@229) $generated@@68))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@551 ($generated@@165 $generated@@552) $generated@@553) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@551 $generated@@554)))) ($generated@@259 $generated@@554 $generated@@552 $generated@@553))
 :pattern ( ($generated@@91 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@85 $generated@@551 ($generated@@165 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@151) (= (type $generated@@556) $generated@@69)) (= (type $generated@@557) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@258 $generated@@557) (and ($generated@@149 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@69) ($generated@@85 $generated@@555 ($generated@@150 $generated@@556 $generated@@558) $generated@@557))
 :pattern ( ($generated@@85 $generated@@555 ($generated@@150 $generated@@556 $generated@@558) $generated@@557))
))))) ($generated@@259 ($generated@@158 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@259 ($generated@@158 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@151) (= (type $generated@@560) $generated@@69)) (= (type $generated@@561) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@258 $generated@@561) (and ($generated@@149 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@69) ($generated@@85 $generated@@559 ($generated@@150 $generated@@562 $generated@@560) $generated@@561))
 :pattern ( ($generated@@85 $generated@@559 ($generated@@150 $generated@@562 $generated@@560) $generated@@561))
))))) ($generated@@259 ($generated@@159 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@259 ($generated@@159 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@160) (= (type $generated@@564) $generated@@160)) (= ($generated@@232 ($generated@@254 $generated@@563) ($generated@@254 $generated@@564)) ($generated@@254 ($generated@@232 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@232 ($generated@@254 $generated@@563) ($generated@@254 $generated@@564)))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@252 $generated@@565))) ($generated@@254 ($generated@@280 ($generated@@8 $generated@@565))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@252 $generated@@565))))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@280 ($generated@@254 $generated@@566)) ($generated@@254 ($generated@@280 $generated@@566)))
 :pattern ( ($generated@@280 ($generated@@254 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@274 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@273 $generated@@568)) (= ($generated@@272 $generated@@567) 0)) (= $generated@@567 ($generated@@271 $generated@@568))))
 :pattern ( ($generated@@272 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@87 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@285 ($generated@@92 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@285 $generated@@569) ($generated ($generated@@91 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@285 ($generated@@92 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@574) $generated@@2)) ($generated@@85 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@85 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@576) $generated@@3)) ($generated@@85 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@85 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@578) $generated@@4)) ($generated@@85 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@85 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@580) $generated@@440)) ($generated@@85 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@85 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@582) $generated@@160)) ($generated@@85 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@85 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@273 $generated@@160)) (= (type $generated@@584) $generated@@69)) (= ($generated@@82 $generated@@583 ($generated@@482 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@272 $generated@@583))) ($generated@@233 ($generated@@483 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@483 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@82 $generated@@583 ($generated@@482 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@273 $generated@@160)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@272 $generated@@587))) (< ($generated@@521 ($generated@@332 $generated@@151 ($generated@@483 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@521 ($generated@@332 $generated@@151 ($generated@@483 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@590) $generated@@69)) (= (type $generated@@591) $generated@@69)) ($generated@@82 $generated@@589 ($generated@@400 $generated@@590 $generated@@591))) (and (and ($generated@@82 ($generated@@291 $generated@@589) ($generated@@242 $generated@@590)) ($generated@@82 ($generated@@343 $generated@@589) ($generated@@242 $generated@@591))) ($generated@@82 ($generated@@374 $generated@@589) ($generated@@242 ($generated@@150 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@82 $generated@@589 ($generated@@400 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@593) $generated@@69)) (= (type $generated@@594) $generated@@69)) ($generated@@82 $generated@@592 ($generated@@408 $generated@@593 $generated@@594))) (and (and ($generated@@82 ($generated@@309 $generated@@592) ($generated@@247 $generated@@593)) ($generated@@82 ($generated@@354 $generated@@592) ($generated@@247 $generated@@594))) ($generated@@82 ($generated@@382 $generated@@592) ($generated@@247 ($generated@@150 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@82 $generated@@592 ($generated@@408 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@82 $generated@@595 $generated@@46))
 :pattern ( ($generated@@82 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@82 $generated@@596 $generated@@47))
 :pattern ( ($generated@@82 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@82 $generated@@597 $generated@@44))
 :pattern ( ($generated@@82 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@440) ($generated@@82 $generated@@598 $generated@@45))
 :pattern ( ($generated@@82 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@160) ($generated@@82 $generated@@599 $generated@@48))
 :pattern ( ($generated@@82 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 (T@U) Bool)
(declare-fun $generated@@606 () Int)
(assert  (and (and (= (type $generated@@600) ($generated@@175 $generated@@81 $generated@@4)) (= (type $generated@@601) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@603) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@607  (=> (= $generated@@600 ($generated@@174 $generated@@145 $generated@@601 $generated@@60 false)) (=> (and (= $generated@@602 ($generated@@80 $generated@@603)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@602 $generated@@604)))))
(let (($generated@@608  (=> (and ($generated@@258 $generated@@601) ($generated@@605 $generated@@601)) (=> (and (and (and (not (= $generated@@603 $generated@@145)) (and ($generated@@82 $generated@@603 $generated@@229) ($generated@@85 $generated@@603 $generated@@229 $generated@@601))) (<= ($generated@@252 0) $generated@@604)) (and (and (<= ($generated@@252 0) $generated@@606) (= 2 $generated@@79)) (and (not (= $generated@@604 9)) (= (ControlFlow 0 3) 2)))) $generated@@607))))
$generated@@608)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (Int) Int)
(declare-fun $generated@@247 (T@U Int) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@506 (T@U Int) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (Int Int) Int)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@144) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@142 $generated@@143 $generated@@144)) (forall (($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@81) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@143 $generated@@145) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@144 $generated@@145) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@144 $generated@@145) $generated@@60))
)))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@146 $generated@@83 $generated@@147))
 :pattern ( ($generated@@85 $generated@@146 $generated@@83 $generated@@147))
)))
(assert  (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@81)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@81) (= (type $generated@@151) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@150 $generated@@148 $generated@@151)  (or (= $generated@@150 $generated@@149) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@150 $generated@@148 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@82 $generated@@152 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@152 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@155) 14) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@69)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@69) (= (type $generated@@159) $generated@@69)) (= (type $generated@@160) $generated@@155)) ($generated@@82 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@82 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@69)) ($generated@@82 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@82 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@174 $generated@@175)) $generated@@69)
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@81) (= ($generated@@82 $generated@@176 $generated@@148)  (or (= $generated@@176 $generated@@149) (= ($generated@@174 $generated@@176) $generated@@148))))
 :pattern ( ($generated@@82 $generated@@176 $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 16)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@81 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@72 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@81) (= (type $generated@@227) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@228) ($generated@@71 $generated@@4))) (= (type $generated@@230) $generated@@81)) (= (type $generated@@231) ($generated@@71 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (= (type $generated@@233) $generated@@69))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@81) (= (type $generated@@235) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@234 $generated@@233 $generated@@235) ($generated@@85 $generated@@234 $generated@@148 $generated@@235)))
 :pattern ( ($generated@@85 $generated@@234 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@155)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@69) (= (type $generated@@241) $generated@@69)) (= (type $generated@@242) $generated@@164)) (= (type $generated@@243) $generated@@164)) (= ($generated@@82 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@82 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@245 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@250 T@U) ($generated@@251 Int) ) (!  (=> (and (= (type $generated@@250) $generated@@81) (or ($generated@@247 ($generated@@245 $generated@@250) ($generated@@246 $generated@@251)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@250 $generated@@149)) ($generated@@82 $generated@@250 $generated@@233)) (<= ($generated@@246 0) $generated@@251)) ($generated@@0 ($generated@@245 ($generated@@11 (not (= $generated@@251 7))))))))) (= ($generated@@244 ($generated@@245 $generated@@250) ($generated@@246 $generated@@251)) ($generated@@246 $generated@@251)))
 :weight 3
 :pattern ( ($generated@@244 ($generated@@245 $generated@@250) ($generated@@246 $generated@@251)))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@155) (= (type $generated@@253) $generated@@155)) (= ($generated@@161 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@161 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@164) ($generated@@0 ($generated@@91 $generated@@256 $generated@@258))) ($generated@@237 $generated@@258 $generated@@257))
 :pattern ( ($generated@@91 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@82 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@69)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@262) $generated@@69)) (= ($generated@@82 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@164) ($generated@@0 ($generated@@91 $generated@@261 $generated@@263))) ($generated@@237 $generated@@263 $generated@@262))
 :pattern ( ($generated@@91 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@82 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@246 $generated@@264) $generated@@264)
 :pattern ( ($generated@@246 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@245 $generated@@265) $generated@@265)
 :pattern ( ($generated@@245 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@69) (= (type $generated@@269) $generated@@69)) (= (type $generated@@270) $generated@@164)) (= (type $generated@@271) $generated@@164)) (= (type $generated@@272) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@266 $generated@@272)) (= ($generated@@85 ($generated@@236 $generated@@270 $generated@@271) ($generated@@154 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@85 ($generated@@236 $generated@@270 $generated@@271) ($generated@@154 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@73)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@155) (= ($generated@@153 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@155) ($generated@@153 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@164) (= (type $generated@@278) $generated@@164)) (= $generated@@276 ($generated@@236 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@153 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@2) (= ($generated@@82 $generated@@287 $generated@@83) (<= ($generated@@246 0) ($generated $generated@@287))))
 :pattern ( ($generated@@82 $generated@@287 $generated@@83))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@164)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@69) (= (type $generated@@292) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@267 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@85 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@267 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@294) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@295) $generated@@164)) (= (type $generated@@296) $generated@@69)) ($generated@@142 $generated@@293 $generated@@294)) ($generated@@267 $generated@@295 $generated@@296 $generated@@293)) ($generated@@267 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@142 $generated@@293 $generated@@294) ($generated@@267 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@298) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@300) $generated@@69)) ($generated@@142 $generated@@297 $generated@@298)) ($generated@@85 $generated@@299 $generated@@300 $generated@@297)) ($generated@@85 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@142 $generated@@297 $generated@@298) ($generated@@85 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@87 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@89 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@87 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@91 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@87 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@91 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@91 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@87 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@91 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@91 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@344) $generated@@81)) (and ($generated@@266 $generated@@343) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@343 $generated@@344) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@344)) $generated@@83 $generated@@343))
 :pattern ( ($generated@@80 $generated@@344) ($generated@@93 ($generated@@91 $generated@@343 $generated@@344) $generated@@60))
))))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (!  (=> (and (= (type $generated@@345) $generated@@81) (or ($generated@@247 $generated@@345 $generated@@346) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@345 $generated@@149)) ($generated@@82 $generated@@345 $generated@@233)) (<= ($generated@@246 0) $generated@@346)) (not (= $generated@@346 7)))))) (= ($generated@@244 $generated@@345 $generated@@346) $generated@@346))
 :pattern ( ($generated@@244 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@89 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@87 $generated@@348 $generated@@2)) (= ($generated@@170 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@91 $generated@@347 $generated@@349))) (<= ($generated ($generated@@91 $generated@@347 $generated@@349)) ($generated@@301 $generated@@347))))
 :pattern ( ($generated@@91 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@170 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@164) ($generated@@237 $generated@@353 $generated@@83)) (and (= ($generated@@288 ($generated@@350 $generated@@2 $generated@@353)) $generated@@353) ($generated@@82 ($generated@@350 $generated@@2 $generated@@353) $generated@@83)))
 :pattern ( ($generated@@237 $generated@@353 $generated@@83))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@164) ($generated@@237 $generated@@354 $generated@@148)) (and (= ($generated@@288 ($generated@@350 $generated@@81 $generated@@354)) $generated@@354) ($generated@@82 ($generated@@350 $generated@@81 $generated@@354) $generated@@148)))
 :pattern ( ($generated@@237 $generated@@354 $generated@@148))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@164) ($generated@@237 $generated@@355 $generated@@233)) (and (= ($generated@@288 ($generated@@350 $generated@@81 $generated@@355)) $generated@@355) ($generated@@82 ($generated@@350 $generated@@81 $generated@@355) $generated@@233)))
 :pattern ( ($generated@@237 $generated@@355 $generated@@233))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@81) (= ($generated@@82 $generated@@356 $generated@@233)  (and ($generated@@82 $generated@@356 $generated@@148) (not (= $generated@@356 $generated@@149)))))
 :pattern ( ($generated@@82 $generated@@356 $generated@@233))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(let (($generated@@359 ($generated@@310 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@309 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@308 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@91 ($generated@@307 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@307 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@311 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@87 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@311 (type $generated@@364))))
(let (($generated@@366 ($generated@@310 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@309 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@308 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@91 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@91 ($generated@@325 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@325 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@329 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@329 (type $generated@@375))))
(let (($generated@@377 ($generated@@328 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@327 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@326 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@91 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@380) $generated@@69)) (= ($generated@@82 $generated@@379 ($generated@@169 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@164) (< 0 ($generated ($generated@@91 $generated@@379 $generated@@381)))) ($generated@@237 $generated@@381 $generated@@380))
 :pattern ( ($generated@@91 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@82 $generated@@379 ($generated@@169 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@383) $generated@@69)) (= (type $generated@@384) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@164) ($generated@@0 ($generated@@91 $generated@@382 $generated@@385))) ($generated@@267 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@91 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@85 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@387) $generated@@69)) (= (type $generated@@388) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@386 ($generated@@259 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@164) ($generated@@0 ($generated@@91 $generated@@386 $generated@@389))) ($generated@@267 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@91 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@85 $generated@@386 ($generated@@259 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@91 ($generated@@302 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@91 ($generated@@302 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@311 (type $generated@@395))))
(let (($generated@@397 ($generated@@310 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@87 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@309 $generated@@164 $generated@@164)) (= (type $generated@@399) $generated@@164)) (= ($generated@@0 ($generated@@91 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@91 ($generated@@307 $generated@@398) ($generated@@162 ($generated@@350 $generated@@155 $generated@@399)))) (= ($generated@@91 ($generated@@393 $generated@@398) ($generated@@162 ($generated@@350 $generated@@155 $generated@@399))) ($generated@@163 ($generated@@350 $generated@@155 $generated@@399))))))
 :pattern ( ($generated@@91 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@329 (type $generated@@403))))
(let (($generated@@405 ($generated@@328 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@87 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@327 $generated@@164 $generated@@164)) (= (type $generated@@407) $generated@@164)) (= ($generated@@0 ($generated@@91 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@91 ($generated@@325 $generated@@406) ($generated@@162 ($generated@@350 $generated@@155 $generated@@407)))) (= ($generated@@91 ($generated@@401 $generated@@406) ($generated@@162 ($generated@@350 $generated@@155 $generated@@407))) ($generated@@163 ($generated@@350 $generated@@155 $generated@@407))))))
 :pattern ( ($generated@@91 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@310 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@309 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@91 ($generated@@361 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@91 ($generated@@307 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@91 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@91 ($generated@@307 $generated@@408) $generated@@412))
 :pattern ( ($generated@@91 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@91 ($generated@@361 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@328 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@327 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@91 ($generated@@372 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@91 ($generated@@325 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@91 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@91 ($generated@@325 $generated@@413) $generated@@417))
 :pattern ( ($generated@@91 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@69)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@309 $generated@@164 $generated@@164)) (= (type $generated@@422) $generated@@69)) (= (type $generated@@423) $generated@@69)) (= (type $generated@@424) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@164) ($generated@@0 ($generated@@91 ($generated@@307 $generated@@421) $generated@@425))) (and ($generated@@267 ($generated@@91 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@267 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@91 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@91 ($generated@@307 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@85 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@69)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@327 $generated@@164 $generated@@164)) (= (type $generated@@430) $generated@@69)) (= (type $generated@@431) $generated@@69)) (= (type $generated@@432) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@164) ($generated@@0 ($generated@@91 ($generated@@325 $generated@@429) $generated@@433))) (and ($generated@@267 ($generated@@91 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@267 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@91 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@91 ($generated@@325 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@85 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@434) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@435) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@436) ($generated@@87 $generated@@81 $generated@@88))) (not (= $generated@@434 $generated@@436))) (and ($generated@@142 $generated@@434 $generated@@435) ($generated@@142 $generated@@435 $generated@@436))) ($generated@@142 $generated@@434 $generated@@436))
 :pattern ( ($generated@@142 $generated@@434 $generated@@435) ($generated@@142 $generated@@435 $generated@@436))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@437 T@U) ($generated@@438 Int) ) (!  (=> (and (= (type $generated@@437) $generated@@81) (or ($generated@@247 $generated@@437 $generated@@438) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@437 $generated@@149)) ($generated@@82 $generated@@437 $generated@@233)) (<= ($generated@@246 0) $generated@@438)) (not (= $generated@@438 7)))))) (and (= ($generated@@244 $generated@@437 $generated@@438) ($generated@@80 $generated@@437)) (<= ($generated@@246 0) ($generated@@244 $generated@@437 $generated@@438))))
 :pattern ( ($generated@@244 $generated@@437 $generated@@438))
))))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@87 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@329 (type $generated@@441))))
(let (($generated@@443 ($generated@@328 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@327 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@326 $generated@@443 $generated@@442)) (= ($generated@@325 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@325 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@329 (type $generated@@444))))
(let (($generated@@446 ($generated@@328 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@327 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@326 $generated@@446 $generated@@445)) (= ($generated@@372 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@372 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@329 (type $generated@@447))))
(let (($generated@@449 ($generated@@328 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@327 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@326 $generated@@449 $generated@@448)) (= ($generated@@400 $generated@@447) ($generated@@439 $generated@@164))))))
 :pattern ( ($generated@@400 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@311 (type $generated@@450))))
(let (($generated@@452 ($generated@@310 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@309 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@308 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@164) (= (type $generated@@454) $generated@@164)) ($generated@@0 ($generated@@91 ($generated@@392 $generated@@450) ($generated@@288 ($generated@@236 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@392 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@329 (type $generated@@455))))
(let (($generated@@457 ($generated@@328 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@327 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@326 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@164) (= (type $generated@@459) $generated@@164)) ($generated@@0 ($generated@@91 ($generated@@400 $generated@@455) ($generated@@288 ($generated@@236 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@400 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@164) ($generated@@237 $generated@@460 $generated@@46)) (and (= ($generated@@288 ($generated@@350 $generated@@2 $generated@@460)) $generated@@460) ($generated@@82 ($generated@@350 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@164) ($generated@@237 $generated@@461 $generated@@47)) (and (= ($generated@@288 ($generated@@350 $generated@@3 $generated@@461)) $generated@@461) ($generated@@82 ($generated@@350 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@164) ($generated@@237 $generated@@462 $generated@@44)) (and (= ($generated@@288 ($generated@@350 $generated@@4 $generated@@462)) $generated@@462) ($generated@@82 ($generated@@350 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 20))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@164) ($generated@@237 $generated@@464 $generated@@45)) (and (= ($generated@@288 ($generated@@350 $generated@@463 $generated@@464)) $generated@@464) ($generated@@82 ($generated@@350 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@69) (= ($generated@@237 ($generated@@288 $generated@@465) $generated@@466) ($generated@@82 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@237 ($generated@@288 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@89 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@87 $generated@@468 $generated@@2)) (<= 0 ($generated@@301 $generated@@467))))
 :pattern ( ($generated@@301 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@282 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@281 $generated@@470)) (<= 0 ($generated@@280 $generated@@469))))
 :pattern ( ($generated@@280 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@418 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@418 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@418 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@77 ($generated@@418 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@69)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@481 ($generated@@426 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@426 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@69)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@69) (= (type $generated@@488) $generated@@69)) (= ($generated@@485 ($generated@@426 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@426 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@77 ($generated@@426 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@164) (= (type $generated@@492) $generated@@164)) (= ($generated@@273 ($generated@@236 $generated@@491 $generated@@492)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@69)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@69) (= (type $generated@@496) $generated@@69)) (= ($generated@@493 ($generated@@154 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@154 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@69)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@69) (= (type $generated@@500) $generated@@69)) (= ($generated@@497 ($generated@@154 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@154 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@164) (= (type $generated@@502) $generated@@164)) (= ($generated@@162 ($generated@@236 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@236 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@164) (= (type $generated@@504) $generated@@164)) (= ($generated@@163 ($generated@@236 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@236 $generated@@503 $generated@@504))
)))
(assert  (and (forall (($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@507))
)) (forall (($generated@@508 T@U) ($generated@@509 Int) ) (! (let (($generated@@510 ($generated@@282 (type $generated@@508))))
(= (type ($generated@@506 $generated@@508 $generated@@509)) $generated@@510))
 :pattern ( ($generated@@506 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@281 $generated@@164)) (= (type $generated@@512) $generated@@69)) (= (type $generated@@513) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@511 ($generated@@505 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@280 $generated@@511))) ($generated@@267 ($generated@@506 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@506 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@85 $generated@@511 ($generated@@505 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@86 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@86 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@517 ($generated@@254 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@254 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@69) (= ($generated@@77 ($generated@@254 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@521 ($generated@@259 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@259 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@77 ($generated@@259 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@525 ($generated@@169 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@169 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@77 ($generated@@169 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@69) (= ($generated@@529 ($generated@@505 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@505 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@69) (= ($generated@@77 ($generated@@505 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@505 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@350 $generated@@534 ($generated@@288 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@288 $generated@@533))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (!  (=> (and (= (type $generated@@535) $generated@@81) (or ($generated@@247 $generated@@535 ($generated@@246 $generated@@536)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@535 $generated@@149)) ($generated@@82 $generated@@535 $generated@@233)) (<= ($generated@@246 0) $generated@@536)) ($generated@@0 ($generated@@245 ($generated@@11 (not (= $generated@@536 7))))))))) (= ($generated@@244 $generated@@535 ($generated@@246 $generated@@536)) ($generated@@246 $generated@@536)))
 :weight 3
 :pattern ( ($generated@@244 $generated@@535 ($generated@@246 $generated@@536)))
))))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@309 $generated@@164 $generated@@164)) (= (type $generated@@538) $generated@@69)) (= (type $generated@@539) $generated@@69)) (= ($generated@@82 $generated@@537 ($generated@@418 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@164) ($generated@@0 ($generated@@91 ($generated@@307 $generated@@537) $generated@@540))) (and ($generated@@237 ($generated@@91 ($generated@@393 $generated@@537) $generated@@540) $generated@@539) ($generated@@237 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@91 ($generated@@393 $generated@@537) $generated@@540))
 :pattern ( ($generated@@91 ($generated@@307 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@82 $generated@@537 ($generated@@418 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@327 $generated@@164 $generated@@164)) (= (type $generated@@542) $generated@@69)) (= (type $generated@@543) $generated@@69)) (= ($generated@@82 $generated@@541 ($generated@@426 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@164) ($generated@@0 ($generated@@91 ($generated@@325 $generated@@541) $generated@@544))) (and ($generated@@237 ($generated@@91 ($generated@@401 $generated@@541) $generated@@544) $generated@@543) ($generated@@237 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@91 ($generated@@401 $generated@@541) $generated@@544))
 :pattern ( ($generated@@91 ($generated@@325 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@82 $generated@@541 ($generated@@426 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@164) (= (type $generated@@548) $generated@@164)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@236 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@236 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@164) (= (type $generated@@550) $generated@@164)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@236 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@236 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@164) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@69)) ($generated@@237 $generated@@551 ($generated@@418 $generated@@552 $generated@@553))) (and (= ($generated@@288 ($generated@@350 ($generated@@309 $generated@@164 $generated@@164) $generated@@551)) $generated@@551) ($generated@@82 ($generated@@350 ($generated@@309 $generated@@164 $generated@@164) $generated@@551) ($generated@@418 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@237 $generated@@551 ($generated@@418 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@164) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@69)) ($generated@@237 $generated@@554 ($generated@@426 $generated@@555 $generated@@556))) (and (= ($generated@@288 ($generated@@350 ($generated@@327 $generated@@164 $generated@@164) $generated@@554)) $generated@@554) ($generated@@82 ($generated@@350 ($generated@@327 $generated@@164 $generated@@164) $generated@@554) ($generated@@426 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@554 ($generated@@426 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@69) (= (type $generated@@558) $generated@@69)) (= (type $generated@@559) $generated@@164)) ($generated@@237 $generated@@559 ($generated@@154 $generated@@557 $generated@@558))) (and (= ($generated@@288 ($generated@@350 $generated@@155 $generated@@559)) $generated@@559) ($generated@@82 ($generated@@350 $generated@@155 $generated@@559) ($generated@@154 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@237 $generated@@559 ($generated@@154 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
 (not ($generated@@0 ($generated@@91 ($generated@@439 $generated@@561) $generated@@560))))
 :pattern ( (let (($generated@@561 (type $generated@@560)))
($generated@@91 ($generated@@439 $generated@@561) $generated@@560)))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@74)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@69) (= (type $generated@@565) $generated@@69)) (and (= ($generated@@77 ($generated@@154 $generated@@564 $generated@@565)) $generated@@63) (= ($generated@@562 ($generated@@154 $generated@@564 $generated@@565)) $generated@@67)))
 :pattern ( ($generated@@154 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 Int) ($generated@@568 Int) ) (! (= ($generated@@566 $generated@@567 $generated@@568) (* $generated@@567 $generated@@568))
 :pattern ( ($generated@@566 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@155) (= ($generated@@545 ($generated@@288 $generated@@569)) ($generated@@546 $generated@@569)))
 :pattern ( ($generated@@545 ($generated@@288 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@164) ($generated@@237 $generated@@570 ($generated@@86 0))) (and (= ($generated@@288 ($generated@@350 $generated@@2 $generated@@570)) $generated@@570) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@164 $generated@@4) $generated@@570) ($generated@@86 0))))
 :pattern ( ($generated@@237 $generated@@570 ($generated@@86 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@164) (= (type $generated@@572) $generated@@69)) ($generated@@237 $generated@@571 ($generated@@254 $generated@@572))) (and (= ($generated@@288 ($generated@@350 ($generated@@87 $generated@@164 $generated@@4) $generated@@571)) $generated@@571) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@164 $generated@@4) $generated@@571) ($generated@@254 $generated@@572))))
 :pattern ( ($generated@@237 $generated@@571 ($generated@@254 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@164) (= (type $generated@@574) $generated@@69)) ($generated@@237 $generated@@573 ($generated@@259 $generated@@574))) (and (= ($generated@@288 ($generated@@350 ($generated@@87 $generated@@164 $generated@@4) $generated@@573)) $generated@@573) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@164 $generated@@4) $generated@@573) ($generated@@259 $generated@@574))))
 :pattern ( ($generated@@237 $generated@@573 ($generated@@259 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@164) (= (type $generated@@576) $generated@@69)) ($generated@@237 $generated@@575 ($generated@@169 $generated@@576))) (and (= ($generated@@288 ($generated@@350 ($generated@@87 $generated@@164 $generated@@2) $generated@@575)) $generated@@575) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@164 $generated@@2) $generated@@575) ($generated@@169 $generated@@576))))
 :pattern ( ($generated@@237 $generated@@575 ($generated@@169 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@164) (= (type $generated@@578) $generated@@69)) ($generated@@237 $generated@@577 ($generated@@505 $generated@@578))) (and (= ($generated@@288 ($generated@@350 ($generated@@281 $generated@@164) $generated@@577)) $generated@@577) ($generated@@82 ($generated@@350 ($generated@@281 $generated@@164) $generated@@577) ($generated@@505 $generated@@578))))
 :pattern ( ($generated@@237 $generated@@577 ($generated@@505 $generated@@578)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@562 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@148) $generated@@64))
(assert (= ($generated@@562 $generated@@148) $generated@@68))
(assert (= ($generated@@77 $generated@@233) $generated@@65))
(assert (= ($generated@@562 $generated@@233) $generated@@68))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@580) $generated@@69)) (= (type $generated@@581) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@579 ($generated@@169 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@164) (< 0 ($generated ($generated@@91 $generated@@579 $generated@@582)))) ($generated@@267 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@91 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@85 $generated@@579 ($generated@@169 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@155) (= (type $generated@@584) $generated@@69)) (= (type $generated@@585) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@266 $generated@@585) (and ($generated@@153 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@69) ($generated@@85 $generated@@583 ($generated@@154 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@85 $generated@@583 ($generated@@154 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@267 ($generated@@162 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@267 ($generated@@162 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@155) (= (type $generated@@588) $generated@@69)) (= (type $generated@@589) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@266 $generated@@589) (and ($generated@@153 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@69) ($generated@@85 $generated@@587 ($generated@@154 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 ($generated@@154 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@267 ($generated@@163 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@267 ($generated@@163 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@164) (= (type $generated@@592) $generated@@164)) (= ($generated@@236 ($generated@@245 $generated@@591) ($generated@@245 $generated@@592)) ($generated@@245 ($generated@@236 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@236 ($generated@@245 $generated@@591) ($generated@@245 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@246 $generated@@593))) ($generated@@245 ($generated@@288 ($generated@@8 $generated@@593))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@246 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@288 ($generated@@245 $generated@@594)) ($generated@@245 ($generated@@288 $generated@@594)))
 :pattern ( ($generated@@288 ($generated@@245 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@282 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@281 $generated@@596)) (= ($generated@@280 $generated@@595) 0)) (= $generated@@595 ($generated@@279 $generated@@596))))
 :pattern ( ($generated@@280 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@87 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@301 ($generated@@92 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@301 $generated@@597) ($generated ($generated@@91 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@301 ($generated@@92 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@602) $generated@@2)) ($generated@@85 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@85 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@604) $generated@@3)) ($generated@@85 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@85 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@606) $generated@@4)) ($generated@@85 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@85 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@608) $generated@@463)) ($generated@@85 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@85 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@610) $generated@@164)) ($generated@@85 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@85 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@281 $generated@@164)) (= (type $generated@@612) $generated@@69)) (= ($generated@@82 $generated@@611 ($generated@@505 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@280 $generated@@611))) ($generated@@237 ($generated@@506 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@506 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@82 $generated@@611 ($generated@@505 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@281 $generated@@164)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@280 $generated@@615))) (< ($generated@@546 ($generated@@350 $generated@@155 ($generated@@506 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@546 ($generated@@350 $generated@@155 ($generated@@506 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@309 $generated@@164 $generated@@164)) (= (type $generated@@618) $generated@@69)) (= (type $generated@@619) $generated@@69)) ($generated@@82 $generated@@617 ($generated@@418 $generated@@618 $generated@@619))) (and (and ($generated@@82 ($generated@@307 $generated@@617) ($generated@@254 $generated@@618)) ($generated@@82 ($generated@@361 $generated@@617) ($generated@@254 $generated@@619))) ($generated@@82 ($generated@@392 $generated@@617) ($generated@@254 ($generated@@154 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@82 $generated@@617 ($generated@@418 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@327 $generated@@164 $generated@@164)) (= (type $generated@@621) $generated@@69)) (= (type $generated@@622) $generated@@69)) ($generated@@82 $generated@@620 ($generated@@426 $generated@@621 $generated@@622))) (and (and ($generated@@82 ($generated@@325 $generated@@620) ($generated@@259 $generated@@621)) ($generated@@82 ($generated@@372 $generated@@620) ($generated@@259 $generated@@622))) ($generated@@82 ($generated@@400 $generated@@620) ($generated@@259 ($generated@@154 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@82 $generated@@620 ($generated@@426 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@82 $generated@@623 $generated@@46))
 :pattern ( ($generated@@82 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@82 $generated@@624 $generated@@47))
 :pattern ( ($generated@@82 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@82 $generated@@625 $generated@@44))
 :pattern ( ($generated@@82 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@463) ($generated@@82 $generated@@626 $generated@@45))
 :pattern ( ($generated@@82 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@164) ($generated@@82 $generated@@627 $generated@@48))
 :pattern ( ($generated@@82 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 (T@U) Bool)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(assert  (and (and (= (type $generated@@629) $generated@@81) (= (type $generated@@632) ($generated@@179 $generated@@81 $generated@@4))) (= (type $generated@@633) ($generated@@87 $generated@@81 $generated@@88))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@638 true))
(let (($generated@@639  (=> (and (not (= $generated@@628 9)) (not (= $generated@@629 $generated@@149))) (=> (and (and (not (= $generated@@629 $generated@@149)) (= $generated@@630 ($generated@@80 $generated@@629))) (and (<= ($generated@@246 0) $generated@@631) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@630 9))))))
(let (($generated@@640  (=> (= $generated@@632 ($generated@@178 $generated@@149 $generated@@633 $generated@@60 false)) (=> (and (not (= $generated@@629 $generated@@149)) (= $generated@@628 ($generated@@80 $generated@@629))) (and (=> (= (ControlFlow 0 4) 2) $generated@@639) (=> (= (ControlFlow 0 4) 3) $generated@@638))))))
(let (($generated@@641  (=> (and (and ($generated@@266 $generated@@633) ($generated@@634 $generated@@633)) (and ($generated@@82 $generated@@629 $generated@@233) ($generated@@85 $generated@@629 $generated@@233 $generated@@633))) (=> (and (and (and (<= ($generated@@246 0) $generated@@635) true) (and (<= ($generated@@246 0) $generated@@636) true)) (and (and (<= ($generated@@246 0) $generated@@637) true) (and (= 3 $generated@@79) (= (ControlFlow 0 5) 4)))) $generated@@640))))
$generated@@641)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert (= (type $generated@@81) $generated@@68))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@82 Int) ) (! ($generated@@80 ($generated@@8 ($generated@@79 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@71 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@71 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@68)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
 :pattern ( ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@80 $generated@@143 ($generated@@84 0)))
 :pattern ( ($generated@@80 $generated@@143 ($generated@@84 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@146)) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@80 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@80 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@86 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@86) (= (type $generated@@215) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@86)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@146)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@68) (= (type $generated@@226) $generated@@68)) (= (type $generated@@227) $generated@@155)) (= (type $generated@@228) $generated@@155)) (= ($generated@@80 ($generated@@221 $generated@@227 $generated@@228) ($generated@@145 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@80 ($generated@@221 $generated@@227 $generated@@228) ($generated@@145 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@146) (= (type $generated@@230) $generated@@146)) (= ($generated@@152 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@152 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@68)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@234) $generated@@68)) (= ($generated@@80 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@155) ($generated@@0 ($generated@@90 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@90 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@80 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@68)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@239) $generated@@68)) (= ($generated@@80 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@155) ($generated@@0 ($generated@@90 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@90 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@80 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) $generated@@68)) (= (type $generated@@251) $generated@@155)) (= (type $generated@@252) $generated@@155)) (= (type $generated@@253) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@247 $generated@@253)) (= ($generated@@83 ($generated@@221 $generated@@251 $generated@@252) ($generated@@145 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@83 ($generated@@221 $generated@@251 $generated@@252) ($generated@@145 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@146) (= ($generated@@144 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@146) ($generated@@144 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@155) (= (type $generated@@259) $generated@@155)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@144 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@2) (= ($generated@@80 $generated@@268 $generated@@81) (<= ($generated@@241 0) ($generated $generated@@268))))
 :pattern ( ($generated@@80 $generated@@268 $generated@@81))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@155)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@83 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@85 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@88 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@85 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@90 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@85 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@90 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@90 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@85 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@90 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@90 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@88 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@85 $generated@@317 $generated@@2)) (= ($generated@@161 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@90 $generated@@316 $generated@@318))) (<= ($generated ($generated@@90 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@90 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@161 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@155) ($generated@@222 $generated@@322 $generated@@81)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@322)) $generated@@322) ($generated@@80 ($generated@@319 $generated@@2 $generated@@322) $generated@@81)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@81))
)))
(assert (= (type $generated@@323) $generated@@68))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@155) ($generated@@222 $generated@@324 $generated@@323)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@324)) $generated@@324) ($generated@@80 ($generated@@319 $generated@@2 $generated@@324) $generated@@323)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@90 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@85 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@90 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@90 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@85 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@90 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@347 T@U) ($generated@@348 Int) ) (!  (=> (= (type $generated@@347) ($generated@@85 $generated@@86 $generated@@87)) (=> (and ($generated@@247 $generated@@347) ($generated@@83 ($generated@@8 $generated@@348) $generated@@323 $generated@@347)) ($generated@@83 ($generated@@8 ($generated@@79 $generated@@348)) $generated@@81 $generated@@347)))
 :pattern ( ($generated@@79 $generated@@348) ($generated@@83 ($generated@@8 $generated@@348) $generated@@323 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@350) $generated@@68)) (= ($generated@@80 $generated@@349 ($generated@@160 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@90 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@80 $generated@@349 ($generated@@160 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@353) $generated@@68)) (= (type $generated@@354) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@155) ($generated@@0 ($generated@@90 $generated@@352 $generated@@355))) ($generated@@248 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@90 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@83 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@357) $generated@@68)) (= (type $generated@@358) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@155) ($generated@@0 ($generated@@90 $generated@@356 $generated@@359))) ($generated@@248 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@90 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@83 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@90 ($generated@@275 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@90 ($generated@@275 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@284 (type $generated@@365))))
(let (($generated@@367 ($generated@@283 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@85 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@369) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@90 ($generated@@280 $generated@@368) ($generated@@153 ($generated@@319 $generated@@146 $generated@@369)))) (= ($generated@@90 ($generated@@363 $generated@@368) ($generated@@153 ($generated@@319 $generated@@146 $generated@@369))) ($generated@@154 ($generated@@319 $generated@@146 $generated@@369))))))
 :pattern ( ($generated@@90 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@302 (type $generated@@373))))
(let (($generated@@375 ($generated@@301 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@85 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@377) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@90 ($generated@@298 $generated@@376) ($generated@@153 ($generated@@319 $generated@@146 $generated@@377)))) (= ($generated@@90 ($generated@@371 $generated@@376) ($generated@@153 ($generated@@319 $generated@@146 $generated@@377))) ($generated@@154 ($generated@@319 $generated@@146 $generated@@377))))))
 :pattern ( ($generated@@90 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@283 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@282 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@90 ($generated@@329 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@90 ($generated@@280 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@90 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@90 ($generated@@280 $generated@@378) $generated@@382))
 :pattern ( ($generated@@90 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@90 ($generated@@329 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@301 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@300 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@90 ($generated@@340 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@90 ($generated@@298 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@90 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@90 ($generated@@298 $generated@@383) $generated@@387))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@90 ($generated@@340 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@68)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) $generated@@68)) (= (type $generated@@394) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@280 $generated@@391) $generated@@395))) (and ($generated@@248 ($generated@@90 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@248 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@90 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@90 ($generated@@280 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@83 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@68)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@298 $generated@@399) $generated@@403))) (and ($generated@@248 ($generated@@90 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@248 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@90 ($generated@@298 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@83 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@85 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@302 (type $generated@@406))))
(let (($generated@@408 ($generated@@301 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@300 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@299 $generated@@408 $generated@@407)) (= ($generated@@298 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@298 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@302 (type $generated@@409))))
(let (($generated@@411 ($generated@@301 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@300 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@299 $generated@@411 $generated@@410)) (= ($generated@@340 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@340 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@302 (type $generated@@412))))
(let (($generated@@414 ($generated@@301 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@300 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@299 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@155))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@284 (type $generated@@415))))
(let (($generated@@417 ($generated@@283 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@282 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@281 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@155) (= (type $generated@@419) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@362 $generated@@415) ($generated@@269 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@302 (type $generated@@420))))
(let (($generated@@422 ($generated@@301 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@300 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@299 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@155) (= (type $generated@@424) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@370 $generated@@420) ($generated@@269 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@155) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@425)) $generated@@425) ($generated@@80 ($generated@@319 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@155) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@426)) $generated@@426) ($generated@@80 ($generated@@319 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@155) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@427)) $generated@@427) ($generated@@80 ($generated@@319 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@155) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@428 $generated@@429)) $generated@@429) ($generated@@80 ($generated@@319 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@68) (= ($generated@@222 ($generated@@269 $generated@@430) $generated@@431) ($generated@@80 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@269 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@88 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@85 $generated@@433 $generated@@2)) (<= 0 ($generated@@274 $generated@@432))))
 :pattern ( ($generated@@274 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@263 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@262 $generated@@435)) (<= 0 ($generated@@261 $generated@@434))))
 :pattern ( ($generated@@261 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@68) (= (type $generated@@439) $generated@@68)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@68) (= (type $generated@@443) $generated@@68)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@68) (= (type $generated@@445) $generated@@68)) (= ($generated@@76 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@68) (= (type $generated@@449) $generated@@68)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@76 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@155) (= (type $generated@@457) $generated@@155)) (= ($generated@@254 ($generated@@221 $generated@@456 $generated@@457)) $generated@@62))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@145 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@145 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@145 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@145 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@155) (= (type $generated@@467) $generated@@155)) (= ($generated@@153 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@155) (= (type $generated@@469) $generated@@155)) (= ($generated@@154 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@263 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@262 $generated@@155)) (= (type $generated@@477) $generated@@68)) (= (type $generated@@478) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@261 $generated@@476))) ($generated@@248 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@83 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@84 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@84 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@68) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@76 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@68) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@68) (= ($generated@@76 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@490 ($generated@@160 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@160 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@76 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@319 $generated@@499 ($generated@@269 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@269 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) $generated@@68)) (= ($generated@@80 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@280 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@90 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@90 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@90 ($generated@@280 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@80 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) $generated@@68)) (= ($generated@@80 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@298 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@90 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@90 ($generated@@298 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@80 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@155) (= (type $generated@@511) $generated@@155)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@155) (= (type $generated@@513) $generated@@155)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@155) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) $generated@@68)) ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@514)) $generated@@514) ($generated@@80 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@155) (= (type $generated@@518) $generated@@68)) (= (type $generated@@519) $generated@@68)) ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@517)) $generated@@517) ($generated@@80 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) $generated@@155)) ($generated@@222 $generated@@522 ($generated@@145 $generated@@520 $generated@@521))) (and (= ($generated@@269 ($generated@@319 $generated@@146 $generated@@522)) $generated@@522) ($generated@@80 ($generated@@319 $generated@@146 $generated@@522) ($generated@@145 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@145 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@90 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@90 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@73)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (and (= ($generated@@76 ($generated@@145 $generated@@527 $generated@@528)) $generated@@63) (= ($generated@@525 ($generated@@145 $generated@@527 $generated@@528)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@146) (= ($generated@@508 ($generated@@269 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@269 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@155) ($generated@@222 $generated@@530 ($generated@@84 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@530)) $generated@@530) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@530) ($generated@@84 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@84 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@155) (= (type $generated@@532) $generated@@68)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@269 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@531)) $generated@@531) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@155) (= (type $generated@@534) $generated@@68)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@269 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@533)) $generated@@533) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@155) (= (type $generated@@536) $generated@@68)) ($generated@@222 $generated@@535 ($generated@@160 $generated@@536))) (and (= ($generated@@269 ($generated@@319 ($generated@@85 $generated@@155 $generated@@2) $generated@@535)) $generated@@535) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@2) $generated@@535) ($generated@@160 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@160 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@269 ($generated@@319 ($generated@@262 $generated@@155) $generated@@537)) $generated@@537) ($generated@@80 ($generated@@319 ($generated@@262 $generated@@155) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@76 $generated@@81) $generated@@61))
(assert (= ($generated@@525 $generated@@81) $generated@@65))
(assert (= ($generated@@76 $generated@@323) $generated@@64))
(assert (= ($generated@@525 $generated@@323) $generated@@67))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@539 ($generated@@160 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@539 $generated@@542)))) ($generated@@248 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@90 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@83 $generated@@539 ($generated@@160 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@146) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@247 $generated@@545) (and ($generated@@144 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@68) ($generated@@83 $generated@@543 ($generated@@145 $generated@@544 $generated@@546) $generated@@545))
 :pattern ( ($generated@@83 $generated@@543 ($generated@@145 $generated@@544 $generated@@546) $generated@@545))
))))) ($generated@@248 ($generated@@153 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@248 ($generated@@153 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@146) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@247 $generated@@549) (and ($generated@@144 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@68) ($generated@@83 $generated@@547 ($generated@@145 $generated@@550 $generated@@548) $generated@@549))
 :pattern ( ($generated@@83 $generated@@547 ($generated@@145 $generated@@550 $generated@@548) $generated@@549))
))))) ($generated@@248 ($generated@@154 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@248 ($generated@@154 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@155)) (= ($generated@@221 ($generated@@243 $generated@@551) ($generated@@243 $generated@@552)) ($generated@@243 ($generated@@221 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@551) ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@269 ($generated@@8 ($generated@@241 $generated@@553))) ($generated@@243 ($generated@@269 ($generated@@8 $generated@@553))))
 :pattern ( ($generated@@269 ($generated@@8 ($generated@@241 $generated@@553))))
)))
(assert (forall (($generated@@554 T@U) ) (! (= ($generated@@269 ($generated@@243 $generated@@554)) ($generated@@243 ($generated@@269 $generated@@554)))
 :pattern ( ($generated@@269 ($generated@@243 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@263 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@262 $generated@@556)) (= ($generated@@261 $generated@@555) 0)) (= $generated@@555 ($generated@@260 $generated@@556))))
 :pattern ( ($generated@@261 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@558)))
 (=> (and (and (= (type $generated@@557) ($generated@@85 $generated@@560 $generated@@2)) (= (type $generated@@559) $generated@@2)) (<= 0 ($generated $generated@@559))) (= ($generated@@274 ($generated@@91 $generated@@557 $generated@@558 $generated@@559)) (+ (- ($generated@@274 $generated@@557) ($generated ($generated@@90 $generated@@557 $generated@@558))) ($generated $generated@@559)))))
 :pattern ( ($generated@@274 ($generated@@91 $generated@@557 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@562) $generated@@2)) ($generated@@83 $generated@@562 $generated@@46 $generated@@561))
 :pattern ( ($generated@@83 $generated@@562 $generated@@46 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@564) $generated@@3)) ($generated@@83 $generated@@564 $generated@@47 $generated@@563))
 :pattern ( ($generated@@83 $generated@@564 $generated@@47 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@566) $generated@@4)) ($generated@@83 $generated@@566 $generated@@44 $generated@@565))
 :pattern ( ($generated@@83 $generated@@566 $generated@@44 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@568) $generated@@428)) ($generated@@83 $generated@@568 $generated@@45 $generated@@567))
 :pattern ( ($generated@@83 $generated@@568 $generated@@45 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@570) $generated@@155)) ($generated@@83 $generated@@570 $generated@@48 $generated@@569))
 :pattern ( ($generated@@83 $generated@@570 $generated@@48 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@262 $generated@@155)) (= (type $generated@@572) $generated@@68)) (= ($generated@@80 $generated@@571 ($generated@@470 $generated@@572)) (forall (($generated@@573 Int) ) (!  (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@261 $generated@@571))) ($generated@@222 ($generated@@471 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@471 $generated@@571 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@571 ($generated@@470 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (= (type $generated@@575) ($generated@@262 $generated@@155)) (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@261 $generated@@575))) (< ($generated@@509 ($generated@@319 $generated@@146 ($generated@@471 $generated@@575 $generated@@576))) ($generated@@574 $generated@@575))))
 :pattern ( ($generated@@509 ($generated@@319 $generated@@146 ($generated@@471 $generated@@575 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) ($generated@@80 $generated@@577 ($generated@@388 $generated@@578 $generated@@579))) (and (and ($generated@@80 ($generated@@280 $generated@@577) ($generated@@231 $generated@@578)) ($generated@@80 ($generated@@329 $generated@@577) ($generated@@231 $generated@@579))) ($generated@@80 ($generated@@362 $generated@@577) ($generated@@231 ($generated@@145 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@388 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) ($generated@@80 $generated@@580 ($generated@@396 $generated@@581 $generated@@582))) (and (and ($generated@@80 ($generated@@298 $generated@@580) ($generated@@236 $generated@@581)) ($generated@@80 ($generated@@340 $generated@@580) ($generated@@236 $generated@@582))) ($generated@@80 ($generated@@370 $generated@@580) ($generated@@236 ($generated@@145 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@80 $generated@@580 ($generated@@396 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) ($generated@@80 $generated@@583 $generated@@46))
 :pattern ( ($generated@@80 $generated@@583 $generated@@46))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@3) ($generated@@80 $generated@@584 $generated@@47))
 :pattern ( ($generated@@80 $generated@@584 $generated@@47))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@4) ($generated@@80 $generated@@585 $generated@@44))
 :pattern ( ($generated@@80 $generated@@585 $generated@@44))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@428) ($generated@@80 $generated@@586 $generated@@45))
 :pattern ( ($generated@@80 $generated@@586 $generated@@45))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@155) ($generated@@80 $generated@@587 $generated@@48))
 :pattern ( ($generated@@80 $generated@@587 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 (T@U) Bool)
(declare-fun $generated@@595 () Int)
(assert  (and (and (= (type $generated@@588) ($generated@@167 $generated@@86 $generated@@4)) (= (type $generated@@589) $generated@@86)) (= (type $generated@@590) ($generated@@85 $generated@@86 $generated@@87))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@596  (=> (= $generated@@588 ($generated@@166 $generated@@589 $generated@@590 $generated@@60 false)) (=> (and (= $generated@@591 ($generated@@79 $generated@@592)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@591 $generated@@593)))))
(let (($generated@@597  (=> (and (and (and ($generated@@247 $generated@@590) ($generated@@594 $generated@@590)) (and ($generated@@0 ($generated@@243 ($generated@@11 true))) (<= ($generated@@241 0) $generated@@593))) (and (and (<= ($generated@@241 0) $generated@@595) (= 2 $generated@@78)) (and (not (= $generated@@593 9)) (= (ControlFlow 0 3) 2)))) $generated@@596)))
$generated@@597)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@329 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U Int) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Bool)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@72 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@221) ($generated@@71 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@71 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (= (type $generated@@226) $generated@@69))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@81) (= (type $generated@@228) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@227 $generated@@226 $generated@@228) ($generated@@85 $generated@@227 $generated@@144 $generated@@228)))
 :pattern ( ($generated@@85 $generated@@227 $generated@@226 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@151)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@69) (= (type $generated@@234) $generated@@69)) (= (type $generated@@235) $generated@@160)) (= (type $generated@@236) $generated@@160)) (= ($generated@@82 ($generated@@229 $generated@@235 $generated@@236) ($generated@@150 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@82 ($generated@@229 $generated@@235 $generated@@236) ($generated@@150 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@151) (= (type $generated@@238) $generated@@151)) (= ($generated@@157 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@157 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@69)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@242) $generated@@69)) (= ($generated@@82 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@160) ($generated@@0 ($generated@@91 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@91 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@82 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@69)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@247) $generated@@69)) (= ($generated@@82 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@160) ($generated@@0 ($generated@@91 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@91 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@82 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@69) (= (type $generated@@258) $generated@@69)) (= (type $generated@@259) $generated@@160)) (= (type $generated@@260) $generated@@160)) (= (type $generated@@261) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@255 $generated@@261)) (= ($generated@@85 ($generated@@229 $generated@@259 $generated@@260) ($generated@@150 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@85 ($generated@@229 $generated@@259 $generated@@260) ($generated@@150 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@73)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@151) (= ($generated@@149 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@151) ($generated@@149 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@160) (= (type $generated@@267) $generated@@160)) (= $generated@@265 ($generated@@229 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@149 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@82 $generated@@276 $generated@@83) (<= ($generated@@249 0) ($generated $generated@@276))))
 :pattern ( ($generated@@82 $generated@@276 $generated@@83))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@160)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@69) (= (type $generated@@281) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@85 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@87 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@89 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@87 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@91 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@87 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@91 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@91 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@87 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@91 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@91 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@325) $generated@@81)) (and ($generated@@255 $generated@@324) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@324 $generated@@325) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@325)) $generated@@83 $generated@@324))
 :pattern ( ($generated@@80 $generated@@325) ($generated@@93 ($generated@@91 $generated@@324 $generated@@325) $generated@@60))
))))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@89 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@87 $generated@@327 $generated@@2)) (= ($generated@@166 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@91 $generated@@326 $generated@@328))) (<= ($generated ($generated@@91 $generated@@326 $generated@@328)) ($generated@@282 $generated@@326))))
 :pattern ( ($generated@@91 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@166 $generated@@326))
)))
(assert (forall (($generated@@330 T@T) ($generated@@331 T@U) ) (! (= (type ($generated@@329 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@160) ($generated@@230 $generated@@332 $generated@@83)) (and (= ($generated@@277 ($generated@@329 $generated@@2 $generated@@332)) $generated@@332) ($generated@@82 ($generated@@329 $generated@@2 $generated@@332) $generated@@83)))
 :pattern ( ($generated@@230 $generated@@332 $generated@@83))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@160) ($generated@@230 $generated@@333 $generated@@144)) (and (= ($generated@@277 ($generated@@329 $generated@@81 $generated@@333)) $generated@@333) ($generated@@82 ($generated@@329 $generated@@81 $generated@@333) $generated@@144)))
 :pattern ( ($generated@@230 $generated@@333 $generated@@144))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@160) ($generated@@230 $generated@@334 $generated@@226)) (and (= ($generated@@277 ($generated@@329 $generated@@81 $generated@@334)) $generated@@334) ($generated@@82 ($generated@@329 $generated@@81 $generated@@334) $generated@@226)))
 :pattern ( ($generated@@230 $generated@@334 $generated@@226))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@81) (= ($generated@@82 $generated@@335 $generated@@226)  (and ($generated@@82 $generated@@335 $generated@@144) (not (= $generated@@335 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@335 $generated@@226))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@292 (type $generated@@336))))
(let (($generated@@338 ($generated@@291 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@290 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@289 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@91 ($generated@@288 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@288 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@292 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@87 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@292 (type $generated@@343))))
(let (($generated@@345 ($generated@@291 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@290 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@289 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@91 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@310 (type $generated@@347))))
(let (($generated@@349 ($generated@@309 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@308 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@307 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@91 ($generated@@306 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@306 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@87 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(let (($generated@@356 ($generated@@309 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@308 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@307 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@91 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@359) $generated@@69)) (= ($generated@@82 $generated@@358 ($generated@@165 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@358 $generated@@360)))) ($generated@@230 $generated@@360 $generated@@359))
 :pattern ( ($generated@@91 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@82 $generated@@358 ($generated@@165 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@362) $generated@@69)) (= (type $generated@@363) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@361 ($generated@@239 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@160) ($generated@@0 ($generated@@91 $generated@@361 $generated@@364))) ($generated@@256 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@91 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@85 $generated@@361 ($generated@@239 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@366) $generated@@69)) (= (type $generated@@367) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@365 ($generated@@244 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@160) ($generated@@0 ($generated@@91 $generated@@365 $generated@@368))) ($generated@@256 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@91 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@85 $generated@@365 ($generated@@244 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@91 ($generated@@283 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@91 ($generated@@283 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@292 (type $generated@@374))))
(let (($generated@@376 ($generated@@291 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@87 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@378) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@91 ($generated@@288 $generated@@377) ($generated@@158 ($generated@@329 $generated@@151 $generated@@378)))) (= ($generated@@91 ($generated@@372 $generated@@377) ($generated@@158 ($generated@@329 $generated@@151 $generated@@378))) ($generated@@159 ($generated@@329 $generated@@151 $generated@@378))))))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@310 (type $generated@@382))))
(let (($generated@@384 ($generated@@309 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@87 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@386) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@91 ($generated@@306 $generated@@385) ($generated@@158 ($generated@@329 $generated@@151 $generated@@386)))) (= ($generated@@91 ($generated@@380 $generated@@385) ($generated@@158 ($generated@@329 $generated@@151 $generated@@386))) ($generated@@159 ($generated@@329 $generated@@151 $generated@@386))))))
 :pattern ( ($generated@@91 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@291 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@290 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@91 ($generated@@340 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@91 ($generated@@288 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@91 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@91 ($generated@@288 $generated@@387) $generated@@391))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@91 ($generated@@340 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@309 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@308 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@91 ($generated@@351 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@91 ($generated@@306 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@91 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@91 ($generated@@306 $generated@@392) $generated@@396))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@91 ($generated@@351 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@69)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@401) $generated@@69)) (= (type $generated@@402) $generated@@69)) (= (type $generated@@403) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@288 $generated@@400) $generated@@404))) (and ($generated@@256 ($generated@@91 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@256 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@91 ($generated@@288 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@85 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@69)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@409) $generated@@69)) (= (type $generated@@410) $generated@@69)) (= (type $generated@@411) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@306 $generated@@408) $generated@@412))) (and ($generated@@256 ($generated@@91 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@256 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@91 ($generated@@306 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@85 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@87 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@310 (type $generated@@415))))
(let (($generated@@417 ($generated@@309 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@308 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@307 $generated@@417 $generated@@416)) (= ($generated@@306 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@306 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@310 (type $generated@@418))))
(let (($generated@@420 ($generated@@309 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@308 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@307 $generated@@420 $generated@@419)) (= ($generated@@351 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@351 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@160))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@292 (type $generated@@424))))
(let (($generated@@426 ($generated@@291 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@290 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@289 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@160) (= (type $generated@@428) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@371 $generated@@424) ($generated@@277 ($generated@@229 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@310 (type $generated@@429))))
(let (($generated@@431 ($generated@@309 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@308 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@307 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@160) (= (type $generated@@433) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@379 $generated@@429) ($generated@@277 ($generated@@229 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@160) ($generated@@230 $generated@@434 $generated@@46)) (and (= ($generated@@277 ($generated@@329 $generated@@2 $generated@@434)) $generated@@434) ($generated@@82 ($generated@@329 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@160) ($generated@@230 $generated@@435 $generated@@47)) (and (= ($generated@@277 ($generated@@329 $generated@@3 $generated@@435)) $generated@@435) ($generated@@82 ($generated@@329 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@160) ($generated@@230 $generated@@436 $generated@@44)) (and (= ($generated@@277 ($generated@@329 $generated@@4 $generated@@436)) $generated@@436) ($generated@@82 ($generated@@329 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@160) ($generated@@230 $generated@@438 $generated@@45)) (and (= ($generated@@277 ($generated@@329 $generated@@437 $generated@@438)) $generated@@438) ($generated@@82 ($generated@@329 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@69) (= ($generated@@230 ($generated@@277 $generated@@439) $generated@@440) ($generated@@82 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@230 ($generated@@277 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@89 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@87 $generated@@442 $generated@@2)) (<= 0 ($generated@@282 $generated@@441))))
 :pattern ( ($generated@@282 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@271 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@270 $generated@@444)) (<= 0 ($generated@@269 $generated@@443))))
 :pattern ( ($generated@@269 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@69)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@69) (= (type $generated@@448) $generated@@69)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@69)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@69) (= (type $generated@@452) $generated@@69)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@69) (= (type $generated@@454) $generated@@69)) (= ($generated@@77 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@69)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@69) (= (type $generated@@458) $generated@@69)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@69)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@69) (= (type $generated@@462) $generated@@69)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@77 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@160) (= (type $generated@@466) $generated@@160)) (= ($generated@@262 ($generated@@229 $generated@@465 $generated@@466)) $generated@@62))
 :pattern ( ($generated@@229 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@69)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@467 ($generated@@150 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@150 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@150 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@150 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@160) (= (type $generated@@476) $generated@@160)) (= ($generated@@158 ($generated@@229 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@229 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@160) (= (type $generated@@478) $generated@@160)) (= ($generated@@159 ($generated@@229 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@229 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ($generated@@483 Int) ) (! (let (($generated@@484 ($generated@@271 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482 $generated@@483)) $generated@@484))
 :pattern ( ($generated@@480 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@270 $generated@@160)) (= (type $generated@@486) $generated@@69)) (= (type $generated@@487) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@485 ($generated@@479 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@269 $generated@@485))) ($generated@@256 ($generated@@480 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@480 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@85 $generated@@485 ($generated@@479 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@86 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@86 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@69) (= ($generated@@491 ($generated@@239 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@239 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@69) (= ($generated@@77 ($generated@@239 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@69) (= ($generated@@495 ($generated@@244 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@244 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@69) (= ($generated@@77 ($generated@@244 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@69) (= ($generated@@499 ($generated@@165 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@165 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@503 ($generated@@479 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@479 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@77 ($generated@@479 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@329 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@510) $generated@@69)) (= (type $generated@@511) $generated@@69)) (= ($generated@@82 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@230 ($generated@@91 ($generated@@372 $generated@@509) $generated@@512) $generated@@511) ($generated@@230 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@509) $generated@@512))
 :pattern ( ($generated@@91 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@82 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) $generated@@69)) (= ($generated@@82 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@230 ($generated@@91 ($generated@@380 $generated@@513) $generated@@516) $generated@@515) ($generated@@230 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@513) $generated@@516))
 :pattern ( ($generated@@91 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@82 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@160) (= (type $generated@@520) $generated@@160)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@229 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@229 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@160) (= (type $generated@@522) $generated@@160)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@229 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@229 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@160) (= (type $generated@@524) $generated@@69)) (= (type $generated@@525) $generated@@69)) ($generated@@230 $generated@@523 ($generated@@397 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@329 ($generated@@290 $generated@@160 $generated@@160) $generated@@523)) $generated@@523) ($generated@@82 ($generated@@329 ($generated@@290 $generated@@160 $generated@@160) $generated@@523) ($generated@@397 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@230 $generated@@523 ($generated@@397 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@160) (= (type $generated@@527) $generated@@69)) (= (type $generated@@528) $generated@@69)) ($generated@@230 $generated@@526 ($generated@@405 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@329 ($generated@@308 $generated@@160 $generated@@160) $generated@@526)) $generated@@526) ($generated@@82 ($generated@@329 ($generated@@308 $generated@@160 $generated@@160) $generated@@526) ($generated@@405 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@230 $generated@@526 ($generated@@405 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@69) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@160)) ($generated@@230 $generated@@531 ($generated@@150 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@329 $generated@@151 $generated@@531)) $generated@@531) ($generated@@82 ($generated@@329 $generated@@151 $generated@@531) ($generated@@150 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@230 $generated@@531 ($generated@@150 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@91 ($generated@@413 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@91 ($generated@@413 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@74)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@69) (= (type $generated@@537) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@150 $generated@@536 $generated@@537)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@151) (= ($generated@@517 ($generated@@277 $generated@@538)) ($generated@@518 $generated@@538)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@160) ($generated@@230 $generated@@539 ($generated@@86 0))) (and (= ($generated@@277 ($generated@@329 $generated@@2 $generated@@539)) $generated@@539) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@539) ($generated@@86 0))))
 :pattern ( ($generated@@230 $generated@@539 ($generated@@86 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@160) (= (type $generated@@541) $generated@@69)) ($generated@@230 $generated@@540 ($generated@@239 $generated@@541))) (and (= ($generated@@277 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@540)) $generated@@540) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@540) ($generated@@239 $generated@@541))))
 :pattern ( ($generated@@230 $generated@@540 ($generated@@239 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@160) (= (type $generated@@543) $generated@@69)) ($generated@@230 $generated@@542 ($generated@@244 $generated@@543))) (and (= ($generated@@277 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@542)) $generated@@542) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@542) ($generated@@244 $generated@@543))))
 :pattern ( ($generated@@230 $generated@@542 ($generated@@244 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@160) (= (type $generated@@545) $generated@@69)) ($generated@@230 $generated@@544 ($generated@@165 $generated@@545))) (and (= ($generated@@277 ($generated@@329 ($generated@@87 $generated@@160 $generated@@2) $generated@@544)) $generated@@544) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@2) $generated@@544) ($generated@@165 $generated@@545))))
 :pattern ( ($generated@@230 $generated@@544 ($generated@@165 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@160) (= (type $generated@@547) $generated@@69)) ($generated@@230 $generated@@546 ($generated@@479 $generated@@547))) (and (= ($generated@@277 ($generated@@329 ($generated@@270 $generated@@160) $generated@@546)) $generated@@546) ($generated@@82 ($generated@@329 ($generated@@270 $generated@@160) $generated@@546) ($generated@@479 $generated@@547))))
 :pattern ( ($generated@@230 $generated@@546 ($generated@@479 $generated@@547)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@534 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@534 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@226) $generated@@65))
(assert (= ($generated@@534 $generated@@226) $generated@@68))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@548 ($generated@@165 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@548 $generated@@551)))) ($generated@@256 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@91 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@85 $generated@@548 ($generated@@165 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@81) (= ($generated@@82 $generated@@555 $generated@@144)  (or (= $generated@@555 $generated@@145) ($generated@@552 ($generated@@553 $generated@@555)))))
 :pattern ( ($generated@@82 $generated@@555 $generated@@144))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@69)) (= (type $generated@@558) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@255 $generated@@558) (and ($generated@@149 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@69) ($generated@@85 $generated@@556 ($generated@@150 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@85 $generated@@556 ($generated@@150 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@256 ($generated@@158 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@256 ($generated@@158 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@151) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@255 $generated@@562) (and ($generated@@149 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@69) ($generated@@85 $generated@@560 ($generated@@150 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@85 $generated@@560 ($generated@@150 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@256 ($generated@@159 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@256 ($generated@@159 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@160) (= (type $generated@@565) $generated@@160)) (= ($generated@@229 ($generated@@251 $generated@@564) ($generated@@251 $generated@@565)) ($generated@@251 ($generated@@229 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 ($generated@@251 $generated@@564) ($generated@@251 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@249 $generated@@566))) ($generated@@251 ($generated@@277 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@249 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@277 ($generated@@251 $generated@@567)) ($generated@@251 ($generated@@277 $generated@@567)))
 :pattern ( ($generated@@277 ($generated@@251 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@271 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@270 $generated@@569)) (= ($generated@@269 $generated@@568) 0)) (= $generated@@568 ($generated@@268 $generated@@569))))
 :pattern ( ($generated@@269 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@87 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@282 ($generated@@92 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@282 $generated@@570) ($generated ($generated@@91 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@282 ($generated@@92 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@575) $generated@@2)) ($generated@@85 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@85 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@577) $generated@@3)) ($generated@@85 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@85 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@579) $generated@@4)) ($generated@@85 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@85 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@581) $generated@@437)) ($generated@@85 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@85 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@583) $generated@@160)) ($generated@@85 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@85 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@270 $generated@@160)) (= (type $generated@@585) $generated@@69)) (= ($generated@@82 $generated@@584 ($generated@@479 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@269 $generated@@584))) ($generated@@230 ($generated@@480 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@480 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@82 $generated@@584 ($generated@@479 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@270 $generated@@160)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@269 $generated@@588))) (< ($generated@@518 ($generated@@329 $generated@@151 ($generated@@480 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@518 ($generated@@329 $generated@@151 ($generated@@480 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@591) $generated@@69)) (= (type $generated@@592) $generated@@69)) ($generated@@82 $generated@@590 ($generated@@397 $generated@@591 $generated@@592))) (and (and ($generated@@82 ($generated@@288 $generated@@590) ($generated@@239 $generated@@591)) ($generated@@82 ($generated@@340 $generated@@590) ($generated@@239 $generated@@592))) ($generated@@82 ($generated@@371 $generated@@590) ($generated@@239 ($generated@@150 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@397 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@594) $generated@@69)) (= (type $generated@@595) $generated@@69)) ($generated@@82 $generated@@593 ($generated@@405 $generated@@594 $generated@@595))) (and (and ($generated@@82 ($generated@@306 $generated@@593) ($generated@@244 $generated@@594)) ($generated@@82 ($generated@@351 $generated@@593) ($generated@@244 $generated@@595))) ($generated@@82 ($generated@@379 $generated@@593) ($generated@@244 ($generated@@150 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@82 $generated@@593 ($generated@@405 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@82 $generated@@596 $generated@@46))
 :pattern ( ($generated@@82 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@82 $generated@@597 $generated@@47))
 :pattern ( ($generated@@82 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@82 $generated@@598 $generated@@44))
 :pattern ( ($generated@@82 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@437) ($generated@@82 $generated@@599 $generated@@45))
 :pattern ( ($generated@@82 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@160) ($generated@@82 $generated@@600 $generated@@48))
 :pattern ( ($generated@@82 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 (T@U) Bool)
(declare-fun $generated@@607 () Int)
(assert  (and (and (= (type $generated@@601) ($generated@@172 $generated@@81 $generated@@4)) (= (type $generated@@602) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@604) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@608  (=> (= $generated@@601 ($generated@@171 $generated@@145 $generated@@602 $generated@@60 false)) (=> (and (= $generated@@603 ($generated@@80 $generated@@604)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@603 $generated@@605)))))
(let (($generated@@609  (=> (and ($generated@@255 $generated@@602) ($generated@@606 $generated@@602)) (=> (and (and (and (not (= $generated@@604 $generated@@145)) (and ($generated@@82 $generated@@604 $generated@@226) ($generated@@85 $generated@@604 $generated@@226 $generated@@602))) (<= ($generated@@249 0) $generated@@605)) (and (and (<= ($generated@@249 0) $generated@@607) (= 2 $generated@@79)) (and (not (= $generated@@605 9)) (= (ControlFlow 0 3) 2)))) $generated@@608))))
$generated@@609)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (Int) Int)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (Int Int) Int)
(declare-fun $generated@@252 (Int Int) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@335 (T@T T@U) T@U)
(declare-fun $generated@@339 () T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (Int Int) Int)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert (= (type $generated@@81) $generated@@68))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@82 Int) ) (! ($generated@@80 ($generated@@8 ($generated@@79 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@71 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@71 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@68)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@141 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@142 $generated@@144) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60))
)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@145 $generated@@81 $generated@@146))
 :pattern ( ($generated@@83 $generated@@145 $generated@@81 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@80 $generated@@147 ($generated@@84 0)))
 :pattern ( ($generated@@80 $generated@@147 ($generated@@84 0)))
)))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@68)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@68) (= (type $generated@@154) $generated@@68)) (= (type $generated@@155) $generated@@150)) ($generated@@80 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@80 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@85 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@80 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@80 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@86 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@86) (= (type $generated@@219) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@86)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@150)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@68) (= (type $generated@@230) $generated@@68)) (= (type $generated@@231) $generated@@159)) (= (type $generated@@232) $generated@@159)) (= ($generated@@80 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@80 ($generated@@225 $generated@@231 $generated@@232) ($generated@@149 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@150) (= (type $generated@@234) $generated@@150)) (= ($generated@@156 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@156 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@68)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@85 $generated@@159 $generated@@4)) (= (type $generated@@238) $generated@@68)) (= ($generated@@80 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@159) ($generated@@0 ($generated@@90 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@90 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@80 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@85 $generated@@159 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@80 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@159) ($generated@@0 ($generated@@90 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@90 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@80 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@245 $generated@@246) $generated@@246)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@253 Int) ($generated@@254 Int) ) (!  (=> (or ($generated@@252 ($generated@@245 $generated@@253) ($generated@@245 $generated@@254)) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@247 ($generated@@11 true))) (<= ($generated@@245 0) $generated@@254)) ($generated@@0 ($generated@@247 ($generated@@11 (not (= $generated@@254 7)))))))) (= ($generated@@251 ($generated@@245 $generated@@253) ($generated@@245 $generated@@254)) ($generated@@245 $generated@@254)))
 :weight 3
 :pattern ( ($generated@@251 ($generated@@245 $generated@@253) ($generated@@245 $generated@@254)))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) $generated@@68)) (= (type $generated@@259) $generated@@159)) (= (type $generated@@260) $generated@@159)) (= (type $generated@@261) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@255 $generated@@261)) (= ($generated@@83 ($generated@@225 $generated@@259 $generated@@260) ($generated@@149 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@83 ($generated@@225 $generated@@259 $generated@@260) ($generated@@149 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@72)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@150) (= ($generated@@148 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@62)))
 :pattern ( ($generated@@148 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@150) ($generated@@148 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@159) (= (type $generated@@267) $generated@@159)) (= $generated@@265 ($generated@@225 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@148 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@80 $generated@@276 $generated@@81) (<= ($generated@@245 0) ($generated $generated@@276))))
 :pattern ( ($generated@@80 $generated@@276 $generated@@81))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@159)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@83 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@283) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@284) $generated@@159)) (= (type $generated@@285) $generated@@68)) ($generated@@141 $generated@@282 $generated@@283)) ($generated@@256 $generated@@284 $generated@@285 $generated@@282)) ($generated@@256 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@141 $generated@@282 $generated@@283) ($generated@@256 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@286) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@287) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@289) $generated@@68)) ($generated@@141 $generated@@286 $generated@@287)) ($generated@@83 $generated@@288 $generated@@289 $generated@@286)) ($generated@@83 $generated@@288 $generated@@289 $generated@@287))
 :pattern ( ($generated@@141 $generated@@286 $generated@@287) ($generated@@83 $generated@@288 $generated@@289 $generated@@286))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@85 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@88 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@85 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@90 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@85 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@90 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@90 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@85 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@90 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@90 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@88 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@85 $generated@@333 $generated@@2)) (= ($generated@@165 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@90 $generated@@332 $generated@@334))) (<= ($generated ($generated@@90 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@90 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@165 $generated@@332))
)))
(assert (forall (($generated@@336 T@T) ($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@159) ($generated@@226 $generated@@338 $generated@@81)) (and (= ($generated@@277 ($generated@@335 $generated@@2 $generated@@338)) $generated@@338) ($generated@@80 ($generated@@335 $generated@@2 $generated@@338) $generated@@81)))
 :pattern ( ($generated@@226 $generated@@338 $generated@@81))
)))
(assert (= (type $generated@@339) $generated@@68))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@159) ($generated@@226 $generated@@340 $generated@@339)) (and (= ($generated@@277 ($generated@@335 $generated@@2 $generated@@340)) $generated@@340) ($generated@@80 ($generated@@335 $generated@@2 $generated@@340) $generated@@339)))
 :pattern ( ($generated@@226 $generated@@340 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@300 (type $generated@@341))))
(let (($generated@@343 ($generated@@299 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@298 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@297 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@90 ($generated@@296 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@296 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@300 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@85 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@300 (type $generated@@348))))
(let (($generated@@350 ($generated@@299 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@298 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@297 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@90 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@318 (type $generated@@352))))
(let (($generated@@354 ($generated@@317 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@316 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@315 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@314 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@318 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@85 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@318 (type $generated@@359))))
(let (($generated@@361 ($generated@@317 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@316 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@315 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@90 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) ($generated@@85 $generated@@86 $generated@@87)) (=> (and ($generated@@255 $generated@@363) ($generated@@83 ($generated@@8 $generated@@364) $generated@@339 $generated@@363)) ($generated@@83 ($generated@@8 ($generated@@79 $generated@@364)) $generated@@81 $generated@@363)))
 :pattern ( ($generated@@79 $generated@@364) ($generated@@83 ($generated@@8 $generated@@364) $generated@@339 $generated@@363))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@85 $generated@@159 $generated@@2)) (= (type $generated@@366) $generated@@68)) (= ($generated@@80 $generated@@365 ($generated@@164 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@159) (< 0 ($generated ($generated@@90 $generated@@365 $generated@@367)))) ($generated@@226 $generated@@367 $generated@@366))
 :pattern ( ($generated@@90 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@80 $generated@@365 ($generated@@164 $generated@@366)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@368 Int) ($generated@@369 Int) ) (!  (=> (or ($generated@@252 $generated@@368 $generated@@369) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@247 ($generated@@11 true))) (<= ($generated@@245 0) $generated@@369)) (not (= $generated@@369 7))))) (= ($generated@@251 $generated@@368 $generated@@369) $generated@@369))
 :pattern ( ($generated@@251 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@85 $generated@@159 $generated@@4)) (= (type $generated@@371) $generated@@68)) (= (type $generated@@372) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@370 ($generated@@235 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@159) ($generated@@0 ($generated@@90 $generated@@370 $generated@@373))) ($generated@@256 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@90 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@83 $generated@@370 ($generated@@235 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@85 $generated@@159 $generated@@4)) (= (type $generated@@375) $generated@@68)) (= (type $generated@@376) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@374 ($generated@@240 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@159) ($generated@@0 ($generated@@90 $generated@@374 $generated@@377))) ($generated@@256 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@90 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@83 $generated@@374 ($generated@@240 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@90 ($generated@@291 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@90 ($generated@@291 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@85 $generated@@159 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@300 (type $generated@@383))))
(let (($generated@@385 ($generated@@299 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@85 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@298 $generated@@159 $generated@@159)) (= (type $generated@@387) $generated@@159)) (= ($generated@@0 ($generated@@90 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@90 ($generated@@296 $generated@@386) ($generated@@157 ($generated@@335 $generated@@150 $generated@@387)))) (= ($generated@@90 ($generated@@381 $generated@@386) ($generated@@157 ($generated@@335 $generated@@150 $generated@@387))) ($generated@@158 ($generated@@335 $generated@@150 $generated@@387))))))
 :pattern ( ($generated@@90 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@85 $generated@@159 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@318 (type $generated@@391))))
(let (($generated@@393 ($generated@@317 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@85 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@316 $generated@@159 $generated@@159)) (= (type $generated@@395) $generated@@159)) (= ($generated@@0 ($generated@@90 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@90 ($generated@@314 $generated@@394) ($generated@@157 ($generated@@335 $generated@@150 $generated@@395)))) (= ($generated@@90 ($generated@@389 $generated@@394) ($generated@@157 ($generated@@335 $generated@@150 $generated@@395))) ($generated@@158 ($generated@@335 $generated@@150 $generated@@395))))))
 :pattern ( ($generated@@90 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@299 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@298 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@90 ($generated@@345 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@90 ($generated@@296 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@90 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@396) $generated@@400))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@90 ($generated@@345 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@317 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@316 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@90 ($generated@@356 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@90 ($generated@@314 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@90 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@401) $generated@@405))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@90 ($generated@@356 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@68)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@298 $generated@@159 $generated@@159)) (= (type $generated@@410) $generated@@68)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@159) ($generated@@0 ($generated@@90 ($generated@@296 $generated@@409) $generated@@413))) (and ($generated@@256 ($generated@@90 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@256 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@83 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@316 $generated@@159 $generated@@159)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@159) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@417) $generated@@421))) (and ($generated@@256 ($generated@@90 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@256 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@83 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@422) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@423) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@424) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@422 $generated@@424))) (and ($generated@@141 $generated@@422 $generated@@423) ($generated@@141 $generated@@423 $generated@@424))) ($generated@@141 $generated@@422 $generated@@424))
 :pattern ( ($generated@@141 $generated@@422 $generated@@423) ($generated@@141 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@85 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@318 (type $generated@@427))))
(let (($generated@@429 ($generated@@317 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@316 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@315 $generated@@429 $generated@@428)) (= ($generated@@314 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@314 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@318 (type $generated@@430))))
(let (($generated@@432 ($generated@@317 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@316 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@315 $generated@@432 $generated@@431)) (= ($generated@@356 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@356 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@318 (type $generated@@433))))
(let (($generated@@435 ($generated@@317 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@316 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@315 $generated@@435 $generated@@434)) (= ($generated@@388 $generated@@433) ($generated@@425 $generated@@159))))))
 :pattern ( ($generated@@388 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@300 (type $generated@@436))))
(let (($generated@@438 ($generated@@299 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@298 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@297 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@159) (= (type $generated@@440) $generated@@159)) ($generated@@0 ($generated@@90 ($generated@@380 $generated@@436) ($generated@@277 ($generated@@225 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@380 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@318 (type $generated@@441))))
(let (($generated@@443 ($generated@@317 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@316 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@315 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@159) (= (type $generated@@445) $generated@@159)) ($generated@@0 ($generated@@90 ($generated@@388 $generated@@441) ($generated@@277 ($generated@@225 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@388 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@159) ($generated@@226 $generated@@446 $generated@@46)) (and (= ($generated@@277 ($generated@@335 $generated@@2 $generated@@446)) $generated@@446) ($generated@@80 ($generated@@335 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@159) ($generated@@226 $generated@@447 $generated@@47)) (and (= ($generated@@277 ($generated@@335 $generated@@3 $generated@@447)) $generated@@447) ($generated@@80 ($generated@@335 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@226 $generated@@448 $generated@@44)) (and (= ($generated@@277 ($generated@@335 $generated@@4 $generated@@448)) $generated@@448) ($generated@@80 ($generated@@335 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@159) ($generated@@226 $generated@@450 $generated@@45)) (and (= ($generated@@277 ($generated@@335 $generated@@449 $generated@@450)) $generated@@450) ($generated@@80 ($generated@@335 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@68) (= ($generated@@226 ($generated@@277 $generated@@451) $generated@@452) ($generated@@80 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@226 ($generated@@277 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@88 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@85 $generated@@454 $generated@@2)) (<= 0 ($generated@@290 $generated@@453))))
 :pattern ( ($generated@@290 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@271 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@270 $generated@@456)) (<= 0 ($generated@@269 $generated@@455))))
 :pattern ( ($generated@@269 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@68) (= (type $generated@@460) $generated@@68)) (= ($generated@@457 ($generated@@406 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@406 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@68)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@68) (= (type $generated@@464) $generated@@68)) (= ($generated@@461 ($generated@@406 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@406 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@68) (= (type $generated@@466) $generated@@68)) (= ($generated@@76 ($generated@@406 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@68) (= (type $generated@@470) $generated@@68)) (= ($generated@@467 ($generated@@414 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@471 ($generated@@414 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@76 ($generated@@414 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@159) (= (type $generated@@478) $generated@@159)) (= ($generated@@262 ($generated@@225 $generated@@477 $generated@@478)) $generated@@62))
 :pattern ( ($generated@@225 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@149 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@149 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@149 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@149 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@159) (= (type $generated@@488) $generated@@159)) (= ($generated@@157 ($generated@@225 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@225 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@159) (= (type $generated@@490) $generated@@159)) (= ($generated@@158 ($generated@@225 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@225 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@271 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@270 $generated@@159)) (= (type $generated@@498) $generated@@68)) (= (type $generated@@499) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@269 $generated@@497))) ($generated@@256 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@83 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@84 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@84 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@503 ($generated@@235 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@235 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@76 ($generated@@235 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@507 ($generated@@240 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@240 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@76 ($generated@@240 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@164 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@164 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@335 $generated@@520 ($generated@@277 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@277 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@298 $generated@@159 $generated@@159)) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) $generated@@68)) (= ($generated@@80 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@159) ($generated@@0 ($generated@@90 ($generated@@296 $generated@@521) $generated@@524))) (and ($generated@@226 ($generated@@90 ($generated@@381 $generated@@521) $generated@@524) $generated@@523) ($generated@@226 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@521) $generated@@524))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@80 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@316 $generated@@159 $generated@@159)) (= (type $generated@@526) $generated@@68)) (= (type $generated@@527) $generated@@68)) (= ($generated@@80 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@159) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@525) $generated@@528))) (and ($generated@@226 ($generated@@90 ($generated@@389 $generated@@525) $generated@@528) $generated@@527) ($generated@@226 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@525) $generated@@528))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@80 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@529 Int) ($generated@@530 Int) ) (!  (=> (or ($generated@@252 $generated@@529 $generated@@530) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@247 ($generated@@11 true))) (<= ($generated@@245 0) $generated@@530)) (not (= $generated@@530 7))))) (and (= ($generated@@251 $generated@@529 $generated@@530) ($generated@@79 $generated@@529)) (<= ($generated@@245 0) ($generated@@251 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@251 $generated@@529 $generated@@530))
))))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@159) (= (type $generated@@534) $generated@@159)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@225 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@225 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@159) (= (type $generated@@536) $generated@@159)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@225 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@225 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@159) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) ($generated@@226 $generated@@537 ($generated@@406 $generated@@538 $generated@@539))) (and (= ($generated@@277 ($generated@@335 ($generated@@298 $generated@@159 $generated@@159) $generated@@537)) $generated@@537) ($generated@@80 ($generated@@335 ($generated@@298 $generated@@159 $generated@@159) $generated@@537) ($generated@@406 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@226 $generated@@537 ($generated@@406 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@159) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@68)) ($generated@@226 $generated@@540 ($generated@@414 $generated@@541 $generated@@542))) (and (= ($generated@@277 ($generated@@335 ($generated@@316 $generated@@159 $generated@@159) $generated@@540)) $generated@@540) ($generated@@80 ($generated@@335 ($generated@@316 $generated@@159 $generated@@159) $generated@@540) ($generated@@414 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@226 $generated@@540 ($generated@@414 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) $generated@@159)) ($generated@@226 $generated@@545 ($generated@@149 $generated@@543 $generated@@544))) (and (= ($generated@@277 ($generated@@335 $generated@@150 $generated@@545)) $generated@@545) ($generated@@80 ($generated@@335 $generated@@150 $generated@@545) ($generated@@149 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@226 $generated@@545 ($generated@@149 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@90 ($generated@@425 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@90 ($generated@@425 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@73)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (and (= ($generated@@76 ($generated@@149 $generated@@550 $generated@@551)) $generated@@63) (= ($generated@@548 ($generated@@149 $generated@@550 $generated@@551)) $generated@@66)))
 :pattern ( ($generated@@149 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 Int) ($generated@@554 Int) ) (! (= ($generated@@552 $generated@@553 $generated@@554) (* $generated@@553 $generated@@554))
 :pattern ( ($generated@@552 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@150) (= ($generated@@531 ($generated@@277 $generated@@555)) ($generated@@532 $generated@@555)))
 :pattern ( ($generated@@531 ($generated@@277 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@159) ($generated@@226 $generated@@556 ($generated@@84 0))) (and (= ($generated@@277 ($generated@@335 $generated@@2 $generated@@556)) $generated@@556) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@159 $generated@@4) $generated@@556) ($generated@@84 0))))
 :pattern ( ($generated@@226 $generated@@556 ($generated@@84 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@159) (= (type $generated@@558) $generated@@68)) ($generated@@226 $generated@@557 ($generated@@235 $generated@@558))) (and (= ($generated@@277 ($generated@@335 ($generated@@85 $generated@@159 $generated@@4) $generated@@557)) $generated@@557) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@159 $generated@@4) $generated@@557) ($generated@@235 $generated@@558))))
 :pattern ( ($generated@@226 $generated@@557 ($generated@@235 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@159) (= (type $generated@@560) $generated@@68)) ($generated@@226 $generated@@559 ($generated@@240 $generated@@560))) (and (= ($generated@@277 ($generated@@335 ($generated@@85 $generated@@159 $generated@@4) $generated@@559)) $generated@@559) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@159 $generated@@4) $generated@@559) ($generated@@240 $generated@@560))))
 :pattern ( ($generated@@226 $generated@@559 ($generated@@240 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@159) (= (type $generated@@562) $generated@@68)) ($generated@@226 $generated@@561 ($generated@@164 $generated@@562))) (and (= ($generated@@277 ($generated@@335 ($generated@@85 $generated@@159 $generated@@2) $generated@@561)) $generated@@561) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@159 $generated@@2) $generated@@561) ($generated@@164 $generated@@562))))
 :pattern ( ($generated@@226 $generated@@561 ($generated@@164 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@159) (= (type $generated@@564) $generated@@68)) ($generated@@226 $generated@@563 ($generated@@491 $generated@@564))) (and (= ($generated@@277 ($generated@@335 ($generated@@270 $generated@@159) $generated@@563)) $generated@@563) ($generated@@80 ($generated@@335 ($generated@@270 $generated@@159) $generated@@563) ($generated@@491 $generated@@564))))
 :pattern ( ($generated@@226 $generated@@563 ($generated@@491 $generated@@564)))
)))
(assert (= ($generated@@76 $generated@@81) $generated@@61))
(assert (= ($generated@@548 $generated@@81) $generated@@65))
(assert (= ($generated@@76 $generated@@339) $generated@@64))
(assert (= ($generated@@548 $generated@@339) $generated@@67))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@85 $generated@@159 $generated@@2)) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@565 ($generated@@164 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@159) (< 0 ($generated ($generated@@90 $generated@@565 $generated@@568)))) ($generated@@256 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@90 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@83 $generated@@565 ($generated@@164 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@255 $generated@@571) (and ($generated@@148 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@68) ($generated@@83 $generated@@569 ($generated@@149 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@83 $generated@@569 ($generated@@149 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@256 ($generated@@157 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@256 ($generated@@157 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@150) (= (type $generated@@574) $generated@@68)) (= (type $generated@@575) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@255 $generated@@575) (and ($generated@@148 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@68) ($generated@@83 $generated@@573 ($generated@@149 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@83 $generated@@573 ($generated@@149 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@256 ($generated@@158 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@256 ($generated@@158 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@159) (= (type $generated@@578) $generated@@159)) (= ($generated@@225 ($generated@@247 $generated@@577) ($generated@@247 $generated@@578)) ($generated@@247 ($generated@@225 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@225 ($generated@@247 $generated@@577) ($generated@@247 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@245 $generated@@579))) ($generated@@247 ($generated@@277 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@245 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@277 ($generated@@247 $generated@@580)) ($generated@@247 ($generated@@277 $generated@@580)))
 :pattern ( ($generated@@277 ($generated@@247 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@271 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@270 $generated@@582)) (= ($generated@@269 $generated@@581) 0)) (= $generated@@581 ($generated@@268 $generated@@582))))
 :pattern ( ($generated@@269 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@85 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@290 ($generated@@91 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@290 $generated@@583) ($generated ($generated@@90 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@290 ($generated@@91 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@588) $generated@@2)) ($generated@@83 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@83 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@590) $generated@@3)) ($generated@@83 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@83 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@592) $generated@@4)) ($generated@@83 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@83 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@594) $generated@@449)) ($generated@@83 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@83 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@596) $generated@@159)) ($generated@@83 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@83 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@270 $generated@@159)) (= (type $generated@@598) $generated@@68)) (= ($generated@@80 $generated@@597 ($generated@@491 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@269 $generated@@597))) ($generated@@226 ($generated@@492 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@492 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@80 $generated@@597 ($generated@@491 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@270 $generated@@159)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@269 $generated@@601))) (< ($generated@@532 ($generated@@335 $generated@@150 ($generated@@492 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@532 ($generated@@335 $generated@@150 ($generated@@492 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@298 $generated@@159 $generated@@159)) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) $generated@@68)) ($generated@@80 $generated@@603 ($generated@@406 $generated@@604 $generated@@605))) (and (and ($generated@@80 ($generated@@296 $generated@@603) ($generated@@235 $generated@@604)) ($generated@@80 ($generated@@345 $generated@@603) ($generated@@235 $generated@@605))) ($generated@@80 ($generated@@380 $generated@@603) ($generated@@235 ($generated@@149 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@80 $generated@@603 ($generated@@406 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@316 $generated@@159 $generated@@159)) (= (type $generated@@607) $generated@@68)) (= (type $generated@@608) $generated@@68)) ($generated@@80 $generated@@606 ($generated@@414 $generated@@607 $generated@@608))) (and (and ($generated@@80 ($generated@@314 $generated@@606) ($generated@@240 $generated@@607)) ($generated@@80 ($generated@@356 $generated@@606) ($generated@@240 $generated@@608))) ($generated@@80 ($generated@@388 $generated@@606) ($generated@@240 ($generated@@149 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@80 $generated@@606 ($generated@@414 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@80 $generated@@609 $generated@@46))
 :pattern ( ($generated@@80 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@80 $generated@@610 $generated@@47))
 :pattern ( ($generated@@80 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@80 $generated@@611 $generated@@44))
 :pattern ( ($generated@@80 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@449) ($generated@@80 $generated@@612 $generated@@45))
 :pattern ( ($generated@@80 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@159) ($generated@@80 $generated@@613 $generated@@48))
 :pattern ( ($generated@@80 $generated@@613 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(assert  (and (and (= (type $generated@@618) ($generated@@171 $generated@@86 $generated@@4)) (= (type $generated@@619) $generated@@86)) (= (type $generated@@620) ($generated@@85 $generated@@86 $generated@@87))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@625 true))
(let (($generated@@626  (=> (and (and (not (= $generated@@614 9)) (= $generated@@615 ($generated@@79 $generated@@616))) (and (<= ($generated@@245 0) $generated@@617) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@615 9)))))
(let (($generated@@627  (=> (and (= $generated@@618 ($generated@@170 $generated@@619 $generated@@620 $generated@@60 false)) (= $generated@@614 ($generated@@79 $generated@@616))) (and (=> (= (ControlFlow 0 4) 2) $generated@@626) (=> (= (ControlFlow 0 4) 3) $generated@@625)))))
(let (($generated@@628  (=> (and (and ($generated@@255 $generated@@620) ($generated@@621 $generated@@620)) ($generated@@0 ($generated@@247 ($generated@@11 true)))) (=> (and (and (and (<= ($generated@@245 0) $generated@@622) true) (and (<= ($generated@@245 0) $generated@@623) true)) (and (and (<= ($generated@@245 0) $generated@@624) true) (and (= 3 $generated@@78) (= (ControlFlow 0 5) 4)))) $generated@@627))))
$generated@@628)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@244 (T@U Int) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@T) T@U)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (Int Int) Int)
(declare-fun $generated@@580 (T@U) Bool)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@144) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@142 $generated@@143 $generated@@144)) (forall (($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@81) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@143 $generated@@145) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@144 $generated@@145) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@144 $generated@@145) $generated@@60))
)))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@146 $generated@@83 $generated@@147))
 :pattern ( ($generated@@85 $generated@@146 $generated@@83 $generated@@147))
)))
(assert  (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@81)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@81) (= (type $generated@@151) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@150 $generated@@148 $generated@@151)  (or (= $generated@@150 $generated@@149) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@150 $generated@@148 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@82 $generated@@152 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@152 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@155) 14) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@69)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@69) (= (type $generated@@159) $generated@@69)) (= (type $generated@@160) $generated@@155)) ($generated@@82 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@82 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@69)) ($generated@@82 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@82 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@81 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@72 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@81) (= (type $generated@@224) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@225) ($generated@@71 $generated@@4))) (= (type $generated@@227) $generated@@81)) (= (type $generated@@228) ($generated@@71 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (= (type $generated@@230) $generated@@69))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@81) (= (type $generated@@232) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@231 $generated@@230 $generated@@232) ($generated@@85 $generated@@231 $generated@@148 $generated@@232)))
 :pattern ( ($generated@@85 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@155)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@69) (= (type $generated@@238) $generated@@69)) (= (type $generated@@239) $generated@@164)) (= (type $generated@@240) $generated@@164)) (= ($generated@@82 ($generated@@233 $generated@@239 $generated@@240) ($generated@@154 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@82 ($generated@@233 $generated@@239 $generated@@240) ($generated@@154 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@242 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@247 T@U) ($generated@@248 Int) ) (!  (=> (and (= (type $generated@@247) $generated@@81) (or ($generated@@244 ($generated@@242 $generated@@247) ($generated@@243 $generated@@248)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@247 $generated@@149)) ($generated@@82 $generated@@247 $generated@@230)) (<= ($generated@@243 0) $generated@@248)) ($generated@@0 ($generated@@242 ($generated@@11 (not (= $generated@@248 7))))))))) (= ($generated@@241 ($generated@@242 $generated@@247) ($generated@@243 $generated@@248)) ($generated@@243 $generated@@248)))
 :weight 3
 :pattern ( ($generated@@241 ($generated@@242 $generated@@247) ($generated@@243 $generated@@248)))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@155) (= (type $generated@@250) $generated@@155)) (= ($generated@@161 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@161 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@69)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@254) $generated@@69)) (= ($generated@@82 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@164) ($generated@@0 ($generated@@91 $generated@@253 $generated@@255))) ($generated@@234 $generated@@255 $generated@@254))
 :pattern ( ($generated@@91 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@82 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@69)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@259) $generated@@69)) (= ($generated@@82 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@164) ($generated@@0 ($generated@@91 $generated@@258 $generated@@260))) ($generated@@234 $generated@@260 $generated@@259))
 :pattern ( ($generated@@91 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@82 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@243 $generated@@261) $generated@@261)
 :pattern ( ($generated@@243 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@242 $generated@@262) $generated@@262)
 :pattern ( ($generated@@242 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@69) (= (type $generated@@266) $generated@@69)) (= (type $generated@@267) $generated@@164)) (= (type $generated@@268) $generated@@164)) (= (type $generated@@269) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@263 $generated@@269)) (= ($generated@@85 ($generated@@233 $generated@@267 $generated@@268) ($generated@@154 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@85 ($generated@@233 $generated@@267 $generated@@268) ($generated@@154 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@73)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@155) (= ($generated@@153 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@155) ($generated@@153 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@164) (= (type $generated@@275) $generated@@164)) (= $generated@@273 ($generated@@233 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@153 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@2) (= ($generated@@82 $generated@@284 $generated@@83) (<= ($generated@@243 0) ($generated $generated@@284))))
 :pattern ( ($generated@@82 $generated@@284 $generated@@83))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@164)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@69) (= (type $generated@@289) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@264 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@85 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@264 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@291) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@292) $generated@@164)) (= (type $generated@@293) $generated@@69)) ($generated@@142 $generated@@290 $generated@@291)) ($generated@@264 $generated@@292 $generated@@293 $generated@@290)) ($generated@@264 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@142 $generated@@290 $generated@@291) ($generated@@264 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@294) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@295) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@297) $generated@@69)) ($generated@@142 $generated@@294 $generated@@295)) ($generated@@85 $generated@@296 $generated@@297 $generated@@294)) ($generated@@85 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@142 $generated@@294 $generated@@295) ($generated@@85 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@87 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@89 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@87 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@91 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@87 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@91 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@91 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@87 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@91 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@91 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@341) $generated@@81)) (and ($generated@@263 $generated@@340) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@340 $generated@@341) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@341)) $generated@@83 $generated@@340))
 :pattern ( ($generated@@80 $generated@@341) ($generated@@93 ($generated@@91 $generated@@340 $generated@@341) $generated@@60))
))))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@342 T@U) ($generated@@343 Int) ) (!  (=> (and (= (type $generated@@342) $generated@@81) (or ($generated@@244 $generated@@342 $generated@@343) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@342 $generated@@149)) ($generated@@82 $generated@@342 $generated@@230)) (<= ($generated@@243 0) $generated@@343)) (not (= $generated@@343 7)))))) (= ($generated@@241 $generated@@342 $generated@@343) $generated@@343))
 :pattern ( ($generated@@241 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@89 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@87 $generated@@345 $generated@@2)) (= ($generated@@170 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@91 $generated@@344 $generated@@346))) (<= ($generated ($generated@@91 $generated@@344 $generated@@346)) ($generated@@298 $generated@@344))))
 :pattern ( ($generated@@91 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@170 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@164) ($generated@@234 $generated@@350 $generated@@83)) (and (= ($generated@@285 ($generated@@347 $generated@@2 $generated@@350)) $generated@@350) ($generated@@82 ($generated@@347 $generated@@2 $generated@@350) $generated@@83)))
 :pattern ( ($generated@@234 $generated@@350 $generated@@83))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@164) ($generated@@234 $generated@@351 $generated@@148)) (and (= ($generated@@285 ($generated@@347 $generated@@81 $generated@@351)) $generated@@351) ($generated@@82 ($generated@@347 $generated@@81 $generated@@351) $generated@@148)))
 :pattern ( ($generated@@234 $generated@@351 $generated@@148))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@164) ($generated@@234 $generated@@352 $generated@@230)) (and (= ($generated@@285 ($generated@@347 $generated@@81 $generated@@352)) $generated@@352) ($generated@@82 ($generated@@347 $generated@@81 $generated@@352) $generated@@230)))
 :pattern ( ($generated@@234 $generated@@352 $generated@@230))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@81) (= ($generated@@82 $generated@@353 $generated@@230)  (and ($generated@@82 $generated@@353 $generated@@148) (not (= $generated@@353 $generated@@149)))))
 :pattern ( ($generated@@82 $generated@@353 $generated@@230))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@308 (type $generated@@354))))
(let (($generated@@356 ($generated@@307 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@306 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@305 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@91 ($generated@@304 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@304 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@308 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@87 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@308 (type $generated@@361))))
(let (($generated@@363 ($generated@@307 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@306 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@305 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@91 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@326 (type $generated@@365))))
(let (($generated@@367 ($generated@@325 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@324 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@323 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@91 ($generated@@322 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@322 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@326 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@87 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@326 (type $generated@@372))))
(let (($generated@@374 ($generated@@325 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@324 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@323 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@91 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@377) $generated@@69)) (= ($generated@@82 $generated@@376 ($generated@@169 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@164) (< 0 ($generated ($generated@@91 $generated@@376 $generated@@378)))) ($generated@@234 $generated@@378 $generated@@377))
 :pattern ( ($generated@@91 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@82 $generated@@376 ($generated@@169 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@164) ($generated@@0 ($generated@@91 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@91 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@85 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@87 $generated@@164 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@164) ($generated@@0 ($generated@@91 $generated@@383 $generated@@386))) ($generated@@264 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@91 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@85 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@91 ($generated@@299 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@91 ($generated@@299 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@308 (type $generated@@392))))
(let (($generated@@394 ($generated@@307 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@87 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@306 $generated@@164 $generated@@164)) (= (type $generated@@396) $generated@@164)) (= ($generated@@0 ($generated@@91 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@91 ($generated@@304 $generated@@395) ($generated@@162 ($generated@@347 $generated@@155 $generated@@396)))) (= ($generated@@91 ($generated@@390 $generated@@395) ($generated@@162 ($generated@@347 $generated@@155 $generated@@396))) ($generated@@163 ($generated@@347 $generated@@155 $generated@@396))))))
 :pattern ( ($generated@@91 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@87 $generated@@164 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@326 (type $generated@@400))))
(let (($generated@@402 ($generated@@325 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@87 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@324 $generated@@164 $generated@@164)) (= (type $generated@@404) $generated@@164)) (= ($generated@@0 ($generated@@91 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@91 ($generated@@322 $generated@@403) ($generated@@162 ($generated@@347 $generated@@155 $generated@@404)))) (= ($generated@@91 ($generated@@398 $generated@@403) ($generated@@162 ($generated@@347 $generated@@155 $generated@@404))) ($generated@@163 ($generated@@347 $generated@@155 $generated@@404))))))
 :pattern ( ($generated@@91 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@307 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@306 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@91 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@91 ($generated@@304 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@91 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@91 ($generated@@304 $generated@@405) $generated@@409))
 :pattern ( ($generated@@91 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@91 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@325 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@324 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@91 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@91 ($generated@@322 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@91 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@91 ($generated@@322 $generated@@410) $generated@@414))
 :pattern ( ($generated@@91 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@91 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@306 $generated@@164 $generated@@164)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@164) ($generated@@0 ($generated@@91 ($generated@@304 $generated@@418) $generated@@422))) (and ($generated@@264 ($generated@@91 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@264 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@91 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@91 ($generated@@304 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@85 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@324 $generated@@164 $generated@@164)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@164) ($generated@@0 ($generated@@91 ($generated@@322 $generated@@426) $generated@@430))) (and ($generated@@264 ($generated@@91 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@264 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@91 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@91 ($generated@@322 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@85 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@432) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@433) ($generated@@87 $generated@@81 $generated@@88))) (not (= $generated@@431 $generated@@433))) (and ($generated@@142 $generated@@431 $generated@@432) ($generated@@142 $generated@@432 $generated@@433))) ($generated@@142 $generated@@431 $generated@@433))
 :pattern ( ($generated@@142 $generated@@431 $generated@@432) ($generated@@142 $generated@@432 $generated@@433))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@434 T@U) ($generated@@435 Int) ) (!  (=> (and (= (type $generated@@434) $generated@@81) (or ($generated@@244 $generated@@434 $generated@@435) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@434 $generated@@149)) ($generated@@82 $generated@@434 $generated@@230)) (<= ($generated@@243 0) $generated@@435)) (not (= $generated@@435 7)))))) (and (= ($generated@@241 $generated@@434 $generated@@435) ($generated@@80 $generated@@434)) (<= ($generated@@243 0) ($generated@@241 $generated@@434 $generated@@435))))
 :pattern ( ($generated@@241 $generated@@434 $generated@@435))
))))
(assert (forall (($generated@@437 T@T) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@87 $generated@@437 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@326 (type $generated@@438))))
(let (($generated@@440 ($generated@@325 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@324 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@323 $generated@@440 $generated@@439)) (= ($generated@@322 $generated@@438) ($generated@@436 $generated@@440))))))
 :pattern ( ($generated@@322 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@326 (type $generated@@441))))
(let (($generated@@443 ($generated@@325 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@324 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@323 $generated@@443 $generated@@442)) (= ($generated@@369 $generated@@441) ($generated@@436 $generated@@442))))))
 :pattern ( ($generated@@369 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@326 (type $generated@@444))))
(let (($generated@@446 ($generated@@325 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@324 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@323 $generated@@446 $generated@@445)) (= ($generated@@397 $generated@@444) ($generated@@436 $generated@@164))))))
 :pattern ( ($generated@@397 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@308 (type $generated@@447))))
(let (($generated@@449 ($generated@@307 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@306 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@305 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@164) (= (type $generated@@451) $generated@@164)) ($generated@@0 ($generated@@91 ($generated@@389 $generated@@447) ($generated@@285 ($generated@@233 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@389 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@326 (type $generated@@452))))
(let (($generated@@454 ($generated@@325 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@324 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@323 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@164) (= (type $generated@@456) $generated@@164)) ($generated@@0 ($generated@@91 ($generated@@397 $generated@@452) ($generated@@285 ($generated@@233 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@397 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@164) ($generated@@234 $generated@@457 $generated@@46)) (and (= ($generated@@285 ($generated@@347 $generated@@2 $generated@@457)) $generated@@457) ($generated@@82 ($generated@@347 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@164) ($generated@@234 $generated@@458 $generated@@47)) (and (= ($generated@@285 ($generated@@347 $generated@@3 $generated@@458)) $generated@@458) ($generated@@82 ($generated@@347 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@164) ($generated@@234 $generated@@459 $generated@@44)) (and (= ($generated@@285 ($generated@@347 $generated@@4 $generated@@459)) $generated@@459) ($generated@@82 ($generated@@347 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 20))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@164) ($generated@@234 $generated@@461 $generated@@45)) (and (= ($generated@@285 ($generated@@347 $generated@@460 $generated@@461)) $generated@@461) ($generated@@82 ($generated@@347 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@69) (= ($generated@@234 ($generated@@285 $generated@@462) $generated@@463) ($generated@@82 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@234 ($generated@@285 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@89 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@87 $generated@@465 $generated@@2)) (<= 0 ($generated@@298 $generated@@464))))
 :pattern ( ($generated@@298 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@279 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@278 $generated@@467)) (<= 0 ($generated@@277 $generated@@466))))
 :pattern ( ($generated@@277 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@69)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@69) (= (type $generated@@471) $generated@@69)) (= ($generated@@468 ($generated@@415 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@415 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@69)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@472 ($generated@@415 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@476 $generated@@477)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@423 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@423 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@423 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@486 $generated@@487)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@164) (= (type $generated@@489) $generated@@164)) (= ($generated@@270 ($generated@@233 $generated@@488 $generated@@489)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@69)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@69) (= (type $generated@@493) $generated@@69)) (= ($generated@@490 ($generated@@154 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@154 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@69)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@69) (= (type $generated@@497) $generated@@69)) (= ($generated@@494 ($generated@@154 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@154 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@164) (= (type $generated@@499) $generated@@164)) (= ($generated@@162 ($generated@@233 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@233 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@164) (= (type $generated@@501) $generated@@164)) (= ($generated@@163 ($generated@@233 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@233 $generated@@500 $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@279 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@278 $generated@@164)) (= (type $generated@@509) $generated@@69)) (= (type $generated@@510) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@277 $generated@@508))) ($generated@@264 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@85 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@86 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@86 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@251 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@251 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@77 ($generated@@251 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@69) (= ($generated@@518 ($generated@@256 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@256 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@77 ($generated@@256 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@522 ($generated@@169 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@169 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@77 ($generated@@169 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@77 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@347 $generated@@531 ($generated@@285 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@285 $generated@@530))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@532 T@U) ($generated@@533 Int) ) (!  (=> (and (= (type $generated@@532) $generated@@81) (or ($generated@@244 $generated@@532 ($generated@@243 $generated@@533)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@532 $generated@@149)) ($generated@@82 $generated@@532 $generated@@230)) (<= ($generated@@243 0) $generated@@533)) ($generated@@0 ($generated@@242 ($generated@@11 (not (= $generated@@533 7))))))))) (= ($generated@@241 $generated@@532 ($generated@@243 $generated@@533)) ($generated@@243 $generated@@533)))
 :weight 3
 :pattern ( ($generated@@241 $generated@@532 ($generated@@243 $generated@@533)))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@306 $generated@@164 $generated@@164)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@82 $generated@@534 ($generated@@415 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@164) ($generated@@0 ($generated@@91 ($generated@@304 $generated@@534) $generated@@537))) (and ($generated@@234 ($generated@@91 ($generated@@390 $generated@@534) $generated@@537) $generated@@536) ($generated@@234 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@91 ($generated@@390 $generated@@534) $generated@@537))
 :pattern ( ($generated@@91 ($generated@@304 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@82 $generated@@534 ($generated@@415 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@324 $generated@@164 $generated@@164)) (= (type $generated@@539) $generated@@69)) (= (type $generated@@540) $generated@@69)) (= ($generated@@82 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@164) ($generated@@0 ($generated@@91 ($generated@@322 $generated@@538) $generated@@541))) (and ($generated@@234 ($generated@@91 ($generated@@398 $generated@@538) $generated@@541) $generated@@540) ($generated@@234 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@91 ($generated@@398 $generated@@538) $generated@@541))
 :pattern ( ($generated@@91 ($generated@@322 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@82 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@164) (= (type $generated@@545) $generated@@164)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@233 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@233 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@164) (= (type $generated@@547) $generated@@164)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@233 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@233 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@164) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@69)) ($generated@@234 $generated@@548 ($generated@@415 $generated@@549 $generated@@550))) (and (= ($generated@@285 ($generated@@347 ($generated@@306 $generated@@164 $generated@@164) $generated@@548)) $generated@@548) ($generated@@82 ($generated@@347 ($generated@@306 $generated@@164 $generated@@164) $generated@@548) ($generated@@415 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@234 $generated@@548 ($generated@@415 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@164) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@69)) ($generated@@234 $generated@@551 ($generated@@423 $generated@@552 $generated@@553))) (and (= ($generated@@285 ($generated@@347 ($generated@@324 $generated@@164 $generated@@164) $generated@@551)) $generated@@551) ($generated@@82 ($generated@@347 ($generated@@324 $generated@@164 $generated@@164) $generated@@551) ($generated@@423 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@234 $generated@@551 ($generated@@423 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@69) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@164)) ($generated@@234 $generated@@556 ($generated@@154 $generated@@554 $generated@@555))) (and (= ($generated@@285 ($generated@@347 $generated@@155 $generated@@556)) $generated@@556) ($generated@@82 ($generated@@347 $generated@@155 $generated@@556) ($generated@@154 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@234 $generated@@556 ($generated@@154 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@91 ($generated@@436 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@91 ($generated@@436 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@74)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@69) (= (type $generated@@562) $generated@@69)) (and (= ($generated@@77 ($generated@@154 $generated@@561 $generated@@562)) $generated@@63) (= ($generated@@559 ($generated@@154 $generated@@561 $generated@@562)) $generated@@67)))
 :pattern ( ($generated@@154 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 Int) ($generated@@565 Int) ) (! (= ($generated@@563 $generated@@564 $generated@@565) (* $generated@@564 $generated@@565))
 :pattern ( ($generated@@563 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@155) (= ($generated@@542 ($generated@@285 $generated@@566)) ($generated@@543 $generated@@566)))
 :pattern ( ($generated@@542 ($generated@@285 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@164) ($generated@@234 $generated@@567 ($generated@@86 0))) (and (= ($generated@@285 ($generated@@347 $generated@@2 $generated@@567)) $generated@@567) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@164 $generated@@4) $generated@@567) ($generated@@86 0))))
 :pattern ( ($generated@@234 $generated@@567 ($generated@@86 0)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@164) (= (type $generated@@569) $generated@@69)) ($generated@@234 $generated@@568 ($generated@@251 $generated@@569))) (and (= ($generated@@285 ($generated@@347 ($generated@@87 $generated@@164 $generated@@4) $generated@@568)) $generated@@568) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@164 $generated@@4) $generated@@568) ($generated@@251 $generated@@569))))
 :pattern ( ($generated@@234 $generated@@568 ($generated@@251 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@164) (= (type $generated@@571) $generated@@69)) ($generated@@234 $generated@@570 ($generated@@256 $generated@@571))) (and (= ($generated@@285 ($generated@@347 ($generated@@87 $generated@@164 $generated@@4) $generated@@570)) $generated@@570) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@164 $generated@@4) $generated@@570) ($generated@@256 $generated@@571))))
 :pattern ( ($generated@@234 $generated@@570 ($generated@@256 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@164) (= (type $generated@@573) $generated@@69)) ($generated@@234 $generated@@572 ($generated@@169 $generated@@573))) (and (= ($generated@@285 ($generated@@347 ($generated@@87 $generated@@164 $generated@@2) $generated@@572)) $generated@@572) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@164 $generated@@2) $generated@@572) ($generated@@169 $generated@@573))))
 :pattern ( ($generated@@234 $generated@@572 ($generated@@169 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@164) (= (type $generated@@575) $generated@@69)) ($generated@@234 $generated@@574 ($generated@@502 $generated@@575))) (and (= ($generated@@285 ($generated@@347 ($generated@@278 $generated@@164) $generated@@574)) $generated@@574) ($generated@@82 ($generated@@347 ($generated@@278 $generated@@164) $generated@@574) ($generated@@502 $generated@@575))))
 :pattern ( ($generated@@234 $generated@@574 ($generated@@502 $generated@@575)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@559 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@148) $generated@@64))
(assert (= ($generated@@559 $generated@@148) $generated@@68))
(assert (= ($generated@@77 $generated@@230) $generated@@65))
(assert (= ($generated@@559 $generated@@230) $generated@@68))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@87 $generated@@164 $generated@@2)) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@576 ($generated@@169 $generated@@577) $generated@@578) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@164) (< 0 ($generated ($generated@@91 $generated@@576 $generated@@579)))) ($generated@@264 $generated@@579 $generated@@577 $generated@@578))
 :pattern ( ($generated@@91 $generated@@576 $generated@@579))
))))
 :pattern ( ($generated@@85 $generated@@576 ($generated@@169 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@69)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@81) (= ($generated@@82 $generated@@583 $generated@@148)  (or (= $generated@@583 $generated@@149) ($generated@@580 ($generated@@581 $generated@@583)))))
 :pattern ( ($generated@@82 $generated@@583 $generated@@148))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@155) (= (type $generated@@585) $generated@@69)) (= (type $generated@@586) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@263 $generated@@586) (and ($generated@@153 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@69) ($generated@@85 $generated@@584 ($generated@@154 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@85 $generated@@584 ($generated@@154 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@264 ($generated@@162 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@264 ($generated@@162 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@155) (= (type $generated@@589) $generated@@69)) (= (type $generated@@590) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@263 $generated@@590) (and ($generated@@153 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@69) ($generated@@85 $generated@@588 ($generated@@154 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@85 $generated@@588 ($generated@@154 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@264 ($generated@@163 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@264 ($generated@@163 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@164) (= (type $generated@@593) $generated@@164)) (= ($generated@@233 ($generated@@242 $generated@@592) ($generated@@242 $generated@@593)) ($generated@@242 ($generated@@233 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@233 ($generated@@242 $generated@@592) ($generated@@242 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@243 $generated@@594))) ($generated@@242 ($generated@@285 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@243 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@285 ($generated@@242 $generated@@595)) ($generated@@242 ($generated@@285 $generated@@595)))
 :pattern ( ($generated@@285 ($generated@@242 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@279 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@278 $generated@@597)) (= ($generated@@277 $generated@@596) 0)) (= $generated@@596 ($generated@@276 $generated@@597))))
 :pattern ( ($generated@@277 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@87 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@298 ($generated@@92 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@298 $generated@@598) ($generated ($generated@@91 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@298 ($generated@@92 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@603) $generated@@2)) ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@605) $generated@@3)) ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@607) $generated@@4)) ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@609) $generated@@460)) ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@611) $generated@@164)) ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@278 $generated@@164)) (= (type $generated@@613) $generated@@69)) (= ($generated@@82 $generated@@612 ($generated@@502 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@277 $generated@@612))) ($generated@@234 ($generated@@503 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@503 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@82 $generated@@612 ($generated@@502 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@278 $generated@@164)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@277 $generated@@616))) (< ($generated@@543 ($generated@@347 $generated@@155 ($generated@@503 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@543 ($generated@@347 $generated@@155 ($generated@@503 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@306 $generated@@164 $generated@@164)) (= (type $generated@@619) $generated@@69)) (= (type $generated@@620) $generated@@69)) ($generated@@82 $generated@@618 ($generated@@415 $generated@@619 $generated@@620))) (and (and ($generated@@82 ($generated@@304 $generated@@618) ($generated@@251 $generated@@619)) ($generated@@82 ($generated@@358 $generated@@618) ($generated@@251 $generated@@620))) ($generated@@82 ($generated@@389 $generated@@618) ($generated@@251 ($generated@@154 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@82 $generated@@618 ($generated@@415 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@324 $generated@@164 $generated@@164)) (= (type $generated@@622) $generated@@69)) (= (type $generated@@623) $generated@@69)) ($generated@@82 $generated@@621 ($generated@@423 $generated@@622 $generated@@623))) (and (and ($generated@@82 ($generated@@322 $generated@@621) ($generated@@256 $generated@@622)) ($generated@@82 ($generated@@369 $generated@@621) ($generated@@256 $generated@@623))) ($generated@@82 ($generated@@397 $generated@@621) ($generated@@256 ($generated@@154 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@82 $generated@@621 ($generated@@423 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@82 $generated@@624 $generated@@46))
 :pattern ( ($generated@@82 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@82 $generated@@625 $generated@@47))
 :pattern ( ($generated@@82 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@82 $generated@@626 $generated@@44))
 :pattern ( ($generated@@82 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@460) ($generated@@82 $generated@@627 $generated@@45))
 :pattern ( ($generated@@82 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@164) ($generated@@82 $generated@@628 $generated@@48))
 :pattern ( ($generated@@82 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(assert  (and (and (= (type $generated@@630) $generated@@81) (= (type $generated@@633) ($generated@@176 $generated@@81 $generated@@4))) (= (type $generated@@634) ($generated@@87 $generated@@81 $generated@@88))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@639 true))
(let (($generated@@640  (=> (and (not (= $generated@@629 9)) (not (= $generated@@630 $generated@@149))) (=> (and (and (not (= $generated@@630 $generated@@149)) (= $generated@@631 ($generated@@80 $generated@@630))) (and (<= ($generated@@243 0) $generated@@632) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@631 9))))))
(let (($generated@@641  (=> (= $generated@@633 ($generated@@175 $generated@@149 $generated@@634 $generated@@60 false)) (=> (and (not (= $generated@@630 $generated@@149)) (= $generated@@629 ($generated@@80 $generated@@630))) (and (=> (= (ControlFlow 0 4) 2) $generated@@640) (=> (= (ControlFlow 0 4) 3) $generated@@639))))))
(let (($generated@@642  (=> (and (and ($generated@@263 $generated@@634) ($generated@@635 $generated@@634)) (and ($generated@@82 $generated@@630 $generated@@230) ($generated@@85 $generated@@630 $generated@@230 $generated@@634))) (=> (and (and (and (<= ($generated@@243 0) $generated@@636) true) (and (<= ($generated@@243 0) $generated@@637) true)) (and (and (<= ($generated@@243 0) $generated@@638) true) (and (= 3 $generated@@79) (= (ControlFlow 0 5) 4)))) $generated@@641))))
$generated@@642)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (Int Int) Int)
(declare-fun $generated@@260 (Int Int) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@335 (T@T T@U) T@U)
(declare-fun $generated@@339 () T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert (= (type $generated@@81) $generated@@68))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@82 Int) ) (! ($generated@@80 ($generated@@8 ($generated@@79 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@71 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@71 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@68)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
 :pattern ( ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@80 $generated@@143 ($generated@@84 0)))
 :pattern ( ($generated@@80 $generated@@143 ($generated@@84 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@146)) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@80 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@80 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@86 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@86) (= (type $generated@@215) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@86)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@86 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@71 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@86) (= (type $generated@@227) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@228) ($generated@@70 $generated@@4))) (= (type $generated@@230) $generated@@86)) (= (type $generated@@231) ($generated@@70 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@146)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) $generated@@68)) (= (type $generated@@239) $generated@@155)) (= (type $generated@@240) $generated@@155)) (= ($generated@@80 ($generated@@233 $generated@@239 $generated@@240) ($generated@@145 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@80 ($generated@@233 $generated@@239 $generated@@240) ($generated@@145 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@146) (= (type $generated@@242) $generated@@146)) (= ($generated@@152 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@152 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@68)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@246) $generated@@68)) (= ($generated@@80 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@155) ($generated@@0 ($generated@@90 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@90 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@80 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@251) $generated@@68)) (= ($generated@@80 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@155) ($generated@@0 ($generated@@90 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@90 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@80 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@261 Int) ($generated@@262 Int) ) (!  (=> (or ($generated@@260 ($generated@@253 $generated@@261) ($generated@@253 $generated@@262)) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (<= ($generated@@253 0) $generated@@262)) ($generated@@0 ($generated@@255 ($generated@@11 (not (= $generated@@262 7)))))))) (= ($generated@@259 ($generated@@253 $generated@@261) ($generated@@253 $generated@@262)) ($generated@@253 $generated@@262)))
 :weight 3
 :pattern ( ($generated@@259 ($generated@@253 $generated@@261) ($generated@@253 $generated@@262)))
))))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@68) (= (type $generated@@266) $generated@@68)) (= (type $generated@@267) $generated@@155)) (= (type $generated@@268) $generated@@155)) (= (type $generated@@269) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@263 $generated@@269)) (= ($generated@@83 ($generated@@233 $generated@@267 $generated@@268) ($generated@@145 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@83 ($generated@@233 $generated@@267 $generated@@268) ($generated@@145 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@72)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@146) (= ($generated@@144 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@146) ($generated@@144 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@155) (= (type $generated@@275) $generated@@155)) (= $generated@@273 ($generated@@233 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@144 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@2) (= ($generated@@80 $generated@@284 $generated@@81) (<= ($generated@@253 0) ($generated $generated@@284))))
 :pattern ( ($generated@@80 $generated@@284 $generated@@81))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@155)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@264 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@83 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@264 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@85 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@88 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@85 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@90 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@85 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@90 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@90 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@85 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@90 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@90 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@88 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@85 $generated@@333 $generated@@2)) (= ($generated@@161 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@90 $generated@@332 $generated@@334))) (<= ($generated ($generated@@90 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@90 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@161 $generated@@332))
)))
(assert (forall (($generated@@336 T@T) ($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@155) ($generated@@234 $generated@@338 $generated@@81)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@338)) $generated@@338) ($generated@@80 ($generated@@335 $generated@@2 $generated@@338) $generated@@81)))
 :pattern ( ($generated@@234 $generated@@338 $generated@@81))
)))
(assert (= (type $generated@@339) $generated@@68))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@155) ($generated@@234 $generated@@340 $generated@@339)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@340)) $generated@@340) ($generated@@80 ($generated@@335 $generated@@2 $generated@@340) $generated@@339)))
 :pattern ( ($generated@@234 $generated@@340 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@300 (type $generated@@341))))
(let (($generated@@343 ($generated@@299 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@298 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@297 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@90 ($generated@@296 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@296 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@300 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@85 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@300 (type $generated@@348))))
(let (($generated@@350 ($generated@@299 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@298 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@297 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@90 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@318 (type $generated@@352))))
(let (($generated@@354 ($generated@@317 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@316 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@315 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@314 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@318 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@85 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@318 (type $generated@@359))))
(let (($generated@@361 ($generated@@317 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@316 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@315 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@90 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) ($generated@@85 $generated@@86 $generated@@87)) (=> (and ($generated@@263 $generated@@363) ($generated@@83 ($generated@@8 $generated@@364) $generated@@339 $generated@@363)) ($generated@@83 ($generated@@8 ($generated@@79 $generated@@364)) $generated@@81 $generated@@363)))
 :pattern ( ($generated@@79 $generated@@364) ($generated@@83 ($generated@@8 $generated@@364) $generated@@339 $generated@@363))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@366) $generated@@68)) (= ($generated@@80 $generated@@365 ($generated@@160 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@365 $generated@@367)))) ($generated@@234 $generated@@367 $generated@@366))
 :pattern ( ($generated@@90 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@80 $generated@@365 ($generated@@160 $generated@@366)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@368 Int) ($generated@@369 Int) ) (!  (=> (or ($generated@@260 $generated@@368 $generated@@369) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (<= ($generated@@253 0) $generated@@369)) (not (= $generated@@369 7))))) (= ($generated@@259 $generated@@368 $generated@@369) $generated@@369))
 :pattern ( ($generated@@259 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@371) $generated@@68)) (= (type $generated@@372) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@370 ($generated@@243 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@155) ($generated@@0 ($generated@@90 $generated@@370 $generated@@373))) ($generated@@264 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@90 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@83 $generated@@370 ($generated@@243 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@375) $generated@@68)) (= (type $generated@@376) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@374 ($generated@@248 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@155) ($generated@@0 ($generated@@90 $generated@@374 $generated@@377))) ($generated@@264 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@90 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@83 $generated@@374 ($generated@@248 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@90 ($generated@@291 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@90 ($generated@@291 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@300 (type $generated@@383))))
(let (($generated@@385 ($generated@@299 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@85 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@298 $generated@@155 $generated@@155)) (= (type $generated@@387) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@90 ($generated@@296 $generated@@386) ($generated@@153 ($generated@@335 $generated@@146 $generated@@387)))) (= ($generated@@90 ($generated@@381 $generated@@386) ($generated@@153 ($generated@@335 $generated@@146 $generated@@387))) ($generated@@154 ($generated@@335 $generated@@146 $generated@@387))))))
 :pattern ( ($generated@@90 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@318 (type $generated@@391))))
(let (($generated@@393 ($generated@@317 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@85 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@395) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@90 ($generated@@314 $generated@@394) ($generated@@153 ($generated@@335 $generated@@146 $generated@@395)))) (= ($generated@@90 ($generated@@389 $generated@@394) ($generated@@153 ($generated@@335 $generated@@146 $generated@@395))) ($generated@@154 ($generated@@335 $generated@@146 $generated@@395))))))
 :pattern ( ($generated@@90 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@299 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@298 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@90 ($generated@@345 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@90 ($generated@@296 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@90 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@396) $generated@@400))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@90 ($generated@@345 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@317 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@316 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@90 ($generated@@356 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@90 ($generated@@314 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@90 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@401) $generated@@405))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@90 ($generated@@356 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@68)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@298 $generated@@155 $generated@@155)) (= (type $generated@@410) $generated@@68)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@296 $generated@@409) $generated@@413))) (and ($generated@@264 ($generated@@90 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@264 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@83 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@90 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@83 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@85 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@318 (type $generated@@424))))
(let (($generated@@426 ($generated@@317 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@316 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@315 $generated@@426 $generated@@425)) (= ($generated@@314 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@314 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@318 (type $generated@@427))))
(let (($generated@@429 ($generated@@317 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@316 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@315 $generated@@429 $generated@@428)) (= ($generated@@356 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@356 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@318 (type $generated@@430))))
(let (($generated@@432 ($generated@@317 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@316 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@315 $generated@@432 $generated@@431)) (= ($generated@@388 $generated@@430) ($generated@@422 $generated@@155))))))
 :pattern ( ($generated@@388 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@300 (type $generated@@433))))
(let (($generated@@435 ($generated@@299 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@298 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@297 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@155) (= (type $generated@@437) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@380 $generated@@433) ($generated@@285 ($generated@@233 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@318 (type $generated@@438))))
(let (($generated@@440 ($generated@@317 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@316 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@315 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@155) (= (type $generated@@442) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@388 $generated@@438) ($generated@@285 ($generated@@233 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@388 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@155) ($generated@@234 $generated@@443 $generated@@46)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@443)) $generated@@443) ($generated@@80 ($generated@@335 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@155) ($generated@@234 $generated@@444 $generated@@47)) (and (= ($generated@@285 ($generated@@335 $generated@@3 $generated@@444)) $generated@@444) ($generated@@80 ($generated@@335 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@155) ($generated@@234 $generated@@445 $generated@@44)) (and (= ($generated@@285 ($generated@@335 $generated@@4 $generated@@445)) $generated@@445) ($generated@@80 ($generated@@335 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@155) ($generated@@234 $generated@@447 $generated@@45)) (and (= ($generated@@285 ($generated@@335 $generated@@446 $generated@@447)) $generated@@447) ($generated@@80 ($generated@@335 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@68) (= ($generated@@234 ($generated@@285 $generated@@448) $generated@@449) ($generated@@80 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@234 ($generated@@285 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@88 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@85 $generated@@451 $generated@@2)) (<= 0 ($generated@@290 $generated@@450))))
 :pattern ( ($generated@@290 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@279 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@278 $generated@@453)) (<= 0 ($generated@@277 $generated@@452))))
 :pattern ( ($generated@@277 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@68)) (= ($generated@@454 ($generated@@406 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@406 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@406 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@76 ($generated@@406 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@414 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@414 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@414 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@76 ($generated@@414 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@155) (= (type $generated@@475) $generated@@155)) (= ($generated@@270 ($generated@@233 $generated@@474 $generated@@475)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@145 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@145 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@145 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@145 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@155) (= (type $generated@@485) $generated@@155)) (= ($generated@@153 ($generated@@233 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@155) (= (type $generated@@487) $generated@@155)) (= ($generated@@154 ($generated@@233 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@233 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@279 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@278 $generated@@155)) (= (type $generated@@495) $generated@@68)) (= (type $generated@@496) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@277 $generated@@494))) ($generated@@264 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@83 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@84 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@84 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@500 ($generated@@243 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@76 ($generated@@243 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@504 ($generated@@248 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@248 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@76 ($generated@@248 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@508 ($generated@@160 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@160 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@76 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@335 $generated@@517 ($generated@@285 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@285 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@298 $generated@@155 $generated@@155)) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) $generated@@68)) (= ($generated@@80 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@296 $generated@@518) $generated@@521))) (and ($generated@@234 ($generated@@90 ($generated@@381 $generated@@518) $generated@@521) $generated@@520) ($generated@@234 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@518) $generated@@521))
 :pattern ( ($generated@@90 ($generated@@296 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@80 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@523) $generated@@68)) (= (type $generated@@524) $generated@@68)) (= ($generated@@80 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@314 $generated@@522) $generated@@525))) (and ($generated@@234 ($generated@@90 ($generated@@389 $generated@@522) $generated@@525) $generated@@524) ($generated@@234 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@90 ($generated@@389 $generated@@522) $generated@@525))
 :pattern ( ($generated@@90 ($generated@@314 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@80 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@526 Int) ($generated@@527 Int) ) (!  (=> (or ($generated@@260 $generated@@526 $generated@@527) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (<= ($generated@@253 0) $generated@@527)) (not (= $generated@@527 7))))) (and (= ($generated@@259 $generated@@526 $generated@@527) ($generated@@79 $generated@@526)) (<= ($generated@@253 0) ($generated@@259 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@259 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@155) (= (type $generated@@531) $generated@@155)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@233 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@233 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@155) (= (type $generated@@533) $generated@@155)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@233 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@233 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@155) (= (type $generated@@535) $generated@@68)) (= (type $generated@@536) $generated@@68)) ($generated@@234 $generated@@534 ($generated@@406 $generated@@535 $generated@@536))) (and (= ($generated@@285 ($generated@@335 ($generated@@298 $generated@@155 $generated@@155) $generated@@534)) $generated@@534) ($generated@@80 ($generated@@335 ($generated@@298 $generated@@155 $generated@@155) $generated@@534) ($generated@@406 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@534 ($generated@@406 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) ($generated@@234 $generated@@537 ($generated@@414 $generated@@538 $generated@@539))) (and (= ($generated@@285 ($generated@@335 ($generated@@316 $generated@@155 $generated@@155) $generated@@537)) $generated@@537) ($generated@@80 ($generated@@335 ($generated@@316 $generated@@155 $generated@@155) $generated@@537) ($generated@@414 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@234 $generated@@537 ($generated@@414 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@155)) ($generated@@234 $generated@@542 ($generated@@145 $generated@@540 $generated@@541))) (and (= ($generated@@285 ($generated@@335 $generated@@146 $generated@@542)) $generated@@542) ($generated@@80 ($generated@@335 $generated@@146 $generated@@542) ($generated@@145 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@234 $generated@@542 ($generated@@145 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@90 ($generated@@422 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@90 ($generated@@422 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@73)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@68) (= (type $generated@@548) $generated@@68)) (and (= ($generated@@76 ($generated@@145 $generated@@547 $generated@@548)) $generated@@63) (= ($generated@@545 ($generated@@145 $generated@@547 $generated@@548)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@146) (= ($generated@@528 ($generated@@285 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@285 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@155) ($generated@@234 $generated@@550 ($generated@@84 0))) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@550)) $generated@@550) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@550) ($generated@@84 0))))
 :pattern ( ($generated@@234 $generated@@550 ($generated@@84 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@68)) ($generated@@234 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@285 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@551)) $generated@@551) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@234 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@155) (= (type $generated@@554) $generated@@68)) ($generated@@234 $generated@@553 ($generated@@248 $generated@@554))) (and (= ($generated@@285 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@553)) $generated@@553) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@155 $generated@@4) $generated@@553) ($generated@@248 $generated@@554))))
 :pattern ( ($generated@@234 $generated@@553 ($generated@@248 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@68)) ($generated@@234 $generated@@555 ($generated@@160 $generated@@556))) (and (= ($generated@@285 ($generated@@335 ($generated@@85 $generated@@155 $generated@@2) $generated@@555)) $generated@@555) ($generated@@80 ($generated@@335 ($generated@@85 $generated@@155 $generated@@2) $generated@@555) ($generated@@160 $generated@@556))))
 :pattern ( ($generated@@234 $generated@@555 ($generated@@160 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@155) (= (type $generated@@558) $generated@@68)) ($generated@@234 $generated@@557 ($generated@@488 $generated@@558))) (and (= ($generated@@285 ($generated@@335 ($generated@@278 $generated@@155) $generated@@557)) $generated@@557) ($generated@@80 ($generated@@335 ($generated@@278 $generated@@155) $generated@@557) ($generated@@488 $generated@@558))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@488 $generated@@558)))
)))
(assert (= ($generated@@76 $generated@@81) $generated@@61))
(assert (= ($generated@@545 $generated@@81) $generated@@65))
(assert (= ($generated@@76 $generated@@339) $generated@@64))
(assert (= ($generated@@545 $generated@@339) $generated@@67))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@559 ($generated@@160 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@559 $generated@@562)))) ($generated@@264 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@90 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@83 $generated@@559 ($generated@@160 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@146) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@263 $generated@@565) (and ($generated@@144 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@68) ($generated@@83 $generated@@563 ($generated@@145 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@83 $generated@@563 ($generated@@145 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@264 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@264 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@146) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@263 $generated@@569) (and ($generated@@144 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@68) ($generated@@83 $generated@@567 ($generated@@145 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@83 $generated@@567 ($generated@@145 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@264 ($generated@@154 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@264 ($generated@@154 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@155) (= (type $generated@@572) $generated@@155)) (= ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)) ($generated@@255 ($generated@@233 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@253 $generated@@573))) ($generated@@255 ($generated@@285 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@253 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@285 ($generated@@255 $generated@@574)) ($generated@@255 ($generated@@285 $generated@@574)))
 :pattern ( ($generated@@285 ($generated@@255 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@279 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@278 $generated@@576)) (= ($generated@@277 $generated@@575) 0)) (= $generated@@575 ($generated@@276 $generated@@576))))
 :pattern ( ($generated@@277 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@85 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@290 ($generated@@91 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@290 $generated@@577) ($generated ($generated@@90 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@290 ($generated@@91 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@582) $generated@@2)) ($generated@@83 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@83 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@584) $generated@@3)) ($generated@@83 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@83 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@586) $generated@@4)) ($generated@@83 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@83 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@588) $generated@@446)) ($generated@@83 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@83 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@590) $generated@@155)) ($generated@@83 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@83 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@278 $generated@@155)) (= (type $generated@@592) $generated@@68)) (= ($generated@@80 $generated@@591 ($generated@@488 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@277 $generated@@591))) ($generated@@234 ($generated@@489 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@489 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@488 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@278 $generated@@155)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@277 $generated@@595))) (< ($generated@@529 ($generated@@335 $generated@@146 ($generated@@489 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@529 ($generated@@335 $generated@@146 ($generated@@489 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@298 $generated@@155 $generated@@155)) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) $generated@@68)) ($generated@@80 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@80 ($generated@@296 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@80 ($generated@@345 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@80 ($generated@@380 $generated@@597) ($generated@@243 ($generated@@145 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@80 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@68)) ($generated@@80 $generated@@600 ($generated@@414 $generated@@601 $generated@@602))) (and (and ($generated@@80 ($generated@@314 $generated@@600) ($generated@@248 $generated@@601)) ($generated@@80 ($generated@@356 $generated@@600) ($generated@@248 $generated@@602))) ($generated@@80 ($generated@@388 $generated@@600) ($generated@@248 ($generated@@145 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@80 $generated@@600 ($generated@@414 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@80 $generated@@603 $generated@@46))
 :pattern ( ($generated@@80 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@80 $generated@@604 $generated@@47))
 :pattern ( ($generated@@80 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@80 $generated@@605 $generated@@44))
 :pattern ( ($generated@@80 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@446) ($generated@@80 $generated@@606 $generated@@45))
 :pattern ( ($generated@@80 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@155) ($generated@@80 $generated@@607 $generated@@48))
 :pattern ( ($generated@@80 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@612) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@610) ($generated@@167 $generated@@86 $generated@@4))) (= (type $generated@@611) $generated@@86)) (= (type $generated@@613) ($generated@@167 $generated@@86 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@615  (=> (= (ControlFlow 0 7) (- 0 6)) (= ($generated@@259 $generated@@608 $generated@@609) ($generated@@79 $generated@@608)))))
(let (($generated@@616  (=> (and (and (= $generated@@610 ($generated@@221 $generated@@611 $generated@@612 $generated@@60 false)) (= ($generated@@259 $generated@@608 $generated@@609) $generated@@609)) (and ($generated@@80 ($generated@@8 ($generated@@259 $generated@@608 $generated@@609)) $generated@@81) (= (ControlFlow 0 8) 7))) $generated@@615)))
(let (($generated@@617  (=> (<= ($generated@@253 0) ($generated@@259 $generated@@608 $generated@@609)) (=> (and ($generated@@83 ($generated@@8 $generated@@608) $generated@@339 $generated@@612) ($generated@@83 ($generated@@8 $generated@@609) $generated@@81 $generated@@612)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@609 7))) (=> (not (= $generated@@609 7)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (<= 0 $generated@@608) (= $generated@@608 $generated@@608))) (=> (or (<= 0 $generated@@608) (= $generated@@608 $generated@@608)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@609) (< $generated@@608 $generated@@608)) (= $generated@@609 $generated@@609))) (=> (or (or (<= 0 $generated@@609) (< $generated@@608 $generated@@608)) (= $generated@@609 $generated@@609)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@608 $generated@@608) (= $generated@@609 $generated@@609)) (or (< $generated@@608 $generated@@608) (and (= $generated@@608 $generated@@608) (< $generated@@609 $generated@@609)))))))))))))))
(let (($generated@@618  (=> (and (= $generated@@613 ($generated@@166 $generated@@611 $generated@@612 $generated@@60 false)) (not (= $generated@@609 7))) (and (=> (= (ControlFlow 0 9) 2) $generated@@617) (=> (= (ControlFlow 0 9) 8) $generated@@616)))))
(let (($generated@@619  (=> (and ($generated@@263 $generated@@612) ($generated@@614 $generated@@612)) (=> (and (and ($generated@@0 ($generated@@255 ($generated@@11 true))) (<= ($generated@@253 0) $generated@@609)) (and (= 2 $generated@@78) (= (ControlFlow 0 10) 9))) $generated@@618))))
$generated@@619))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert (= (type $generated@@81) $generated@@68))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@82 Int) ) (! ($generated@@80 ($generated@@8 ($generated@@79 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@71 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@71 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@68)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
 :pattern ( ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@80 $generated@@143 ($generated@@84 0)))
 :pattern ( ($generated@@80 $generated@@143 ($generated@@84 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@146)) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@80 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@80 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@86 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@86) (= (type $generated@@215) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@86)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@146)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@68) (= (type $generated@@226) $generated@@68)) (= (type $generated@@227) $generated@@155)) (= (type $generated@@228) $generated@@155)) (= ($generated@@80 ($generated@@221 $generated@@227 $generated@@228) ($generated@@145 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@80 ($generated@@221 $generated@@227 $generated@@228) ($generated@@145 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@146) (= (type $generated@@230) $generated@@146)) (= ($generated@@152 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@152 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@68)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@234) $generated@@68)) (= ($generated@@80 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@155) ($generated@@0 ($generated@@90 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@90 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@80 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@68)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@239) $generated@@68)) (= ($generated@@80 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@155) ($generated@@0 ($generated@@90 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@90 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@80 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) $generated@@68)) (= (type $generated@@251) $generated@@155)) (= (type $generated@@252) $generated@@155)) (= (type $generated@@253) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@247 $generated@@253)) (= ($generated@@83 ($generated@@221 $generated@@251 $generated@@252) ($generated@@145 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@83 ($generated@@221 $generated@@251 $generated@@252) ($generated@@145 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@146) (= ($generated@@144 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@146) ($generated@@144 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@155) (= (type $generated@@259) $generated@@155)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@144 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@2) (= ($generated@@80 $generated@@268 $generated@@81) (<= ($generated@@241 0) ($generated $generated@@268))))
 :pattern ( ($generated@@80 $generated@@268 $generated@@81))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@155)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@83 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@85 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@88 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@85 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@90 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@85 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@90 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@90 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@85 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@90 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@90 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@88 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@85 $generated@@317 $generated@@2)) (= ($generated@@161 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@90 $generated@@316 $generated@@318))) (<= ($generated ($generated@@90 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@90 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@161 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@155) ($generated@@222 $generated@@322 $generated@@81)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@322)) $generated@@322) ($generated@@80 ($generated@@319 $generated@@2 $generated@@322) $generated@@81)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@81))
)))
(assert (= (type $generated@@323) $generated@@68))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@155) ($generated@@222 $generated@@324 $generated@@323)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@324)) $generated@@324) ($generated@@80 ($generated@@319 $generated@@2 $generated@@324) $generated@@323)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@90 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@85 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@90 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@90 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@85 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@90 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@347 T@U) ($generated@@348 Int) ) (!  (=> (= (type $generated@@347) ($generated@@85 $generated@@86 $generated@@87)) (=> (and ($generated@@247 $generated@@347) ($generated@@83 ($generated@@8 $generated@@348) $generated@@323 $generated@@347)) ($generated@@83 ($generated@@8 ($generated@@79 $generated@@348)) $generated@@81 $generated@@347)))
 :pattern ( ($generated@@79 $generated@@348) ($generated@@83 ($generated@@8 $generated@@348) $generated@@323 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@350) $generated@@68)) (= ($generated@@80 $generated@@349 ($generated@@160 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@90 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@80 $generated@@349 ($generated@@160 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@353) $generated@@68)) (= (type $generated@@354) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@155) ($generated@@0 ($generated@@90 $generated@@352 $generated@@355))) ($generated@@248 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@90 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@83 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@357) $generated@@68)) (= (type $generated@@358) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@155) ($generated@@0 ($generated@@90 $generated@@356 $generated@@359))) ($generated@@248 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@90 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@83 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@90 ($generated@@275 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@90 ($generated@@275 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@284 (type $generated@@365))))
(let (($generated@@367 ($generated@@283 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@85 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@369) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@90 ($generated@@280 $generated@@368) ($generated@@153 ($generated@@319 $generated@@146 $generated@@369)))) (= ($generated@@90 ($generated@@363 $generated@@368) ($generated@@153 ($generated@@319 $generated@@146 $generated@@369))) ($generated@@154 ($generated@@319 $generated@@146 $generated@@369))))))
 :pattern ( ($generated@@90 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@302 (type $generated@@373))))
(let (($generated@@375 ($generated@@301 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@85 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@377) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@90 ($generated@@298 $generated@@376) ($generated@@153 ($generated@@319 $generated@@146 $generated@@377)))) (= ($generated@@90 ($generated@@371 $generated@@376) ($generated@@153 ($generated@@319 $generated@@146 $generated@@377))) ($generated@@154 ($generated@@319 $generated@@146 $generated@@377))))))
 :pattern ( ($generated@@90 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@283 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@282 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@90 ($generated@@329 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@90 ($generated@@280 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@90 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@90 ($generated@@280 $generated@@378) $generated@@382))
 :pattern ( ($generated@@90 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@90 ($generated@@329 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@301 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@300 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@90 ($generated@@340 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@90 ($generated@@298 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@90 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@90 ($generated@@298 $generated@@383) $generated@@387))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@90 ($generated@@340 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@68)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) $generated@@68)) (= (type $generated@@394) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@280 $generated@@391) $generated@@395))) (and ($generated@@248 ($generated@@90 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@248 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@90 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@90 ($generated@@280 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@83 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@68)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@298 $generated@@399) $generated@@403))) (and ($generated@@248 ($generated@@90 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@248 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@90 ($generated@@298 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@83 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@85 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@302 (type $generated@@406))))
(let (($generated@@408 ($generated@@301 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@300 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@299 $generated@@408 $generated@@407)) (= ($generated@@298 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@298 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@302 (type $generated@@409))))
(let (($generated@@411 ($generated@@301 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@300 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@299 $generated@@411 $generated@@410)) (= ($generated@@340 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@340 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@302 (type $generated@@412))))
(let (($generated@@414 ($generated@@301 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@300 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@299 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@155))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@284 (type $generated@@415))))
(let (($generated@@417 ($generated@@283 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@282 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@281 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@155) (= (type $generated@@419) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@362 $generated@@415) ($generated@@269 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@302 (type $generated@@420))))
(let (($generated@@422 ($generated@@301 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@300 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@299 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@155) (= (type $generated@@424) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@370 $generated@@420) ($generated@@269 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@155) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@425)) $generated@@425) ($generated@@80 ($generated@@319 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@155) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@426)) $generated@@426) ($generated@@80 ($generated@@319 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@155) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@427)) $generated@@427) ($generated@@80 ($generated@@319 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@155) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@428 $generated@@429)) $generated@@429) ($generated@@80 ($generated@@319 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@68) (= ($generated@@222 ($generated@@269 $generated@@430) $generated@@431) ($generated@@80 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@269 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@88 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@85 $generated@@433 $generated@@2)) (<= 0 ($generated@@274 $generated@@432))))
 :pattern ( ($generated@@274 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@263 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@262 $generated@@435)) (<= 0 ($generated@@261 $generated@@434))))
 :pattern ( ($generated@@261 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@68) (= (type $generated@@439) $generated@@68)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@68) (= (type $generated@@443) $generated@@68)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@68) (= (type $generated@@445) $generated@@68)) (= ($generated@@76 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@68) (= (type $generated@@449) $generated@@68)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@76 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@155) (= (type $generated@@457) $generated@@155)) (= ($generated@@254 ($generated@@221 $generated@@456 $generated@@457)) $generated@@62))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@145 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@145 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@145 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@145 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@155) (= (type $generated@@467) $generated@@155)) (= ($generated@@153 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@155) (= (type $generated@@469) $generated@@155)) (= ($generated@@154 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@263 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@262 $generated@@155)) (= (type $generated@@477) $generated@@68)) (= (type $generated@@478) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@261 $generated@@476))) ($generated@@248 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@83 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@84 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@84 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@68) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@76 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@68) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@68) (= ($generated@@76 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@490 ($generated@@160 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@160 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@76 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@319 $generated@@499 ($generated@@269 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@269 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) $generated@@68)) (= ($generated@@80 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@280 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@90 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@90 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@90 ($generated@@280 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@80 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) $generated@@68)) (= ($generated@@80 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@298 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@90 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@90 ($generated@@298 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@80 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@155) (= (type $generated@@511) $generated@@155)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@155) (= (type $generated@@513) $generated@@155)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@155) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) $generated@@68)) ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@514)) $generated@@514) ($generated@@80 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@155) (= (type $generated@@518) $generated@@68)) (= (type $generated@@519) $generated@@68)) ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@517)) $generated@@517) ($generated@@80 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) $generated@@155)) ($generated@@222 $generated@@522 ($generated@@145 $generated@@520 $generated@@521))) (and (= ($generated@@269 ($generated@@319 $generated@@146 $generated@@522)) $generated@@522) ($generated@@80 ($generated@@319 $generated@@146 $generated@@522) ($generated@@145 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@145 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@90 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@90 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@73)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (and (= ($generated@@76 ($generated@@145 $generated@@527 $generated@@528)) $generated@@63) (= ($generated@@525 ($generated@@145 $generated@@527 $generated@@528)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@146) (= ($generated@@508 ($generated@@269 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@269 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@155) ($generated@@222 $generated@@530 ($generated@@84 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@530)) $generated@@530) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@530) ($generated@@84 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@84 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@155) (= (type $generated@@532) $generated@@68)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@269 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@531)) $generated@@531) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@155) (= (type $generated@@534) $generated@@68)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@269 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@533)) $generated@@533) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@155) (= (type $generated@@536) $generated@@68)) ($generated@@222 $generated@@535 ($generated@@160 $generated@@536))) (and (= ($generated@@269 ($generated@@319 ($generated@@85 $generated@@155 $generated@@2) $generated@@535)) $generated@@535) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@2) $generated@@535) ($generated@@160 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@160 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@269 ($generated@@319 ($generated@@262 $generated@@155) $generated@@537)) $generated@@537) ($generated@@80 ($generated@@319 ($generated@@262 $generated@@155) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@76 $generated@@81) $generated@@61))
(assert (= ($generated@@525 $generated@@81) $generated@@65))
(assert (= ($generated@@76 $generated@@323) $generated@@64))
(assert (= ($generated@@525 $generated@@323) $generated@@67))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@539 ($generated@@160 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@539 $generated@@542)))) ($generated@@248 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@90 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@83 $generated@@539 ($generated@@160 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@146) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@247 $generated@@545) (and ($generated@@144 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@68) ($generated@@83 $generated@@543 ($generated@@145 $generated@@544 $generated@@546) $generated@@545))
 :pattern ( ($generated@@83 $generated@@543 ($generated@@145 $generated@@544 $generated@@546) $generated@@545))
))))) ($generated@@248 ($generated@@153 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@248 ($generated@@153 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@146) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@247 $generated@@549) (and ($generated@@144 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@68) ($generated@@83 $generated@@547 ($generated@@145 $generated@@550 $generated@@548) $generated@@549))
 :pattern ( ($generated@@83 $generated@@547 ($generated@@145 $generated@@550 $generated@@548) $generated@@549))
))))) ($generated@@248 ($generated@@154 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@248 ($generated@@154 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@155)) (= ($generated@@221 ($generated@@243 $generated@@551) ($generated@@243 $generated@@552)) ($generated@@243 ($generated@@221 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@551) ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@269 ($generated@@8 ($generated@@241 $generated@@553))) ($generated@@243 ($generated@@269 ($generated@@8 $generated@@553))))
 :pattern ( ($generated@@269 ($generated@@8 ($generated@@241 $generated@@553))))
)))
(assert (forall (($generated@@554 T@U) ) (! (= ($generated@@269 ($generated@@243 $generated@@554)) ($generated@@243 ($generated@@269 $generated@@554)))
 :pattern ( ($generated@@269 ($generated@@243 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@263 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@262 $generated@@556)) (= ($generated@@261 $generated@@555) 0)) (= $generated@@555 ($generated@@260 $generated@@556))))
 :pattern ( ($generated@@261 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@558)))
 (=> (and (and (= (type $generated@@557) ($generated@@85 $generated@@560 $generated@@2)) (= (type $generated@@559) $generated@@2)) (<= 0 ($generated $generated@@559))) (= ($generated@@274 ($generated@@91 $generated@@557 $generated@@558 $generated@@559)) (+ (- ($generated@@274 $generated@@557) ($generated ($generated@@90 $generated@@557 $generated@@558))) ($generated $generated@@559)))))
 :pattern ( ($generated@@274 ($generated@@91 $generated@@557 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@562) $generated@@2)) ($generated@@83 $generated@@562 $generated@@46 $generated@@561))
 :pattern ( ($generated@@83 $generated@@562 $generated@@46 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@564) $generated@@3)) ($generated@@83 $generated@@564 $generated@@47 $generated@@563))
 :pattern ( ($generated@@83 $generated@@564 $generated@@47 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@566) $generated@@4)) ($generated@@83 $generated@@566 $generated@@44 $generated@@565))
 :pattern ( ($generated@@83 $generated@@566 $generated@@44 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@568) $generated@@428)) ($generated@@83 $generated@@568 $generated@@45 $generated@@567))
 :pattern ( ($generated@@83 $generated@@568 $generated@@45 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@570) $generated@@155)) ($generated@@83 $generated@@570 $generated@@48 $generated@@569))
 :pattern ( ($generated@@83 $generated@@570 $generated@@48 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@262 $generated@@155)) (= (type $generated@@572) $generated@@68)) (= ($generated@@80 $generated@@571 ($generated@@470 $generated@@572)) (forall (($generated@@573 Int) ) (!  (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@261 $generated@@571))) ($generated@@222 ($generated@@471 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@471 $generated@@571 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@571 ($generated@@470 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (= (type $generated@@575) ($generated@@262 $generated@@155)) (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@261 $generated@@575))) (< ($generated@@509 ($generated@@319 $generated@@146 ($generated@@471 $generated@@575 $generated@@576))) ($generated@@574 $generated@@575))))
 :pattern ( ($generated@@509 ($generated@@319 $generated@@146 ($generated@@471 $generated@@575 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) ($generated@@80 $generated@@577 ($generated@@388 $generated@@578 $generated@@579))) (and (and ($generated@@80 ($generated@@280 $generated@@577) ($generated@@231 $generated@@578)) ($generated@@80 ($generated@@329 $generated@@577) ($generated@@231 $generated@@579))) ($generated@@80 ($generated@@362 $generated@@577) ($generated@@231 ($generated@@145 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@388 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) ($generated@@80 $generated@@580 ($generated@@396 $generated@@581 $generated@@582))) (and (and ($generated@@80 ($generated@@298 $generated@@580) ($generated@@236 $generated@@581)) ($generated@@80 ($generated@@340 $generated@@580) ($generated@@236 $generated@@582))) ($generated@@80 ($generated@@370 $generated@@580) ($generated@@236 ($generated@@145 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@80 $generated@@580 ($generated@@396 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) ($generated@@80 $generated@@583 $generated@@46))
 :pattern ( ($generated@@80 $generated@@583 $generated@@46))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@3) ($generated@@80 $generated@@584 $generated@@47))
 :pattern ( ($generated@@80 $generated@@584 $generated@@47))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@4) ($generated@@80 $generated@@585 $generated@@44))
 :pattern ( ($generated@@80 $generated@@585 $generated@@44))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@428) ($generated@@80 $generated@@586 $generated@@45))
 :pattern ( ($generated@@80 $generated@@586 $generated@@45))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@155) ($generated@@80 $generated@@587 $generated@@48))
 :pattern ( ($generated@@80 $generated@@587 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 (T@U) Bool)
(declare-fun $generated@@595 () Int)
(assert  (and (and (= (type $generated@@588) ($generated@@167 $generated@@86 $generated@@4)) (= (type $generated@@589) $generated@@86)) (= (type $generated@@590) ($generated@@85 $generated@@86 $generated@@87))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@596  (=> (= $generated@@588 ($generated@@166 $generated@@589 $generated@@590 $generated@@60 false)) (=> (and (= $generated@@591 ($generated@@79 $generated@@592)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@591 $generated@@593)))))
(let (($generated@@597  (=> (and (and (and ($generated@@247 $generated@@590) ($generated@@594 $generated@@590)) (and ($generated@@0 ($generated@@243 ($generated@@11 true))) (<= ($generated@@241 0) $generated@@593))) (and (and (<= ($generated@@241 0) $generated@@595) (= 2 $generated@@78)) (and (not (= $generated@@593 9)) (= (ControlFlow 0 3) 2)))) $generated@@596)))
$generated@@597)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U Int) Int)
(declare-fun $generated@@260 (T@U Int) Bool)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@80) 11) (= (type $generated@@82) $generated@@68)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@83 T@U) ) (!  (=> (= (type $generated@@83) $generated@@80) ($generated@@81 ($generated@@8 ($generated@@79 $generated@@83)) $generated@@82))
 :pattern ( ($generated@@79 $generated@@83))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@86 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@86 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@71 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@71 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@85 $generated@@139)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
 :pattern ( ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
 :pattern ( ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@81 $generated@@144 ($generated@@85 0)))
 :pattern ( ($generated@@81 $generated@@144 ($generated@@85 0)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@80)) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@80) (= (type $generated@@159) $generated@@80)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@81 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@81 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@87 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@87) (= (type $generated@@215) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@87)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@87 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@71 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@87) (= (type $generated@@227) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@228) ($generated@@70 $generated@@4))) (= (type $generated@@230) $generated@@87)) (= (type $generated@@231) ($generated@@70 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@80)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) $generated@@68)) (= (type $generated@@239) $generated@@155)) (= (type $generated@@240) $generated@@155)) (= ($generated@@81 ($generated@@233 $generated@@239 $generated@@240) ($generated@@146 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@81 ($generated@@233 $generated@@239 $generated@@240) ($generated@@146 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@80) (= (type $generated@@242) $generated@@80)) (= ($generated@@152 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@152 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@68)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@246) $generated@@68)) (= ($generated@@81 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@155) ($generated@@0 ($generated@@91 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@91 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@81 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@251) $generated@@68)) (= ($generated@@81 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@155) ($generated@@0 ($generated@@91 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@91 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@81 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (= (type $generated@@261) $generated@@68))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@262 T@U) ($generated@@263 Int) ) (!  (=> (and (= (type $generated@@262) $generated@@80) (or ($generated@@260 ($generated@@255 $generated@@262) ($generated@@253 $generated@@263)) (and (not (= 2 $generated@@78)) (and (and ($generated@@81 $generated@@262 $generated@@261) (<= ($generated@@253 0) $generated@@263)) ($generated@@0 ($generated@@255 ($generated@@11 (not (= $generated@@263 7))))))))) (= ($generated@@259 ($generated@@255 $generated@@262) ($generated@@253 $generated@@263)) ($generated@@253 $generated@@263)))
 :weight 3
 :pattern ( ($generated@@259 ($generated@@255 $generated@@262) ($generated@@253 $generated@@263)))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@155)) (= (type $generated@@269) $generated@@155)) (= (type $generated@@270) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@264 $generated@@270)) (= ($generated@@84 ($generated@@233 $generated@@268 $generated@@269) ($generated@@146 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@84 ($generated@@233 $generated@@268 $generated@@269) ($generated@@146 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@72)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@80) (= ($generated@@145 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@62)))
 :pattern ( ($generated@@145 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@80) ($generated@@145 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@155) (= (type $generated@@276) $generated@@155)) (= $generated@@274 ($generated@@233 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@145 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@2) (= ($generated@@81 $generated@@285 $generated@@82) (<= ($generated@@253 0) ($generated $generated@@285))))
 :pattern ( ($generated@@81 $generated@@285 $generated@@82))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@155)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@68) (= (type $generated@@290) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@84 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@86 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@89 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@86 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@91 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@86 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@91 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@91 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@86 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@91 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@91 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@89 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@86 $generated@@334 $generated@@2)) (= ($generated@@161 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@91 $generated@@333 $generated@@335))) (<= ($generated ($generated@@91 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@91 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@161 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@155) ($generated@@234 $generated@@339 $generated@@82)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@339)) $generated@@339) ($generated@@81 ($generated@@336 $generated@@2 $generated@@339) $generated@@82)))
 :pattern ( ($generated@@234 $generated@@339 $generated@@82))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@155) ($generated@@234 $generated@@340 $generated@@261)) (and (= ($generated@@286 ($generated@@336 $generated@@80 $generated@@340)) $generated@@340) ($generated@@81 ($generated@@336 $generated@@80 $generated@@340) $generated@@261)))
 :pattern ( ($generated@@234 $generated@@340 $generated@@261))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(let (($generated@@343 ($generated@@300 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@299 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@298 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@91 ($generated@@297 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@297 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@301 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@86 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@301 (type $generated@@348))))
(let (($generated@@350 ($generated@@300 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@299 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@298 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@91 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(let (($generated@@354 ($generated@@318 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@317 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@316 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@91 ($generated@@315 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@315 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@319 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@86 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@319 (type $generated@@359))))
(let (($generated@@361 ($generated@@318 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@317 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@316 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@91 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@364) $generated@@80)) (and ($generated@@264 $generated@@363) ($generated@@84 $generated@@364 $generated@@261 $generated@@363))) ($generated@@84 ($generated@@8 ($generated@@79 $generated@@364)) $generated@@82 $generated@@363))
 :pattern ( ($generated@@79 $generated@@364) ($generated@@84 $generated@@364 $generated@@261 $generated@@363))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@366) $generated@@68)) (= ($generated@@81 $generated@@365 ($generated@@160 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@365 $generated@@367)))) ($generated@@234 $generated@@367 $generated@@366))
 :pattern ( ($generated@@91 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@81 $generated@@365 ($generated@@160 $generated@@366)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@368 T@U) ($generated@@369 Int) ) (!  (=> (and (= (type $generated@@368) $generated@@80) (or ($generated@@260 $generated@@368 $generated@@369) (and (not (= 2 $generated@@78)) (and (and ($generated@@81 $generated@@368 $generated@@261) (<= ($generated@@253 0) $generated@@369)) (not (= $generated@@369 7)))))) (= ($generated@@259 $generated@@368 $generated@@369) $generated@@369))
 :pattern ( ($generated@@259 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@371) $generated@@68)) (= (type $generated@@372) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@370 ($generated@@243 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@155) ($generated@@0 ($generated@@91 $generated@@370 $generated@@373))) ($generated@@265 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@91 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@84 $generated@@370 ($generated@@243 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@375) $generated@@68)) (= (type $generated@@376) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@374 ($generated@@248 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@155) ($generated@@0 ($generated@@91 $generated@@374 $generated@@377))) ($generated@@265 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@91 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@84 $generated@@374 ($generated@@248 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@91 ($generated@@292 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@91 ($generated@@292 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@301 (type $generated@@383))))
(let (($generated@@385 ($generated@@300 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@86 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@299 $generated@@155 $generated@@155)) (= (type $generated@@387) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@91 ($generated@@297 $generated@@386) ($generated@@153 ($generated@@336 $generated@@80 $generated@@387)))) (= ($generated@@91 ($generated@@381 $generated@@386) ($generated@@153 ($generated@@336 $generated@@80 $generated@@387))) ($generated@@154 ($generated@@336 $generated@@80 $generated@@387))))))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@319 (type $generated@@391))))
(let (($generated@@393 ($generated@@318 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@86 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@317 $generated@@155 $generated@@155)) (= (type $generated@@395) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@91 ($generated@@315 $generated@@394) ($generated@@153 ($generated@@336 $generated@@80 $generated@@395)))) (= ($generated@@91 ($generated@@389 $generated@@394) ($generated@@153 ($generated@@336 $generated@@80 $generated@@395))) ($generated@@154 ($generated@@336 $generated@@80 $generated@@395))))))
 :pattern ( ($generated@@91 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@300 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@299 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@91 ($generated@@345 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@91 ($generated@@297 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@91 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@91 ($generated@@297 $generated@@396) $generated@@400))
 :pattern ( ($generated@@91 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@91 ($generated@@345 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@318 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@317 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@91 ($generated@@356 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@91 ($generated@@315 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@91 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@91 ($generated@@315 $generated@@401) $generated@@405))
 :pattern ( ($generated@@91 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@91 ($generated@@356 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@68)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@299 $generated@@155 $generated@@155)) (= (type $generated@@410) $generated@@68)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@297 $generated@@409) $generated@@413))) (and ($generated@@265 ($generated@@91 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@265 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@91 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@91 ($generated@@297 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@84 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@317 $generated@@155 $generated@@155)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@315 $generated@@417) $generated@@421))) (and ($generated@@265 ($generated@@91 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@265 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@91 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@91 ($generated@@315 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@84 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@86 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@319 (type $generated@@424))))
(let (($generated@@426 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@316 $generated@@426 $generated@@425)) (= ($generated@@315 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@315 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@319 (type $generated@@427))))
(let (($generated@@429 ($generated@@318 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@317 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@316 $generated@@429 $generated@@428)) (= ($generated@@356 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@356 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@319 (type $generated@@430))))
(let (($generated@@432 ($generated@@318 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@317 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@316 $generated@@432 $generated@@431)) (= ($generated@@388 $generated@@430) ($generated@@422 $generated@@155))))))
 :pattern ( ($generated@@388 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@301 (type $generated@@433))))
(let (($generated@@435 ($generated@@300 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@299 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@298 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@155) (= (type $generated@@437) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@380 $generated@@433) ($generated@@286 ($generated@@233 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@319 (type $generated@@438))))
(let (($generated@@440 ($generated@@318 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@317 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@316 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@155) (= (type $generated@@442) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@388 $generated@@438) ($generated@@286 ($generated@@233 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@388 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@155) ($generated@@234 $generated@@443 $generated@@46)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@443)) $generated@@443) ($generated@@81 ($generated@@336 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@155) ($generated@@234 $generated@@444 $generated@@47)) (and (= ($generated@@286 ($generated@@336 $generated@@3 $generated@@444)) $generated@@444) ($generated@@81 ($generated@@336 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@155) ($generated@@234 $generated@@445 $generated@@44)) (and (= ($generated@@286 ($generated@@336 $generated@@4 $generated@@445)) $generated@@445) ($generated@@81 ($generated@@336 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@155) ($generated@@234 $generated@@447 $generated@@45)) (and (= ($generated@@286 ($generated@@336 $generated@@446 $generated@@447)) $generated@@447) ($generated@@81 ($generated@@336 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@68) (= ($generated@@234 ($generated@@286 $generated@@448) $generated@@449) ($generated@@81 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@234 ($generated@@286 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@89 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@86 $generated@@451 $generated@@2)) (<= 0 ($generated@@291 $generated@@450))))
 :pattern ( ($generated@@291 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@280 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@279 $generated@@453)) (<= 0 ($generated@@278 $generated@@452))))
 :pattern ( ($generated@@278 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@68)) (= ($generated@@454 ($generated@@406 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@406 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@406 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@76 ($generated@@406 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@414 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@414 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@414 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@76 ($generated@@414 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@155) (= (type $generated@@475) $generated@@155)) (= ($generated@@271 ($generated@@233 $generated@@474 $generated@@475)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@146 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@146 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@146 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@155) (= (type $generated@@485) $generated@@155)) (= ($generated@@153 ($generated@@233 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@155) (= (type $generated@@487) $generated@@155)) (= ($generated@@154 ($generated@@233 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@233 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@280 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@279 $generated@@155)) (= (type $generated@@495) $generated@@68)) (= (type $generated@@496) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@278 $generated@@494))) ($generated@@265 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@84 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@85 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@85 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@500 ($generated@@243 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@76 ($generated@@243 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@504 ($generated@@248 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@248 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@76 ($generated@@248 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@508 ($generated@@160 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@160 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@76 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@336 $generated@@517 ($generated@@286 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@286 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@155 $generated@@155)) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) $generated@@68)) (= ($generated@@81 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@297 $generated@@518) $generated@@521))) (and ($generated@@234 ($generated@@91 ($generated@@381 $generated@@518) $generated@@521) $generated@@520) ($generated@@234 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@91 ($generated@@381 $generated@@518) $generated@@521))
 :pattern ( ($generated@@91 ($generated@@297 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@81 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@317 $generated@@155 $generated@@155)) (= (type $generated@@523) $generated@@68)) (= (type $generated@@524) $generated@@68)) (= ($generated@@81 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@315 $generated@@522) $generated@@525))) (and ($generated@@234 ($generated@@91 ($generated@@389 $generated@@522) $generated@@525) $generated@@524) ($generated@@234 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@91 ($generated@@389 $generated@@522) $generated@@525))
 :pattern ( ($generated@@91 ($generated@@315 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@81 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (and (= (type $generated@@526) $generated@@80) (or ($generated@@260 $generated@@526 $generated@@527) (and (not (= 2 $generated@@78)) (and (and ($generated@@81 $generated@@526 $generated@@261) (<= ($generated@@253 0) $generated@@527)) (not (= $generated@@527 7)))))) (and (= ($generated@@259 $generated@@526 $generated@@527) ($generated@@79 $generated@@526)) (<= ($generated@@253 0) ($generated@@259 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@259 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@155) (= (type $generated@@531) $generated@@155)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@233 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@233 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@155) (= (type $generated@@533) $generated@@155)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@233 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@233 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@155) (= (type $generated@@535) $generated@@68)) (= (type $generated@@536) $generated@@68)) ($generated@@234 $generated@@534 ($generated@@406 $generated@@535 $generated@@536))) (and (= ($generated@@286 ($generated@@336 ($generated@@299 $generated@@155 $generated@@155) $generated@@534)) $generated@@534) ($generated@@81 ($generated@@336 ($generated@@299 $generated@@155 $generated@@155) $generated@@534) ($generated@@406 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@534 ($generated@@406 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) ($generated@@234 $generated@@537 ($generated@@414 $generated@@538 $generated@@539))) (and (= ($generated@@286 ($generated@@336 ($generated@@317 $generated@@155 $generated@@155) $generated@@537)) $generated@@537) ($generated@@81 ($generated@@336 ($generated@@317 $generated@@155 $generated@@155) $generated@@537) ($generated@@414 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@234 $generated@@537 ($generated@@414 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@155)) ($generated@@234 $generated@@542 ($generated@@146 $generated@@540 $generated@@541))) (and (= ($generated@@286 ($generated@@336 $generated@@80 $generated@@542)) $generated@@542) ($generated@@81 ($generated@@336 $generated@@80 $generated@@542) ($generated@@146 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@234 $generated@@542 ($generated@@146 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@91 ($generated@@422 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@91 ($generated@@422 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@73)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@68) (= (type $generated@@548) $generated@@68)) (and (= ($generated@@76 ($generated@@146 $generated@@547 $generated@@548)) $generated@@63) (= ($generated@@545 ($generated@@146 $generated@@547 $generated@@548)) $generated@@66)))
 :pattern ( ($generated@@146 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@80) (= ($generated@@528 ($generated@@286 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@286 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@155) ($generated@@234 $generated@@550 ($generated@@85 0))) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@550)) $generated@@550) ($generated@@81 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@550) ($generated@@85 0))))
 :pattern ( ($generated@@234 $generated@@550 ($generated@@85 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@68)) ($generated@@234 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@286 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@551)) $generated@@551) ($generated@@81 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@234 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@155) (= (type $generated@@554) $generated@@68)) ($generated@@234 $generated@@553 ($generated@@248 $generated@@554))) (and (= ($generated@@286 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@553)) $generated@@553) ($generated@@81 ($generated@@336 ($generated@@86 $generated@@155 $generated@@4) $generated@@553) ($generated@@248 $generated@@554))))
 :pattern ( ($generated@@234 $generated@@553 ($generated@@248 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@68)) ($generated@@234 $generated@@555 ($generated@@160 $generated@@556))) (and (= ($generated@@286 ($generated@@336 ($generated@@86 $generated@@155 $generated@@2) $generated@@555)) $generated@@555) ($generated@@81 ($generated@@336 ($generated@@86 $generated@@155 $generated@@2) $generated@@555) ($generated@@160 $generated@@556))))
 :pattern ( ($generated@@234 $generated@@555 ($generated@@160 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@155) (= (type $generated@@558) $generated@@68)) ($generated@@234 $generated@@557 ($generated@@488 $generated@@558))) (and (= ($generated@@286 ($generated@@336 ($generated@@279 $generated@@155) $generated@@557)) $generated@@557) ($generated@@81 ($generated@@336 ($generated@@279 $generated@@155) $generated@@557) ($generated@@488 $generated@@558))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@488 $generated@@558)))
)))
(assert (= ($generated@@76 $generated@@82) $generated@@61))
(assert (= ($generated@@545 $generated@@82) $generated@@65))
(assert (= ($generated@@76 $generated@@261) $generated@@64))
(assert (= ($generated@@545 $generated@@261) $generated@@67))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@559 ($generated@@160 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@559 $generated@@562)))) ($generated@@265 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@91 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@84 $generated@@559 ($generated@@160 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@80) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@264 $generated@@565) (and ($generated@@145 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@68) ($generated@@84 $generated@@563 ($generated@@146 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@84 $generated@@563 ($generated@@146 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@265 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@265 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@80) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@264 $generated@@569) (and ($generated@@145 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@68) ($generated@@84 $generated@@567 ($generated@@146 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@84 $generated@@567 ($generated@@146 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@265 ($generated@@154 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@265 ($generated@@154 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@155) (= (type $generated@@572) $generated@@155)) (= ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)) ($generated@@255 ($generated@@233 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@233 ($generated@@255 $generated@@571) ($generated@@255 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@253 $generated@@573))) ($generated@@255 ($generated@@286 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@253 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@286 ($generated@@255 $generated@@574)) ($generated@@255 ($generated@@286 $generated@@574)))
 :pattern ( ($generated@@286 ($generated@@255 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@280 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@279 $generated@@576)) (= ($generated@@278 $generated@@575) 0)) (= $generated@@575 ($generated@@277 $generated@@576))))
 :pattern ( ($generated@@278 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@86 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@291 ($generated@@92 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@291 $generated@@577) ($generated ($generated@@91 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@291 ($generated@@92 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@582) $generated@@2)) ($generated@@84 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@84 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@584) $generated@@3)) ($generated@@84 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@84 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@586) $generated@@4)) ($generated@@84 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@84 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@588) $generated@@446)) ($generated@@84 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@84 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@590) $generated@@155)) ($generated@@84 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@84 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@279 $generated@@155)) (= (type $generated@@592) $generated@@68)) (= ($generated@@81 $generated@@591 ($generated@@488 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@278 $generated@@591))) ($generated@@234 ($generated@@489 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@489 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@81 $generated@@591 ($generated@@488 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@279 $generated@@155)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@278 $generated@@595))) (< ($generated@@529 ($generated@@336 $generated@@80 ($generated@@489 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@529 ($generated@@336 $generated@@80 ($generated@@489 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@299 $generated@@155 $generated@@155)) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) $generated@@68)) ($generated@@81 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@81 ($generated@@297 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@81 ($generated@@345 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@81 ($generated@@380 $generated@@597) ($generated@@243 ($generated@@146 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@81 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@317 $generated@@155 $generated@@155)) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@68)) ($generated@@81 $generated@@600 ($generated@@414 $generated@@601 $generated@@602))) (and (and ($generated@@81 ($generated@@315 $generated@@600) ($generated@@248 $generated@@601)) ($generated@@81 ($generated@@356 $generated@@600) ($generated@@248 $generated@@602))) ($generated@@81 ($generated@@388 $generated@@600) ($generated@@248 ($generated@@146 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@81 $generated@@600 ($generated@@414 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@81 $generated@@603 $generated@@46))
 :pattern ( ($generated@@81 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@81 $generated@@604 $generated@@47))
 :pattern ( ($generated@@81 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@81 $generated@@605 $generated@@44))
 :pattern ( ($generated@@81 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@446) ($generated@@81 $generated@@606 $generated@@45))
 :pattern ( ($generated@@81 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@155) ($generated@@81 $generated@@607 $generated@@48))
 :pattern ( ($generated@@81 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@608) $generated@@80) (= (type $generated@@612) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@610) ($generated@@167 $generated@@87 $generated@@4))) (= (type $generated@@611) $generated@@87)) (= (type $generated@@613) ($generated@@167 $generated@@87 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@615  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@259 $generated@@608 $generated@@609) ($generated@@79 $generated@@608)))))
(let (($generated@@616  (=> (and (and (= $generated@@610 ($generated@@221 $generated@@611 $generated@@612 $generated@@60 false)) (= ($generated@@259 $generated@@608 $generated@@609) $generated@@609)) (and ($generated@@81 ($generated@@8 ($generated@@259 $generated@@608 $generated@@609)) $generated@@82) (= (ControlFlow 0 7) 6))) $generated@@615)))
(let (($generated@@617  (=> (<= ($generated@@253 0) ($generated@@259 $generated@@608 $generated@@609)) (=> (and ($generated@@84 $generated@@608 $generated@@261 $generated@@612) ($generated@@84 ($generated@@8 $generated@@609) $generated@@82 $generated@@612)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@609 7))) (=> (not (= $generated@@609 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@609) (< ($generated@@529 $generated@@608) ($generated@@529 $generated@@608))) (= $generated@@609 $generated@@609))) (=> (or (or (<= 0 $generated@@609) (< ($generated@@529 $generated@@608) ($generated@@529 $generated@@608))) (= $generated@@609 $generated@@609)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@608 $generated@@608) (= $generated@@609 $generated@@609)) (or (< ($generated@@529 $generated@@608) ($generated@@529 $generated@@608)) (and (= ($generated@@529 $generated@@608) ($generated@@529 $generated@@608)) (< $generated@@609 $generated@@609)))))))))))))
(let (($generated@@618  (=> (and (= $generated@@613 ($generated@@166 $generated@@611 $generated@@612 $generated@@60 false)) (not (= $generated@@609 7))) (and (=> (= (ControlFlow 0 8) 2) $generated@@617) (=> (= (ControlFlow 0 8) 7) $generated@@616)))))
(let (($generated@@619  (=> (and ($generated@@264 $generated@@612) ($generated@@614 $generated@@612)) (=> (and (and (and ($generated@@81 $generated@@608 $generated@@261) ($generated@@84 $generated@@608 $generated@@261 $generated@@612)) (<= ($generated@@253 0) $generated@@609)) (and (= 2 $generated@@78) (= (ControlFlow 0 9) 8))) $generated@@618))))
$generated@@619))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@80) 11) (= (type $generated@@82) $generated@@68)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@83 T@U) ) (!  (=> (= (type $generated@@83) $generated@@80) ($generated@@81 ($generated@@8 ($generated@@79 $generated@@83)) $generated@@82))
 :pattern ( ($generated@@79 $generated@@83))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@86 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@86 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@71 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@71 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@85 $generated@@139)) $generated@@68)
 :pattern ( ($generated@@85 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
 :pattern ( ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
 :pattern ( ($generated@@84 $generated@@142 $generated@@82 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@81 $generated@@144 ($generated@@85 0)))
 :pattern ( ($generated@@81 $generated@@144 ($generated@@85 0)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@80)) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@81 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@80) (= (type $generated@@159) $generated@@80)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@81 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@81 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@87 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@87) (= (type $generated@@215) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@87)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@80)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@68) (= (type $generated@@226) $generated@@68)) (= (type $generated@@227) $generated@@155)) (= (type $generated@@228) $generated@@155)) (= ($generated@@81 ($generated@@221 $generated@@227 $generated@@228) ($generated@@146 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@81 ($generated@@221 $generated@@227 $generated@@228) ($generated@@146 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@80) (= (type $generated@@230) $generated@@80)) (= ($generated@@152 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@152 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@68)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@234) $generated@@68)) (= ($generated@@81 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@155) ($generated@@0 ($generated@@91 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@91 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@81 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@68)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@239) $generated@@68)) (= ($generated@@81 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@155) ($generated@@0 ($generated@@91 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@91 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@81 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) $generated@@68)) (= (type $generated@@251) $generated@@155)) (= (type $generated@@252) $generated@@155)) (= (type $generated@@253) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@247 $generated@@253)) (= ($generated@@84 ($generated@@221 $generated@@251 $generated@@252) ($generated@@146 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@84 ($generated@@221 $generated@@251 $generated@@252) ($generated@@146 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@80) (= ($generated@@145 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@62)))
 :pattern ( ($generated@@145 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@80) ($generated@@145 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@155) (= (type $generated@@259) $generated@@155)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@145 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@2) (= ($generated@@81 $generated@@268 $generated@@82) (<= ($generated@@241 0) ($generated $generated@@268))))
 :pattern ( ($generated@@81 $generated@@268 $generated@@82))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@155)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@84 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@86 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@89 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@86 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@91 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@86 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@91 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@91 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@86 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@91 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@91 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@89 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@86 $generated@@317 $generated@@2)) (= ($generated@@161 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@91 $generated@@316 $generated@@318))) (<= ($generated ($generated@@91 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@91 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@161 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@155) ($generated@@222 $generated@@322 $generated@@82)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@322)) $generated@@322) ($generated@@81 ($generated@@319 $generated@@2 $generated@@322) $generated@@82)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@82))
)))
(assert (= (type $generated@@323) $generated@@68))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@155) ($generated@@222 $generated@@324 $generated@@323)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@324)) $generated@@324) ($generated@@81 ($generated@@319 $generated@@80 $generated@@324) $generated@@323)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@91 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@86 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@91 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@91 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@86 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@91 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@348) $generated@@80)) (and ($generated@@247 $generated@@347) ($generated@@84 $generated@@348 $generated@@323 $generated@@347))) ($generated@@84 ($generated@@8 ($generated@@79 $generated@@348)) $generated@@82 $generated@@347))
 :pattern ( ($generated@@79 $generated@@348) ($generated@@84 $generated@@348 $generated@@323 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@350) $generated@@68)) (= ($generated@@81 $generated@@349 ($generated@@160 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@91 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@81 $generated@@349 ($generated@@160 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@353) $generated@@68)) (= (type $generated@@354) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@155) ($generated@@0 ($generated@@91 $generated@@352 $generated@@355))) ($generated@@248 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@91 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@84 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@86 $generated@@155 $generated@@4)) (= (type $generated@@357) $generated@@68)) (= (type $generated@@358) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@155) ($generated@@0 ($generated@@91 $generated@@356 $generated@@359))) ($generated@@248 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@91 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@84 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@91 ($generated@@275 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@91 ($generated@@275 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@284 (type $generated@@365))))
(let (($generated@@367 ($generated@@283 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@86 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@369) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@91 ($generated@@280 $generated@@368) ($generated@@153 ($generated@@319 $generated@@80 $generated@@369)))) (= ($generated@@91 ($generated@@363 $generated@@368) ($generated@@153 ($generated@@319 $generated@@80 $generated@@369))) ($generated@@154 ($generated@@319 $generated@@80 $generated@@369))))))
 :pattern ( ($generated@@91 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@86 $generated@@155 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@302 (type $generated@@373))))
(let (($generated@@375 ($generated@@301 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@86 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@377) $generated@@155)) (= ($generated@@0 ($generated@@91 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@91 ($generated@@298 $generated@@376) ($generated@@153 ($generated@@319 $generated@@80 $generated@@377)))) (= ($generated@@91 ($generated@@371 $generated@@376) ($generated@@153 ($generated@@319 $generated@@80 $generated@@377))) ($generated@@154 ($generated@@319 $generated@@80 $generated@@377))))))
 :pattern ( ($generated@@91 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@283 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@282 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@91 ($generated@@329 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@91 ($generated@@280 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@91 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@91 ($generated@@280 $generated@@378) $generated@@382))
 :pattern ( ($generated@@91 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@91 ($generated@@329 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@301 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@300 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@91 ($generated@@340 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@91 ($generated@@298 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@91 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@91 ($generated@@298 $generated@@383) $generated@@387))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@91 ($generated@@340 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@68)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) $generated@@68)) (= (type $generated@@394) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@280 $generated@@391) $generated@@395))) (and ($generated@@248 ($generated@@91 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@248 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@91 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@91 ($generated@@280 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@84 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@68)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@298 $generated@@399) $generated@@403))) (and ($generated@@248 ($generated@@91 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@248 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@91 ($generated@@298 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@84 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@86 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@302 (type $generated@@406))))
(let (($generated@@408 ($generated@@301 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@300 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@299 $generated@@408 $generated@@407)) (= ($generated@@298 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@298 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@302 (type $generated@@409))))
(let (($generated@@411 ($generated@@301 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@300 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@299 $generated@@411 $generated@@410)) (= ($generated@@340 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@340 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@302 (type $generated@@412))))
(let (($generated@@414 ($generated@@301 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@300 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@299 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@155))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@284 (type $generated@@415))))
(let (($generated@@417 ($generated@@283 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@282 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@281 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@155) (= (type $generated@@419) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@362 $generated@@415) ($generated@@269 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@302 (type $generated@@420))))
(let (($generated@@422 ($generated@@301 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@300 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@299 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@155) (= (type $generated@@424) $generated@@155)) ($generated@@0 ($generated@@91 ($generated@@370 $generated@@420) ($generated@@269 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@155) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@425)) $generated@@425) ($generated@@81 ($generated@@319 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@155) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@426)) $generated@@426) ($generated@@81 ($generated@@319 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@155) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@427)) $generated@@427) ($generated@@81 ($generated@@319 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@155) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@428 $generated@@429)) $generated@@429) ($generated@@81 ($generated@@319 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@68) (= ($generated@@222 ($generated@@269 $generated@@430) $generated@@431) ($generated@@81 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@269 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@89 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@86 $generated@@433 $generated@@2)) (<= 0 ($generated@@274 $generated@@432))))
 :pattern ( ($generated@@274 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@263 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@262 $generated@@435)) (<= 0 ($generated@@261 $generated@@434))))
 :pattern ( ($generated@@261 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@68) (= (type $generated@@439) $generated@@68)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@68) (= (type $generated@@443) $generated@@68)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@68) (= (type $generated@@445) $generated@@68)) (= ($generated@@76 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@68) (= (type $generated@@449) $generated@@68)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@76 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@155) (= (type $generated@@457) $generated@@155)) (= ($generated@@254 ($generated@@221 $generated@@456 $generated@@457)) $generated@@62))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@146 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@146 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@146 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@146 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@155) (= (type $generated@@467) $generated@@155)) (= ($generated@@153 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@155) (= (type $generated@@469) $generated@@155)) (= ($generated@@154 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@263 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@262 $generated@@155)) (= (type $generated@@477) $generated@@68)) (= (type $generated@@478) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@261 $generated@@476))) ($generated@@248 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@84 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@85 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@85 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@68) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@76 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@68) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@68) (= ($generated@@76 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@490 ($generated@@160 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@160 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@76 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@319 $generated@@499 ($generated@@269 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@269 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) $generated@@68)) (= ($generated@@81 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@280 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@91 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@91 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@91 ($generated@@280 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@81 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) $generated@@68)) (= ($generated@@81 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@155) ($generated@@0 ($generated@@91 ($generated@@298 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@91 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@91 ($generated@@298 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@81 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@155) (= (type $generated@@511) $generated@@155)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@155) (= (type $generated@@513) $generated@@155)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@155) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) $generated@@68)) ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@514)) $generated@@514) ($generated@@81 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@155) (= (type $generated@@518) $generated@@68)) (= (type $generated@@519) $generated@@68)) ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@517)) $generated@@517) ($generated@@81 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) $generated@@155)) ($generated@@222 $generated@@522 ($generated@@146 $generated@@520 $generated@@521))) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@522)) $generated@@522) ($generated@@81 ($generated@@319 $generated@@80 $generated@@522) ($generated@@146 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@146 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@91 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@91 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@73)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (and (= ($generated@@76 ($generated@@146 $generated@@527 $generated@@528)) $generated@@63) (= ($generated@@525 ($generated@@146 $generated@@527 $generated@@528)) $generated@@66)))
 :pattern ( ($generated@@146 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@80) (= ($generated@@508 ($generated@@269 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@269 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@155) ($generated@@222 $generated@@530 ($generated@@85 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@530)) $generated@@530) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@530) ($generated@@85 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@85 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@155) (= (type $generated@@532) $generated@@68)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@269 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@531)) $generated@@531) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@155) (= (type $generated@@534) $generated@@68)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@269 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@533)) $generated@@533) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@155) (= (type $generated@@536) $generated@@68)) ($generated@@222 $generated@@535 ($generated@@160 $generated@@536))) (and (= ($generated@@269 ($generated@@319 ($generated@@86 $generated@@155 $generated@@2) $generated@@535)) $generated@@535) ($generated@@81 ($generated@@319 ($generated@@86 $generated@@155 $generated@@2) $generated@@535) ($generated@@160 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@160 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@269 ($generated@@319 ($generated@@262 $generated@@155) $generated@@537)) $generated@@537) ($generated@@81 ($generated@@319 ($generated@@262 $generated@@155) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@76 $generated@@82) $generated@@61))
(assert (= ($generated@@525 $generated@@82) $generated@@65))
(assert (= ($generated@@76 $generated@@323) $generated@@64))
(assert (= ($generated@@525 $generated@@323) $generated@@67))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@86 $generated@@155 $generated@@2)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@539 ($generated@@160 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@155) (< 0 ($generated ($generated@@91 $generated@@539 $generated@@542)))) ($generated@@248 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@91 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@84 $generated@@539 ($generated@@160 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@80) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@247 $generated@@545) (and ($generated@@145 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@68) ($generated@@84 $generated@@543 ($generated@@146 $generated@@544 $generated@@546) $generated@@545))
 :pattern ( ($generated@@84 $generated@@543 ($generated@@146 $generated@@544 $generated@@546) $generated@@545))
))))) ($generated@@248 ($generated@@153 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@248 ($generated@@153 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@80) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@247 $generated@@549) (and ($generated@@145 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@68) ($generated@@84 $generated@@547 ($generated@@146 $generated@@550 $generated@@548) $generated@@549))
 :pattern ( ($generated@@84 $generated@@547 ($generated@@146 $generated@@550 $generated@@548) $generated@@549))
))))) ($generated@@248 ($generated@@154 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@248 ($generated@@154 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@155)) (= ($generated@@221 ($generated@@243 $generated@@551) ($generated@@243 $generated@@552)) ($generated@@243 ($generated@@221 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@551) ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@269 ($generated@@8 ($generated@@241 $generated@@553))) ($generated@@243 ($generated@@269 ($generated@@8 $generated@@553))))
 :pattern ( ($generated@@269 ($generated@@8 ($generated@@241 $generated@@553))))
)))
(assert (forall (($generated@@554 T@U) ) (! (= ($generated@@269 ($generated@@243 $generated@@554)) ($generated@@243 ($generated@@269 $generated@@554)))
 :pattern ( ($generated@@269 ($generated@@243 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@263 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@262 $generated@@556)) (= ($generated@@261 $generated@@555) 0)) (= $generated@@555 ($generated@@260 $generated@@556))))
 :pattern ( ($generated@@261 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@558)))
 (=> (and (and (= (type $generated@@557) ($generated@@86 $generated@@560 $generated@@2)) (= (type $generated@@559) $generated@@2)) (<= 0 ($generated $generated@@559))) (= ($generated@@274 ($generated@@92 $generated@@557 $generated@@558 $generated@@559)) (+ (- ($generated@@274 $generated@@557) ($generated ($generated@@91 $generated@@557 $generated@@558))) ($generated $generated@@559)))))
 :pattern ( ($generated@@274 ($generated@@92 $generated@@557 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@562) $generated@@2)) ($generated@@84 $generated@@562 $generated@@46 $generated@@561))
 :pattern ( ($generated@@84 $generated@@562 $generated@@46 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@564) $generated@@3)) ($generated@@84 $generated@@564 $generated@@47 $generated@@563))
 :pattern ( ($generated@@84 $generated@@564 $generated@@47 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@566) $generated@@4)) ($generated@@84 $generated@@566 $generated@@44 $generated@@565))
 :pattern ( ($generated@@84 $generated@@566 $generated@@44 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@568) $generated@@428)) ($generated@@84 $generated@@568 $generated@@45 $generated@@567))
 :pattern ( ($generated@@84 $generated@@568 $generated@@45 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@570) $generated@@155)) ($generated@@84 $generated@@570 $generated@@48 $generated@@569))
 :pattern ( ($generated@@84 $generated@@570 $generated@@48 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@262 $generated@@155)) (= (type $generated@@572) $generated@@68)) (= ($generated@@81 $generated@@571 ($generated@@470 $generated@@572)) (forall (($generated@@573 Int) ) (!  (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@261 $generated@@571))) ($generated@@222 ($generated@@471 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@471 $generated@@571 $generated@@573))
))))
 :pattern ( ($generated@@81 $generated@@571 ($generated@@470 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (= (type $generated@@575) ($generated@@262 $generated@@155)) (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@261 $generated@@575))) (< ($generated@@509 ($generated@@319 $generated@@80 ($generated@@471 $generated@@575 $generated@@576))) ($generated@@574 $generated@@575))))
 :pattern ( ($generated@@509 ($generated@@319 $generated@@80 ($generated@@471 $generated@@575 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) ($generated@@81 $generated@@577 ($generated@@388 $generated@@578 $generated@@579))) (and (and ($generated@@81 ($generated@@280 $generated@@577) ($generated@@231 $generated@@578)) ($generated@@81 ($generated@@329 $generated@@577) ($generated@@231 $generated@@579))) ($generated@@81 ($generated@@362 $generated@@577) ($generated@@231 ($generated@@146 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@81 $generated@@577 ($generated@@388 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) ($generated@@81 $generated@@580 ($generated@@396 $generated@@581 $generated@@582))) (and (and ($generated@@81 ($generated@@298 $generated@@580) ($generated@@236 $generated@@581)) ($generated@@81 ($generated@@340 $generated@@580) ($generated@@236 $generated@@582))) ($generated@@81 ($generated@@370 $generated@@580) ($generated@@236 ($generated@@146 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@81 $generated@@580 ($generated@@396 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) ($generated@@81 $generated@@583 $generated@@46))
 :pattern ( ($generated@@81 $generated@@583 $generated@@46))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@3) ($generated@@81 $generated@@584 $generated@@47))
 :pattern ( ($generated@@81 $generated@@584 $generated@@47))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@4) ($generated@@81 $generated@@585 $generated@@44))
 :pattern ( ($generated@@81 $generated@@585 $generated@@44))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@428) ($generated@@81 $generated@@586 $generated@@45))
 :pattern ( ($generated@@81 $generated@@586 $generated@@45))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@155) ($generated@@81 $generated@@587 $generated@@48))
 :pattern ( ($generated@@81 $generated@@587 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 (T@U) Bool)
(declare-fun $generated@@595 () Int)
(assert  (and (and (and (= (type $generated@@588) ($generated@@167 $generated@@87 $generated@@4)) (= (type $generated@@589) $generated@@87)) (= (type $generated@@590) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@592) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@596  (=> (= $generated@@588 ($generated@@166 $generated@@589 $generated@@590 $generated@@60 false)) (=> (and (= $generated@@591 ($generated@@79 $generated@@592)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@591 $generated@@593)))))
(let (($generated@@597  (=> (and ($generated@@247 $generated@@590) ($generated@@594 $generated@@590)) (=> (and (and (and ($generated@@81 $generated@@592 $generated@@323) ($generated@@84 $generated@@592 $generated@@323 $generated@@590)) (<= ($generated@@241 0) $generated@@593)) (and (and (<= ($generated@@241 0) $generated@@595) (= 2 $generated@@78)) (and (not (= $generated@@593 9)) (= (ControlFlow 0 3) 2)))) $generated@@596))))
$generated@@597)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@252 (T@U Int) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Bool)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@72 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@221) ($generated@@71 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@71 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@72 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@81) (= (type $generated@@232) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@233) ($generated@@71 $generated@@4))) (= (type $generated@@235) $generated@@81)) (= (type $generated@@236) ($generated@@71 $generated@@237))) (= ($generated@@0 ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (= (type $generated@@238) $generated@@69))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@81) (= (type $generated@@240) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@239 $generated@@238 $generated@@240) ($generated@@85 $generated@@239 $generated@@144 $generated@@240)))
 :pattern ( ($generated@@85 $generated@@239 $generated@@238 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@151)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@69) (= (type $generated@@246) $generated@@69)) (= (type $generated@@247) $generated@@160)) (= (type $generated@@248) $generated@@160)) (= ($generated@@82 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@82 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@250 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@255 T@U) ($generated@@256 Int) ) (!  (=> (and (= (type $generated@@255) $generated@@81) (or ($generated@@252 ($generated@@250 $generated@@255) ($generated@@251 $generated@@256)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@255 $generated@@145)) ($generated@@82 $generated@@255 $generated@@238)) (<= ($generated@@251 0) $generated@@256)) ($generated@@0 ($generated@@250 ($generated@@11 (not (= $generated@@256 7))))))))) (= ($generated@@249 ($generated@@250 $generated@@255) ($generated@@251 $generated@@256)) ($generated@@251 $generated@@256)))
 :weight 3
 :pattern ( ($generated@@249 ($generated@@250 $generated@@255) ($generated@@251 $generated@@256)))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@151) (= (type $generated@@258) $generated@@151)) (= ($generated@@157 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@157 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@69)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@262) $generated@@69)) (= ($generated@@82 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@160) ($generated@@0 ($generated@@91 $generated@@261 $generated@@263))) ($generated@@242 $generated@@263 $generated@@262))
 :pattern ( ($generated@@91 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@82 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@69)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@267) $generated@@69)) (= ($generated@@82 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@160) ($generated@@0 ($generated@@91 $generated@@266 $generated@@268))) ($generated@@242 $generated@@268 $generated@@267))
 :pattern ( ($generated@@91 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@82 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@251 $generated@@269) $generated@@269)
 :pattern ( ($generated@@251 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@250 $generated@@270) $generated@@270)
 :pattern ( ($generated@@250 $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@69) (= (type $generated@@274) $generated@@69)) (= (type $generated@@275) $generated@@160)) (= (type $generated@@276) $generated@@160)) (= (type $generated@@277) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@271 $generated@@277)) (= ($generated@@85 ($generated@@241 $generated@@275 $generated@@276) ($generated@@150 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@85 ($generated@@241 $generated@@275 $generated@@276) ($generated@@150 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@73)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@151) (= ($generated@@149 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@151) ($generated@@149 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@160) (= (type $generated@@283) $generated@@160)) (= $generated@@281 ($generated@@241 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@149 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 17)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@2) (= ($generated@@82 $generated@@292 $generated@@83) (<= ($generated@@251 0) ($generated $generated@@292))))
 :pattern ( ($generated@@82 $generated@@292 $generated@@83))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@160)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@69) (= (type $generated@@297) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@272 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@85 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@272 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@87 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@89 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@87 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@91 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@87 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@91 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@91 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@87 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@91 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@91 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@341) $generated@@81)) (and ($generated@@271 $generated@@340) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@340 $generated@@341) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@341)) $generated@@83 $generated@@340))
 :pattern ( ($generated@@80 $generated@@341) ($generated@@93 ($generated@@91 $generated@@340 $generated@@341) $generated@@60))
))))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@342 T@U) ($generated@@343 Int) ) (!  (=> (and (= (type $generated@@342) $generated@@81) (or ($generated@@252 $generated@@342 $generated@@343) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@342 $generated@@145)) ($generated@@82 $generated@@342 $generated@@238)) (<= ($generated@@251 0) $generated@@343)) (not (= $generated@@343 7)))))) (= ($generated@@249 $generated@@342 $generated@@343) $generated@@343))
 :pattern ( ($generated@@249 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@89 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@87 $generated@@345 $generated@@2)) (= ($generated@@166 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@91 $generated@@344 $generated@@346))) (<= ($generated ($generated@@91 $generated@@344 $generated@@346)) ($generated@@298 $generated@@344))))
 :pattern ( ($generated@@91 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@166 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@160) ($generated@@242 $generated@@350 $generated@@83)) (and (= ($generated@@293 ($generated@@347 $generated@@2 $generated@@350)) $generated@@350) ($generated@@82 ($generated@@347 $generated@@2 $generated@@350) $generated@@83)))
 :pattern ( ($generated@@242 $generated@@350 $generated@@83))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@160) ($generated@@242 $generated@@351 $generated@@144)) (and (= ($generated@@293 ($generated@@347 $generated@@81 $generated@@351)) $generated@@351) ($generated@@82 ($generated@@347 $generated@@81 $generated@@351) $generated@@144)))
 :pattern ( ($generated@@242 $generated@@351 $generated@@144))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@160) ($generated@@242 $generated@@352 $generated@@238)) (and (= ($generated@@293 ($generated@@347 $generated@@81 $generated@@352)) $generated@@352) ($generated@@82 ($generated@@347 $generated@@81 $generated@@352) $generated@@238)))
 :pattern ( ($generated@@242 $generated@@352 $generated@@238))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@81) (= ($generated@@82 $generated@@353 $generated@@238)  (and ($generated@@82 $generated@@353 $generated@@144) (not (= $generated@@353 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@353 $generated@@238))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@308 (type $generated@@354))))
(let (($generated@@356 ($generated@@307 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@306 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@305 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@91 ($generated@@304 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@304 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@308 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@87 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@308 (type $generated@@361))))
(let (($generated@@363 ($generated@@307 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@306 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@305 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@91 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@326 (type $generated@@365))))
(let (($generated@@367 ($generated@@325 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@324 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@323 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@91 ($generated@@322 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@322 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@326 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@87 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@326 (type $generated@@372))))
(let (($generated@@374 ($generated@@325 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@324 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@323 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@91 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@377) $generated@@69)) (= ($generated@@82 $generated@@376 ($generated@@165 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@376 $generated@@378)))) ($generated@@242 $generated@@378 $generated@@377))
 :pattern ( ($generated@@91 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@82 $generated@@376 ($generated@@165 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@380) $generated@@69)) (= (type $generated@@381) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@379 ($generated@@259 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@160) ($generated@@0 ($generated@@91 $generated@@379 $generated@@382))) ($generated@@272 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@91 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@85 $generated@@379 ($generated@@259 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@384) $generated@@69)) (= (type $generated@@385) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@383 ($generated@@264 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@160) ($generated@@0 ($generated@@91 $generated@@383 $generated@@386))) ($generated@@272 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@91 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@85 $generated@@383 ($generated@@264 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@91 ($generated@@299 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@91 ($generated@@299 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@308 (type $generated@@392))))
(let (($generated@@394 ($generated@@307 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@87 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@306 $generated@@160 $generated@@160)) (= (type $generated@@396) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@91 ($generated@@304 $generated@@395) ($generated@@158 ($generated@@347 $generated@@151 $generated@@396)))) (= ($generated@@91 ($generated@@390 $generated@@395) ($generated@@158 ($generated@@347 $generated@@151 $generated@@396))) ($generated@@159 ($generated@@347 $generated@@151 $generated@@396))))))
 :pattern ( ($generated@@91 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@326 (type $generated@@400))))
(let (($generated@@402 ($generated@@325 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@87 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@324 $generated@@160 $generated@@160)) (= (type $generated@@404) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@91 ($generated@@322 $generated@@403) ($generated@@158 ($generated@@347 $generated@@151 $generated@@404)))) (= ($generated@@91 ($generated@@398 $generated@@403) ($generated@@158 ($generated@@347 $generated@@151 $generated@@404))) ($generated@@159 ($generated@@347 $generated@@151 $generated@@404))))))
 :pattern ( ($generated@@91 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@307 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@306 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@91 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@91 ($generated@@304 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@91 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@91 ($generated@@304 $generated@@405) $generated@@409))
 :pattern ( ($generated@@91 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@91 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@325 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@324 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@91 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@91 ($generated@@322 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@91 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@91 ($generated@@322 $generated@@410) $generated@@414))
 :pattern ( ($generated@@91 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@91 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@69)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@306 $generated@@160 $generated@@160)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@304 $generated@@418) $generated@@422))) (and ($generated@@272 ($generated@@91 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@272 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@91 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@91 ($generated@@304 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@85 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@69)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@324 $generated@@160 $generated@@160)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@322 $generated@@426) $generated@@430))) (and ($generated@@272 ($generated@@91 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@272 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@91 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@91 ($generated@@322 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@85 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@431 T@U) ($generated@@432 Int) ) (!  (=> (and (= (type $generated@@431) $generated@@81) (or ($generated@@252 $generated@@431 $generated@@432) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@431 $generated@@145)) ($generated@@82 $generated@@431 $generated@@238)) (<= ($generated@@251 0) $generated@@432)) (not (= $generated@@432 7)))))) (and (= ($generated@@249 $generated@@431 $generated@@432) ($generated@@80 $generated@@431)) (<= ($generated@@251 0) ($generated@@249 $generated@@431 $generated@@432))))
 :pattern ( ($generated@@249 $generated@@431 $generated@@432))
))))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@87 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@326 (type $generated@@435))))
(let (($generated@@437 ($generated@@325 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@324 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@323 $generated@@437 $generated@@436)) (= ($generated@@322 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@322 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@326 (type $generated@@438))))
(let (($generated@@440 ($generated@@325 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@324 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@323 $generated@@440 $generated@@439)) (= ($generated@@369 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@369 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@326 (type $generated@@441))))
(let (($generated@@443 ($generated@@325 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@324 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@323 $generated@@443 $generated@@442)) (= ($generated@@397 $generated@@441) ($generated@@433 $generated@@160))))))
 :pattern ( ($generated@@397 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@308 (type $generated@@444))))
(let (($generated@@446 ($generated@@307 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@306 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@305 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@160) (= (type $generated@@448) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@389 $generated@@444) ($generated@@293 ($generated@@241 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@389 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@326 (type $generated@@449))))
(let (($generated@@451 ($generated@@325 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@324 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@323 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@160) (= (type $generated@@453) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@397 $generated@@449) ($generated@@293 ($generated@@241 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@397 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@160) ($generated@@242 $generated@@454 $generated@@46)) (and (= ($generated@@293 ($generated@@347 $generated@@2 $generated@@454)) $generated@@454) ($generated@@82 ($generated@@347 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@160) ($generated@@242 $generated@@455 $generated@@47)) (and (= ($generated@@293 ($generated@@347 $generated@@3 $generated@@455)) $generated@@455) ($generated@@82 ($generated@@347 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@160) ($generated@@242 $generated@@456 $generated@@44)) (and (= ($generated@@293 ($generated@@347 $generated@@4 $generated@@456)) $generated@@456) ($generated@@82 ($generated@@347 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@160) ($generated@@242 $generated@@458 $generated@@45)) (and (= ($generated@@293 ($generated@@347 $generated@@457 $generated@@458)) $generated@@458) ($generated@@82 ($generated@@347 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@69) (= ($generated@@242 ($generated@@293 $generated@@459) $generated@@460) ($generated@@82 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@242 ($generated@@293 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@89 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@87 $generated@@462 $generated@@2)) (<= 0 ($generated@@298 $generated@@461))))
 :pattern ( ($generated@@298 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@287 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@286 $generated@@464)) (<= 0 ($generated@@285 $generated@@463))))
 :pattern ( ($generated@@285 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@69)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@69) (= (type $generated@@472) $generated@@69)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@77 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@77 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@160) (= (type $generated@@486) $generated@@160)) (= ($generated@@278 ($generated@@241 $generated@@485 $generated@@486)) $generated@@62))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@150 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@150 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@491 ($generated@@150 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@150 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@160) (= (type $generated@@496) $generated@@160)) (= ($generated@@158 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@160) (= (type $generated@@498) $generated@@160)) (= ($generated@@159 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@287 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@286 $generated@@160)) (= (type $generated@@506) $generated@@69)) (= (type $generated@@507) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@285 $generated@@505))) ($generated@@272 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@85 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@86 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@86 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@259 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@259 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@77 ($generated@@259 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@264 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@264 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@264 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@165 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@165 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@77 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@347 $generated@@528 ($generated@@293 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@293 $generated@@527))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@529 T@U) ($generated@@530 Int) ) (!  (=> (and (= (type $generated@@529) $generated@@81) (or ($generated@@252 $generated@@529 ($generated@@251 $generated@@530)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@529 $generated@@145)) ($generated@@82 $generated@@529 $generated@@238)) (<= ($generated@@251 0) $generated@@530)) ($generated@@0 ($generated@@250 ($generated@@11 (not (= $generated@@530 7))))))))) (= ($generated@@249 $generated@@529 ($generated@@251 $generated@@530)) ($generated@@251 $generated@@530)))
 :weight 3
 :pattern ( ($generated@@249 $generated@@529 ($generated@@251 $generated@@530)))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@306 $generated@@160 $generated@@160)) (= (type $generated@@532) $generated@@69)) (= (type $generated@@533) $generated@@69)) (= ($generated@@82 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@304 $generated@@531) $generated@@534))) (and ($generated@@242 ($generated@@91 ($generated@@390 $generated@@531) $generated@@534) $generated@@533) ($generated@@242 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@91 ($generated@@390 $generated@@531) $generated@@534))
 :pattern ( ($generated@@91 ($generated@@304 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@82 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@324 $generated@@160 $generated@@160)) (= (type $generated@@536) $generated@@69)) (= (type $generated@@537) $generated@@69)) (= ($generated@@82 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@322 $generated@@535) $generated@@538))) (and ($generated@@242 ($generated@@91 ($generated@@398 $generated@@535) $generated@@538) $generated@@537) ($generated@@242 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@91 ($generated@@398 $generated@@535) $generated@@538))
 :pattern ( ($generated@@91 ($generated@@322 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@82 $generated@@535 ($generated@@423 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@160) (= (type $generated@@542) $generated@@160)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@160) (= (type $generated@@544) $generated@@160)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@241 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@241 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@160) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@69)) ($generated@@242 $generated@@545 ($generated@@415 $generated@@546 $generated@@547))) (and (= ($generated@@293 ($generated@@347 ($generated@@306 $generated@@160 $generated@@160) $generated@@545)) $generated@@545) ($generated@@82 ($generated@@347 ($generated@@306 $generated@@160 $generated@@160) $generated@@545) ($generated@@415 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@242 $generated@@545 ($generated@@415 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@160) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@69)) ($generated@@242 $generated@@548 ($generated@@423 $generated@@549 $generated@@550))) (and (= ($generated@@293 ($generated@@347 ($generated@@324 $generated@@160 $generated@@160) $generated@@548)) $generated@@548) ($generated@@82 ($generated@@347 ($generated@@324 $generated@@160 $generated@@160) $generated@@548) ($generated@@423 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@548 ($generated@@423 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@69) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@160)) ($generated@@242 $generated@@553 ($generated@@150 $generated@@551 $generated@@552))) (and (= ($generated@@293 ($generated@@347 $generated@@151 $generated@@553)) $generated@@553) ($generated@@82 ($generated@@347 $generated@@151 $generated@@553) ($generated@@150 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@242 $generated@@553 ($generated@@150 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@91 ($generated@@433 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@91 ($generated@@433 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@74)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@69) (= (type $generated@@559) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@558 $generated@@559)) $generated@@63) (= ($generated@@556 ($generated@@150 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@151) (= ($generated@@539 ($generated@@293 $generated@@560)) ($generated@@540 $generated@@560)))
 :pattern ( ($generated@@539 ($generated@@293 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@160) ($generated@@242 $generated@@561 ($generated@@86 0))) (and (= ($generated@@293 ($generated@@347 $generated@@2 $generated@@561)) $generated@@561) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@561) ($generated@@86 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@86 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@160) (= (type $generated@@563) $generated@@69)) ($generated@@242 $generated@@562 ($generated@@259 $generated@@563))) (and (= ($generated@@293 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@562)) $generated@@562) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@562) ($generated@@259 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@259 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@160) (= (type $generated@@565) $generated@@69)) ($generated@@242 $generated@@564 ($generated@@264 $generated@@565))) (and (= ($generated@@293 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@564)) $generated@@564) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@160 $generated@@4) $generated@@564) ($generated@@264 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@264 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@160) (= (type $generated@@567) $generated@@69)) ($generated@@242 $generated@@566 ($generated@@165 $generated@@567))) (and (= ($generated@@293 ($generated@@347 ($generated@@87 $generated@@160 $generated@@2) $generated@@566)) $generated@@566) ($generated@@82 ($generated@@347 ($generated@@87 $generated@@160 $generated@@2) $generated@@566) ($generated@@165 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@165 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@160) (= (type $generated@@569) $generated@@69)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@293 ($generated@@347 ($generated@@286 $generated@@160) $generated@@568)) $generated@@568) ($generated@@82 ($generated@@347 ($generated@@286 $generated@@160) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@556 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@556 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@238) $generated@@65))
(assert (= ($generated@@556 $generated@@238) $generated@@68))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@570 ($generated@@165 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@570 $generated@@573)))) ($generated@@272 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@91 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@85 $generated@@570 ($generated@@165 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@69)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@81) (= ($generated@@82 $generated@@577 $generated@@144)  (or (= $generated@@577 $generated@@145) ($generated@@574 ($generated@@575 $generated@@577)))))
 :pattern ( ($generated@@82 $generated@@577 $generated@@144))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@151) (= (type $generated@@579) $generated@@69)) (= (type $generated@@580) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@271 $generated@@580) (and ($generated@@149 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@69) ($generated@@85 $generated@@578 ($generated@@150 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@85 $generated@@578 ($generated@@150 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@272 ($generated@@158 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@272 ($generated@@158 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@151) (= (type $generated@@583) $generated@@69)) (= (type $generated@@584) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@271 $generated@@584) (and ($generated@@149 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@69) ($generated@@85 $generated@@582 ($generated@@150 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@85 $generated@@582 ($generated@@150 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@272 ($generated@@159 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@272 ($generated@@159 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@160) (= (type $generated@@587) $generated@@160)) (= ($generated@@241 ($generated@@250 $generated@@586) ($generated@@250 $generated@@587)) ($generated@@250 ($generated@@241 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@241 ($generated@@250 $generated@@586) ($generated@@250 $generated@@587)))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@251 $generated@@588))) ($generated@@250 ($generated@@293 ($generated@@8 $generated@@588))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@251 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@293 ($generated@@250 $generated@@589)) ($generated@@250 ($generated@@293 $generated@@589)))
 :pattern ( ($generated@@293 ($generated@@250 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@287 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@286 $generated@@591)) (= ($generated@@285 $generated@@590) 0)) (= $generated@@590 ($generated@@284 $generated@@591))))
 :pattern ( ($generated@@285 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@87 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@298 ($generated@@92 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@298 $generated@@592) ($generated ($generated@@91 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@298 ($generated@@92 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@597) $generated@@2)) ($generated@@85 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@85 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@599) $generated@@3)) ($generated@@85 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@85 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@601) $generated@@4)) ($generated@@85 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@85 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@603) $generated@@457)) ($generated@@85 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@85 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@605) $generated@@160)) ($generated@@85 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@85 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@286 $generated@@160)) (= (type $generated@@607) $generated@@69)) (= ($generated@@82 $generated@@606 ($generated@@499 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@285 $generated@@606))) ($generated@@242 ($generated@@500 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@500 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@82 $generated@@606 ($generated@@499 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@286 $generated@@160)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@285 $generated@@610))) (< ($generated@@540 ($generated@@347 $generated@@151 ($generated@@500 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@540 ($generated@@347 $generated@@151 ($generated@@500 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@306 $generated@@160 $generated@@160)) (= (type $generated@@613) $generated@@69)) (= (type $generated@@614) $generated@@69)) ($generated@@82 $generated@@612 ($generated@@415 $generated@@613 $generated@@614))) (and (and ($generated@@82 ($generated@@304 $generated@@612) ($generated@@259 $generated@@613)) ($generated@@82 ($generated@@358 $generated@@612) ($generated@@259 $generated@@614))) ($generated@@82 ($generated@@389 $generated@@612) ($generated@@259 ($generated@@150 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@82 $generated@@612 ($generated@@415 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@324 $generated@@160 $generated@@160)) (= (type $generated@@616) $generated@@69)) (= (type $generated@@617) $generated@@69)) ($generated@@82 $generated@@615 ($generated@@423 $generated@@616 $generated@@617))) (and (and ($generated@@82 ($generated@@322 $generated@@615) ($generated@@264 $generated@@616)) ($generated@@82 ($generated@@369 $generated@@615) ($generated@@264 $generated@@617))) ($generated@@82 ($generated@@397 $generated@@615) ($generated@@264 ($generated@@150 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@82 $generated@@615 ($generated@@423 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@82 $generated@@618 $generated@@46))
 :pattern ( ($generated@@82 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@82 $generated@@619 $generated@@47))
 :pattern ( ($generated@@82 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@82 $generated@@620 $generated@@44))
 :pattern ( ($generated@@82 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@457) ($generated@@82 $generated@@621 $generated@@45))
 :pattern ( ($generated@@82 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@160) ($generated@@82 $generated@@622 $generated@@48))
 :pattern ( ($generated@@82 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@623) $generated@@81) (= (type $generated@@626) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@625) ($generated@@172 $generated@@81 $generated@@4))) (= (type $generated@@627) ($generated@@172 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@629  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@249 $generated@@623 $generated@@624) ($generated@@80 $generated@@623)))))
(let (($generated@@630  (=> (and (and (= $generated@@625 ($generated@@226 $generated@@145 $generated@@626 $generated@@60 false)) (= ($generated@@249 $generated@@623 $generated@@624) $generated@@624)) (and ($generated@@82 ($generated@@8 ($generated@@249 $generated@@623 $generated@@624)) $generated@@83) (= (ControlFlow 0 7) 6))) $generated@@629)))
(let (($generated@@631  (=> (<= ($generated@@251 0) ($generated@@249 $generated@@623 $generated@@624)) (=> (and ($generated@@85 $generated@@623 $generated@@144 $generated@@626) ($generated@@85 ($generated@@8 $generated@@624) $generated@@83 $generated@@626)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@624 7))) (=> (not (= $generated@@624 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@624) (= $generated@@624 $generated@@624))) (=> (or (<= 0 $generated@@624) (= $generated@@624 $generated@@624)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@623 $generated@@623) (= $generated@@624 $generated@@624)) (< $generated@@624 $generated@@624)))))))))))
(let (($generated@@632  (=> (and (= $generated@@627 ($generated@@171 $generated@@145 $generated@@626 $generated@@60 false)) (not (= $generated@@624 7))) (and (=> (= (ControlFlow 0 8) 2) $generated@@631) (=> (= (ControlFlow 0 8) 7) $generated@@630)))))
(let (($generated@@633  (=> (and ($generated@@271 $generated@@626) ($generated@@628 $generated@@626)) (=> (and (and (and (not (= $generated@@623 $generated@@145)) (and ($generated@@82 $generated@@623 $generated@@238) ($generated@@85 $generated@@623 $generated@@238 $generated@@626))) (<= ($generated@@251 0) $generated@@624)) (and (= 2 $generated@@79) (= (ControlFlow 0 9) 8))) $generated@@632))))
$generated@@633))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@329 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U Int) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Bool)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@72 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@221) ($generated@@71 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@71 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (= (type $generated@@226) $generated@@69))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@81) (= (type $generated@@228) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@227 $generated@@226 $generated@@228) ($generated@@85 $generated@@227 $generated@@144 $generated@@228)))
 :pattern ( ($generated@@85 $generated@@227 $generated@@226 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@151)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@69) (= (type $generated@@234) $generated@@69)) (= (type $generated@@235) $generated@@160)) (= (type $generated@@236) $generated@@160)) (= ($generated@@82 ($generated@@229 $generated@@235 $generated@@236) ($generated@@150 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@82 ($generated@@229 $generated@@235 $generated@@236) ($generated@@150 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@151) (= (type $generated@@238) $generated@@151)) (= ($generated@@157 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@157 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@69)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@242) $generated@@69)) (= ($generated@@82 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@160) ($generated@@0 ($generated@@91 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@91 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@82 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@69)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@247) $generated@@69)) (= ($generated@@82 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@160) ($generated@@0 ($generated@@91 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@91 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@82 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@69) (= (type $generated@@258) $generated@@69)) (= (type $generated@@259) $generated@@160)) (= (type $generated@@260) $generated@@160)) (= (type $generated@@261) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@255 $generated@@261)) (= ($generated@@85 ($generated@@229 $generated@@259 $generated@@260) ($generated@@150 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@85 ($generated@@229 $generated@@259 $generated@@260) ($generated@@150 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@73)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@151) (= ($generated@@149 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@151) ($generated@@149 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@160) (= (type $generated@@267) $generated@@160)) (= $generated@@265 ($generated@@229 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@149 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@82 $generated@@276 $generated@@83) (<= ($generated@@249 0) ($generated $generated@@276))))
 :pattern ( ($generated@@82 $generated@@276 $generated@@83))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@160)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@69) (= (type $generated@@281) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@85 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@87 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@89 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@87 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@91 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@87 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@91 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@91 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@87 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@91 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@91 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@325) $generated@@81)) (and ($generated@@255 $generated@@324) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@324 $generated@@325) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@325)) $generated@@83 $generated@@324))
 :pattern ( ($generated@@80 $generated@@325) ($generated@@93 ($generated@@91 $generated@@324 $generated@@325) $generated@@60))
))))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@89 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@87 $generated@@327 $generated@@2)) (= ($generated@@166 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@91 $generated@@326 $generated@@328))) (<= ($generated ($generated@@91 $generated@@326 $generated@@328)) ($generated@@282 $generated@@326))))
 :pattern ( ($generated@@91 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@166 $generated@@326))
)))
(assert (forall (($generated@@330 T@T) ($generated@@331 T@U) ) (! (= (type ($generated@@329 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@160) ($generated@@230 $generated@@332 $generated@@83)) (and (= ($generated@@277 ($generated@@329 $generated@@2 $generated@@332)) $generated@@332) ($generated@@82 ($generated@@329 $generated@@2 $generated@@332) $generated@@83)))
 :pattern ( ($generated@@230 $generated@@332 $generated@@83))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@160) ($generated@@230 $generated@@333 $generated@@144)) (and (= ($generated@@277 ($generated@@329 $generated@@81 $generated@@333)) $generated@@333) ($generated@@82 ($generated@@329 $generated@@81 $generated@@333) $generated@@144)))
 :pattern ( ($generated@@230 $generated@@333 $generated@@144))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@160) ($generated@@230 $generated@@334 $generated@@226)) (and (= ($generated@@277 ($generated@@329 $generated@@81 $generated@@334)) $generated@@334) ($generated@@82 ($generated@@329 $generated@@81 $generated@@334) $generated@@226)))
 :pattern ( ($generated@@230 $generated@@334 $generated@@226))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@81) (= ($generated@@82 $generated@@335 $generated@@226)  (and ($generated@@82 $generated@@335 $generated@@144) (not (= $generated@@335 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@335 $generated@@226))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@292 (type $generated@@336))))
(let (($generated@@338 ($generated@@291 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@290 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@289 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@91 ($generated@@288 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@288 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@292 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@87 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@292 (type $generated@@343))))
(let (($generated@@345 ($generated@@291 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@290 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@289 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@91 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@310 (type $generated@@347))))
(let (($generated@@349 ($generated@@309 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@308 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@307 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@91 ($generated@@306 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@306 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@87 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(let (($generated@@356 ($generated@@309 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@308 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@307 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@91 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@359) $generated@@69)) (= ($generated@@82 $generated@@358 ($generated@@165 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@358 $generated@@360)))) ($generated@@230 $generated@@360 $generated@@359))
 :pattern ( ($generated@@91 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@82 $generated@@358 ($generated@@165 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@362) $generated@@69)) (= (type $generated@@363) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@361 ($generated@@239 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@160) ($generated@@0 ($generated@@91 $generated@@361 $generated@@364))) ($generated@@256 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@91 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@85 $generated@@361 ($generated@@239 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@366) $generated@@69)) (= (type $generated@@367) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@365 ($generated@@244 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@160) ($generated@@0 ($generated@@91 $generated@@365 $generated@@368))) ($generated@@256 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@91 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@85 $generated@@365 ($generated@@244 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@91 ($generated@@283 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@91 ($generated@@283 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@292 (type $generated@@374))))
(let (($generated@@376 ($generated@@291 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@87 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@378) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@91 ($generated@@288 $generated@@377) ($generated@@158 ($generated@@329 $generated@@151 $generated@@378)))) (= ($generated@@91 ($generated@@372 $generated@@377) ($generated@@158 ($generated@@329 $generated@@151 $generated@@378))) ($generated@@159 ($generated@@329 $generated@@151 $generated@@378))))))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@310 (type $generated@@382))))
(let (($generated@@384 ($generated@@309 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@87 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@386) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@91 ($generated@@306 $generated@@385) ($generated@@158 ($generated@@329 $generated@@151 $generated@@386)))) (= ($generated@@91 ($generated@@380 $generated@@385) ($generated@@158 ($generated@@329 $generated@@151 $generated@@386))) ($generated@@159 ($generated@@329 $generated@@151 $generated@@386))))))
 :pattern ( ($generated@@91 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@291 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@290 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@91 ($generated@@340 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@91 ($generated@@288 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@91 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@91 ($generated@@288 $generated@@387) $generated@@391))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@91 ($generated@@340 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@309 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@308 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@91 ($generated@@351 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@91 ($generated@@306 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@91 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@91 ($generated@@306 $generated@@392) $generated@@396))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@91 ($generated@@351 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@69)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@401) $generated@@69)) (= (type $generated@@402) $generated@@69)) (= (type $generated@@403) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@288 $generated@@400) $generated@@404))) (and ($generated@@256 ($generated@@91 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@256 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@91 ($generated@@288 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@85 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@69)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@409) $generated@@69)) (= (type $generated@@410) $generated@@69)) (= (type $generated@@411) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@306 $generated@@408) $generated@@412))) (and ($generated@@256 ($generated@@91 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@256 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@91 ($generated@@306 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@85 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@87 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@310 (type $generated@@415))))
(let (($generated@@417 ($generated@@309 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@308 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@307 $generated@@417 $generated@@416)) (= ($generated@@306 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@306 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@310 (type $generated@@418))))
(let (($generated@@420 ($generated@@309 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@308 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@307 $generated@@420 $generated@@419)) (= ($generated@@351 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@351 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@160))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@292 (type $generated@@424))))
(let (($generated@@426 ($generated@@291 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@290 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@289 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@160) (= (type $generated@@428) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@371 $generated@@424) ($generated@@277 ($generated@@229 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@310 (type $generated@@429))))
(let (($generated@@431 ($generated@@309 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@308 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@307 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@160) (= (type $generated@@433) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@379 $generated@@429) ($generated@@277 ($generated@@229 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@160) ($generated@@230 $generated@@434 $generated@@46)) (and (= ($generated@@277 ($generated@@329 $generated@@2 $generated@@434)) $generated@@434) ($generated@@82 ($generated@@329 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@160) ($generated@@230 $generated@@435 $generated@@47)) (and (= ($generated@@277 ($generated@@329 $generated@@3 $generated@@435)) $generated@@435) ($generated@@82 ($generated@@329 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@160) ($generated@@230 $generated@@436 $generated@@44)) (and (= ($generated@@277 ($generated@@329 $generated@@4 $generated@@436)) $generated@@436) ($generated@@82 ($generated@@329 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@160) ($generated@@230 $generated@@438 $generated@@45)) (and (= ($generated@@277 ($generated@@329 $generated@@437 $generated@@438)) $generated@@438) ($generated@@82 ($generated@@329 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@69) (= ($generated@@230 ($generated@@277 $generated@@439) $generated@@440) ($generated@@82 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@230 ($generated@@277 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@89 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@87 $generated@@442 $generated@@2)) (<= 0 ($generated@@282 $generated@@441))))
 :pattern ( ($generated@@282 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@271 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@270 $generated@@444)) (<= 0 ($generated@@269 $generated@@443))))
 :pattern ( ($generated@@269 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@69)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@69) (= (type $generated@@448) $generated@@69)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@69)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@69) (= (type $generated@@452) $generated@@69)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@69) (= (type $generated@@454) $generated@@69)) (= ($generated@@77 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@69)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@69) (= (type $generated@@458) $generated@@69)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@69)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@69) (= (type $generated@@462) $generated@@69)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@77 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@160) (= (type $generated@@466) $generated@@160)) (= ($generated@@262 ($generated@@229 $generated@@465 $generated@@466)) $generated@@62))
 :pattern ( ($generated@@229 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@69)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@467 ($generated@@150 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@150 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@150 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@150 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@160) (= (type $generated@@476) $generated@@160)) (= ($generated@@158 ($generated@@229 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@229 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@160) (= (type $generated@@478) $generated@@160)) (= ($generated@@159 ($generated@@229 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@229 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ($generated@@483 Int) ) (! (let (($generated@@484 ($generated@@271 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482 $generated@@483)) $generated@@484))
 :pattern ( ($generated@@480 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@270 $generated@@160)) (= (type $generated@@486) $generated@@69)) (= (type $generated@@487) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@485 ($generated@@479 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@269 $generated@@485))) ($generated@@256 ($generated@@480 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@480 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@85 $generated@@485 ($generated@@479 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@86 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@86 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@69) (= ($generated@@491 ($generated@@239 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@239 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@69) (= ($generated@@77 ($generated@@239 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@69) (= ($generated@@495 ($generated@@244 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@244 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@69) (= ($generated@@77 ($generated@@244 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@69) (= ($generated@@499 ($generated@@165 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@165 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@503 ($generated@@479 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@479 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@77 ($generated@@479 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@329 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@510) $generated@@69)) (= (type $generated@@511) $generated@@69)) (= ($generated@@82 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@230 ($generated@@91 ($generated@@372 $generated@@509) $generated@@512) $generated@@511) ($generated@@230 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@509) $generated@@512))
 :pattern ( ($generated@@91 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@82 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) $generated@@69)) (= ($generated@@82 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@230 ($generated@@91 ($generated@@380 $generated@@513) $generated@@516) $generated@@515) ($generated@@230 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@513) $generated@@516))
 :pattern ( ($generated@@91 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@82 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@160) (= (type $generated@@520) $generated@@160)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@229 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@229 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@160) (= (type $generated@@522) $generated@@160)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@229 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@229 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@160) (= (type $generated@@524) $generated@@69)) (= (type $generated@@525) $generated@@69)) ($generated@@230 $generated@@523 ($generated@@397 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@329 ($generated@@290 $generated@@160 $generated@@160) $generated@@523)) $generated@@523) ($generated@@82 ($generated@@329 ($generated@@290 $generated@@160 $generated@@160) $generated@@523) ($generated@@397 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@230 $generated@@523 ($generated@@397 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@160) (= (type $generated@@527) $generated@@69)) (= (type $generated@@528) $generated@@69)) ($generated@@230 $generated@@526 ($generated@@405 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@329 ($generated@@308 $generated@@160 $generated@@160) $generated@@526)) $generated@@526) ($generated@@82 ($generated@@329 ($generated@@308 $generated@@160 $generated@@160) $generated@@526) ($generated@@405 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@230 $generated@@526 ($generated@@405 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@69) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@160)) ($generated@@230 $generated@@531 ($generated@@150 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@329 $generated@@151 $generated@@531)) $generated@@531) ($generated@@82 ($generated@@329 $generated@@151 $generated@@531) ($generated@@150 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@230 $generated@@531 ($generated@@150 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@91 ($generated@@413 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@91 ($generated@@413 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@74)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@69) (= (type $generated@@537) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@150 $generated@@536 $generated@@537)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@151) (= ($generated@@517 ($generated@@277 $generated@@538)) ($generated@@518 $generated@@538)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@160) ($generated@@230 $generated@@539 ($generated@@86 0))) (and (= ($generated@@277 ($generated@@329 $generated@@2 $generated@@539)) $generated@@539) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@539) ($generated@@86 0))))
 :pattern ( ($generated@@230 $generated@@539 ($generated@@86 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@160) (= (type $generated@@541) $generated@@69)) ($generated@@230 $generated@@540 ($generated@@239 $generated@@541))) (and (= ($generated@@277 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@540)) $generated@@540) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@540) ($generated@@239 $generated@@541))))
 :pattern ( ($generated@@230 $generated@@540 ($generated@@239 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@160) (= (type $generated@@543) $generated@@69)) ($generated@@230 $generated@@542 ($generated@@244 $generated@@543))) (and (= ($generated@@277 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@542)) $generated@@542) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@542) ($generated@@244 $generated@@543))))
 :pattern ( ($generated@@230 $generated@@542 ($generated@@244 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@160) (= (type $generated@@545) $generated@@69)) ($generated@@230 $generated@@544 ($generated@@165 $generated@@545))) (and (= ($generated@@277 ($generated@@329 ($generated@@87 $generated@@160 $generated@@2) $generated@@544)) $generated@@544) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@2) $generated@@544) ($generated@@165 $generated@@545))))
 :pattern ( ($generated@@230 $generated@@544 ($generated@@165 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@160) (= (type $generated@@547) $generated@@69)) ($generated@@230 $generated@@546 ($generated@@479 $generated@@547))) (and (= ($generated@@277 ($generated@@329 ($generated@@270 $generated@@160) $generated@@546)) $generated@@546) ($generated@@82 ($generated@@329 ($generated@@270 $generated@@160) $generated@@546) ($generated@@479 $generated@@547))))
 :pattern ( ($generated@@230 $generated@@546 ($generated@@479 $generated@@547)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@534 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@534 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@226) $generated@@65))
(assert (= ($generated@@534 $generated@@226) $generated@@68))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@548 ($generated@@165 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@548 $generated@@551)))) ($generated@@256 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@91 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@85 $generated@@548 ($generated@@165 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@81) (= ($generated@@82 $generated@@555 $generated@@144)  (or (= $generated@@555 $generated@@145) ($generated@@552 ($generated@@553 $generated@@555)))))
 :pattern ( ($generated@@82 $generated@@555 $generated@@144))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@69)) (= (type $generated@@558) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@255 $generated@@558) (and ($generated@@149 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@69) ($generated@@85 $generated@@556 ($generated@@150 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@85 $generated@@556 ($generated@@150 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@256 ($generated@@158 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@256 ($generated@@158 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@151) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@255 $generated@@562) (and ($generated@@149 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@69) ($generated@@85 $generated@@560 ($generated@@150 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@85 $generated@@560 ($generated@@150 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@256 ($generated@@159 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@256 ($generated@@159 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@160) (= (type $generated@@565) $generated@@160)) (= ($generated@@229 ($generated@@251 $generated@@564) ($generated@@251 $generated@@565)) ($generated@@251 ($generated@@229 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 ($generated@@251 $generated@@564) ($generated@@251 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@249 $generated@@566))) ($generated@@251 ($generated@@277 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@249 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@277 ($generated@@251 $generated@@567)) ($generated@@251 ($generated@@277 $generated@@567)))
 :pattern ( ($generated@@277 ($generated@@251 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@271 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@270 $generated@@569)) (= ($generated@@269 $generated@@568) 0)) (= $generated@@568 ($generated@@268 $generated@@569))))
 :pattern ( ($generated@@269 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@87 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@282 ($generated@@92 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@282 $generated@@570) ($generated ($generated@@91 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@282 ($generated@@92 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@575) $generated@@2)) ($generated@@85 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@85 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@577) $generated@@3)) ($generated@@85 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@85 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@579) $generated@@4)) ($generated@@85 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@85 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@581) $generated@@437)) ($generated@@85 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@85 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@583) $generated@@160)) ($generated@@85 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@85 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@270 $generated@@160)) (= (type $generated@@585) $generated@@69)) (= ($generated@@82 $generated@@584 ($generated@@479 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@269 $generated@@584))) ($generated@@230 ($generated@@480 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@480 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@82 $generated@@584 ($generated@@479 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@270 $generated@@160)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@269 $generated@@588))) (< ($generated@@518 ($generated@@329 $generated@@151 ($generated@@480 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@518 ($generated@@329 $generated@@151 ($generated@@480 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@591) $generated@@69)) (= (type $generated@@592) $generated@@69)) ($generated@@82 $generated@@590 ($generated@@397 $generated@@591 $generated@@592))) (and (and ($generated@@82 ($generated@@288 $generated@@590) ($generated@@239 $generated@@591)) ($generated@@82 ($generated@@340 $generated@@590) ($generated@@239 $generated@@592))) ($generated@@82 ($generated@@371 $generated@@590) ($generated@@239 ($generated@@150 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@397 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@594) $generated@@69)) (= (type $generated@@595) $generated@@69)) ($generated@@82 $generated@@593 ($generated@@405 $generated@@594 $generated@@595))) (and (and ($generated@@82 ($generated@@306 $generated@@593) ($generated@@244 $generated@@594)) ($generated@@82 ($generated@@351 $generated@@593) ($generated@@244 $generated@@595))) ($generated@@82 ($generated@@379 $generated@@593) ($generated@@244 ($generated@@150 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@82 $generated@@593 ($generated@@405 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@82 $generated@@596 $generated@@46))
 :pattern ( ($generated@@82 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@82 $generated@@597 $generated@@47))
 :pattern ( ($generated@@82 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@82 $generated@@598 $generated@@44))
 :pattern ( ($generated@@82 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@437) ($generated@@82 $generated@@599 $generated@@45))
 :pattern ( ($generated@@82 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@160) ($generated@@82 $generated@@600 $generated@@48))
 :pattern ( ($generated@@82 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 (T@U) Bool)
(declare-fun $generated@@607 () Int)
(assert  (and (and (= (type $generated@@601) ($generated@@172 $generated@@81 $generated@@4)) (= (type $generated@@602) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@604) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@608  (=> (= $generated@@601 ($generated@@171 $generated@@145 $generated@@602 $generated@@60 false)) (=> (and (= $generated@@603 ($generated@@80 $generated@@604)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@603 $generated@@605)))))
(let (($generated@@609  (=> (and ($generated@@255 $generated@@602) ($generated@@606 $generated@@602)) (=> (and (and (and (not (= $generated@@604 $generated@@145)) (and ($generated@@82 $generated@@604 $generated@@226) ($generated@@85 $generated@@604 $generated@@226 $generated@@602))) (<= ($generated@@249 0) $generated@@605)) (and (and (<= ($generated@@249 0) $generated@@607) (= 2 $generated@@79)) (and (not (= $generated@@605 9)) (= (ControlFlow 0 3) 2)))) $generated@@608))))
$generated@@609)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (Int) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U Int) Int)
(declare-fun $generated@@417 (T@U Int) Bool)
(declare-fun $generated@@420 (T@T) T@U)
(declare-fun $generated@@444 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@81) (= ($generated@@82 $generated@@172 $generated@@144)  (or (= $generated@@172 $generated@@145) (= ($generated@@170 $generated@@172) $generated@@144))))
 :pattern ( ($generated@@82 $generated@@172 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@72 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@224) ($generated@@71 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@71 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (= (type $generated@@229) $generated@@69))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@81) (= (type $generated@@231) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@230 $generated@@229 $generated@@231) ($generated@@85 $generated@@230 $generated@@144 $generated@@231)))
 :pattern ( ($generated@@85 $generated@@230 $generated@@229 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@151)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@69) (= (type $generated@@237) $generated@@69)) (= (type $generated@@238) $generated@@160)) (= (type $generated@@239) $generated@@160)) (= ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@150 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@150 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@151) (= (type $generated@@241) $generated@@151)) (= ($generated@@157 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@157 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@69)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@245) $generated@@69)) (= ($generated@@82 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@160) ($generated@@0 ($generated@@91 $generated@@244 $generated@@246))) ($generated@@233 $generated@@246 $generated@@245))
 :pattern ( ($generated@@91 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@82 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@69)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@250) $generated@@69)) (= ($generated@@82 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@160) ($generated@@0 ($generated@@91 $generated@@249 $generated@@251))) ($generated@@233 $generated@@251 $generated@@250))
 :pattern ( ($generated@@91 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@82 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@252 $generated@@253) $generated@@253)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@69) (= (type $generated@@261) $generated@@69)) (= (type $generated@@262) $generated@@160)) (= (type $generated@@263) $generated@@160)) (= (type $generated@@264) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@258 $generated@@264)) (= ($generated@@85 ($generated@@232 $generated@@262 $generated@@263) ($generated@@150 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@85 ($generated@@232 $generated@@262 $generated@@263) ($generated@@150 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@73)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@151) (= ($generated@@149 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@151) ($generated@@149 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@160) (= (type $generated@@270) $generated@@160)) (= $generated@@268 ($generated@@232 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@149 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@2) (= ($generated@@82 $generated@@279 $generated@@83) (<= ($generated@@252 0) ($generated $generated@@279))))
 :pattern ( ($generated@@82 $generated@@279 $generated@@83))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@160)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@69) (= (type $generated@@284) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@85 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@87 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@89 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@87 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@91 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@87 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@91 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@91 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@87 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@91 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@91 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@327) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@328) $generated@@81)) (and ($generated@@258 $generated@@327) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@327 $generated@@328) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@328)) $generated@@83 $generated@@327))
 :pattern ( ($generated@@80 $generated@@328) ($generated@@93 ($generated@@91 $generated@@327 $generated@@328) $generated@@60))
))))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@89 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@87 $generated@@330 $generated@@2)) (= ($generated@@166 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@91 $generated@@329 $generated@@331))) (<= ($generated ($generated@@91 $generated@@329 $generated@@331)) ($generated@@285 $generated@@329))))
 :pattern ( ($generated@@91 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@166 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@160) ($generated@@233 $generated@@335 $generated@@83)) (and (= ($generated@@280 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@82 ($generated@@332 $generated@@2 $generated@@335) $generated@@83)))
 :pattern ( ($generated@@233 $generated@@335 $generated@@83))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@160) ($generated@@233 $generated@@336 $generated@@144)) (and (= ($generated@@280 ($generated@@332 $generated@@81 $generated@@336)) $generated@@336) ($generated@@82 ($generated@@332 $generated@@81 $generated@@336) $generated@@144)))
 :pattern ( ($generated@@233 $generated@@336 $generated@@144))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@160) ($generated@@233 $generated@@337 $generated@@229)) (and (= ($generated@@280 ($generated@@332 $generated@@81 $generated@@337)) $generated@@337) ($generated@@82 ($generated@@332 $generated@@81 $generated@@337) $generated@@229)))
 :pattern ( ($generated@@233 $generated@@337 $generated@@229))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@81) (= ($generated@@82 $generated@@338 $generated@@229)  (and ($generated@@82 $generated@@338 $generated@@144) (not (= $generated@@338 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@338 $generated@@229))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(let (($generated@@341 ($generated@@294 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@293 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@292 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@91 ($generated@@291 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@291 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@295 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@87 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@295 (type $generated@@346))))
(let (($generated@@348 ($generated@@294 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@293 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@292 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@91 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@91 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@87 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@91 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@362) $generated@@69)) (= ($generated@@82 $generated@@361 ($generated@@165 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@361 $generated@@363)))) ($generated@@233 $generated@@363 $generated@@362))
 :pattern ( ($generated@@91 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@82 $generated@@361 ($generated@@165 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@365) $generated@@69)) (= (type $generated@@366) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@364 ($generated@@242 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@160) ($generated@@0 ($generated@@91 $generated@@364 $generated@@367))) ($generated@@259 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@91 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@85 $generated@@364 ($generated@@242 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@369) $generated@@69)) (= (type $generated@@370) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@368 ($generated@@247 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@160) ($generated@@0 ($generated@@91 $generated@@368 $generated@@371))) ($generated@@259 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@91 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@85 $generated@@368 ($generated@@247 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@91 ($generated@@286 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@91 ($generated@@286 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@295 (type $generated@@377))))
(let (($generated@@379 ($generated@@294 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@87 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@381) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@91 ($generated@@291 $generated@@380) ($generated@@158 ($generated@@332 $generated@@151 $generated@@381)))) (= ($generated@@91 ($generated@@375 $generated@@380) ($generated@@158 ($generated@@332 $generated@@151 $generated@@381))) ($generated@@159 ($generated@@332 $generated@@151 $generated@@381))))))
 :pattern ( ($generated@@91 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@313 (type $generated@@385))))
(let (($generated@@387 ($generated@@312 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@87 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@389) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@91 ($generated@@309 $generated@@388) ($generated@@158 ($generated@@332 $generated@@151 $generated@@389)))) (= ($generated@@91 ($generated@@383 $generated@@388) ($generated@@158 ($generated@@332 $generated@@151 $generated@@389))) ($generated@@159 ($generated@@332 $generated@@151 $generated@@389))))))
 :pattern ( ($generated@@91 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@294 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@293 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@91 ($generated@@343 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@91 ($generated@@291 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@91 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@91 ($generated@@291 $generated@@390) $generated@@394))
 :pattern ( ($generated@@91 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@91 ($generated@@343 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@312 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@311 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@91 ($generated@@354 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@91 ($generated@@309 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@91 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@91 ($generated@@309 $generated@@395) $generated@@399))
 :pattern ( ($generated@@91 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@91 ($generated@@354 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@69)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@404) $generated@@69)) (= (type $generated@@405) $generated@@69)) (= (type $generated@@406) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@291 $generated@@403) $generated@@407))) (and ($generated@@259 ($generated@@91 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@259 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@91 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@91 ($generated@@291 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@85 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@69)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@309 $generated@@411) $generated@@415))) (and ($generated@@259 ($generated@@91 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@259 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@91 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@91 ($generated@@309 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@85 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@418 T@U) ($generated@@419 Int) ) (!  (=> (and (= (type $generated@@418) $generated@@81) (or ($generated@@417 $generated@@418 $generated@@419) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@418 $generated@@145)) ($generated@@82 $generated@@418 $generated@@229)) (<= ($generated@@252 0) $generated@@419)) (not (= $generated@@419 7)))))) (and (= ($generated@@416 $generated@@418 $generated@@419) ($generated@@80 $generated@@418)) (<= ($generated@@252 0) ($generated@@416 $generated@@418 $generated@@419))))
 :pattern ( ($generated@@416 $generated@@418 $generated@@419))
))))
(assert (forall (($generated@@421 T@T) ) (! (= (type ($generated@@420 $generated@@421)) ($generated@@87 $generated@@421 $generated@@4))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@313 (type $generated@@422))))
(let (($generated@@424 ($generated@@312 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@311 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@310 $generated@@424 $generated@@423)) (= ($generated@@309 $generated@@422) ($generated@@420 $generated@@424))))))
 :pattern ( ($generated@@309 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@313 (type $generated@@425))))
(let (($generated@@427 ($generated@@312 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@311 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@310 $generated@@427 $generated@@426)) (= ($generated@@354 $generated@@425) ($generated@@420 $generated@@426))))))
 :pattern ( ($generated@@354 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@313 (type $generated@@428))))
(let (($generated@@430 ($generated@@312 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@311 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@310 $generated@@430 $generated@@429)) (= ($generated@@382 $generated@@428) ($generated@@420 $generated@@160))))))
 :pattern ( ($generated@@382 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@295 (type $generated@@431))))
(let (($generated@@433 ($generated@@294 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@293 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@292 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@160) (= (type $generated@@435) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@374 $generated@@431) ($generated@@280 ($generated@@232 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@374 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@313 (type $generated@@436))))
(let (($generated@@438 ($generated@@312 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@311 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@310 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@160) (= (type $generated@@440) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@382 $generated@@436) ($generated@@280 ($generated@@232 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@382 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@160) ($generated@@233 $generated@@441 $generated@@46)) (and (= ($generated@@280 ($generated@@332 $generated@@2 $generated@@441)) $generated@@441) ($generated@@82 ($generated@@332 $generated@@2 $generated@@441) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@441 $generated@@46))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@160) ($generated@@233 $generated@@442 $generated@@47)) (and (= ($generated@@280 ($generated@@332 $generated@@3 $generated@@442)) $generated@@442) ($generated@@82 ($generated@@332 $generated@@3 $generated@@442) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@442 $generated@@47))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@160) ($generated@@233 $generated@@443 $generated@@44)) (and (= ($generated@@280 ($generated@@332 $generated@@4 $generated@@443)) $generated@@443) ($generated@@82 ($generated@@332 $generated@@4 $generated@@443) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@443 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@444) 20))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@160) ($generated@@233 $generated@@445 $generated@@45)) (and (= ($generated@@280 ($generated@@332 $generated@@444 $generated@@445)) $generated@@445) ($generated@@82 ($generated@@332 $generated@@444 $generated@@445) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@445 $generated@@45))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@69) (= ($generated@@233 ($generated@@280 $generated@@446) $generated@@447) ($generated@@82 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@233 ($generated@@280 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@89 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@87 $generated@@449 $generated@@2)) (<= 0 ($generated@@285 $generated@@448))))
 :pattern ( ($generated@@285 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@274 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@273 $generated@@451)) (<= 0 ($generated@@272 $generated@@450))))
 :pattern ( ($generated@@272 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@69)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@69) (= (type $generated@@455) $generated@@69)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@69)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@69) (= (type $generated@@459) $generated@@69)) (= ($generated@@456 ($generated@@400 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@69) (= (type $generated@@461) $generated@@69)) (= ($generated@@77 ($generated@@400 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@69)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@408 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@408 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@69) (= (type $generated@@471) $generated@@69)) (= ($generated@@77 ($generated@@408 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@160) (= (type $generated@@473) $generated@@160)) (= ($generated@@265 ($generated@@232 $generated@@472 $generated@@473)) $generated@@62))
 :pattern ( ($generated@@232 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@150 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@150 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@150 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@160) (= (type $generated@@483) $generated@@160)) (= ($generated@@158 ($generated@@232 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@232 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@160) (= (type $generated@@485) $generated@@160)) (= ($generated@@159 ($generated@@232 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@232 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@274 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@273 $generated@@160)) (= (type $generated@@493) $generated@@69)) (= (type $generated@@494) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@272 $generated@@492))) ($generated@@259 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@85 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@86 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@86 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@69)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@69) (= ($generated@@498 ($generated@@242 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@242 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@69) (= ($generated@@77 ($generated@@242 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@502 ($generated@@247 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@247 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@77 ($generated@@247 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@506 ($generated@@165 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@165 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@510 ($generated@@486 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@486 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@77 ($generated@@486 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@332 $generated@@515 ($generated@@280 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@280 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@517) $generated@@69)) (= (type $generated@@518) $generated@@69)) (= ($generated@@82 $generated@@516 ($generated@@400 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@291 $generated@@516) $generated@@519))) (and ($generated@@233 ($generated@@91 ($generated@@375 $generated@@516) $generated@@519) $generated@@518) ($generated@@233 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@91 ($generated@@375 $generated@@516) $generated@@519))
 :pattern ( ($generated@@91 ($generated@@291 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@82 $generated@@516 ($generated@@400 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@521) $generated@@69)) (= (type $generated@@522) $generated@@69)) (= ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@309 $generated@@520) $generated@@523))) (and ($generated@@233 ($generated@@91 ($generated@@383 $generated@@520) $generated@@523) $generated@@522) ($generated@@233 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@91 ($generated@@383 $generated@@520) $generated@@523))
 :pattern ( ($generated@@91 ($generated@@309 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@82 $generated@@520 ($generated@@408 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@160) (= (type $generated@@527) $generated@@160)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@232 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@232 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@160) (= (type $generated@@529) $generated@@160)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@232 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@232 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@160) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) ($generated@@233 $generated@@530 ($generated@@400 $generated@@531 $generated@@532))) (and (= ($generated@@280 ($generated@@332 ($generated@@293 $generated@@160 $generated@@160) $generated@@530)) $generated@@530) ($generated@@82 ($generated@@332 ($generated@@293 $generated@@160 $generated@@160) $generated@@530) ($generated@@400 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@233 $generated@@530 ($generated@@400 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@160) (= (type $generated@@534) $generated@@69)) (= (type $generated@@535) $generated@@69)) ($generated@@233 $generated@@533 ($generated@@408 $generated@@534 $generated@@535))) (and (= ($generated@@280 ($generated@@332 ($generated@@311 $generated@@160 $generated@@160) $generated@@533)) $generated@@533) ($generated@@82 ($generated@@332 ($generated@@311 $generated@@160 $generated@@160) $generated@@533) ($generated@@408 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@233 $generated@@533 ($generated@@408 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@69) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@160)) ($generated@@233 $generated@@538 ($generated@@150 $generated@@536 $generated@@537))) (and (= ($generated@@280 ($generated@@332 $generated@@151 $generated@@538)) $generated@@538) ($generated@@82 ($generated@@332 $generated@@151 $generated@@538) ($generated@@150 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@233 $generated@@538 ($generated@@150 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@91 ($generated@@420 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@91 ($generated@@420 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@74)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@69) (= (type $generated@@544) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@543 $generated@@544)) $generated@@63) (= ($generated@@541 ($generated@@150 $generated@@543 $generated@@544)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@151) (= ($generated@@524 ($generated@@280 $generated@@545)) ($generated@@525 $generated@@545)))
 :pattern ( ($generated@@524 ($generated@@280 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@160) ($generated@@233 $generated@@546 ($generated@@86 0))) (and (= ($generated@@280 ($generated@@332 $generated@@2 $generated@@546)) $generated@@546) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@546) ($generated@@86 0))))
 :pattern ( ($generated@@233 $generated@@546 ($generated@@86 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@160) (= (type $generated@@548) $generated@@69)) ($generated@@233 $generated@@547 ($generated@@242 $generated@@548))) (and (= ($generated@@280 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@547)) $generated@@547) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@547) ($generated@@242 $generated@@548))))
 :pattern ( ($generated@@233 $generated@@547 ($generated@@242 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@160) (= (type $generated@@550) $generated@@69)) ($generated@@233 $generated@@549 ($generated@@247 $generated@@550))) (and (= ($generated@@280 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@549)) $generated@@549) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@549) ($generated@@247 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@549 ($generated@@247 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@160) (= (type $generated@@552) $generated@@69)) ($generated@@233 $generated@@551 ($generated@@165 $generated@@552))) (and (= ($generated@@280 ($generated@@332 ($generated@@87 $generated@@160 $generated@@2) $generated@@551)) $generated@@551) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@2) $generated@@551) ($generated@@165 $generated@@552))))
 :pattern ( ($generated@@233 $generated@@551 ($generated@@165 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@160) (= (type $generated@@554) $generated@@69)) ($generated@@233 $generated@@553 ($generated@@486 $generated@@554))) (and (= ($generated@@280 ($generated@@332 ($generated@@273 $generated@@160) $generated@@553)) $generated@@553) ($generated@@82 ($generated@@332 ($generated@@273 $generated@@160) $generated@@553) ($generated@@486 $generated@@554))))
 :pattern ( ($generated@@233 $generated@@553 ($generated@@486 $generated@@554)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@541 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@541 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@229) $generated@@65))
(assert (= ($generated@@541 $generated@@229) $generated@@68))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@556) $generated@@69)) (= (type $generated@@557) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@555 ($generated@@165 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@555 $generated@@558)))) ($generated@@259 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@91 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@85 $generated@@555 ($generated@@165 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@151) (= (type $generated@@560) $generated@@69)) (= (type $generated@@561) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@258 $generated@@561) (and ($generated@@149 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@69) ($generated@@85 $generated@@559 ($generated@@150 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@85 $generated@@559 ($generated@@150 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@259 ($generated@@158 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@259 ($generated@@158 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@151) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@258 $generated@@565) (and ($generated@@149 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@69) ($generated@@85 $generated@@563 ($generated@@150 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@85 $generated@@563 ($generated@@150 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@259 ($generated@@159 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@259 ($generated@@159 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@160) (= (type $generated@@568) $generated@@160)) (= ($generated@@232 ($generated@@254 $generated@@567) ($generated@@254 $generated@@568)) ($generated@@254 ($generated@@232 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@232 ($generated@@254 $generated@@567) ($generated@@254 $generated@@568)))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@252 $generated@@569))) ($generated@@254 ($generated@@280 ($generated@@8 $generated@@569))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@252 $generated@@569))))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@280 ($generated@@254 $generated@@570)) ($generated@@254 ($generated@@280 $generated@@570)))
 :pattern ( ($generated@@280 ($generated@@254 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@274 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@273 $generated@@572)) (= ($generated@@272 $generated@@571) 0)) (= $generated@@571 ($generated@@271 $generated@@572))))
 :pattern ( ($generated@@272 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@87 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@285 ($generated@@92 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@285 $generated@@573) ($generated ($generated@@91 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@285 ($generated@@92 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@578) $generated@@2)) ($generated@@85 $generated@@578 $generated@@46 $generated@@577))
 :pattern ( ($generated@@85 $generated@@578 $generated@@46 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@580) $generated@@3)) ($generated@@85 $generated@@580 $generated@@47 $generated@@579))
 :pattern ( ($generated@@85 $generated@@580 $generated@@47 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@582) $generated@@4)) ($generated@@85 $generated@@582 $generated@@44 $generated@@581))
 :pattern ( ($generated@@85 $generated@@582 $generated@@44 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@584) $generated@@444)) ($generated@@85 $generated@@584 $generated@@45 $generated@@583))
 :pattern ( ($generated@@85 $generated@@584 $generated@@45 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@586) $generated@@160)) ($generated@@85 $generated@@586 $generated@@48 $generated@@585))
 :pattern ( ($generated@@85 $generated@@586 $generated@@48 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@273 $generated@@160)) (= (type $generated@@588) $generated@@69)) (= ($generated@@82 $generated@@587 ($generated@@486 $generated@@588)) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@272 $generated@@587))) ($generated@@233 ($generated@@487 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@487 $generated@@587 $generated@@589))
))))
 :pattern ( ($generated@@82 $generated@@587 ($generated@@486 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@273 $generated@@160)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@272 $generated@@591))) (< ($generated@@525 ($generated@@332 $generated@@151 ($generated@@487 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@525 ($generated@@332 $generated@@151 ($generated@@487 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@594) $generated@@69)) (= (type $generated@@595) $generated@@69)) ($generated@@82 $generated@@593 ($generated@@400 $generated@@594 $generated@@595))) (and (and ($generated@@82 ($generated@@291 $generated@@593) ($generated@@242 $generated@@594)) ($generated@@82 ($generated@@343 $generated@@593) ($generated@@242 $generated@@595))) ($generated@@82 ($generated@@374 $generated@@593) ($generated@@242 ($generated@@150 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@82 $generated@@593 ($generated@@400 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@597) $generated@@69)) (= (type $generated@@598) $generated@@69)) ($generated@@82 $generated@@596 ($generated@@408 $generated@@597 $generated@@598))) (and (and ($generated@@82 ($generated@@309 $generated@@596) ($generated@@247 $generated@@597)) ($generated@@82 ($generated@@354 $generated@@596) ($generated@@247 $generated@@598))) ($generated@@82 ($generated@@382 $generated@@596) ($generated@@247 ($generated@@150 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@82 $generated@@596 ($generated@@408 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@82 $generated@@599 $generated@@46))
 :pattern ( ($generated@@82 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@82 $generated@@600 $generated@@47))
 :pattern ( ($generated@@82 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@82 $generated@@601 $generated@@44))
 :pattern ( ($generated@@82 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@444) ($generated@@82 $generated@@602 $generated@@45))
 :pattern ( ($generated@@82 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@160) ($generated@@82 $generated@@603 $generated@@48))
 :pattern ( ($generated@@82 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 (T@U) Bool)
(assert  (and (and (= (type $generated@@604) $generated@@81) (= (type $generated@@606) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@607) ($generated@@175 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@609 true))
(let (($generated@@610  (=> (<= ($generated@@252 0) ($generated@@416 $generated@@604 $generated@@605)) (=> (and ($generated@@85 $generated@@604 $generated@@144 $generated@@606) ($generated@@85 ($generated@@8 $generated@@605) $generated@@83 $generated@@606)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@605 7))) (=> (not (= $generated@@605 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@605) (= $generated@@605 $generated@@605))) (=> (or (<= 0 $generated@@605) (= $generated@@605 $generated@@605)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@604 $generated@@604) (= $generated@@605 $generated@@605)) (< $generated@@605 $generated@@605)))))))))))
(let (($generated@@611  (=> (and (= $generated@@607 ($generated@@174 $generated@@145 $generated@@606 $generated@@60 false)) (not (= $generated@@605 7))) (and (=> (= (ControlFlow 0 6) 2) $generated@@610) (=> (= (ControlFlow 0 6) 5) $generated@@609)))))
(let (($generated@@612  (=> (and ($generated@@258 $generated@@606) ($generated@@608 $generated@@606)) (=> (and (and (and (not (= $generated@@604 $generated@@145)) (and ($generated@@82 $generated@@604 $generated@@229) ($generated@@85 $generated@@604 $generated@@229 $generated@@606))) (<= ($generated@@252 0) $generated@@605)) (and (= 2 $generated@@79) (= (ControlFlow 0 7) 6))) $generated@@611))))
$generated@@612)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@255 (T@U Int) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@T) T@U)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@81) (= ($generated@@82 $generated@@172 $generated@@144)  (or (= $generated@@172 $generated@@145) (= ($generated@@170 $generated@@172) $generated@@144))))
 :pattern ( ($generated@@82 $generated@@172 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@72 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@224) ($generated@@71 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@71 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@72 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@81) (= (type $generated@@235) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@236) ($generated@@71 $generated@@4))) (= (type $generated@@238) $generated@@81)) (= (type $generated@@239) ($generated@@71 $generated@@240))) (= ($generated@@0 ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (= (type $generated@@241) $generated@@69))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@81) (= (type $generated@@243) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@242 $generated@@241 $generated@@243) ($generated@@85 $generated@@242 $generated@@144 $generated@@243)))
 :pattern ( ($generated@@85 $generated@@242 $generated@@241 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@151)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@69) (= (type $generated@@249) $generated@@69)) (= (type $generated@@250) $generated@@160)) (= (type $generated@@251) $generated@@160)) (= ($generated@@82 ($generated@@244 $generated@@250 $generated@@251) ($generated@@150 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@82 ($generated@@244 $generated@@250 $generated@@251) ($generated@@150 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@253 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@258 T@U) ($generated@@259 Int) ) (!  (=> (and (= (type $generated@@258) $generated@@81) (or ($generated@@255 ($generated@@253 $generated@@258) ($generated@@254 $generated@@259)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@258 $generated@@145)) ($generated@@82 $generated@@258 $generated@@241)) (<= ($generated@@254 0) $generated@@259)) ($generated@@0 ($generated@@253 ($generated@@11 (not (= $generated@@259 7))))))))) (= ($generated@@252 ($generated@@253 $generated@@258) ($generated@@254 $generated@@259)) ($generated@@254 $generated@@259)))
 :weight 3
 :pattern ( ($generated@@252 ($generated@@253 $generated@@258) ($generated@@254 $generated@@259)))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@151) (= (type $generated@@261) $generated@@151)) (= ($generated@@157 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@157 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@69)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@265) $generated@@69)) (= ($generated@@82 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@160) ($generated@@0 ($generated@@91 $generated@@264 $generated@@266))) ($generated@@245 $generated@@266 $generated@@265))
 :pattern ( ($generated@@91 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@82 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@69)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@270) $generated@@69)) (= ($generated@@82 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@160) ($generated@@0 ($generated@@91 $generated@@269 $generated@@271))) ($generated@@245 $generated@@271 $generated@@270))
 :pattern ( ($generated@@91 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@82 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@272 Int) ) (! (= ($generated@@254 $generated@@272) $generated@@272)
 :pattern ( ($generated@@254 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@253 $generated@@273) $generated@@273)
 :pattern ( ($generated@@253 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@69) (= (type $generated@@277) $generated@@69)) (= (type $generated@@278) $generated@@160)) (= (type $generated@@279) $generated@@160)) (= (type $generated@@280) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@274 $generated@@280)) (= ($generated@@85 ($generated@@244 $generated@@278 $generated@@279) ($generated@@150 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@85 ($generated@@244 $generated@@278 $generated@@279) ($generated@@150 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@73)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@151) (= ($generated@@149 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@151) ($generated@@149 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@160) (= (type $generated@@286) $generated@@160)) (= $generated@@284 ($generated@@244 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@149 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@2) (= ($generated@@82 $generated@@295 $generated@@83) (<= ($generated@@254 0) ($generated $generated@@295))))
 :pattern ( ($generated@@82 $generated@@295 $generated@@83))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@160)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@69) (= (type $generated@@300) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@85 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@87 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@89 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@87 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@91 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@87 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@91 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@91 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@87 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@91 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@91 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@344) $generated@@81)) (and ($generated@@274 $generated@@343) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@343 $generated@@344) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@344)) $generated@@83 $generated@@343))
 :pattern ( ($generated@@80 $generated@@344) ($generated@@93 ($generated@@91 $generated@@343 $generated@@344) $generated@@60))
))))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@345 T@U) ($generated@@346 Int) ) (!  (=> (and (= (type $generated@@345) $generated@@81) (or ($generated@@255 $generated@@345 $generated@@346) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@345 $generated@@145)) ($generated@@82 $generated@@345 $generated@@241)) (<= ($generated@@254 0) $generated@@346)) (not (= $generated@@346 7)))))) (= ($generated@@252 $generated@@345 $generated@@346) $generated@@346))
 :pattern ( ($generated@@252 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@89 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@87 $generated@@348 $generated@@2)) (= ($generated@@166 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@91 $generated@@347 $generated@@349))) (<= ($generated ($generated@@91 $generated@@347 $generated@@349)) ($generated@@301 $generated@@347))))
 :pattern ( ($generated@@91 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@166 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@160) ($generated@@245 $generated@@353 $generated@@83)) (and (= ($generated@@296 ($generated@@350 $generated@@2 $generated@@353)) $generated@@353) ($generated@@82 ($generated@@350 $generated@@2 $generated@@353) $generated@@83)))
 :pattern ( ($generated@@245 $generated@@353 $generated@@83))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@160) ($generated@@245 $generated@@354 $generated@@144)) (and (= ($generated@@296 ($generated@@350 $generated@@81 $generated@@354)) $generated@@354) ($generated@@82 ($generated@@350 $generated@@81 $generated@@354) $generated@@144)))
 :pattern ( ($generated@@245 $generated@@354 $generated@@144))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@160) ($generated@@245 $generated@@355 $generated@@241)) (and (= ($generated@@296 ($generated@@350 $generated@@81 $generated@@355)) $generated@@355) ($generated@@82 ($generated@@350 $generated@@81 $generated@@355) $generated@@241)))
 :pattern ( ($generated@@245 $generated@@355 $generated@@241))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@81) (= ($generated@@82 $generated@@356 $generated@@241)  (and ($generated@@82 $generated@@356 $generated@@144) (not (= $generated@@356 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@356 $generated@@241))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(let (($generated@@359 ($generated@@310 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@309 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@308 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@91 ($generated@@307 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@307 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@311 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@87 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@311 (type $generated@@364))))
(let (($generated@@366 ($generated@@310 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@309 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@308 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@91 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@91 ($generated@@325 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@325 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@329 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@329 (type $generated@@375))))
(let (($generated@@377 ($generated@@328 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@327 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@326 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@91 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@380) $generated@@69)) (= ($generated@@82 $generated@@379 ($generated@@165 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@379 $generated@@381)))) ($generated@@245 $generated@@381 $generated@@380))
 :pattern ( ($generated@@91 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@82 $generated@@379 ($generated@@165 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@383) $generated@@69)) (= (type $generated@@384) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@382 ($generated@@262 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@160) ($generated@@0 ($generated@@91 $generated@@382 $generated@@385))) ($generated@@275 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@91 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@85 $generated@@382 ($generated@@262 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@387) $generated@@69)) (= (type $generated@@388) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@386 ($generated@@267 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@160) ($generated@@0 ($generated@@91 $generated@@386 $generated@@389))) ($generated@@275 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@91 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@85 $generated@@386 ($generated@@267 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@91 ($generated@@302 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@91 ($generated@@302 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@311 (type $generated@@395))))
(let (($generated@@397 ($generated@@310 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@87 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@309 $generated@@160 $generated@@160)) (= (type $generated@@399) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@91 ($generated@@307 $generated@@398) ($generated@@158 ($generated@@350 $generated@@151 $generated@@399)))) (= ($generated@@91 ($generated@@393 $generated@@398) ($generated@@158 ($generated@@350 $generated@@151 $generated@@399))) ($generated@@159 ($generated@@350 $generated@@151 $generated@@399))))))
 :pattern ( ($generated@@91 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@329 (type $generated@@403))))
(let (($generated@@405 ($generated@@328 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@87 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@327 $generated@@160 $generated@@160)) (= (type $generated@@407) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@91 ($generated@@325 $generated@@406) ($generated@@158 ($generated@@350 $generated@@151 $generated@@407)))) (= ($generated@@91 ($generated@@401 $generated@@406) ($generated@@158 ($generated@@350 $generated@@151 $generated@@407))) ($generated@@159 ($generated@@350 $generated@@151 $generated@@407))))))
 :pattern ( ($generated@@91 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@310 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@309 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@91 ($generated@@361 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@91 ($generated@@307 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@91 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@91 ($generated@@307 $generated@@408) $generated@@412))
 :pattern ( ($generated@@91 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@91 ($generated@@361 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@328 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@327 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@91 ($generated@@372 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@91 ($generated@@325 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@91 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@91 ($generated@@325 $generated@@413) $generated@@417))
 :pattern ( ($generated@@91 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@69)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@309 $generated@@160 $generated@@160)) (= (type $generated@@422) $generated@@69)) (= (type $generated@@423) $generated@@69)) (= (type $generated@@424) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@307 $generated@@421) $generated@@425))) (and ($generated@@275 ($generated@@91 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@275 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@91 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@91 ($generated@@307 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@85 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@69)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@327 $generated@@160 $generated@@160)) (= (type $generated@@430) $generated@@69)) (= (type $generated@@431) $generated@@69)) (= (type $generated@@432) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@325 $generated@@429) $generated@@433))) (and ($generated@@275 ($generated@@91 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@275 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@91 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@91 ($generated@@325 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@85 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@434 T@U) ($generated@@435 Int) ) (!  (=> (and (= (type $generated@@434) $generated@@81) (or ($generated@@255 $generated@@434 $generated@@435) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@434 $generated@@145)) ($generated@@82 $generated@@434 $generated@@241)) (<= ($generated@@254 0) $generated@@435)) (not (= $generated@@435 7)))))) (and (= ($generated@@252 $generated@@434 $generated@@435) ($generated@@80 $generated@@434)) (<= ($generated@@254 0) ($generated@@252 $generated@@434 $generated@@435))))
 :pattern ( ($generated@@252 $generated@@434 $generated@@435))
))))
(assert (forall (($generated@@437 T@T) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@87 $generated@@437 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@327 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@326 $generated@@440 $generated@@439)) (= ($generated@@325 $generated@@438) ($generated@@436 $generated@@440))))))
 :pattern ( ($generated@@325 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@329 (type $generated@@441))))
(let (($generated@@443 ($generated@@328 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@327 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@326 $generated@@443 $generated@@442)) (= ($generated@@372 $generated@@441) ($generated@@436 $generated@@442))))))
 :pattern ( ($generated@@372 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@329 (type $generated@@444))))
(let (($generated@@446 ($generated@@328 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@327 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@326 $generated@@446 $generated@@445)) (= ($generated@@400 $generated@@444) ($generated@@436 $generated@@160))))))
 :pattern ( ($generated@@400 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@311 (type $generated@@447))))
(let (($generated@@449 ($generated@@310 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@309 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@308 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@160) (= (type $generated@@451) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@392 $generated@@447) ($generated@@296 ($generated@@244 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@392 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@329 (type $generated@@452))))
(let (($generated@@454 ($generated@@328 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@327 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@326 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@160) (= (type $generated@@456) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@400 $generated@@452) ($generated@@296 ($generated@@244 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@400 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@160) ($generated@@245 $generated@@457 $generated@@46)) (and (= ($generated@@296 ($generated@@350 $generated@@2 $generated@@457)) $generated@@457) ($generated@@82 ($generated@@350 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@160) ($generated@@245 $generated@@458 $generated@@47)) (and (= ($generated@@296 ($generated@@350 $generated@@3 $generated@@458)) $generated@@458) ($generated@@82 ($generated@@350 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@160) ($generated@@245 $generated@@459 $generated@@44)) (and (= ($generated@@296 ($generated@@350 $generated@@4 $generated@@459)) $generated@@459) ($generated@@82 ($generated@@350 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 20))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@160) ($generated@@245 $generated@@461 $generated@@45)) (and (= ($generated@@296 ($generated@@350 $generated@@460 $generated@@461)) $generated@@461) ($generated@@82 ($generated@@350 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@69) (= ($generated@@245 ($generated@@296 $generated@@462) $generated@@463) ($generated@@82 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@245 ($generated@@296 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@89 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@87 $generated@@465 $generated@@2)) (<= 0 ($generated@@301 $generated@@464))))
 :pattern ( ($generated@@301 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@290 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@289 $generated@@467)) (<= 0 ($generated@@288 $generated@@466))))
 :pattern ( ($generated@@288 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@69)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@69) (= (type $generated@@471) $generated@@69)) (= ($generated@@468 ($generated@@418 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@418 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@69)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@472 ($generated@@418 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@418 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@77 ($generated@@418 $generated@@476 $generated@@477)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@69) (= (type $generated@@481) $generated@@69)) (= ($generated@@478 ($generated@@426 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@426 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@426 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@426 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@77 ($generated@@426 $generated@@486 $generated@@487)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@160) (= (type $generated@@489) $generated@@160)) (= ($generated@@281 ($generated@@244 $generated@@488 $generated@@489)) $generated@@62))
 :pattern ( ($generated@@244 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@69)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@69) (= (type $generated@@493) $generated@@69)) (= ($generated@@490 ($generated@@150 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@150 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@69)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@69) (= (type $generated@@497) $generated@@69)) (= ($generated@@494 ($generated@@150 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@150 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@160) (= (type $generated@@499) $generated@@160)) (= ($generated@@158 ($generated@@244 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@244 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@160) (= (type $generated@@501) $generated@@160)) (= ($generated@@159 ($generated@@244 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@244 $generated@@500 $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@290 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@289 $generated@@160)) (= (type $generated@@509) $generated@@69)) (= (type $generated@@510) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@288 $generated@@508))) ($generated@@275 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@85 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@86 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@86 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@514 ($generated@@262 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@262 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@77 ($generated@@262 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@69) (= ($generated@@518 ($generated@@267 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@267 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@77 ($generated@@267 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@522 ($generated@@165 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@165 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@77 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@350 $generated@@531 ($generated@@296 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@296 $generated@@530))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@532 T@U) ($generated@@533 Int) ) (!  (=> (and (= (type $generated@@532) $generated@@81) (or ($generated@@255 $generated@@532 ($generated@@254 $generated@@533)) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@532 $generated@@145)) ($generated@@82 $generated@@532 $generated@@241)) (<= ($generated@@254 0) $generated@@533)) ($generated@@0 ($generated@@253 ($generated@@11 (not (= $generated@@533 7))))))))) (= ($generated@@252 $generated@@532 ($generated@@254 $generated@@533)) ($generated@@254 $generated@@533)))
 :weight 3
 :pattern ( ($generated@@252 $generated@@532 ($generated@@254 $generated@@533)))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@309 $generated@@160 $generated@@160)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@82 $generated@@534 ($generated@@418 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@307 $generated@@534) $generated@@537))) (and ($generated@@245 ($generated@@91 ($generated@@393 $generated@@534) $generated@@537) $generated@@536) ($generated@@245 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@91 ($generated@@393 $generated@@534) $generated@@537))
 :pattern ( ($generated@@91 ($generated@@307 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@82 $generated@@534 ($generated@@418 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@327 $generated@@160 $generated@@160)) (= (type $generated@@539) $generated@@69)) (= (type $generated@@540) $generated@@69)) (= ($generated@@82 $generated@@538 ($generated@@426 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@325 $generated@@538) $generated@@541))) (and ($generated@@245 ($generated@@91 ($generated@@401 $generated@@538) $generated@@541) $generated@@540) ($generated@@245 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@91 ($generated@@401 $generated@@538) $generated@@541))
 :pattern ( ($generated@@91 ($generated@@325 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@82 $generated@@538 ($generated@@426 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@160) (= (type $generated@@545) $generated@@160)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@244 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@244 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@160) (= (type $generated@@547) $generated@@160)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@244 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@244 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@160) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@69)) ($generated@@245 $generated@@548 ($generated@@418 $generated@@549 $generated@@550))) (and (= ($generated@@296 ($generated@@350 ($generated@@309 $generated@@160 $generated@@160) $generated@@548)) $generated@@548) ($generated@@82 ($generated@@350 ($generated@@309 $generated@@160 $generated@@160) $generated@@548) ($generated@@418 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@245 $generated@@548 ($generated@@418 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@160) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@69)) ($generated@@245 $generated@@551 ($generated@@426 $generated@@552 $generated@@553))) (and (= ($generated@@296 ($generated@@350 ($generated@@327 $generated@@160 $generated@@160) $generated@@551)) $generated@@551) ($generated@@82 ($generated@@350 ($generated@@327 $generated@@160 $generated@@160) $generated@@551) ($generated@@426 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@245 $generated@@551 ($generated@@426 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@69) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@160)) ($generated@@245 $generated@@556 ($generated@@150 $generated@@554 $generated@@555))) (and (= ($generated@@296 ($generated@@350 $generated@@151 $generated@@556)) $generated@@556) ($generated@@82 ($generated@@350 $generated@@151 $generated@@556) ($generated@@150 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@245 $generated@@556 ($generated@@150 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@91 ($generated@@436 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@91 ($generated@@436 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@74)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@69) (= (type $generated@@562) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@561 $generated@@562)) $generated@@63) (= ($generated@@559 ($generated@@150 $generated@@561 $generated@@562)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@151) (= ($generated@@542 ($generated@@296 $generated@@563)) ($generated@@543 $generated@@563)))
 :pattern ( ($generated@@542 ($generated@@296 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@160) ($generated@@245 $generated@@564 ($generated@@86 0))) (and (= ($generated@@296 ($generated@@350 $generated@@2 $generated@@564)) $generated@@564) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@564) ($generated@@86 0))))
 :pattern ( ($generated@@245 $generated@@564 ($generated@@86 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@160) (= (type $generated@@566) $generated@@69)) ($generated@@245 $generated@@565 ($generated@@262 $generated@@566))) (and (= ($generated@@296 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@565)) $generated@@565) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@565) ($generated@@262 $generated@@566))))
 :pattern ( ($generated@@245 $generated@@565 ($generated@@262 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@160) (= (type $generated@@568) $generated@@69)) ($generated@@245 $generated@@567 ($generated@@267 $generated@@568))) (and (= ($generated@@296 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@567)) $generated@@567) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@160 $generated@@4) $generated@@567) ($generated@@267 $generated@@568))))
 :pattern ( ($generated@@245 $generated@@567 ($generated@@267 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@160) (= (type $generated@@570) $generated@@69)) ($generated@@245 $generated@@569 ($generated@@165 $generated@@570))) (and (= ($generated@@296 ($generated@@350 ($generated@@87 $generated@@160 $generated@@2) $generated@@569)) $generated@@569) ($generated@@82 ($generated@@350 ($generated@@87 $generated@@160 $generated@@2) $generated@@569) ($generated@@165 $generated@@570))))
 :pattern ( ($generated@@245 $generated@@569 ($generated@@165 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@160) (= (type $generated@@572) $generated@@69)) ($generated@@245 $generated@@571 ($generated@@502 $generated@@572))) (and (= ($generated@@296 ($generated@@350 ($generated@@289 $generated@@160) $generated@@571)) $generated@@571) ($generated@@82 ($generated@@350 ($generated@@289 $generated@@160) $generated@@571) ($generated@@502 $generated@@572))))
 :pattern ( ($generated@@245 $generated@@571 ($generated@@502 $generated@@572)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@559 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@559 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@241) $generated@@65))
(assert (= ($generated@@559 $generated@@241) $generated@@68))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@574) $generated@@69)) (= (type $generated@@575) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@573 ($generated@@165 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@573 $generated@@576)))) ($generated@@275 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@91 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@85 $generated@@573 ($generated@@165 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@151) (= (type $generated@@578) $generated@@69)) (= (type $generated@@579) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@274 $generated@@579) (and ($generated@@149 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@69) ($generated@@85 $generated@@577 ($generated@@150 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@85 $generated@@577 ($generated@@150 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@275 ($generated@@158 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@275 ($generated@@158 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@151) (= (type $generated@@582) $generated@@69)) (= (type $generated@@583) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@274 $generated@@583) (and ($generated@@149 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@69) ($generated@@85 $generated@@581 ($generated@@150 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@85 $generated@@581 ($generated@@150 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@275 ($generated@@159 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@275 ($generated@@159 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@160) (= (type $generated@@586) $generated@@160)) (= ($generated@@244 ($generated@@253 $generated@@585) ($generated@@253 $generated@@586)) ($generated@@253 ($generated@@244 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@244 ($generated@@253 $generated@@585) ($generated@@253 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@254 $generated@@587))) ($generated@@253 ($generated@@296 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@254 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@296 ($generated@@253 $generated@@588)) ($generated@@253 ($generated@@296 $generated@@588)))
 :pattern ( ($generated@@296 ($generated@@253 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@290 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@289 $generated@@590)) (= ($generated@@288 $generated@@589) 0)) (= $generated@@589 ($generated@@287 $generated@@590))))
 :pattern ( ($generated@@288 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@87 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@301 ($generated@@92 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@301 $generated@@591) ($generated ($generated@@91 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@301 ($generated@@92 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@596) $generated@@2)) ($generated@@85 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@85 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@598) $generated@@3)) ($generated@@85 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@85 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@600) $generated@@4)) ($generated@@85 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@85 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@602) $generated@@460)) ($generated@@85 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@85 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@604) $generated@@160)) ($generated@@85 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@85 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@289 $generated@@160)) (= (type $generated@@606) $generated@@69)) (= ($generated@@82 $generated@@605 ($generated@@502 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@288 $generated@@605))) ($generated@@245 ($generated@@503 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@503 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@82 $generated@@605 ($generated@@502 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@289 $generated@@160)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@288 $generated@@609))) (< ($generated@@543 ($generated@@350 $generated@@151 ($generated@@503 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@543 ($generated@@350 $generated@@151 ($generated@@503 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@309 $generated@@160 $generated@@160)) (= (type $generated@@612) $generated@@69)) (= (type $generated@@613) $generated@@69)) ($generated@@82 $generated@@611 ($generated@@418 $generated@@612 $generated@@613))) (and (and ($generated@@82 ($generated@@307 $generated@@611) ($generated@@262 $generated@@612)) ($generated@@82 ($generated@@361 $generated@@611) ($generated@@262 $generated@@613))) ($generated@@82 ($generated@@392 $generated@@611) ($generated@@262 ($generated@@150 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@82 $generated@@611 ($generated@@418 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@327 $generated@@160 $generated@@160)) (= (type $generated@@615) $generated@@69)) (= (type $generated@@616) $generated@@69)) ($generated@@82 $generated@@614 ($generated@@426 $generated@@615 $generated@@616))) (and (and ($generated@@82 ($generated@@325 $generated@@614) ($generated@@267 $generated@@615)) ($generated@@82 ($generated@@372 $generated@@614) ($generated@@267 $generated@@616))) ($generated@@82 ($generated@@400 $generated@@614) ($generated@@267 ($generated@@150 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@82 $generated@@614 ($generated@@426 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@82 $generated@@617 $generated@@46))
 :pattern ( ($generated@@82 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@82 $generated@@618 $generated@@47))
 :pattern ( ($generated@@82 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@82 $generated@@619 $generated@@44))
 :pattern ( ($generated@@82 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@460) ($generated@@82 $generated@@620 $generated@@45))
 :pattern ( ($generated@@82 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@160) ($generated@@82 $generated@@621 $generated@@48))
 :pattern ( ($generated@@82 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@622) $generated@@81) (= (type $generated@@625) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@624) ($generated@@175 $generated@@81 $generated@@4))) (= (type $generated@@626) ($generated@@175 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@628  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@252 $generated@@622 $generated@@623) ($generated@@80 $generated@@622)))))
(let (($generated@@629  (=> (and (and (= $generated@@624 ($generated@@229 $generated@@145 $generated@@625 $generated@@60 false)) (= ($generated@@252 $generated@@622 $generated@@623) $generated@@623)) (and ($generated@@82 ($generated@@8 ($generated@@252 $generated@@622 $generated@@623)) $generated@@83) (= (ControlFlow 0 7) 6))) $generated@@628)))
(let (($generated@@630  (=> (<= ($generated@@254 0) ($generated@@252 $generated@@622 $generated@@623)) (=> (and ($generated@@85 $generated@@622 $generated@@144 $generated@@625) ($generated@@85 ($generated@@8 $generated@@623) $generated@@83 $generated@@625)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@623 7))) (=> (not (= $generated@@623 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@623) (= $generated@@623 $generated@@623))) (=> (or (<= 0 $generated@@623) (= $generated@@623 $generated@@623)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@622 $generated@@622) (= $generated@@623 $generated@@623)) (< $generated@@623 $generated@@623)))))))))))
(let (($generated@@631  (=> (and (= $generated@@626 ($generated@@174 $generated@@145 $generated@@625 $generated@@60 false)) (not (= $generated@@623 7))) (and (=> (= (ControlFlow 0 8) 2) $generated@@630) (=> (= (ControlFlow 0 8) 7) $generated@@629)))))
(let (($generated@@632  (=> (and ($generated@@274 $generated@@625) ($generated@@627 $generated@@625)) (=> (and (and (and (not (= $generated@@622 $generated@@145)) (and ($generated@@82 $generated@@622 $generated@@241) ($generated@@85 $generated@@622 $generated@@241 $generated@@625))) (<= ($generated@@254 0) $generated@@623)) (and (= 2 $generated@@79) (= (ControlFlow 0 9) 8))) $generated@@631))))
$generated@@632))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (Int) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@81) (= ($generated@@82 $generated@@172 $generated@@144)  (or (= $generated@@172 $generated@@145) (= ($generated@@170 $generated@@172) $generated@@144))))
 :pattern ( ($generated@@82 $generated@@172 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@72 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@224) ($generated@@71 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@71 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (= (type $generated@@229) $generated@@69))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@81) (= (type $generated@@231) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@230 $generated@@229 $generated@@231) ($generated@@85 $generated@@230 $generated@@144 $generated@@231)))
 :pattern ( ($generated@@85 $generated@@230 $generated@@229 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@151)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@69) (= (type $generated@@237) $generated@@69)) (= (type $generated@@238) $generated@@160)) (= (type $generated@@239) $generated@@160)) (= ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@150 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@82 ($generated@@232 $generated@@238 $generated@@239) ($generated@@150 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@151) (= (type $generated@@241) $generated@@151)) (= ($generated@@157 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@157 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@69)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@245) $generated@@69)) (= ($generated@@82 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@160) ($generated@@0 ($generated@@91 $generated@@244 $generated@@246))) ($generated@@233 $generated@@246 $generated@@245))
 :pattern ( ($generated@@91 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@82 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@69)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@250) $generated@@69)) (= ($generated@@82 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@160) ($generated@@0 ($generated@@91 $generated@@249 $generated@@251))) ($generated@@233 $generated@@251 $generated@@250))
 :pattern ( ($generated@@91 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@82 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@252 $generated@@253) $generated@@253)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@69) (= (type $generated@@261) $generated@@69)) (= (type $generated@@262) $generated@@160)) (= (type $generated@@263) $generated@@160)) (= (type $generated@@264) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@258 $generated@@264)) (= ($generated@@85 ($generated@@232 $generated@@262 $generated@@263) ($generated@@150 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@85 ($generated@@232 $generated@@262 $generated@@263) ($generated@@150 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@73)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@151) (= ($generated@@149 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@151) ($generated@@149 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@160) (= (type $generated@@270) $generated@@160)) (= $generated@@268 ($generated@@232 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@149 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@2) (= ($generated@@82 $generated@@279 $generated@@83) (<= ($generated@@252 0) ($generated $generated@@279))))
 :pattern ( ($generated@@82 $generated@@279 $generated@@83))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@160)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@69) (= (type $generated@@284) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@85 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@87 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@89 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@87 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@91 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@87 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@91 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@91 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@87 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@91 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@91 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@327) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@328) $generated@@81)) (and ($generated@@258 $generated@@327) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@327 $generated@@328) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@328)) $generated@@83 $generated@@327))
 :pattern ( ($generated@@80 $generated@@328) ($generated@@93 ($generated@@91 $generated@@327 $generated@@328) $generated@@60))
))))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@89 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@87 $generated@@330 $generated@@2)) (= ($generated@@166 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@91 $generated@@329 $generated@@331))) (<= ($generated ($generated@@91 $generated@@329 $generated@@331)) ($generated@@285 $generated@@329))))
 :pattern ( ($generated@@91 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@166 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@160) ($generated@@233 $generated@@335 $generated@@83)) (and (= ($generated@@280 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@82 ($generated@@332 $generated@@2 $generated@@335) $generated@@83)))
 :pattern ( ($generated@@233 $generated@@335 $generated@@83))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@160) ($generated@@233 $generated@@336 $generated@@144)) (and (= ($generated@@280 ($generated@@332 $generated@@81 $generated@@336)) $generated@@336) ($generated@@82 ($generated@@332 $generated@@81 $generated@@336) $generated@@144)))
 :pattern ( ($generated@@233 $generated@@336 $generated@@144))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@160) ($generated@@233 $generated@@337 $generated@@229)) (and (= ($generated@@280 ($generated@@332 $generated@@81 $generated@@337)) $generated@@337) ($generated@@82 ($generated@@332 $generated@@81 $generated@@337) $generated@@229)))
 :pattern ( ($generated@@233 $generated@@337 $generated@@229))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@81) (= ($generated@@82 $generated@@338 $generated@@229)  (and ($generated@@82 $generated@@338 $generated@@144) (not (= $generated@@338 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@338 $generated@@229))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(let (($generated@@341 ($generated@@294 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@293 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@292 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@91 ($generated@@291 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@291 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@295 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@87 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@295 (type $generated@@346))))
(let (($generated@@348 ($generated@@294 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@293 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@292 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@91 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@91 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@87 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@91 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@362) $generated@@69)) (= ($generated@@82 $generated@@361 ($generated@@165 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@361 $generated@@363)))) ($generated@@233 $generated@@363 $generated@@362))
 :pattern ( ($generated@@91 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@82 $generated@@361 ($generated@@165 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@365) $generated@@69)) (= (type $generated@@366) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@364 ($generated@@242 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@160) ($generated@@0 ($generated@@91 $generated@@364 $generated@@367))) ($generated@@259 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@91 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@85 $generated@@364 ($generated@@242 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@369) $generated@@69)) (= (type $generated@@370) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@368 ($generated@@247 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@160) ($generated@@0 ($generated@@91 $generated@@368 $generated@@371))) ($generated@@259 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@91 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@85 $generated@@368 ($generated@@247 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@91 ($generated@@286 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@91 ($generated@@286 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@295 (type $generated@@377))))
(let (($generated@@379 ($generated@@294 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@87 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@381) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@91 ($generated@@291 $generated@@380) ($generated@@158 ($generated@@332 $generated@@151 $generated@@381)))) (= ($generated@@91 ($generated@@375 $generated@@380) ($generated@@158 ($generated@@332 $generated@@151 $generated@@381))) ($generated@@159 ($generated@@332 $generated@@151 $generated@@381))))))
 :pattern ( ($generated@@91 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@313 (type $generated@@385))))
(let (($generated@@387 ($generated@@312 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@87 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@389) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@91 ($generated@@309 $generated@@388) ($generated@@158 ($generated@@332 $generated@@151 $generated@@389)))) (= ($generated@@91 ($generated@@383 $generated@@388) ($generated@@158 ($generated@@332 $generated@@151 $generated@@389))) ($generated@@159 ($generated@@332 $generated@@151 $generated@@389))))))
 :pattern ( ($generated@@91 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@294 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@293 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@91 ($generated@@343 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@91 ($generated@@291 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@91 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@91 ($generated@@291 $generated@@390) $generated@@394))
 :pattern ( ($generated@@91 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@91 ($generated@@343 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@312 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@311 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@91 ($generated@@354 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@91 ($generated@@309 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@91 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@91 ($generated@@309 $generated@@395) $generated@@399))
 :pattern ( ($generated@@91 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@91 ($generated@@354 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@69)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@404) $generated@@69)) (= (type $generated@@405) $generated@@69)) (= (type $generated@@406) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@291 $generated@@403) $generated@@407))) (and ($generated@@259 ($generated@@91 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@259 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@91 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@91 ($generated@@291 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@85 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@69)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@412) $generated@@69)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@309 $generated@@411) $generated@@415))) (and ($generated@@259 ($generated@@91 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@259 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@91 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@91 ($generated@@309 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@85 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@87 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@309 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@309 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@313 (type $generated@@421))))
(let (($generated@@423 ($generated@@312 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@311 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@310 $generated@@423 $generated@@422)) (= ($generated@@354 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@354 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@313 (type $generated@@424))))
(let (($generated@@426 ($generated@@312 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@311 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@310 $generated@@426 $generated@@425)) (= ($generated@@382 $generated@@424) ($generated@@416 $generated@@160))))))
 :pattern ( ($generated@@382 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@295 (type $generated@@427))))
(let (($generated@@429 ($generated@@294 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@293 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@292 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@160) (= (type $generated@@431) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@374 $generated@@427) ($generated@@280 ($generated@@232 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@374 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@313 (type $generated@@432))))
(let (($generated@@434 ($generated@@312 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@311 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@310 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@160) (= (type $generated@@436) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@382 $generated@@432) ($generated@@280 ($generated@@232 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@382 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@160) ($generated@@233 $generated@@437 $generated@@46)) (and (= ($generated@@280 ($generated@@332 $generated@@2 $generated@@437)) $generated@@437) ($generated@@82 ($generated@@332 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@160) ($generated@@233 $generated@@438 $generated@@47)) (and (= ($generated@@280 ($generated@@332 $generated@@3 $generated@@438)) $generated@@438) ($generated@@82 ($generated@@332 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@160) ($generated@@233 $generated@@439 $generated@@44)) (and (= ($generated@@280 ($generated@@332 $generated@@4 $generated@@439)) $generated@@439) ($generated@@82 ($generated@@332 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@160) ($generated@@233 $generated@@441 $generated@@45)) (and (= ($generated@@280 ($generated@@332 $generated@@440 $generated@@441)) $generated@@441) ($generated@@82 ($generated@@332 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@69) (= ($generated@@233 ($generated@@280 $generated@@442) $generated@@443) ($generated@@82 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@233 ($generated@@280 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@89 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@87 $generated@@445 $generated@@2)) (<= 0 ($generated@@285 $generated@@444))))
 :pattern ( ($generated@@285 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@274 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@273 $generated@@447)) (<= 0 ($generated@@272 $generated@@446))))
 :pattern ( ($generated@@272 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@69)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@69) (= (type $generated@@451) $generated@@69)) (= ($generated@@448 ($generated@@400 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@400 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@69)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@69) (= (type $generated@@455) $generated@@69)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@69) (= (type $generated@@457) $generated@@69)) (= ($generated@@77 ($generated@@400 $generated@@456 $generated@@457)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@69)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@69) (= (type $generated@@461) $generated@@69)) (= ($generated@@458 ($generated@@408 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@408 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@69)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@69) (= (type $generated@@465) $generated@@69)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@69) (= (type $generated@@467) $generated@@69)) (= ($generated@@77 ($generated@@408 $generated@@466 $generated@@467)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@160) (= (type $generated@@469) $generated@@160)) (= ($generated@@265 ($generated@@232 $generated@@468 $generated@@469)) $generated@@62))
 :pattern ( ($generated@@232 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@150 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@150 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@150 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@150 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@160) (= (type $generated@@479) $generated@@160)) (= ($generated@@158 ($generated@@232 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@232 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@160) (= (type $generated@@481) $generated@@160)) (= ($generated@@159 ($generated@@232 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@232 $generated@@480 $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@274 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@273 $generated@@160)) (= (type $generated@@489) $generated@@69)) (= (type $generated@@490) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@272 $generated@@488))) ($generated@@259 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@85 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@86 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@86 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@69)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@69) (= ($generated@@494 ($generated@@242 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@242 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@69) (= ($generated@@77 ($generated@@242 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@69)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@69) (= ($generated@@498 ($generated@@247 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@247 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@69) (= ($generated@@77 ($generated@@247 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@502 ($generated@@165 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@165 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@69)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@77 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@332 $generated@@511 ($generated@@280 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@280 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@513) $generated@@69)) (= (type $generated@@514) $generated@@69)) (= ($generated@@82 $generated@@512 ($generated@@400 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@291 $generated@@512) $generated@@515))) (and ($generated@@233 ($generated@@91 ($generated@@375 $generated@@512) $generated@@515) $generated@@514) ($generated@@233 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@91 ($generated@@375 $generated@@512) $generated@@515))
 :pattern ( ($generated@@91 ($generated@@291 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@82 $generated@@512 ($generated@@400 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@517) $generated@@69)) (= (type $generated@@518) $generated@@69)) (= ($generated@@82 $generated@@516 ($generated@@408 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@309 $generated@@516) $generated@@519))) (and ($generated@@233 ($generated@@91 ($generated@@383 $generated@@516) $generated@@519) $generated@@518) ($generated@@233 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@91 ($generated@@383 $generated@@516) $generated@@519))
 :pattern ( ($generated@@91 ($generated@@309 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@82 $generated@@516 ($generated@@408 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@160) (= (type $generated@@523) $generated@@160)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@232 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@232 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@160) (= (type $generated@@525) $generated@@160)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@232 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@232 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@160) (= (type $generated@@527) $generated@@69)) (= (type $generated@@528) $generated@@69)) ($generated@@233 $generated@@526 ($generated@@400 $generated@@527 $generated@@528))) (and (= ($generated@@280 ($generated@@332 ($generated@@293 $generated@@160 $generated@@160) $generated@@526)) $generated@@526) ($generated@@82 ($generated@@332 ($generated@@293 $generated@@160 $generated@@160) $generated@@526) ($generated@@400 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@233 $generated@@526 ($generated@@400 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@160) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@69)) ($generated@@233 $generated@@529 ($generated@@408 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@332 ($generated@@311 $generated@@160 $generated@@160) $generated@@529)) $generated@@529) ($generated@@82 ($generated@@332 ($generated@@311 $generated@@160 $generated@@160) $generated@@529) ($generated@@408 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@233 $generated@@529 ($generated@@408 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@69) (= (type $generated@@533) $generated@@69)) (= (type $generated@@534) $generated@@160)) ($generated@@233 $generated@@534 ($generated@@150 $generated@@532 $generated@@533))) (and (= ($generated@@280 ($generated@@332 $generated@@151 $generated@@534)) $generated@@534) ($generated@@82 ($generated@@332 $generated@@151 $generated@@534) ($generated@@150 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@233 $generated@@534 ($generated@@150 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@91 ($generated@@416 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@91 ($generated@@416 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@74)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@69) (= (type $generated@@540) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@539 $generated@@540)) $generated@@63) (= ($generated@@537 ($generated@@150 $generated@@539 $generated@@540)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@151) (= ($generated@@520 ($generated@@280 $generated@@541)) ($generated@@521 $generated@@541)))
 :pattern ( ($generated@@520 ($generated@@280 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@160) ($generated@@233 $generated@@542 ($generated@@86 0))) (and (= ($generated@@280 ($generated@@332 $generated@@2 $generated@@542)) $generated@@542) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@542) ($generated@@86 0))))
 :pattern ( ($generated@@233 $generated@@542 ($generated@@86 0)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@160) (= (type $generated@@544) $generated@@69)) ($generated@@233 $generated@@543 ($generated@@242 $generated@@544))) (and (= ($generated@@280 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@543)) $generated@@543) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@543) ($generated@@242 $generated@@544))))
 :pattern ( ($generated@@233 $generated@@543 ($generated@@242 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@160) (= (type $generated@@546) $generated@@69)) ($generated@@233 $generated@@545 ($generated@@247 $generated@@546))) (and (= ($generated@@280 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@545)) $generated@@545) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@4) $generated@@545) ($generated@@247 $generated@@546))))
 :pattern ( ($generated@@233 $generated@@545 ($generated@@247 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@160) (= (type $generated@@548) $generated@@69)) ($generated@@233 $generated@@547 ($generated@@165 $generated@@548))) (and (= ($generated@@280 ($generated@@332 ($generated@@87 $generated@@160 $generated@@2) $generated@@547)) $generated@@547) ($generated@@82 ($generated@@332 ($generated@@87 $generated@@160 $generated@@2) $generated@@547) ($generated@@165 $generated@@548))))
 :pattern ( ($generated@@233 $generated@@547 ($generated@@165 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@160) (= (type $generated@@550) $generated@@69)) ($generated@@233 $generated@@549 ($generated@@482 $generated@@550))) (and (= ($generated@@280 ($generated@@332 ($generated@@273 $generated@@160) $generated@@549)) $generated@@549) ($generated@@82 ($generated@@332 ($generated@@273 $generated@@160) $generated@@549) ($generated@@482 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@549 ($generated@@482 $generated@@550)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@537 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@537 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@229) $generated@@65))
(assert (= ($generated@@537 $generated@@229) $generated@@68))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@551 ($generated@@165 $generated@@552) $generated@@553) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@551 $generated@@554)))) ($generated@@259 $generated@@554 $generated@@552 $generated@@553))
 :pattern ( ($generated@@91 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@85 $generated@@551 ($generated@@165 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@151) (= (type $generated@@556) $generated@@69)) (= (type $generated@@557) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@258 $generated@@557) (and ($generated@@149 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@69) ($generated@@85 $generated@@555 ($generated@@150 $generated@@556 $generated@@558) $generated@@557))
 :pattern ( ($generated@@85 $generated@@555 ($generated@@150 $generated@@556 $generated@@558) $generated@@557))
))))) ($generated@@259 ($generated@@158 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@259 ($generated@@158 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@151) (= (type $generated@@560) $generated@@69)) (= (type $generated@@561) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@258 $generated@@561) (and ($generated@@149 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@69) ($generated@@85 $generated@@559 ($generated@@150 $generated@@562 $generated@@560) $generated@@561))
 :pattern ( ($generated@@85 $generated@@559 ($generated@@150 $generated@@562 $generated@@560) $generated@@561))
))))) ($generated@@259 ($generated@@159 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@259 ($generated@@159 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@160) (= (type $generated@@564) $generated@@160)) (= ($generated@@232 ($generated@@254 $generated@@563) ($generated@@254 $generated@@564)) ($generated@@254 ($generated@@232 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@232 ($generated@@254 $generated@@563) ($generated@@254 $generated@@564)))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@252 $generated@@565))) ($generated@@254 ($generated@@280 ($generated@@8 $generated@@565))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@252 $generated@@565))))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@280 ($generated@@254 $generated@@566)) ($generated@@254 ($generated@@280 $generated@@566)))
 :pattern ( ($generated@@280 ($generated@@254 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@274 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@273 $generated@@568)) (= ($generated@@272 $generated@@567) 0)) (= $generated@@567 ($generated@@271 $generated@@568))))
 :pattern ( ($generated@@272 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@87 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@285 ($generated@@92 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@285 $generated@@569) ($generated ($generated@@91 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@285 ($generated@@92 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@574) $generated@@2)) ($generated@@85 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@85 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@576) $generated@@3)) ($generated@@85 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@85 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@578) $generated@@4)) ($generated@@85 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@85 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@580) $generated@@440)) ($generated@@85 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@85 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@582) $generated@@160)) ($generated@@85 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@85 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@273 $generated@@160)) (= (type $generated@@584) $generated@@69)) (= ($generated@@82 $generated@@583 ($generated@@482 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@272 $generated@@583))) ($generated@@233 ($generated@@483 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@483 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@82 $generated@@583 ($generated@@482 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@273 $generated@@160)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@272 $generated@@587))) (< ($generated@@521 ($generated@@332 $generated@@151 ($generated@@483 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@521 ($generated@@332 $generated@@151 ($generated@@483 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@293 $generated@@160 $generated@@160)) (= (type $generated@@590) $generated@@69)) (= (type $generated@@591) $generated@@69)) ($generated@@82 $generated@@589 ($generated@@400 $generated@@590 $generated@@591))) (and (and ($generated@@82 ($generated@@291 $generated@@589) ($generated@@242 $generated@@590)) ($generated@@82 ($generated@@343 $generated@@589) ($generated@@242 $generated@@591))) ($generated@@82 ($generated@@374 $generated@@589) ($generated@@242 ($generated@@150 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@82 $generated@@589 ($generated@@400 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@311 $generated@@160 $generated@@160)) (= (type $generated@@593) $generated@@69)) (= (type $generated@@594) $generated@@69)) ($generated@@82 $generated@@592 ($generated@@408 $generated@@593 $generated@@594))) (and (and ($generated@@82 ($generated@@309 $generated@@592) ($generated@@247 $generated@@593)) ($generated@@82 ($generated@@354 $generated@@592) ($generated@@247 $generated@@594))) ($generated@@82 ($generated@@382 $generated@@592) ($generated@@247 ($generated@@150 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@82 $generated@@592 ($generated@@408 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@82 $generated@@595 $generated@@46))
 :pattern ( ($generated@@82 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@82 $generated@@596 $generated@@47))
 :pattern ( ($generated@@82 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@82 $generated@@597 $generated@@44))
 :pattern ( ($generated@@82 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@440) ($generated@@82 $generated@@598 $generated@@45))
 :pattern ( ($generated@@82 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@160) ($generated@@82 $generated@@599 $generated@@48))
 :pattern ( ($generated@@82 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 (T@U) Bool)
(declare-fun $generated@@606 () Int)
(assert  (and (and (= (type $generated@@600) ($generated@@175 $generated@@81 $generated@@4)) (= (type $generated@@601) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@603) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@607  (=> (= $generated@@600 ($generated@@174 $generated@@145 $generated@@601 $generated@@60 false)) (=> (and (= $generated@@602 ($generated@@80 $generated@@603)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@602 $generated@@604)))))
(let (($generated@@608  (=> (and ($generated@@258 $generated@@601) ($generated@@605 $generated@@601)) (=> (and (and (and (not (= $generated@@603 $generated@@145)) (and ($generated@@82 $generated@@603 $generated@@229) ($generated@@85 $generated@@603 $generated@@229 $generated@@601))) (<= ($generated@@252 0) $generated@@604)) (and (and (<= ($generated@@252 0) $generated@@606) (= 2 $generated@@79)) (and (not (= $generated@@604 9)) (= (ControlFlow 0 3) 2)))) $generated@@607))))
$generated@@608)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (Int Int) Int)
(declare-fun $generated@@509 (Int Int) Bool)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert (= (type $generated@@81) $generated@@68))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@82 Int) ) (! ($generated@@80 ($generated@@8 ($generated@@79 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@71 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@71 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@68)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
 :pattern ( ($generated@@83 $generated@@141 $generated@@81 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@80 $generated@@143 ($generated@@84 0)))
 :pattern ( ($generated@@80 $generated@@143 ($generated@@84 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@146)) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@80 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@68)) ($generated@@80 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@80 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@86 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@71 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@86) (= (type $generated@@215) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@216) ($generated@@70 $generated@@4))) (= (type $generated@@218) $generated@@86)) (= (type $generated@@219) ($generated@@70 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@146)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@68) (= (type $generated@@226) $generated@@68)) (= (type $generated@@227) $generated@@155)) (= (type $generated@@228) $generated@@155)) (= ($generated@@80 ($generated@@221 $generated@@227 $generated@@228) ($generated@@145 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@80 ($generated@@221 $generated@@227 $generated@@228) ($generated@@145 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@146) (= (type $generated@@230) $generated@@146)) (= ($generated@@152 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@152 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@68)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@234) $generated@@68)) (= ($generated@@80 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@155) ($generated@@0 ($generated@@90 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@90 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@80 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@68)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@239) $generated@@68)) (= ($generated@@80 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@155) ($generated@@0 ($generated@@90 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@90 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@80 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@68) (= (type $generated@@250) $generated@@68)) (= (type $generated@@251) $generated@@155)) (= (type $generated@@252) $generated@@155)) (= (type $generated@@253) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@247 $generated@@253)) (= ($generated@@83 ($generated@@221 $generated@@251 $generated@@252) ($generated@@145 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@83 ($generated@@221 $generated@@251 $generated@@252) ($generated@@145 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@146) (= ($generated@@144 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@146) ($generated@@144 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@155) (= (type $generated@@259) $generated@@155)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@144 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@2) (= ($generated@@80 $generated@@268 $generated@@81) (<= ($generated@@241 0) ($generated $generated@@268))))
 :pattern ( ($generated@@80 $generated@@268 $generated@@81))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@155)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@83 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@248 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@85 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@88 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@85 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@90 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@85 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@90 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@90 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@85 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@90 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@90 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@88 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@85 $generated@@317 $generated@@2)) (= ($generated@@161 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@90 $generated@@316 $generated@@318))) (<= ($generated ($generated@@90 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@90 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@161 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@155) ($generated@@222 $generated@@322 $generated@@81)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@322)) $generated@@322) ($generated@@80 ($generated@@319 $generated@@2 $generated@@322) $generated@@81)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@81))
)))
(assert (= (type $generated@@323) $generated@@68))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@155) ($generated@@222 $generated@@324 $generated@@323)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@324)) $generated@@324) ($generated@@80 ($generated@@319 $generated@@2 $generated@@324) $generated@@323)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@90 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@85 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@90 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@90 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@85 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@90 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert  (=> (< 1 $generated@@78) (forall (($generated@@347 T@U) ($generated@@348 Int) ) (!  (=> (= (type $generated@@347) ($generated@@85 $generated@@86 $generated@@87)) (=> (and ($generated@@247 $generated@@347) ($generated@@83 ($generated@@8 $generated@@348) $generated@@323 $generated@@347)) ($generated@@83 ($generated@@8 ($generated@@79 $generated@@348)) $generated@@81 $generated@@347)))
 :pattern ( ($generated@@79 $generated@@348) ($generated@@83 ($generated@@8 $generated@@348) $generated@@323 $generated@@347))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@350) $generated@@68)) (= ($generated@@80 $generated@@349 ($generated@@160 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@90 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@80 $generated@@349 ($generated@@160 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@353) $generated@@68)) (= (type $generated@@354) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@155) ($generated@@0 ($generated@@90 $generated@@352 $generated@@355))) ($generated@@248 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@90 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@83 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@85 $generated@@155 $generated@@4)) (= (type $generated@@357) $generated@@68)) (= (type $generated@@358) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@155) ($generated@@0 ($generated@@90 $generated@@356 $generated@@359))) ($generated@@248 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@90 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@83 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@90 ($generated@@275 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@90 ($generated@@275 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@284 (type $generated@@365))))
(let (($generated@@367 ($generated@@283 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@85 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@369) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@90 ($generated@@280 $generated@@368) ($generated@@153 ($generated@@319 $generated@@146 $generated@@369)))) (= ($generated@@90 ($generated@@363 $generated@@368) ($generated@@153 ($generated@@319 $generated@@146 $generated@@369))) ($generated@@154 ($generated@@319 $generated@@146 $generated@@369))))))
 :pattern ( ($generated@@90 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@85 $generated@@155 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@302 (type $generated@@373))))
(let (($generated@@375 ($generated@@301 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@85 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@377) $generated@@155)) (= ($generated@@0 ($generated@@90 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@90 ($generated@@298 $generated@@376) ($generated@@153 ($generated@@319 $generated@@146 $generated@@377)))) (= ($generated@@90 ($generated@@371 $generated@@376) ($generated@@153 ($generated@@319 $generated@@146 $generated@@377))) ($generated@@154 ($generated@@319 $generated@@146 $generated@@377))))))
 :pattern ( ($generated@@90 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@283 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@282 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@90 ($generated@@329 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@90 ($generated@@280 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@90 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@90 ($generated@@280 $generated@@378) $generated@@382))
 :pattern ( ($generated@@90 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@90 ($generated@@329 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@301 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@300 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@90 ($generated@@340 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@90 ($generated@@298 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@90 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@90 ($generated@@298 $generated@@383) $generated@@387))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@90 ($generated@@340 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@68)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) $generated@@68)) (= (type $generated@@394) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@280 $generated@@391) $generated@@395))) (and ($generated@@248 ($generated@@90 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@248 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@90 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@90 ($generated@@280 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@83 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@68)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@298 $generated@@399) $generated@@403))) (and ($generated@@248 ($generated@@90 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@248 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@90 ($generated@@298 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@83 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@85 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@302 (type $generated@@406))))
(let (($generated@@408 ($generated@@301 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@300 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@299 $generated@@408 $generated@@407)) (= ($generated@@298 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@298 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@302 (type $generated@@409))))
(let (($generated@@411 ($generated@@301 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@300 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@299 $generated@@411 $generated@@410)) (= ($generated@@340 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@340 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@302 (type $generated@@412))))
(let (($generated@@414 ($generated@@301 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@300 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@299 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@155))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@284 (type $generated@@415))))
(let (($generated@@417 ($generated@@283 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@282 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@281 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@155) (= (type $generated@@419) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@362 $generated@@415) ($generated@@269 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@302 (type $generated@@420))))
(let (($generated@@422 ($generated@@301 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@300 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@299 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@155) (= (type $generated@@424) $generated@@155)) ($generated@@0 ($generated@@90 ($generated@@370 $generated@@420) ($generated@@269 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@155) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@425)) $generated@@425) ($generated@@80 ($generated@@319 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@155) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@426)) $generated@@426) ($generated@@80 ($generated@@319 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@155) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@427)) $generated@@427) ($generated@@80 ($generated@@319 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@155) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@428 $generated@@429)) $generated@@429) ($generated@@80 ($generated@@319 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@68) (= ($generated@@222 ($generated@@269 $generated@@430) $generated@@431) ($generated@@80 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@269 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@88 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@85 $generated@@433 $generated@@2)) (<= 0 ($generated@@274 $generated@@432))))
 :pattern ( ($generated@@274 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@263 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@262 $generated@@435)) (<= 0 ($generated@@261 $generated@@434))))
 :pattern ( ($generated@@261 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@68) (= (type $generated@@439) $generated@@68)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@68) (= (type $generated@@443) $generated@@68)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@68) (= (type $generated@@445) $generated@@68)) (= ($generated@@76 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@68) (= (type $generated@@449) $generated@@68)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@76 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@155) (= (type $generated@@457) $generated@@155)) (= ($generated@@254 ($generated@@221 $generated@@456 $generated@@457)) $generated@@62))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@145 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@145 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@145 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@145 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@155) (= (type $generated@@467) $generated@@155)) (= ($generated@@153 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@155) (= (type $generated@@469) $generated@@155)) (= ($generated@@154 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@263 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@262 $generated@@155)) (= (type $generated@@477) $generated@@68)) (= (type $generated@@478) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@261 $generated@@476))) ($generated@@248 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@83 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@84 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@84 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@68) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@76 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@68) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@68) (= ($generated@@76 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@490 ($generated@@160 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@160 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@76 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@319 $generated@@499 ($generated@@269 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@269 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) $generated@@68)) (= ($generated@@80 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@280 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@90 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@90 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@90 ($generated@@280 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@80 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) $generated@@68)) (= ($generated@@80 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@155) ($generated@@0 ($generated@@90 ($generated@@298 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@90 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@90 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@90 ($generated@@298 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@80 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@510 Int) ($generated@@511 Int) ) (!  (=> (or ($generated@@509 $generated@@510 $generated@@511) (and (not (= 2 $generated@@78)) (and (and ($generated@@0 ($generated@@243 ($generated@@11 true))) (<= ($generated@@241 0) $generated@@511)) (not (= $generated@@511 7))))) (and (= ($generated@@508 $generated@@510 $generated@@511) ($generated@@79 $generated@@510)) (<= ($generated@@241 0) ($generated@@508 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@155) (= (type $generated@@515) $generated@@155)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@221 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@221 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@155) (= (type $generated@@517) $generated@@155)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@221 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@221 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@155) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) $generated@@68)) ($generated@@222 $generated@@518 ($generated@@388 $generated@@519 $generated@@520))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@518)) $generated@@518) ($generated@@80 ($generated@@319 ($generated@@282 $generated@@155 $generated@@155) $generated@@518) ($generated@@388 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@222 $generated@@518 ($generated@@388 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@155) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) $generated@@68)) ($generated@@222 $generated@@521 ($generated@@396 $generated@@522 $generated@@523))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@521)) $generated@@521) ($generated@@80 ($generated@@319 ($generated@@300 $generated@@155 $generated@@155) $generated@@521) ($generated@@396 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@222 $generated@@521 ($generated@@396 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) $generated@@155)) ($generated@@222 $generated@@526 ($generated@@145 $generated@@524 $generated@@525))) (and (= ($generated@@269 ($generated@@319 $generated@@146 $generated@@526)) $generated@@526) ($generated@@80 ($generated@@319 $generated@@146 $generated@@526) ($generated@@145 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@222 $generated@@526 ($generated@@145 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@90 ($generated@@404 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@90 ($generated@@404 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@73)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (and (= ($generated@@76 ($generated@@145 $generated@@531 $generated@@532)) $generated@@63) (= ($generated@@529 ($generated@@145 $generated@@531 $generated@@532)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@146) (= ($generated@@512 ($generated@@269 $generated@@533)) ($generated@@513 $generated@@533)))
 :pattern ( ($generated@@512 ($generated@@269 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@155) ($generated@@222 $generated@@534 ($generated@@84 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@534)) $generated@@534) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@534) ($generated@@84 0))))
 :pattern ( ($generated@@222 $generated@@534 ($generated@@84 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@155) (= (type $generated@@536) $generated@@68)) ($generated@@222 $generated@@535 ($generated@@231 $generated@@536))) (and (= ($generated@@269 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@535)) $generated@@535) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@535) ($generated@@231 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@231 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) ($generated@@222 $generated@@537 ($generated@@236 $generated@@538))) (and (= ($generated@@269 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@537)) $generated@@537) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@4) $generated@@537) ($generated@@236 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@236 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@155) (= (type $generated@@540) $generated@@68)) ($generated@@222 $generated@@539 ($generated@@160 $generated@@540))) (and (= ($generated@@269 ($generated@@319 ($generated@@85 $generated@@155 $generated@@2) $generated@@539)) $generated@@539) ($generated@@80 ($generated@@319 ($generated@@85 $generated@@155 $generated@@2) $generated@@539) ($generated@@160 $generated@@540))))
 :pattern ( ($generated@@222 $generated@@539 ($generated@@160 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@155) (= (type $generated@@542) $generated@@68)) ($generated@@222 $generated@@541 ($generated@@470 $generated@@542))) (and (= ($generated@@269 ($generated@@319 ($generated@@262 $generated@@155) $generated@@541)) $generated@@541) ($generated@@80 ($generated@@319 ($generated@@262 $generated@@155) $generated@@541) ($generated@@470 $generated@@542))))
 :pattern ( ($generated@@222 $generated@@541 ($generated@@470 $generated@@542)))
)))
(assert (= ($generated@@76 $generated@@81) $generated@@61))
(assert (= ($generated@@529 $generated@@81) $generated@@65))
(assert (= ($generated@@76 $generated@@323) $generated@@64))
(assert (= ($generated@@529 $generated@@323) $generated@@67))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@85 $generated@@155 $generated@@2)) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@543 ($generated@@160 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@155) (< 0 ($generated ($generated@@90 $generated@@543 $generated@@546)))) ($generated@@248 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@90 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@83 $generated@@543 ($generated@@160 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@146) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@247 $generated@@549) (and ($generated@@144 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@68) ($generated@@83 $generated@@547 ($generated@@145 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@83 $generated@@547 ($generated@@145 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@248 ($generated@@153 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@248 ($generated@@153 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@146) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@247 $generated@@553) (and ($generated@@144 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@68) ($generated@@83 $generated@@551 ($generated@@145 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@83 $generated@@551 ($generated@@145 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@248 ($generated@@154 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@248 ($generated@@154 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@155)) (= ($generated@@221 ($generated@@243 $generated@@555) ($generated@@243 $generated@@556)) ($generated@@243 ($generated@@221 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@555) ($generated@@243 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@269 ($generated@@8 ($generated@@241 $generated@@557))) ($generated@@243 ($generated@@269 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@269 ($generated@@8 ($generated@@241 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@269 ($generated@@243 $generated@@558)) ($generated@@243 ($generated@@269 $generated@@558)))
 :pattern ( ($generated@@269 ($generated@@243 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@263 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@262 $generated@@560)) (= ($generated@@261 $generated@@559) 0)) (= $generated@@559 ($generated@@260 $generated@@560))))
 :pattern ( ($generated@@261 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@85 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@274 ($generated@@91 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@274 $generated@@561) ($generated ($generated@@90 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@274 ($generated@@91 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@566) $generated@@2)) ($generated@@83 $generated@@566 $generated@@46 $generated@@565))
 :pattern ( ($generated@@83 $generated@@566 $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@568) $generated@@3)) ($generated@@83 $generated@@568 $generated@@47 $generated@@567))
 :pattern ( ($generated@@83 $generated@@568 $generated@@47 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@570) $generated@@4)) ($generated@@83 $generated@@570 $generated@@44 $generated@@569))
 :pattern ( ($generated@@83 $generated@@570 $generated@@44 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@572) $generated@@428)) ($generated@@83 $generated@@572 $generated@@45 $generated@@571))
 :pattern ( ($generated@@83 $generated@@572 $generated@@45 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@574) $generated@@155)) ($generated@@83 $generated@@574 $generated@@48 $generated@@573))
 :pattern ( ($generated@@83 $generated@@574 $generated@@48 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@262 $generated@@155)) (= (type $generated@@576) $generated@@68)) (= ($generated@@80 $generated@@575 ($generated@@470 $generated@@576)) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@261 $generated@@575))) ($generated@@222 ($generated@@471 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@471 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@470 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) ($generated@@262 $generated@@155)) (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@261 $generated@@579))) (< ($generated@@513 ($generated@@319 $generated@@146 ($generated@@471 $generated@@579 $generated@@580))) ($generated@@578 $generated@@579))))
 :pattern ( ($generated@@513 ($generated@@319 $generated@@146 ($generated@@471 $generated@@579 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@282 $generated@@155 $generated@@155)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) ($generated@@80 $generated@@581 ($generated@@388 $generated@@582 $generated@@583))) (and (and ($generated@@80 ($generated@@280 $generated@@581) ($generated@@231 $generated@@582)) ($generated@@80 ($generated@@329 $generated@@581) ($generated@@231 $generated@@583))) ($generated@@80 ($generated@@362 $generated@@581) ($generated@@231 ($generated@@145 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@388 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@300 $generated@@155 $generated@@155)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) ($generated@@80 $generated@@584 ($generated@@396 $generated@@585 $generated@@586))) (and (and ($generated@@80 ($generated@@298 $generated@@584) ($generated@@236 $generated@@585)) ($generated@@80 ($generated@@340 $generated@@584) ($generated@@236 $generated@@586))) ($generated@@80 ($generated@@370 $generated@@584) ($generated@@236 ($generated@@145 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@396 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@2) ($generated@@80 $generated@@587 $generated@@46))
 :pattern ( ($generated@@80 $generated@@587 $generated@@46))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@3) ($generated@@80 $generated@@588 $generated@@47))
 :pattern ( ($generated@@80 $generated@@588 $generated@@47))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@4) ($generated@@80 $generated@@589 $generated@@44))
 :pattern ( ($generated@@80 $generated@@589 $generated@@44))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@428) ($generated@@80 $generated@@590 $generated@@45))
 :pattern ( ($generated@@80 $generated@@590 $generated@@45))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@155) ($generated@@80 $generated@@591 $generated@@48))
 :pattern ( ($generated@@80 $generated@@591 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(assert  (and (and (= (type $generated@@594) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@595) ($generated@@167 $generated@@86 $generated@@4))) (= (type $generated@@596) $generated@@86)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@598 true))
(let (($generated@@599  (=> (<= ($generated@@241 0) ($generated@@508 $generated@@592 $generated@@593)) (=> (and ($generated@@83 ($generated@@8 $generated@@592) $generated@@323 $generated@@594) ($generated@@83 ($generated@@8 $generated@@593) $generated@@81 $generated@@594)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@593 7))) (=> (not (= $generated@@593 7)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (<= 0 $generated@@592) (= $generated@@592 $generated@@592))) (=> (or (<= 0 $generated@@592) (= $generated@@592 $generated@@592)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@593) (< $generated@@592 $generated@@592)) (= $generated@@593 $generated@@593))) (=> (or (or (<= 0 $generated@@593) (< $generated@@592 $generated@@592)) (= $generated@@593 $generated@@593)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@592 $generated@@592) (= $generated@@593 $generated@@593)) (or (< $generated@@592 $generated@@592) (and (= $generated@@592 $generated@@592) (< $generated@@593 $generated@@593)))))))))))))))
(let (($generated@@600  (=> (and (= $generated@@595 ($generated@@166 $generated@@596 $generated@@594 $generated@@60 false)) (not (= $generated@@593 7))) (and (=> (= (ControlFlow 0 7) 2) $generated@@599) (=> (= (ControlFlow 0 7) 6) $generated@@598)))))
(let (($generated@@601  (=> (and ($generated@@247 $generated@@594) ($generated@@597 $generated@@594)) (=> (and (and ($generated@@0 ($generated@@243 ($generated@@11 true))) (<= ($generated@@241 0) $generated@@593)) (and (= 2 $generated@@78) (= (ControlFlow 0 8) 7))) $generated@@600))))
$generated@@601)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@329 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U Int) Int)
(declare-fun $generated@@414 (T@U Int) Bool)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Bool)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@81) 11) (= (type $generated@@83) $generated@@69)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@84 T@U) ) (!  (=> (= (type $generated@@84) $generated@@81) ($generated@@82 ($generated@@8 ($generated@@80 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@80 $generated@@84))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@95 $generated@@96)) 12)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@87 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@87 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@87 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@72 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@72 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@86 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
 :pattern ( ($generated@@85 $generated@@140 ($generated@@86 0) $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
 :pattern ( ($generated@@85 $generated@@142 $generated@@83 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@81)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@81) (= (type $generated@@147) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@82 $generated@@148 ($generated@@86 0)))
 :pattern ( ($generated@@82 $generated@@148 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@151)) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@82 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@69)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@69)) ($generated@@82 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@82 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@72 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@221) ($generated@@71 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@71 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (= (type $generated@@226) $generated@@69))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@81) (= (type $generated@@228) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@227 $generated@@226 $generated@@228) ($generated@@85 $generated@@227 $generated@@144 $generated@@228)))
 :pattern ( ($generated@@85 $generated@@227 $generated@@226 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@151)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@69) (= (type $generated@@234) $generated@@69)) (= (type $generated@@235) $generated@@160)) (= (type $generated@@236) $generated@@160)) (= ($generated@@82 ($generated@@229 $generated@@235 $generated@@236) ($generated@@150 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@82 ($generated@@229 $generated@@235 $generated@@236) ($generated@@150 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@151) (= (type $generated@@238) $generated@@151)) (= ($generated@@157 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@157 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@69)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@242) $generated@@69)) (= ($generated@@82 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@160) ($generated@@0 ($generated@@91 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@91 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@82 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@69)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@247) $generated@@69)) (= ($generated@@82 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@160) ($generated@@0 ($generated@@91 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@91 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@82 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@69) (= (type $generated@@258) $generated@@69)) (= (type $generated@@259) $generated@@160)) (= (type $generated@@260) $generated@@160)) (= (type $generated@@261) ($generated@@87 $generated@@81 $generated@@88))) ($generated@@255 $generated@@261)) (= ($generated@@85 ($generated@@229 $generated@@259 $generated@@260) ($generated@@150 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@85 ($generated@@229 $generated@@259 $generated@@260) ($generated@@150 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@73)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@151) (= ($generated@@149 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@62)))
 :pattern ( ($generated@@149 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@151) ($generated@@149 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@160) (= (type $generated@@267) $generated@@160)) (= $generated@@265 ($generated@@229 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@149 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@82 $generated@@276 $generated@@83) (<= ($generated@@249 0) ($generated $generated@@276))))
 :pattern ( ($generated@@82 $generated@@276 $generated@@83))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@160)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@69) (= (type $generated@@281) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@85 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@87 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@89 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@87 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@91 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@87 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@91 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@91 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@87 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@91 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@91 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (=> (< 1 $generated@@79) (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@325) $generated@@81)) (and ($generated@@255 $generated@@324) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@324 $generated@@325) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@80 $generated@@325)) $generated@@83 $generated@@324))
 :pattern ( ($generated@@80 $generated@@325) ($generated@@93 ($generated@@91 $generated@@324 $generated@@325) $generated@@60))
))))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@89 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@87 $generated@@327 $generated@@2)) (= ($generated@@166 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@91 $generated@@326 $generated@@328))) (<= ($generated ($generated@@91 $generated@@326 $generated@@328)) ($generated@@282 $generated@@326))))
 :pattern ( ($generated@@91 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@166 $generated@@326))
)))
(assert (forall (($generated@@330 T@T) ($generated@@331 T@U) ) (! (= (type ($generated@@329 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@160) ($generated@@230 $generated@@332 $generated@@83)) (and (= ($generated@@277 ($generated@@329 $generated@@2 $generated@@332)) $generated@@332) ($generated@@82 ($generated@@329 $generated@@2 $generated@@332) $generated@@83)))
 :pattern ( ($generated@@230 $generated@@332 $generated@@83))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@160) ($generated@@230 $generated@@333 $generated@@144)) (and (= ($generated@@277 ($generated@@329 $generated@@81 $generated@@333)) $generated@@333) ($generated@@82 ($generated@@329 $generated@@81 $generated@@333) $generated@@144)))
 :pattern ( ($generated@@230 $generated@@333 $generated@@144))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@160) ($generated@@230 $generated@@334 $generated@@226)) (and (= ($generated@@277 ($generated@@329 $generated@@81 $generated@@334)) $generated@@334) ($generated@@82 ($generated@@329 $generated@@81 $generated@@334) $generated@@226)))
 :pattern ( ($generated@@230 $generated@@334 $generated@@226))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@81) (= ($generated@@82 $generated@@335 $generated@@226)  (and ($generated@@82 $generated@@335 $generated@@144) (not (= $generated@@335 $generated@@145)))))
 :pattern ( ($generated@@82 $generated@@335 $generated@@226))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@292 (type $generated@@336))))
(let (($generated@@338 ($generated@@291 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@290 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@289 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@91 ($generated@@288 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@288 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@292 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@87 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@292 (type $generated@@343))))
(let (($generated@@345 ($generated@@291 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@290 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@289 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@91 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@310 (type $generated@@347))))
(let (($generated@@349 ($generated@@309 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@308 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@307 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@91 ($generated@@306 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@306 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@87 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@310 (type $generated@@354))))
(let (($generated@@356 ($generated@@309 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@308 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@307 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@91 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@359) $generated@@69)) (= ($generated@@82 $generated@@358 ($generated@@165 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@358 $generated@@360)))) ($generated@@230 $generated@@360 $generated@@359))
 :pattern ( ($generated@@91 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@82 $generated@@358 ($generated@@165 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@362) $generated@@69)) (= (type $generated@@363) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@361 ($generated@@239 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@160) ($generated@@0 ($generated@@91 $generated@@361 $generated@@364))) ($generated@@256 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@91 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@85 $generated@@361 ($generated@@239 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@87 $generated@@160 $generated@@4)) (= (type $generated@@366) $generated@@69)) (= (type $generated@@367) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@365 ($generated@@244 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@160) ($generated@@0 ($generated@@91 $generated@@365 $generated@@368))) ($generated@@256 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@91 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@85 $generated@@365 ($generated@@244 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@91 ($generated@@283 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@91 ($generated@@283 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@292 (type $generated@@374))))
(let (($generated@@376 ($generated@@291 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@87 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@378) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@91 ($generated@@288 $generated@@377) ($generated@@158 ($generated@@329 $generated@@151 $generated@@378)))) (= ($generated@@91 ($generated@@372 $generated@@377) ($generated@@158 ($generated@@329 $generated@@151 $generated@@378))) ($generated@@159 ($generated@@329 $generated@@151 $generated@@378))))))
 :pattern ( ($generated@@91 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@87 $generated@@160 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@310 (type $generated@@382))))
(let (($generated@@384 ($generated@@309 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@87 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@386) $generated@@160)) (= ($generated@@0 ($generated@@91 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@91 ($generated@@306 $generated@@385) ($generated@@158 ($generated@@329 $generated@@151 $generated@@386)))) (= ($generated@@91 ($generated@@380 $generated@@385) ($generated@@158 ($generated@@329 $generated@@151 $generated@@386))) ($generated@@159 ($generated@@329 $generated@@151 $generated@@386))))))
 :pattern ( ($generated@@91 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@291 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@290 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@91 ($generated@@340 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@91 ($generated@@288 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@91 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@91 ($generated@@288 $generated@@387) $generated@@391))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@91 ($generated@@340 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@309 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@308 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@91 ($generated@@351 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@91 ($generated@@306 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@91 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@91 ($generated@@306 $generated@@392) $generated@@396))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@91 ($generated@@351 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@69)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@401) $generated@@69)) (= (type $generated@@402) $generated@@69)) (= (type $generated@@403) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@288 $generated@@400) $generated@@404))) (and ($generated@@256 ($generated@@91 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@256 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@91 ($generated@@288 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@85 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@69)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@409) $generated@@69)) (= (type $generated@@410) $generated@@69)) (= (type $generated@@411) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@306 $generated@@408) $generated@@412))) (and ($generated@@256 ($generated@@91 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@256 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@91 ($generated@@306 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@85 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert  (=> (<= 2 $generated@@79) (forall (($generated@@415 T@U) ($generated@@416 Int) ) (!  (=> (and (= (type $generated@@415) $generated@@81) (or ($generated@@414 $generated@@415 $generated@@416) (and (not (= 2 $generated@@79)) (and (and (and (not (= $generated@@415 $generated@@145)) ($generated@@82 $generated@@415 $generated@@226)) (<= ($generated@@249 0) $generated@@416)) (not (= $generated@@416 7)))))) (and (= ($generated@@413 $generated@@415 $generated@@416) ($generated@@80 $generated@@415)) (<= ($generated@@249 0) ($generated@@413 $generated@@415 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415 $generated@@416))
))))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@87 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@310 (type $generated@@419))))
(let (($generated@@421 ($generated@@309 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@308 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@307 $generated@@421 $generated@@420)) (= ($generated@@306 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@306 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@310 (type $generated@@422))))
(let (($generated@@424 ($generated@@309 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@308 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@307 $generated@@424 $generated@@423)) (= ($generated@@351 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@351 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@310 (type $generated@@425))))
(let (($generated@@427 ($generated@@309 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@308 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@307 $generated@@427 $generated@@426)) (= ($generated@@379 $generated@@425) ($generated@@417 $generated@@160))))))
 :pattern ( ($generated@@379 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@292 (type $generated@@428))))
(let (($generated@@430 ($generated@@291 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@290 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@289 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@160) (= (type $generated@@432) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@371 $generated@@428) ($generated@@277 ($generated@@229 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@371 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@310 (type $generated@@433))))
(let (($generated@@435 ($generated@@309 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@308 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@307 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@160) (= (type $generated@@437) $generated@@160)) ($generated@@0 ($generated@@91 ($generated@@379 $generated@@433) ($generated@@277 ($generated@@229 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@379 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@160) ($generated@@230 $generated@@438 $generated@@46)) (and (= ($generated@@277 ($generated@@329 $generated@@2 $generated@@438)) $generated@@438) ($generated@@82 ($generated@@329 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@160) ($generated@@230 $generated@@439 $generated@@47)) (and (= ($generated@@277 ($generated@@329 $generated@@3 $generated@@439)) $generated@@439) ($generated@@82 ($generated@@329 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@160) ($generated@@230 $generated@@440 $generated@@44)) (and (= ($generated@@277 ($generated@@329 $generated@@4 $generated@@440)) $generated@@440) ($generated@@82 ($generated@@329 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@160) ($generated@@230 $generated@@442 $generated@@45)) (and (= ($generated@@277 ($generated@@329 $generated@@441 $generated@@442)) $generated@@442) ($generated@@82 ($generated@@329 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@69) (= ($generated@@230 ($generated@@277 $generated@@443) $generated@@444) ($generated@@82 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@230 ($generated@@277 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@89 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@87 $generated@@446 $generated@@2)) (<= 0 ($generated@@282 $generated@@445))))
 :pattern ( ($generated@@282 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@271 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@270 $generated@@448)) (<= 0 ($generated@@269 $generated@@447))))
 :pattern ( ($generated@@269 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@69)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@69) (= (type $generated@@452) $generated@@69)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@69)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@69) (= (type $generated@@456) $generated@@69)) (= ($generated@@453 ($generated@@397 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@69) (= (type $generated@@458) $generated@@69)) (= ($generated@@77 ($generated@@397 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@69)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@69) (= (type $generated@@462) $generated@@69)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@69)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@69) (= (type $generated@@466) $generated@@69)) (= ($generated@@463 ($generated@@405 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@405 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@77 ($generated@@405 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@160) (= (type $generated@@470) $generated@@160)) (= ($generated@@262 ($generated@@229 $generated@@469 $generated@@470)) $generated@@62))
 :pattern ( ($generated@@229 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@150 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@150 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@150 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@150 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@160) (= (type $generated@@480) $generated@@160)) (= ($generated@@158 ($generated@@229 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@229 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@160) (= (type $generated@@482) $generated@@160)) (= ($generated@@159 ($generated@@229 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@229 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@271 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@270 $generated@@160)) (= (type $generated@@490) $generated@@69)) (= (type $generated@@491) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@269 $generated@@489))) ($generated@@256 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@85 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@86 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@86 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@69) (= ($generated@@495 ($generated@@239 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@239 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@69) (= ($generated@@77 ($generated@@239 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@69) (= ($generated@@499 ($generated@@244 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@244 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@69) (= ($generated@@77 ($generated@@244 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@503 ($generated@@165 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@165 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@77 ($generated@@165 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@77 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@329 $generated@@512 ($generated@@277 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@277 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) $generated@@69)) (= ($generated@@82 $generated@@513 ($generated@@397 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@288 $generated@@513) $generated@@516))) (and ($generated@@230 ($generated@@91 ($generated@@372 $generated@@513) $generated@@516) $generated@@515) ($generated@@230 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@91 ($generated@@372 $generated@@513) $generated@@516))
 :pattern ( ($generated@@91 ($generated@@288 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@82 $generated@@513 ($generated@@397 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@518) $generated@@69)) (= (type $generated@@519) $generated@@69)) (= ($generated@@82 $generated@@517 ($generated@@405 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@160) ($generated@@0 ($generated@@91 ($generated@@306 $generated@@517) $generated@@520))) (and ($generated@@230 ($generated@@91 ($generated@@380 $generated@@517) $generated@@520) $generated@@519) ($generated@@230 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@517) $generated@@520))
 :pattern ( ($generated@@91 ($generated@@306 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@82 $generated@@517 ($generated@@405 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@160) (= (type $generated@@524) $generated@@160)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@229 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@229 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@160) (= (type $generated@@526) $generated@@160)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@229 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@229 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@160) (= (type $generated@@528) $generated@@69)) (= (type $generated@@529) $generated@@69)) ($generated@@230 $generated@@527 ($generated@@397 $generated@@528 $generated@@529))) (and (= ($generated@@277 ($generated@@329 ($generated@@290 $generated@@160 $generated@@160) $generated@@527)) $generated@@527) ($generated@@82 ($generated@@329 ($generated@@290 $generated@@160 $generated@@160) $generated@@527) ($generated@@397 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@230 $generated@@527 ($generated@@397 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@160) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) ($generated@@230 $generated@@530 ($generated@@405 $generated@@531 $generated@@532))) (and (= ($generated@@277 ($generated@@329 ($generated@@308 $generated@@160 $generated@@160) $generated@@530)) $generated@@530) ($generated@@82 ($generated@@329 ($generated@@308 $generated@@160 $generated@@160) $generated@@530) ($generated@@405 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@230 $generated@@530 ($generated@@405 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@69) (= (type $generated@@534) $generated@@69)) (= (type $generated@@535) $generated@@160)) ($generated@@230 $generated@@535 ($generated@@150 $generated@@533 $generated@@534))) (and (= ($generated@@277 ($generated@@329 $generated@@151 $generated@@535)) $generated@@535) ($generated@@82 ($generated@@329 $generated@@151 $generated@@535) ($generated@@150 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@230 $generated@@535 ($generated@@150 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@91 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@91 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@74)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@69) (= (type $generated@@541) $generated@@69)) (and (= ($generated@@77 ($generated@@150 $generated@@540 $generated@@541)) $generated@@63) (= ($generated@@538 ($generated@@150 $generated@@540 $generated@@541)) $generated@@67)))
 :pattern ( ($generated@@150 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@151) (= ($generated@@521 ($generated@@277 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@277 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@160) ($generated@@230 $generated@@543 ($generated@@86 0))) (and (= ($generated@@277 ($generated@@329 $generated@@2 $generated@@543)) $generated@@543) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@543) ($generated@@86 0))))
 :pattern ( ($generated@@230 $generated@@543 ($generated@@86 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@160) (= (type $generated@@545) $generated@@69)) ($generated@@230 $generated@@544 ($generated@@239 $generated@@545))) (and (= ($generated@@277 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@544)) $generated@@544) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@544) ($generated@@239 $generated@@545))))
 :pattern ( ($generated@@230 $generated@@544 ($generated@@239 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@160) (= (type $generated@@547) $generated@@69)) ($generated@@230 $generated@@546 ($generated@@244 $generated@@547))) (and (= ($generated@@277 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@546)) $generated@@546) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@4) $generated@@546) ($generated@@244 $generated@@547))))
 :pattern ( ($generated@@230 $generated@@546 ($generated@@244 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@160) (= (type $generated@@549) $generated@@69)) ($generated@@230 $generated@@548 ($generated@@165 $generated@@549))) (and (= ($generated@@277 ($generated@@329 ($generated@@87 $generated@@160 $generated@@2) $generated@@548)) $generated@@548) ($generated@@82 ($generated@@329 ($generated@@87 $generated@@160 $generated@@2) $generated@@548) ($generated@@165 $generated@@549))))
 :pattern ( ($generated@@230 $generated@@548 ($generated@@165 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@160) (= (type $generated@@551) $generated@@69)) ($generated@@230 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@277 ($generated@@329 ($generated@@270 $generated@@160) $generated@@550)) $generated@@550) ($generated@@82 ($generated@@329 ($generated@@270 $generated@@160) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@230 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (= ($generated@@77 $generated@@83) $generated@@61))
(assert (= ($generated@@538 $generated@@83) $generated@@66))
(assert (= ($generated@@77 $generated@@144) $generated@@64))
(assert (= ($generated@@538 $generated@@144) $generated@@68))
(assert (= ($generated@@77 $generated@@226) $generated@@65))
(assert (= ($generated@@538 $generated@@226) $generated@@68))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@87 $generated@@160 $generated@@2)) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) ($generated@@87 $generated@@81 $generated@@88))) (= ($generated@@85 $generated@@552 ($generated@@165 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@160) (< 0 ($generated ($generated@@91 $generated@@552 $generated@@555)))) ($generated@@256 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@91 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@85 $generated@@552 ($generated@@165 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@69)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@81) (= ($generated@@82 $generated@@559 $generated@@144)  (or (= $generated@@559 $generated@@145) ($generated@@556 ($generated@@557 $generated@@559)))))
 :pattern ( ($generated@@82 $generated@@559 $generated@@144))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@151) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@255 $generated@@562) (and ($generated@@149 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@69) ($generated@@85 $generated@@560 ($generated@@150 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@85 $generated@@560 ($generated@@150 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@256 ($generated@@158 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@256 ($generated@@158 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@151) (= (type $generated@@565) $generated@@69)) (= (type $generated@@566) ($generated@@87 $generated@@81 $generated@@88))) (and ($generated@@255 $generated@@566) (and ($generated@@149 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@69) ($generated@@85 $generated@@564 ($generated@@150 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@85 $generated@@564 ($generated@@150 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@256 ($generated@@159 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@256 ($generated@@159 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@160) (= (type $generated@@569) $generated@@160)) (= ($generated@@229 ($generated@@251 $generated@@568) ($generated@@251 $generated@@569)) ($generated@@251 ($generated@@229 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@229 ($generated@@251 $generated@@568) ($generated@@251 $generated@@569)))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@249 $generated@@570))) ($generated@@251 ($generated@@277 ($generated@@8 $generated@@570))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@249 $generated@@570))))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@277 ($generated@@251 $generated@@571)) ($generated@@251 ($generated@@277 $generated@@571)))
 :pattern ( ($generated@@277 ($generated@@251 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@271 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@270 $generated@@573)) (= ($generated@@269 $generated@@572) 0)) (= $generated@@572 ($generated@@268 $generated@@573))))
 :pattern ( ($generated@@269 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@87 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@282 ($generated@@92 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@282 $generated@@574) ($generated ($generated@@91 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@282 ($generated@@92 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@579) $generated@@2)) ($generated@@85 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@85 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@581) $generated@@3)) ($generated@@85 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@85 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@583) $generated@@4)) ($generated@@85 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@85 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@585) $generated@@441)) ($generated@@85 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@85 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@87 $generated@@81 $generated@@88)) (= (type $generated@@587) $generated@@160)) ($generated@@85 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@85 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@270 $generated@@160)) (= (type $generated@@589) $generated@@69)) (= ($generated@@82 $generated@@588 ($generated@@483 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@269 $generated@@588))) ($generated@@230 ($generated@@484 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@484 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@82 $generated@@588 ($generated@@483 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@270 $generated@@160)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@269 $generated@@592))) (< ($generated@@522 ($generated@@329 $generated@@151 ($generated@@484 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@522 ($generated@@329 $generated@@151 ($generated@@484 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@290 $generated@@160 $generated@@160)) (= (type $generated@@595) $generated@@69)) (= (type $generated@@596) $generated@@69)) ($generated@@82 $generated@@594 ($generated@@397 $generated@@595 $generated@@596))) (and (and ($generated@@82 ($generated@@288 $generated@@594) ($generated@@239 $generated@@595)) ($generated@@82 ($generated@@340 $generated@@594) ($generated@@239 $generated@@596))) ($generated@@82 ($generated@@371 $generated@@594) ($generated@@239 ($generated@@150 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@397 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@308 $generated@@160 $generated@@160)) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) $generated@@69)) ($generated@@82 $generated@@597 ($generated@@405 $generated@@598 $generated@@599))) (and (and ($generated@@82 ($generated@@306 $generated@@597) ($generated@@244 $generated@@598)) ($generated@@82 ($generated@@351 $generated@@597) ($generated@@244 $generated@@599))) ($generated@@82 ($generated@@379 $generated@@597) ($generated@@244 ($generated@@150 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@82 $generated@@597 ($generated@@405 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@82 $generated@@600 $generated@@46))
 :pattern ( ($generated@@82 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@82 $generated@@601 $generated@@47))
 :pattern ( ($generated@@82 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@82 $generated@@602 $generated@@44))
 :pattern ( ($generated@@82 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@441) ($generated@@82 $generated@@603 $generated@@45))
 :pattern ( ($generated@@82 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@160) ($generated@@82 $generated@@604 $generated@@48))
 :pattern ( ($generated@@82 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@607) ($generated@@87 $generated@@81 $generated@@88))) (= (type $generated@@608) ($generated@@172 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@610 true))
(let (($generated@@611  (=> (<= ($generated@@249 0) ($generated@@413 $generated@@605 $generated@@606)) (=> (and ($generated@@85 $generated@@605 $generated@@144 $generated@@607) ($generated@@85 ($generated@@8 $generated@@606) $generated@@83 $generated@@607)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@606 7))) (=> (not (= $generated@@606 7)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@606) (= $generated@@606 $generated@@606))) (=> (or (<= 0 $generated@@606) (= $generated@@606 $generated@@606)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@605 $generated@@605) (= $generated@@606 $generated@@606)) (< $generated@@606 $generated@@606)))))))))))
(let (($generated@@612  (=> (and (= $generated@@608 ($generated@@171 $generated@@145 $generated@@607 $generated@@60 false)) (not (= $generated@@606 7))) (and (=> (= (ControlFlow 0 6) 2) $generated@@611) (=> (= (ControlFlow 0 6) 5) $generated@@610)))))
(let (($generated@@613  (=> (and ($generated@@255 $generated@@607) ($generated@@609 $generated@@607)) (=> (and (and (and (not (= $generated@@605 $generated@@145)) (and ($generated@@82 $generated@@605 $generated@@226) ($generated@@85 $generated@@605 $generated@@226 $generated@@607))) (<= ($generated@@249 0) $generated@@606)) (and (= 2 $generated@@79) (= (ControlFlow 0 7) 6))) $generated@@612))))
$generated@@613)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
