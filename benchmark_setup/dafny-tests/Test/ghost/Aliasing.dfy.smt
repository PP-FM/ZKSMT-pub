(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@253 (T@T T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@285 (T@U T@U T@U) Bool)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@462 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (forall (($generated@@139 T@U) ) (! (= (type ($generated@@137 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@137 $generated@@139))
)) (= (type $generated@@138) $generated@@82)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@69) (= (type $generated@@141) $generated@@82)) (= (type $generated@@142) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@141 ($generated@@137 $generated@@140) $generated@@142)  (or (= $generated@@141 $generated@@138) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@141 ($generated@@137 $generated@@140) $generated@@142))
)))
(assert  (and (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146 $generated@@147))
)) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@144 $generated@@148)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@69) (= (type $generated@@150) $generated@@69)) (= (type $generated@@151) $generated@@69)) (= ($generated@@144 ($generated@@143 $generated@@149 $generated@@150 $generated@@151)) $generated@@149))
 :pattern ( ($generated@@143 $generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= (type ($generated@@152 $generated@@153)) $generated@@69)
 :pattern ( ($generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@69) (= (type $generated@@155) $generated@@69)) (= (type $generated@@156) $generated@@69)) (= ($generated@@152 ($generated@@143 $generated@@154 $generated@@155 $generated@@156)) $generated@@155))
 :pattern ( ($generated@@143 $generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@69)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@69) (= (type $generated@@160) $generated@@69)) (= (type $generated@@161) $generated@@69)) (= ($generated@@157 ($generated@@143 $generated@@159 $generated@@160 $generated@@161)) $generated@@161))
 :pattern ( ($generated@@143 $generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@2) ($generated@@162 $generated@@163 ($generated@@80 0)))
 :pattern ( ($generated@@162 $generated@@163 ($generated@@80 0)))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@164 $generated@@165)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@69) (= (type $generated@@167) $generated@@82)) (= (type $generated@@168) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@167 ($generated@@164 $generated@@166) $generated@@168) ($generated@@79 $generated@@167 ($generated@@137 $generated@@166) $generated@@168)))
 :pattern ( ($generated@@79 $generated@@167 ($generated@@164 $generated@@166) $generated@@168))
)))
(assert  (and (= ($generated@@1 $generated@@171) 14) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@69)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@69) (= (type $generated@@175) $generated@@69)) (= (type $generated@@176) $generated@@171)) ($generated@@162 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@162 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (and (= ($generated@@1 $generated@@180) 15) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@178 $generated@@181))
))) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@182)) $generated@@180)
 :pattern ( ($generated@@179 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@171) (= (type $generated@@184) $generated@@171)) true) (= ($generated@@177 $generated@@183 $generated@@184)  (and (= ($generated@@178 $generated@@183) ($generated@@178 $generated@@184)) (= ($generated@@179 $generated@@183) ($generated@@179 $generated@@184)))))
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@69)
 :pattern ( ($generated@@185 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) ($generated@@81 $generated@@180 $generated@@2)) (= (type $generated@@189) $generated@@69)) ($generated@@162 $generated@@188 ($generated@@185 $generated@@189))) ($generated@@186 $generated@@188))
 :pattern ( ($generated@@162 $generated@@188 ($generated@@185 $generated@@189)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@196 $generated@@197)) 16)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@192 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@190 $generated@@202 $generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@190 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(let (($generated@@211 (type $generated@@207)))
(= (type ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@192 $generated@@211 $generated@@210))))
 :pattern ( ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@194 (type $generated@@212))))
 (=> (= (type $generated@@215) $generated@@216) (= ($generated@@190 ($generated@@195 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@213 $generated@@214) $generated@@215)))
 :weight 0
))) (and (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@190 ($generated@@195 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@190 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@190 ($generated@@195 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@190 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or true (= ($generated@@190 ($generated@@195 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@190 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@192 $generated@@82 $generated@@4))
 :pattern ( ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@72 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@82) (= (type $generated@@240) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@241) ($generated@@71 $generated@@4))) (= (type $generated@@243) $generated@@82)) (= (type $generated@@244) ($generated@@71 $generated@@245))) (= ($generated@@0 ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@74)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (= (type $generated@@248) $generated@@69) (= (type $generated@@249) $generated@@69)) (= (type $generated@@250) $generated@@69)) (and (= ($generated@@77 ($generated@@143 $generated@@248 $generated@@249 $generated@@250)) $generated@@65) (= ($generated@@246 ($generated@@143 $generated@@248 $generated@@249 $generated@@250)) $generated@@68)))
 :pattern ( ($generated@@143 $generated@@248 $generated@@249 $generated@@250))
)))
(assert  (and (forall (($generated@@254 T@U) ) (! (= (type ($generated@@252 $generated@@254)) $generated@@180)
 :pattern ( ($generated@@252 $generated@@254))
)) (forall (($generated@@255 T@T) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@255 $generated@@256)) $generated@@255)
 :pattern ( ($generated@@253 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@257) $generated@@69) (= (type $generated@@258) $generated@@69)) (= (type $generated@@259) $generated@@69)) (= (type $generated@@260) $generated@@180)) ($generated@@251 $generated@@260 ($generated@@143 $generated@@257 $generated@@258 $generated@@259))) (and (= ($generated@@252 ($generated@@253 $generated@@171 $generated@@260)) $generated@@260) ($generated@@162 ($generated@@253 $generated@@171 $generated@@260) ($generated@@143 $generated@@257 $generated@@258 $generated@@259))))
 :pattern ( ($generated@@251 $generated@@260 ($generated@@143 $generated@@257 $generated@@258 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@261 $generated@@262 $generated@@263)) $generated@@171)
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (= (type $generated@@264) $generated@@69) (= (type $generated@@265) $generated@@69)) (= (type $generated@@266) $generated@@180)) (= (type $generated@@267) $generated@@180)) (= ($generated@@162 ($generated@@261 $generated@@266 $generated@@267) ($generated@@170 $generated@@264 $generated@@265))  (and ($generated@@251 $generated@@266 $generated@@264) ($generated@@251 $generated@@267 $generated@@265))))
 :pattern ( ($generated@@162 ($generated@@261 $generated@@266 $generated@@267) ($generated@@170 $generated@@264 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@171) (= (type $generated@@269) $generated@@171)) (= ($generated@@177 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@177 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@69)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@81 $generated@@180 $generated@@4)) (= (type $generated@@273) $generated@@69)) (= ($generated@@162 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@180) ($generated@@0 ($generated@@86 $generated@@272 $generated@@274))) ($generated@@251 $generated@@274 $generated@@273))
 :pattern ( ($generated@@86 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@162 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@69)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@81 $generated@@180 $generated@@4)) (= (type $generated@@278) $generated@@69)) (= ($generated@@162 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@180) ($generated@@0 ($generated@@86 $generated@@277 $generated@@279))) ($generated@@251 $generated@@279 $generated@@278))
 :pattern ( ($generated@@86 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@162 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ) (! (let (($generated@@282 (type $generated@@281)))
(= (type ($generated@@280 $generated@@281)) $generated@@282))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= ($generated@@280 $generated@@283) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@286) $generated@@69) (= (type $generated@@287) $generated@@69)) (= (type $generated@@288) $generated@@180)) (= (type $generated@@289) $generated@@180)) (= (type $generated@@290) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@284 $generated@@290)) (= ($generated@@79 ($generated@@261 $generated@@288 $generated@@289) ($generated@@170 $generated@@286 $generated@@287) $generated@@290)  (and ($generated@@285 $generated@@288 $generated@@286 $generated@@290) ($generated@@285 $generated@@289 $generated@@287 $generated@@290))))
 :pattern ( ($generated@@79 ($generated@@261 $generated@@288 $generated@@289) ($generated@@170 $generated@@286 $generated@@287) $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@73)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@171) (= ($generated@@169 $generated@@293) (= ($generated@@291 $generated@@293) $generated@@63)))
 :pattern ( ($generated@@169 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@171) ($generated@@169 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@180) (= (type $generated@@296) $generated@@180)) (= $generated@@294 ($generated@@261 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@169 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 17)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@69) (= (type $generated@@306) $generated@@82)) (= ($generated@@162 $generated@@306 ($generated@@164 $generated@@305))  (and ($generated@@162 $generated@@306 ($generated@@137 $generated@@305)) (not (= $generated@@306 $generated@@138)))))
 :pattern ( ($generated@@162 $generated@@306 ($generated@@164 $generated@@305)))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@69) (= (type $generated@@309) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@285 ($generated@@252 $generated@@307) $generated@@308 $generated@@309) ($generated@@79 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@285 ($generated@@252 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@81 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@84 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@81 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@86 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@69) (and (= ($generated@@77 ($generated@@137 $generated@@316)) $generated@@61) (= ($generated@@246 ($generated@@137 $generated@@316)) $generated@@66)))
 :pattern ( ($generated@@137 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@69) (and (= ($generated@@77 ($generated@@164 $generated@@317)) $generated@@62) (= ($generated@@246 ($generated@@164 $generated@@317)) $generated@@66)))
 :pattern ( ($generated@@164 $generated@@317))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@81 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@86 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@86 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@81 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@86 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@86 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@84 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@81 $generated@@355 $generated@@2)) (= ($generated@@186 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@86 $generated@@354 $generated@@356))) (<= ($generated ($generated@@86 $generated@@354 $generated@@356)) ($generated@@310 $generated@@354))))
 :pattern ( ($generated@@86 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@186 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (= (type ($generated@@357 $generated@@358)) $generated@@69)
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@69) (= (type $generated@@360) $generated@@82)) (= ($generated@@162 $generated@@360 ($generated@@137 $generated@@359))  (or (= $generated@@360 $generated@@138) (= ($generated@@357 $generated@@360) ($generated@@137 $generated@@359)))))
 :pattern ( ($generated@@162 $generated@@360 ($generated@@137 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@322 (type $generated@@361))))
(let (($generated@@363 ($generated@@321 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@320 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@319 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@86 ($generated@@318 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@318 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@81 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@322 (type $generated@@368))))
(let (($generated@@370 ($generated@@321 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@320 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@319 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@86 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@340 (type $generated@@372))))
(let (($generated@@374 ($generated@@339 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@338 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@337 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@86 ($generated@@336 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@336 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@340 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@81 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@340 (type $generated@@379))))
(let (($generated@@381 ($generated@@339 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@338 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@337 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@86 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@81 $generated@@180 $generated@@2)) (= (type $generated@@384) $generated@@69)) (= ($generated@@162 $generated@@383 ($generated@@185 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@180) (< 0 ($generated ($generated@@86 $generated@@383 $generated@@385)))) ($generated@@251 $generated@@385 $generated@@384))
 :pattern ( ($generated@@86 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@162 $generated@@383 ($generated@@185 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@81 $generated@@180 $generated@@4)) (= (type $generated@@387) $generated@@69)) (= (type $generated@@388) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@386 ($generated@@270 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@180) ($generated@@0 ($generated@@86 $generated@@386 $generated@@389))) ($generated@@285 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@86 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@79 $generated@@386 ($generated@@270 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@81 $generated@@180 $generated@@4)) (= (type $generated@@391) $generated@@69)) (= (type $generated@@392) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@390 ($generated@@275 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@180) ($generated@@0 ($generated@@86 $generated@@390 $generated@@393))) ($generated@@285 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@86 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@79 $generated@@390 ($generated@@275 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@86 ($generated@@311 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@86 ($generated@@311 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@81 $generated@@180 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@322 (type $generated@@399))))
(let (($generated@@401 ($generated@@321 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@320 $generated@@180 $generated@@180)) (= (type $generated@@403) $generated@@180)) (= ($generated@@0 ($generated@@86 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@86 ($generated@@318 $generated@@402) ($generated@@178 ($generated@@253 $generated@@171 $generated@@403)))) (= ($generated@@86 ($generated@@397 $generated@@402) ($generated@@178 ($generated@@253 $generated@@171 $generated@@403))) ($generated@@179 ($generated@@253 $generated@@171 $generated@@403))))))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@81 $generated@@180 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@340 (type $generated@@407))))
(let (($generated@@409 ($generated@@339 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@81 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@338 $generated@@180 $generated@@180)) (= (type $generated@@411) $generated@@180)) (= ($generated@@0 ($generated@@86 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@86 ($generated@@336 $generated@@410) ($generated@@178 ($generated@@253 $generated@@171 $generated@@411)))) (= ($generated@@86 ($generated@@405 $generated@@410) ($generated@@178 ($generated@@253 $generated@@171 $generated@@411))) ($generated@@179 ($generated@@253 $generated@@171 $generated@@411))))))
 :pattern ( ($generated@@86 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@321 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@320 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@86 ($generated@@365 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@86 ($generated@@318 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@86 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@86 ($generated@@318 $generated@@412) $generated@@416))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@86 ($generated@@365 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@339 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@338 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@86 ($generated@@376 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@86 ($generated@@336 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@86 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@86 ($generated@@336 $generated@@417) $generated@@421))
 :pattern ( ($generated@@86 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@86 ($generated@@376 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@69)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@320 $generated@@180 $generated@@180)) (= (type $generated@@426) $generated@@69)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@180) ($generated@@0 ($generated@@86 ($generated@@318 $generated@@425) $generated@@429))) (and ($generated@@285 ($generated@@86 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@285 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@86 ($generated@@318 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@79 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@69)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@338 $generated@@180 $generated@@180)) (= (type $generated@@434) $generated@@69)) (= (type $generated@@435) $generated@@69)) (= (type $generated@@436) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@180) ($generated@@0 ($generated@@86 ($generated@@336 $generated@@433) $generated@@437))) (and ($generated@@285 ($generated@@86 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@285 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@86 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@86 ($generated@@336 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@79 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@T) ) (! (= (type ($generated@@438 $generated@@439)) ($generated@@81 $generated@@439 $generated@@4))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@340 (type $generated@@440))))
(let (($generated@@442 ($generated@@339 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@338 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@337 $generated@@442 $generated@@441)) (= ($generated@@336 $generated@@440) ($generated@@438 $generated@@442))))))
 :pattern ( ($generated@@336 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@340 (type $generated@@443))))
(let (($generated@@445 ($generated@@339 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@338 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@337 $generated@@445 $generated@@444)) (= ($generated@@376 $generated@@443) ($generated@@438 $generated@@444))))))
 :pattern ( ($generated@@376 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@340 (type $generated@@446))))
(let (($generated@@448 ($generated@@339 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@338 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@337 $generated@@448 $generated@@447)) (= ($generated@@404 $generated@@446) ($generated@@438 $generated@@180))))))
 :pattern ( ($generated@@404 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@322 (type $generated@@449))))
(let (($generated@@451 ($generated@@321 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@320 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@319 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@180) (= (type $generated@@453) $generated@@180)) ($generated@@0 ($generated@@86 ($generated@@396 $generated@@449) ($generated@@252 ($generated@@261 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@180) (= (type $generated@@458) $generated@@180)) ($generated@@0 ($generated@@86 ($generated@@404 $generated@@454) ($generated@@252 ($generated@@261 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@404 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@180) ($generated@@251 $generated@@459 $generated@@46)) (and (= ($generated@@252 ($generated@@253 $generated@@2 $generated@@459)) $generated@@459) ($generated@@162 ($generated@@253 $generated@@2 $generated@@459) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@459 $generated@@46))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@180) ($generated@@251 $generated@@460 $generated@@47)) (and (= ($generated@@252 ($generated@@253 $generated@@3 $generated@@460)) $generated@@460) ($generated@@162 ($generated@@253 $generated@@3 $generated@@460) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@460 $generated@@47))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@180) ($generated@@251 $generated@@461 $generated@@44)) (and (= ($generated@@252 ($generated@@253 $generated@@4 $generated@@461)) $generated@@461) ($generated@@162 ($generated@@253 $generated@@4 $generated@@461) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@461 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@462) 20))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@180) ($generated@@251 $generated@@463 $generated@@45)) (and (= ($generated@@252 ($generated@@253 $generated@@462 $generated@@463)) $generated@@463) ($generated@@162 ($generated@@253 $generated@@462 $generated@@463) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@463 $generated@@45))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@69) (= ($generated@@251 ($generated@@252 $generated@@464) $generated@@465) ($generated@@162 $generated@@464 $generated@@465)))
 :pattern ( ($generated@@251 ($generated@@252 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@84 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@81 $generated@@467 $generated@@2)) (<= 0 ($generated@@310 $generated@@466))))
 :pattern ( ($generated@@310 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@300 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@299 $generated@@469)) (<= 0 ($generated@@298 $generated@@468))))
 :pattern ( ($generated@@298 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@422 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@422 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@422 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@77 ($generated@@422 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@430 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@430 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@69)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@484 ($generated@@430 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@69) (= (type $generated@@489) $generated@@69)) (= ($generated@@77 ($generated@@430 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@180) (= (type $generated@@491) $generated@@180)) (= ($generated@@291 ($generated@@261 $generated@@490 $generated@@491)) $generated@@63))
 :pattern ( ($generated@@261 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@492 ($generated@@170 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@170 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@69)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@69) (= (type $generated@@499) $generated@@69)) (= ($generated@@496 ($generated@@170 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@170 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@180) (= (type $generated@@501) $generated@@180)) (= ($generated@@178 ($generated@@261 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@261 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@180) (= (type $generated@@503) $generated@@180)) (= ($generated@@179 ($generated@@261 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@261 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@300 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@299 $generated@@180)) (= (type $generated@@511) $generated@@69)) (= (type $generated@@512) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@298 $generated@@510))) ($generated@@285 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@79 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@80 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@80 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@270 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@270 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@270 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@275 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@275 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@275 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@185 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@185 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@185 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@185 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@69)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@69) (= ($generated@@528 ($generated@@504 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@504 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@69) (= ($generated@@77 ($generated@@504 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@69) (= ($generated@@532 ($generated@@137 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@137 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@69)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@69) (= ($generated@@535 ($generated@@164 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@164 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(= ($generated@@253 $generated@@539 ($generated@@252 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@252 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@320 $generated@@180 $generated@@180)) (= (type $generated@@541) $generated@@69)) (= (type $generated@@542) $generated@@69)) (= ($generated@@162 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@180) ($generated@@0 ($generated@@86 ($generated@@318 $generated@@540) $generated@@543))) (and ($generated@@251 ($generated@@86 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@251 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@86 ($generated@@318 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@162 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@338 $generated@@180 $generated@@180)) (= (type $generated@@545) $generated@@69)) (= (type $generated@@546) $generated@@69)) (= ($generated@@162 $generated@@544 ($generated@@430 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@180) ($generated@@0 ($generated@@86 ($generated@@336 $generated@@544) $generated@@547))) (and ($generated@@251 ($generated@@86 ($generated@@405 $generated@@544) $generated@@547) $generated@@546) ($generated@@251 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@86 ($generated@@405 $generated@@544) $generated@@547))
 :pattern ( ($generated@@86 ($generated@@336 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@162 $generated@@544 ($generated@@430 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@180) (= (type $generated@@551) $generated@@180)) (< ($generated@@548 $generated@@550) ($generated@@549 ($generated@@261 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@261 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@180) (= (type $generated@@553) $generated@@180)) (< ($generated@@548 $generated@@553) ($generated@@549 ($generated@@261 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@261 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@180) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@69)) ($generated@@251 $generated@@554 ($generated@@422 $generated@@555 $generated@@556))) (and (= ($generated@@252 ($generated@@253 ($generated@@320 $generated@@180 $generated@@180) $generated@@554)) $generated@@554) ($generated@@162 ($generated@@253 ($generated@@320 $generated@@180 $generated@@180) $generated@@554) ($generated@@422 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@251 $generated@@554 ($generated@@422 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@180) (= (type $generated@@558) $generated@@69)) (= (type $generated@@559) $generated@@69)) ($generated@@251 $generated@@557 ($generated@@430 $generated@@558 $generated@@559))) (and (= ($generated@@252 ($generated@@253 ($generated@@338 $generated@@180 $generated@@180) $generated@@557)) $generated@@557) ($generated@@162 ($generated@@253 ($generated@@338 $generated@@180 $generated@@180) $generated@@557) ($generated@@430 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@251 $generated@@557 ($generated@@430 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@69) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) $generated@@180)) ($generated@@251 $generated@@562 ($generated@@170 $generated@@560 $generated@@561))) (and (= ($generated@@252 ($generated@@253 $generated@@171 $generated@@562)) $generated@@562) ($generated@@162 ($generated@@253 $generated@@171 $generated@@562) ($generated@@170 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@251 $generated@@562 ($generated@@170 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@86 ($generated@@438 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@86 ($generated@@438 $generated@@564) $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@69) (= (type $generated@@566) $generated@@69)) (and (= ($generated@@77 ($generated@@170 $generated@@565 $generated@@566)) $generated@@64) (= ($generated@@246 ($generated@@170 $generated@@565 $generated@@566)) $generated@@67)))
 :pattern ( ($generated@@170 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@171) (= ($generated@@548 ($generated@@252 $generated@@567)) ($generated@@549 $generated@@567)))
 :pattern ( ($generated@@548 ($generated@@252 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@180) ($generated@@251 $generated@@568 ($generated@@80 0))) (and (= ($generated@@252 ($generated@@253 $generated@@2 $generated@@568)) $generated@@568) ($generated@@162 ($generated@@253 ($generated@@81 $generated@@180 $generated@@4) $generated@@568) ($generated@@80 0))))
 :pattern ( ($generated@@251 $generated@@568 ($generated@@80 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@180) (= (type $generated@@570) $generated@@69)) ($generated@@251 $generated@@569 ($generated@@270 $generated@@570))) (and (= ($generated@@252 ($generated@@253 ($generated@@81 $generated@@180 $generated@@4) $generated@@569)) $generated@@569) ($generated@@162 ($generated@@253 ($generated@@81 $generated@@180 $generated@@4) $generated@@569) ($generated@@270 $generated@@570))))
 :pattern ( ($generated@@251 $generated@@569 ($generated@@270 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@180) (= (type $generated@@572) $generated@@69)) ($generated@@251 $generated@@571 ($generated@@275 $generated@@572))) (and (= ($generated@@252 ($generated@@253 ($generated@@81 $generated@@180 $generated@@4) $generated@@571)) $generated@@571) ($generated@@162 ($generated@@253 ($generated@@81 $generated@@180 $generated@@4) $generated@@571) ($generated@@275 $generated@@572))))
 :pattern ( ($generated@@251 $generated@@571 ($generated@@275 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@180) (= (type $generated@@574) $generated@@69)) ($generated@@251 $generated@@573 ($generated@@185 $generated@@574))) (and (= ($generated@@252 ($generated@@253 ($generated@@81 $generated@@180 $generated@@2) $generated@@573)) $generated@@573) ($generated@@162 ($generated@@253 ($generated@@81 $generated@@180 $generated@@2) $generated@@573) ($generated@@185 $generated@@574))))
 :pattern ( ($generated@@251 $generated@@573 ($generated@@185 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@180) (= (type $generated@@576) $generated@@69)) ($generated@@251 $generated@@575 ($generated@@504 $generated@@576))) (and (= ($generated@@252 ($generated@@253 ($generated@@299 $generated@@180) $generated@@575)) $generated@@575) ($generated@@162 ($generated@@253 ($generated@@299 $generated@@180) $generated@@575) ($generated@@504 $generated@@576))))
 :pattern ( ($generated@@251 $generated@@575 ($generated@@504 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@69) (= (type $generated@@578) $generated@@180)) ($generated@@251 $generated@@578 ($generated@@137 $generated@@577))) (and (= ($generated@@252 ($generated@@253 $generated@@82 $generated@@578)) $generated@@578) ($generated@@162 ($generated@@253 $generated@@82 $generated@@578) ($generated@@137 $generated@@577))))
 :pattern ( ($generated@@251 $generated@@578 ($generated@@137 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@69) (= (type $generated@@580) $generated@@180)) ($generated@@251 $generated@@580 ($generated@@164 $generated@@579))) (and (= ($generated@@252 ($generated@@253 $generated@@82 $generated@@580)) $generated@@580) ($generated@@162 ($generated@@253 $generated@@82 $generated@@580) ($generated@@164 $generated@@579))))
 :pattern ( ($generated@@251 $generated@@580 ($generated@@164 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@81 $generated@@180 $generated@@2)) (= (type $generated@@582) $generated@@69)) (= (type $generated@@583) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@581 ($generated@@185 $generated@@582) $generated@@583) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@180) (< 0 ($generated ($generated@@86 $generated@@581 $generated@@584)))) ($generated@@285 $generated@@584 $generated@@582 $generated@@583))
 :pattern ( ($generated@@86 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@79 $generated@@581 ($generated@@185 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@171) (= (type $generated@@586) $generated@@69)) (= (type $generated@@587) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@284 $generated@@587) (and ($generated@@169 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@69) ($generated@@79 $generated@@585 ($generated@@170 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@79 $generated@@585 ($generated@@170 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@285 ($generated@@178 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@285 ($generated@@178 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@171) (= (type $generated@@590) $generated@@69)) (= (type $generated@@591) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@284 $generated@@591) (and ($generated@@169 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@69) ($generated@@79 $generated@@589 ($generated@@170 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@79 $generated@@589 ($generated@@170 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@285 ($generated@@179 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@285 ($generated@@179 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@180) (= (type $generated@@594) $generated@@180)) (= ($generated@@261 ($generated@@280 $generated@@593) ($generated@@280 $generated@@594)) ($generated@@280 ($generated@@261 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@261 ($generated@@280 $generated@@593) ($generated@@280 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@252 ($generated@@280 $generated@@595)) ($generated@@280 ($generated@@252 $generated@@595)))
 :pattern ( ($generated@@252 ($generated@@280 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@300 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@299 $generated@@597)) (= ($generated@@298 $generated@@596) 0)) (= $generated@@596 ($generated@@297 $generated@@597))))
 :pattern ( ($generated@@298 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@81 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@310 ($generated@@87 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@310 $generated@@598) ($generated ($generated@@86 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@310 ($generated@@87 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@2)) ($generated@@79 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@605) $generated@@3)) ($generated@@79 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@79 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@607) $generated@@4)) ($generated@@79 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@79 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@609) $generated@@462)) ($generated@@79 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@79 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@611) $generated@@180)) ($generated@@79 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@79 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@299 $generated@@180)) (= (type $generated@@613) $generated@@69)) (= ($generated@@162 $generated@@612 ($generated@@504 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@298 $generated@@612))) ($generated@@251 ($generated@@505 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@505 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@162 $generated@@612 ($generated@@504 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@299 $generated@@180)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@298 $generated@@616))) (< ($generated@@549 ($generated@@253 $generated@@171 ($generated@@505 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@549 ($generated@@253 $generated@@171 ($generated@@505 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@320 $generated@@180 $generated@@180)) (= (type $generated@@619) $generated@@69)) (= (type $generated@@620) $generated@@69)) ($generated@@162 $generated@@618 ($generated@@422 $generated@@619 $generated@@620))) (and (and ($generated@@162 ($generated@@318 $generated@@618) ($generated@@270 $generated@@619)) ($generated@@162 ($generated@@365 $generated@@618) ($generated@@270 $generated@@620))) ($generated@@162 ($generated@@396 $generated@@618) ($generated@@270 ($generated@@170 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@162 $generated@@618 ($generated@@422 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@338 $generated@@180 $generated@@180)) (= (type $generated@@622) $generated@@69)) (= (type $generated@@623) $generated@@69)) ($generated@@162 $generated@@621 ($generated@@430 $generated@@622 $generated@@623))) (and (and ($generated@@162 ($generated@@336 $generated@@621) ($generated@@275 $generated@@622)) ($generated@@162 ($generated@@376 $generated@@621) ($generated@@275 $generated@@623))) ($generated@@162 ($generated@@404 $generated@@621) ($generated@@275 ($generated@@170 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@162 $generated@@621 ($generated@@430 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@162 $generated@@624 $generated@@46))
 :pattern ( ($generated@@162 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@162 $generated@@625 $generated@@47))
 :pattern ( ($generated@@162 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@162 $generated@@626 $generated@@44))
 :pattern ( ($generated@@162 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@462) ($generated@@162 $generated@@627 $generated@@45))
 :pattern ( ($generated@@162 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@180) ($generated@@162 $generated@@628 $generated@@48))
 :pattern ( ($generated@@162 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(declare-fun $generated@@634 () Int)
(assert  (and (and (and (= (type $generated@@629) ($generated@@192 $generated@@82 $generated@@4)) (= (type $generated@@630) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@631) $generated@@82)) (= (type $generated@@632) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@635  (=> (and (= $generated@@629 ($generated@@191 $generated@@138 $generated@@630 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@631 $generated@@632)))))
(let (($generated@@636  (=> (and (and (and ($generated@@284 $generated@@630) ($generated@@633 $generated@@630)) (and ($generated@@162 $generated@@631 ($generated@@164 ($generated@@170 $generated@@46 $generated@@46))) ($generated@@79 $generated@@631 ($generated@@164 ($generated@@170 $generated@@46 $generated@@46)) $generated@@630))) (and (and ($generated@@162 $generated@@632 ($generated@@164 ($generated@@143 $generated@@46 $generated@@46 $generated@@46))) ($generated@@79 $generated@@632 ($generated@@164 ($generated@@143 $generated@@46 $generated@@46 $generated@@46)) $generated@@630)) (and (= 1 $generated@@634) (= (ControlFlow 0 3) 2)))) $generated@@635)))
$generated@@636)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@605 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (forall (($generated@@139 T@U) ) (! (= (type ($generated@@137 $generated@@139)) $generated@@69)
 :pattern ( ($generated@@137 $generated@@139))
)) (= (type $generated@@138) $generated@@82)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@69) (= (type $generated@@141) $generated@@82)) (= (type $generated@@142) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@141 ($generated@@137 $generated@@140) $generated@@142)  (or (= $generated@@141 $generated@@138) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@141 ($generated@@137 $generated@@140) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@80 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@80 0)))
)))
(assert (forall (($generated@@146 T@U) ) (! (= (type ($generated@@145 $generated@@146)) $generated@@69)
 :pattern ( ($generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@69) (= (type $generated@@148) $generated@@82)) (= (type $generated@@149) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@148 ($generated@@145 $generated@@147) $generated@@149) ($generated@@79 $generated@@148 ($generated@@137 $generated@@147) $generated@@149)))
 :pattern ( ($generated@@79 $generated@@148 ($generated@@145 $generated@@147) $generated@@149))
)))
(assert  (and (= ($generated@@1 $generated@@152) 14) (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@152)) ($generated@@143 $generated@@157 ($generated@@151 $generated@@155 $generated@@156))) ($generated@@150 $generated@@157))
 :pattern ( ($generated@@150 $generated@@157) ($generated@@143 $generated@@157 ($generated@@151 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@152) (= (type $generated@@165) $generated@@152)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@69)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@69)) ($generated@@143 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@143 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@82 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@72 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@82) (= (type $generated@@221) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@222) ($generated@@71 $generated@@4))) (= (type $generated@@224) $generated@@82)) (= (type $generated@@225) ($generated@@71 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@152)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@69) (= (type $generated@@232) $generated@@69)) (= (type $generated@@233) $generated@@161)) (= (type $generated@@234) $generated@@161)) (= ($generated@@143 ($generated@@227 $generated@@233 $generated@@234) ($generated@@151 $generated@@231 $generated@@232))  (and ($generated@@228 $generated@@233 $generated@@231) ($generated@@228 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@143 ($generated@@227 $generated@@233 $generated@@234) ($generated@@151 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) (= (type $generated@@236) $generated@@152)) (= ($generated@@158 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@158 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@69)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@240) $generated@@69)) (= ($generated@@143 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@161) ($generated@@0 ($generated@@86 $generated@@239 $generated@@241))) ($generated@@228 $generated@@241 $generated@@240))
 :pattern ( ($generated@@86 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@143 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@69)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@245) $generated@@69)) (= ($generated@@143 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@161) ($generated@@0 ($generated@@86 $generated@@244 $generated@@246))) ($generated@@228 $generated@@246 $generated@@245))
 :pattern ( ($generated@@86 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@143 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@69) (= (type $generated@@254) $generated@@69)) (= (type $generated@@255) $generated@@161)) (= (type $generated@@256) $generated@@161)) (= (type $generated@@257) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@251 $generated@@257)) (= ($generated@@79 ($generated@@227 $generated@@255 $generated@@256) ($generated@@151 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@79 ($generated@@227 $generated@@255 $generated@@256) ($generated@@151 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@73)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@152) (= ($generated@@150 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@63)))
 :pattern ( ($generated@@150 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@152) ($generated@@150 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@161) (= (type $generated@@263) $generated@@161)) (= $generated@@261 ($generated@@227 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 17)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@69) (= (type $generated@@273) $generated@@82)) (= ($generated@@143 $generated@@273 ($generated@@145 $generated@@272))  (and ($generated@@143 $generated@@273 ($generated@@137 $generated@@272)) (not (= $generated@@273 $generated@@138)))))
 :pattern ( ($generated@@143 $generated@@273 ($generated@@145 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@161)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@69) (= (type $generated@@278) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@252 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@79 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@252 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@81 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@84 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@81 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@86 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@74)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@69) (and (= ($generated@@77 ($generated@@137 $generated@@287)) $generated@@61) (= ($generated@@285 ($generated@@137 $generated@@287)) $generated@@66)))
 :pattern ( ($generated@@137 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@69) (and (= ($generated@@77 ($generated@@145 $generated@@288)) $generated@@62) (= ($generated@@285 ($generated@@145 $generated@@288)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@81 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@86 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@86 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@81 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@86 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@86 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@84 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@81 $generated@@326 $generated@@2)) (= ($generated@@167 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@86 $generated@@325 $generated@@327))) (<= ($generated ($generated@@86 $generated@@325 $generated@@327)) ($generated@@279 $generated@@325))))
 :pattern ( ($generated@@86 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@167 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@69)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@69) (= (type $generated@@331) $generated@@82)) (= ($generated@@143 $generated@@331 ($generated@@137 $generated@@330))  (or (= $generated@@331 $generated@@138) (= ($generated@@328 $generated@@331) ($generated@@137 $generated@@330)))))
 :pattern ( ($generated@@143 $generated@@331 ($generated@@137 $generated@@330)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@293 (type $generated@@332))))
(let (($generated@@334 ($generated@@292 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@291 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@290 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@86 ($generated@@289 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@289 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@81 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(let (($generated@@341 ($generated@@292 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@291 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@290 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@86 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@311 (type $generated@@343))))
(let (($generated@@345 ($generated@@310 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@309 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@308 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@86 ($generated@@307 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@307 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@81 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@86 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@355) $generated@@69)) (= ($generated@@143 $generated@@354 ($generated@@166 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@354 $generated@@356)))) ($generated@@228 $generated@@356 $generated@@355))
 :pattern ( ($generated@@86 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@143 $generated@@354 ($generated@@166 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@358) $generated@@69)) (= (type $generated@@359) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@357 ($generated@@237 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@161) ($generated@@0 ($generated@@86 $generated@@357 $generated@@360))) ($generated@@252 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@86 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@79 $generated@@357 ($generated@@237 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@81 $generated@@161 $generated@@4)) (= (type $generated@@362) $generated@@69)) (= (type $generated@@363) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@361 ($generated@@242 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@161) ($generated@@0 ($generated@@86 $generated@@361 $generated@@364))) ($generated@@252 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@86 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@79 $generated@@361 ($generated@@242 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@86 ($generated@@280 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@86 ($generated@@280 $generated@@366) $generated@@365)))
)))
(assert  (and (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@370)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@367 $generated@@370))
)) (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@368 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@368 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@293 (type $generated@@373))))
(let (($generated@@375 ($generated@@292 (type $generated@@373))))
(= (type ($generated@@369 $generated@@373)) ($generated@@81 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@369 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@291 $generated@@161 $generated@@161)) (= (type $generated@@377) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@367 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@86 ($generated@@289 $generated@@376) ($generated@@159 ($generated@@368 $generated@@152 $generated@@377)))) (= ($generated@@86 ($generated@@369 $generated@@376) ($generated@@159 ($generated@@368 $generated@@152 $generated@@377))) ($generated@@160 ($generated@@368 $generated@@152 $generated@@377))))))
 :pattern ( ($generated@@86 ($generated@@367 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@81 $generated@@161 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@311 (type $generated@@381))))
(let (($generated@@383 ($generated@@310 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@81 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@309 $generated@@161 $generated@@161)) (= (type $generated@@385) $generated@@161)) (= ($generated@@0 ($generated@@86 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@86 ($generated@@307 $generated@@384) ($generated@@159 ($generated@@368 $generated@@152 $generated@@385)))) (= ($generated@@86 ($generated@@379 $generated@@384) ($generated@@159 ($generated@@368 $generated@@152 $generated@@385))) ($generated@@160 ($generated@@368 $generated@@152 $generated@@385))))))
 :pattern ( ($generated@@86 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@292 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@291 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@86 ($generated@@336 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@86 ($generated@@289 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@86 ($generated@@369 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@86 ($generated@@289 $generated@@386) $generated@@390))
 :pattern ( ($generated@@86 ($generated@@369 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@86 ($generated@@336 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@310 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@309 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@86 ($generated@@347 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@86 ($generated@@307 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@86 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@86 ($generated@@307 $generated@@391) $generated@@395))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@86 ($generated@@347 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@69)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@291 $generated@@161 $generated@@161)) (= (type $generated@@400) $generated@@69)) (= (type $generated@@401) $generated@@69)) (= (type $generated@@402) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@289 $generated@@399) $generated@@403))) (and ($generated@@252 ($generated@@86 ($generated@@369 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@252 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@86 ($generated@@369 $generated@@399) $generated@@403))
 :pattern ( ($generated@@86 ($generated@@289 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@79 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@69)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@309 $generated@@161 $generated@@161)) (= (type $generated@@408) $generated@@69)) (= (type $generated@@409) $generated@@69)) (= (type $generated@@410) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@307 $generated@@407) $generated@@411))) (and ($generated@@252 ($generated@@86 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@252 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@86 ($generated@@307 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@79 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@81 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@307 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@307 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@347 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@347 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@311 (type $generated@@420))))
(let (($generated@@422 ($generated@@310 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@309 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@308 $generated@@422 $generated@@421)) (= ($generated@@378 $generated@@420) ($generated@@412 $generated@@161))))))
 :pattern ( ($generated@@378 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@293 (type $generated@@423))))
(let (($generated@@425 ($generated@@292 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@291 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@290 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@161) (= (type $generated@@427) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@367 $generated@@423) ($generated@@274 ($generated@@227 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@367 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@311 (type $generated@@428))))
(let (($generated@@430 ($generated@@310 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@309 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@308 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@161) (= (type $generated@@432) $generated@@161)) ($generated@@0 ($generated@@86 ($generated@@378 $generated@@428) ($generated@@274 ($generated@@227 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@378 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@161) ($generated@@228 $generated@@433 $generated@@46)) (and (= ($generated@@274 ($generated@@368 $generated@@2 $generated@@433)) $generated@@433) ($generated@@143 ($generated@@368 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@228 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@161) ($generated@@228 $generated@@434 $generated@@47)) (and (= ($generated@@274 ($generated@@368 $generated@@3 $generated@@434)) $generated@@434) ($generated@@143 ($generated@@368 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@228 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@161) ($generated@@228 $generated@@435 $generated@@44)) (and (= ($generated@@274 ($generated@@368 $generated@@4 $generated@@435)) $generated@@435) ($generated@@143 ($generated@@368 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@228 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 20))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@161) ($generated@@228 $generated@@437 $generated@@45)) (and (= ($generated@@274 ($generated@@368 $generated@@436 $generated@@437)) $generated@@437) ($generated@@143 ($generated@@368 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@228 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@69) (= ($generated@@228 ($generated@@274 $generated@@438) $generated@@439) ($generated@@143 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@228 ($generated@@274 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@84 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@81 $generated@@441 $generated@@2)) (<= 0 ($generated@@279 $generated@@440))))
 :pattern ( ($generated@@279 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@267 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@266 $generated@@443)) (<= 0 ($generated@@265 $generated@@442))))
 :pattern ( ($generated@@265 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@69)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@69) (= (type $generated@@447) $generated@@69)) (= ($generated@@444 ($generated@@396 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@396 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@69)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@69) (= (type $generated@@451) $generated@@69)) (= ($generated@@448 ($generated@@396 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@69) (= (type $generated@@453) $generated@@69)) (= ($generated@@77 ($generated@@396 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@69)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@69) (= (type $generated@@457) $generated@@69)) (= ($generated@@454 ($generated@@404 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@404 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@69)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@69) (= (type $generated@@461) $generated@@69)) (= ($generated@@458 ($generated@@404 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@69) (= (type $generated@@463) $generated@@69)) (= ($generated@@77 ($generated@@404 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@161) (= (type $generated@@465) $generated@@161)) (= ($generated@@258 ($generated@@227 $generated@@464 $generated@@465)) $generated@@63))
 :pattern ( ($generated@@227 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@151 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@151 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@151 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@151 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@161) (= (type $generated@@475) $generated@@161)) (= ($generated@@159 ($generated@@227 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@227 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@161) (= (type $generated@@477) $generated@@161)) (= ($generated@@160 ($generated@@227 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@227 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
)) (forall (($generated@@482 T@U) ) (! (= (type ($generated@@479 $generated@@482)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@482))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@479 ($generated@@478 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@478 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@69)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@69) (= (type $generated@@488) $generated@@69)) (= ($generated@@485 ($generated@@478 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@478 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@69)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@267 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@266 $generated@@161)) (= (type $generated@@496) $generated@@69)) (= (type $generated@@497) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@265 $generated@@495))) ($generated@@252 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@79 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@80 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@80 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@69) (= ($generated@@501 ($generated@@237 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@237 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@77 ($generated@@237 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@69) (= ($generated@@505 ($generated@@242 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@242 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@77 ($generated@@242 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@69) (= ($generated@@509 ($generated@@166 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@166 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@77 ($generated@@166 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@69)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@77 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@517 ($generated@@137 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@137 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@145 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@145 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@368 $generated@@524 ($generated@@274 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@274 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@291 $generated@@161 $generated@@161)) (= (type $generated@@526) $generated@@69)) (= (type $generated@@527) $generated@@69)) (= ($generated@@143 $generated@@525 ($generated@@396 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@289 $generated@@525) $generated@@528))) (and ($generated@@228 ($generated@@86 ($generated@@369 $generated@@525) $generated@@528) $generated@@527) ($generated@@228 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@86 ($generated@@369 $generated@@525) $generated@@528))
 :pattern ( ($generated@@86 ($generated@@289 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@143 $generated@@525 ($generated@@396 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@309 $generated@@161 $generated@@161)) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@69)) (= ($generated@@143 $generated@@529 ($generated@@404 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@161) ($generated@@0 ($generated@@86 ($generated@@307 $generated@@529) $generated@@532))) (and ($generated@@228 ($generated@@86 ($generated@@379 $generated@@529) $generated@@532) $generated@@531) ($generated@@228 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@529) $generated@@532))
 :pattern ( ($generated@@86 ($generated@@307 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@143 $generated@@529 ($generated@@404 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@161) (= (type $generated@@536) $generated@@161)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@227 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@227 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@161) (= (type $generated@@538) $generated@@161)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@227 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@227 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@161) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) ($generated@@228 $generated@@539 ($generated@@396 $generated@@540 $generated@@541))) (and (= ($generated@@274 ($generated@@368 ($generated@@291 $generated@@161 $generated@@161) $generated@@539)) $generated@@539) ($generated@@143 ($generated@@368 ($generated@@291 $generated@@161 $generated@@161) $generated@@539) ($generated@@396 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@228 $generated@@539 ($generated@@396 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@161) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) ($generated@@228 $generated@@542 ($generated@@404 $generated@@543 $generated@@544))) (and (= ($generated@@274 ($generated@@368 ($generated@@309 $generated@@161 $generated@@161) $generated@@542)) $generated@@542) ($generated@@143 ($generated@@368 ($generated@@309 $generated@@161 $generated@@161) $generated@@542) ($generated@@404 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@228 $generated@@542 ($generated@@404 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@69) (= (type $generated@@546) $generated@@69)) (= (type $generated@@547) $generated@@161)) ($generated@@228 $generated@@547 ($generated@@151 $generated@@545 $generated@@546))) (and (= ($generated@@274 ($generated@@368 $generated@@152 $generated@@547)) $generated@@547) ($generated@@143 ($generated@@368 $generated@@152 $generated@@547) ($generated@@151 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@228 $generated@@547 ($generated@@151 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@69) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@161)) ($generated@@228 $generated@@550 ($generated@@478 $generated@@548 $generated@@549))) (and (= ($generated@@274 ($generated@@368 $generated@@152 $generated@@550)) $generated@@550) ($generated@@143 ($generated@@368 $generated@@152 $generated@@550) ($generated@@478 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@228 $generated@@550 ($generated@@478 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@86 ($generated@@412 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@86 ($generated@@412 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@69) (= (type $generated@@554) $generated@@69)) (and (= ($generated@@77 ($generated@@151 $generated@@553 $generated@@554)) $generated@@64) (= ($generated@@285 ($generated@@151 $generated@@553 $generated@@554)) $generated@@67)))
 :pattern ( ($generated@@151 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@69) (= (type $generated@@556) $generated@@69)) (and (= ($generated@@77 ($generated@@478 $generated@@555 $generated@@556)) $generated@@65) (= ($generated@@285 ($generated@@478 $generated@@555 $generated@@556)) $generated@@68)))
 :pattern ( ($generated@@478 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@152) (= ($generated@@533 ($generated@@274 $generated@@557)) ($generated@@534 $generated@@557)))
 :pattern ( ($generated@@533 ($generated@@274 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@161) ($generated@@228 $generated@@558 ($generated@@80 0))) (and (= ($generated@@274 ($generated@@368 $generated@@2 $generated@@558)) $generated@@558) ($generated@@143 ($generated@@368 ($generated@@81 $generated@@161 $generated@@4) $generated@@558) ($generated@@80 0))))
 :pattern ( ($generated@@228 $generated@@558 ($generated@@80 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@161) (= (type $generated@@560) $generated@@69)) ($generated@@228 $generated@@559 ($generated@@237 $generated@@560))) (and (= ($generated@@274 ($generated@@368 ($generated@@81 $generated@@161 $generated@@4) $generated@@559)) $generated@@559) ($generated@@143 ($generated@@368 ($generated@@81 $generated@@161 $generated@@4) $generated@@559) ($generated@@237 $generated@@560))))
 :pattern ( ($generated@@228 $generated@@559 ($generated@@237 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@161) (= (type $generated@@562) $generated@@69)) ($generated@@228 $generated@@561 ($generated@@242 $generated@@562))) (and (= ($generated@@274 ($generated@@368 ($generated@@81 $generated@@161 $generated@@4) $generated@@561)) $generated@@561) ($generated@@143 ($generated@@368 ($generated@@81 $generated@@161 $generated@@4) $generated@@561) ($generated@@242 $generated@@562))))
 :pattern ( ($generated@@228 $generated@@561 ($generated@@242 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@161) (= (type $generated@@564) $generated@@69)) ($generated@@228 $generated@@563 ($generated@@166 $generated@@564))) (and (= ($generated@@274 ($generated@@368 ($generated@@81 $generated@@161 $generated@@2) $generated@@563)) $generated@@563) ($generated@@143 ($generated@@368 ($generated@@81 $generated@@161 $generated@@2) $generated@@563) ($generated@@166 $generated@@564))))
 :pattern ( ($generated@@228 $generated@@563 ($generated@@166 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@161) (= (type $generated@@566) $generated@@69)) ($generated@@228 $generated@@565 ($generated@@489 $generated@@566))) (and (= ($generated@@274 ($generated@@368 ($generated@@266 $generated@@161) $generated@@565)) $generated@@565) ($generated@@143 ($generated@@368 ($generated@@266 $generated@@161) $generated@@565) ($generated@@489 $generated@@566))))
 :pattern ( ($generated@@228 $generated@@565 ($generated@@489 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@69) (= (type $generated@@568) $generated@@161)) ($generated@@228 $generated@@568 ($generated@@137 $generated@@567))) (and (= ($generated@@274 ($generated@@368 $generated@@82 $generated@@568)) $generated@@568) ($generated@@143 ($generated@@368 $generated@@82 $generated@@568) ($generated@@137 $generated@@567))))
 :pattern ( ($generated@@228 $generated@@568 ($generated@@137 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@69) (= (type $generated@@570) $generated@@161)) ($generated@@228 $generated@@570 ($generated@@145 $generated@@569))) (and (= ($generated@@274 ($generated@@368 $generated@@82 $generated@@570)) $generated@@570) ($generated@@143 ($generated@@368 $generated@@82 $generated@@570) ($generated@@145 $generated@@569))))
 :pattern ( ($generated@@228 $generated@@570 ($generated@@145 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@81 $generated@@161 $generated@@2)) (= (type $generated@@572) $generated@@69)) (= (type $generated@@573) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@571 ($generated@@166 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@161) (< 0 ($generated ($generated@@86 $generated@@571 $generated@@574)))) ($generated@@252 $generated@@574 $generated@@572 $generated@@573))
 :pattern ( ($generated@@86 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@79 $generated@@571 ($generated@@166 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@152) (= (type $generated@@576) $generated@@69)) (= (type $generated@@577) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@251 $generated@@577) (and ($generated@@150 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@69) ($generated@@79 $generated@@575 ($generated@@151 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@79 $generated@@575 ($generated@@151 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@252 ($generated@@159 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@252 ($generated@@159 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@152) (= (type $generated@@580) $generated@@69)) (= (type $generated@@581) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@251 $generated@@581) (and ($generated@@150 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@69) ($generated@@79 $generated@@579 ($generated@@151 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@79 $generated@@579 ($generated@@151 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@252 ($generated@@160 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@252 ($generated@@160 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@161) (= (type $generated@@584) $generated@@161)) (= ($generated@@227 ($generated@@247 $generated@@583) ($generated@@247 $generated@@584)) ($generated@@247 ($generated@@227 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@227 ($generated@@247 $generated@@583) ($generated@@247 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (= ($generated@@274 ($generated@@247 $generated@@585)) ($generated@@247 ($generated@@274 $generated@@585)))
 :pattern ( ($generated@@274 ($generated@@247 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@267 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@266 $generated@@587)) (= ($generated@@265 $generated@@586) 0)) (= $generated@@586 ($generated@@264 $generated@@587))))
 :pattern ( ($generated@@265 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@589)))
 (=> (and (and (= (type $generated@@588) ($generated@@81 $generated@@591 $generated@@2)) (= (type $generated@@590) $generated@@2)) (<= 0 ($generated $generated@@590))) (= ($generated@@279 ($generated@@87 $generated@@588 $generated@@589 $generated@@590)) (+ (- ($generated@@279 $generated@@588) ($generated ($generated@@86 $generated@@588 $generated@@589))) ($generated $generated@@590)))))
 :pattern ( ($generated@@279 ($generated@@87 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@593) $generated@@2)) ($generated@@79 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@79 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@595) $generated@@3)) ($generated@@79 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@79 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@597) $generated@@4)) ($generated@@79 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@79 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@436)) ($generated@@79 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@161)) ($generated@@79 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@266 $generated@@161)) (= (type $generated@@603) $generated@@69)) (= ($generated@@143 $generated@@602 ($generated@@489 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@265 $generated@@602))) ($generated@@228 ($generated@@490 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@490 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@143 $generated@@602 ($generated@@489 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (= (type $generated@@606) ($generated@@266 $generated@@161)) (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@265 $generated@@606))) (< ($generated@@534 ($generated@@368 $generated@@152 ($generated@@490 $generated@@606 $generated@@607))) ($generated@@605 $generated@@606))))
 :pattern ( ($generated@@534 ($generated@@368 $generated@@152 ($generated@@490 $generated@@606 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@291 $generated@@161 $generated@@161)) (= (type $generated@@609) $generated@@69)) (= (type $generated@@610) $generated@@69)) ($generated@@143 $generated@@608 ($generated@@396 $generated@@609 $generated@@610))) (and (and ($generated@@143 ($generated@@289 $generated@@608) ($generated@@237 $generated@@609)) ($generated@@143 ($generated@@336 $generated@@608) ($generated@@237 $generated@@610))) ($generated@@143 ($generated@@367 $generated@@608) ($generated@@237 ($generated@@151 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@143 $generated@@608 ($generated@@396 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@309 $generated@@161 $generated@@161)) (= (type $generated@@612) $generated@@69)) (= (type $generated@@613) $generated@@69)) ($generated@@143 $generated@@611 ($generated@@404 $generated@@612 $generated@@613))) (and (and ($generated@@143 ($generated@@307 $generated@@611) ($generated@@242 $generated@@612)) ($generated@@143 ($generated@@347 $generated@@611) ($generated@@242 $generated@@613))) ($generated@@143 ($generated@@378 $generated@@611) ($generated@@242 ($generated@@151 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@143 $generated@@611 ($generated@@404 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) ($generated@@143 $generated@@614 $generated@@46))
 :pattern ( ($generated@@143 $generated@@614 $generated@@46))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@3) ($generated@@143 $generated@@615 $generated@@47))
 :pattern ( ($generated@@143 $generated@@615 $generated@@47))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@4) ($generated@@143 $generated@@616 $generated@@44))
 :pattern ( ($generated@@143 $generated@@616 $generated@@44))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@436) ($generated@@143 $generated@@617 $generated@@45))
 :pattern ( ($generated@@143 $generated@@617 $generated@@45))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@161) ($generated@@143 $generated@@618 $generated@@48))
 :pattern ( ($generated@@143 $generated@@618 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () Int)
(assert  (and (and (and (= (type $generated@@619) ($generated@@173 $generated@@82 $generated@@4)) (= (type $generated@@620) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@621) $generated@@82)) (= (type $generated@@622) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@625  (=> (and (= $generated@@619 ($generated@@172 $generated@@138 $generated@@620 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@621 $generated@@622)))))
(let (($generated@@626  (=> (and (and (and ($generated@@251 $generated@@620) ($generated@@623 $generated@@620)) (and ($generated@@143 $generated@@621 ($generated@@145 ($generated@@151 $generated@@46 $generated@@46))) ($generated@@79 $generated@@621 ($generated@@145 ($generated@@151 $generated@@46 $generated@@46)) $generated@@620))) (and (and ($generated@@143 $generated@@622 ($generated@@145 ($generated@@478 $generated@@46 $generated@@46))) ($generated@@79 $generated@@622 ($generated@@145 ($generated@@478 $generated@@46 $generated@@46)) $generated@@620)) (and (= 1 $generated@@624) (= (ControlFlow 0 3) 2)))) $generated@@625)))
$generated@@626)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
