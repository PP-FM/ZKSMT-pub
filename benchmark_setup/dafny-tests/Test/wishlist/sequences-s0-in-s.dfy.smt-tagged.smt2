(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@T) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@336 (T@U Int) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (forall (($generated@@154 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@154)) 16)) (forall (($generated@@155 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@T) ) (! (= (type ($generated@@151 $generated@@156)) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
 (not ($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
 :pattern ( (let (($generated@@158 (type $generated@@157)))
($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@132 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@136)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@145)) (= (type $generated@@227) $generated@@145)) (= ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@136) (= (type $generated@@229) $generated@@136)) (= ($generated@@142 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@142 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@145) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@145)) (= (type $generated@@251) $generated@@145)) (= (type $generated@@252) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@246 $generated@@252)) (= ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@136) (= ($generated@@134 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@136) ($generated@@134 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@145) (= (type $generated@@258) $generated@@145)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert (forall (($generated@@260 T@T) ) (! (= ($generated@@259 ($generated@@151 $generated@@260)) 0)
 :pattern ( ($generated@@151 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@145)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@247 ($generated@@261 $generated@@263) $generated@@264 $generated@@265) ($generated@@74 $generated@@263 $generated@@264 $generated@@265)))
 :pattern ( ($generated@@247 ($generated@@261 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@268 T@T) ) (! (= (type ($generated@@267 $generated@@268)) ($generated@@76 $generated@@268 $generated@@2))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@79 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@76 $generated@@270 $generated@@2)) (and (= (= ($generated@@266 $generated@@269) 0) (= $generated@@269 ($generated@@267 $generated@@270))) (=> (not (= ($generated@@266 $generated@@269) 0)) (exists (($generated@@271 T@U) ) (!  (and (= (type $generated@@271) $generated@@270) (< 0 ($generated ($generated@@81 $generated@@269 $generated@@271))))
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
))))))
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@76 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 19)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@76 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@79 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@76 $generated@@309 $generated@@2)) (= ($generated@@160 $generated@@308) (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@309) (and (<= 0 ($generated ($generated@@81 $generated@@308 $generated@@310))) (<= ($generated ($generated@@81 $generated@@308 $generated@@310)) ($generated@@266 $generated@@308))))
 :pattern ( ($generated@@81 $generated@@308 $generated@@310))
)))))
 :pattern ( ($generated@@160 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(let (($generated@@313 ($generated@@275 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@274 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@273 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@272 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@276 (type $generated@@318))))
(let (($generated@@320 ($generated@@275 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@274 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@273 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@294 (type $generated@@322))))
(let (($generated@@324 ($generated@@293 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@292 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@291 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@290 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@294 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@294 (type $generated@@329))))
(let (($generated@@331 ($generated@@293 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@292 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@291 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@334) $generated@@64)) (= ($generated@@132 $generated@@333 ($generated@@159 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@333 $generated@@335)))) ($generated@@221 $generated@@335 $generated@@334))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@132 $generated@@333 ($generated@@159 $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 Int) ) (! (let (($generated@@339 ($generated@@153 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@339))
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
 (=> (= (type $generated@@340) ($generated@@152 $generated@@342)) (= ($generated@@150 $generated@@340 $generated@@341) (exists (($generated@@343 Int) ) (!  (and (and (<= 0 $generated@@343) (< $generated@@343 ($generated@@259 $generated@@340))) (= ($generated@@336 $generated@@340 $generated@@343) $generated@@341))
 :pattern ( ($generated@@336 $generated@@340 $generated@@343))
)))))
 :pattern ( ($generated@@150 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@345) $generated@@64)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@344 ($generated@@230 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@145) ($generated@@0 ($generated@@81 $generated@@344 $generated@@347))) ($generated@@247 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@74 $generated@@344 ($generated@@230 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@349) $generated@@64)) (= (type $generated@@350) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@348 ($generated@@235 $generated@@349) $generated@@350) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) ($generated@@0 ($generated@@81 $generated@@348 $generated@@351))) ($generated@@247 $generated@@351 $generated@@349 $generated@@350))
 :pattern ( ($generated@@81 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@74 $generated@@348 ($generated@@235 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(= ($generated ($generated@@81 ($generated@@267 $generated@@353) $generated@@352)) 0))
 :pattern ( (let (($generated@@353 (type $generated@@352)))
($generated@@81 ($generated@@267 $generated@@353) $generated@@352)))
)))
(assert  (and (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@354 $generated@@357)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@357))
)) (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@355 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@276 (type $generated@@360))))
(let (($generated@@362 ($generated@@275 (type $generated@@360))))
(= (type ($generated@@356 $generated@@360)) ($generated@@76 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@356 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@364) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@363) ($generated@@143 ($generated@@355 $generated@@136 $generated@@364)))) (= ($generated@@81 ($generated@@356 $generated@@363) ($generated@@143 ($generated@@355 $generated@@136 $generated@@364))) ($generated@@144 ($generated@@355 $generated@@136 $generated@@364))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@294 (type $generated@@368))))
(let (($generated@@370 ($generated@@293 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@372) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@371) ($generated@@143 ($generated@@355 $generated@@136 $generated@@372)))) (= ($generated@@81 ($generated@@366 $generated@@371) ($generated@@143 ($generated@@355 $generated@@136 $generated@@372))) ($generated@@144 ($generated@@355 $generated@@136 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@275 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@274 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@81 ($generated@@315 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@293 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@292 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@64)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@386) $generated@@390))) (and ($generated@@247 ($generated@@81 ($generated@@356 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@247 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@81 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@76 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@294 (type $generated@@401))))
(let (($generated@@403 ($generated@@293 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@292 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@291 $generated@@403 $generated@@402)) (= ($generated@@290 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@290 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@294 (type $generated@@404))))
(let (($generated@@406 ($generated@@293 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@292 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@291 $generated@@406 $generated@@405)) (= ($generated@@326 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@326 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@294 (type $generated@@407))))
(let (($generated@@409 ($generated@@293 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@292 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@291 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@145))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@276 (type $generated@@410))))
(let (($generated@@412 ($generated@@275 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@274 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@273 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@145) (= (type $generated@@414) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@410) ($generated@@261 ($generated@@220 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@354 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@294 (type $generated@@415))))
(let (($generated@@417 ($generated@@293 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@292 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@291 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@415) ($generated@@261 ($generated@@220 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@221 $generated@@420 $generated@@46)) (and (= ($generated@@261 ($generated@@355 $generated@@2 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@355 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@221 $generated@@421 $generated@@47)) (and (= ($generated@@261 ($generated@@355 $generated@@3 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@355 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@221 $generated@@422 $generated@@44)) (and (= ($generated@@261 ($generated@@355 $generated@@4 $generated@@422)) $generated@@422) ($generated@@132 ($generated@@355 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@145) ($generated@@221 $generated@@424 $generated@@45)) (and (= ($generated@@261 ($generated@@355 $generated@@423 $generated@@424)) $generated@@424) ($generated@@132 ($generated@@355 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@64) (= ($generated@@221 ($generated@@261 $generated@@425) $generated@@426) ($generated@@132 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@221 ($generated@@261 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@79 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@76 $generated@@428 $generated@@2)) (<= 0 ($generated@@266 $generated@@427))))
 :pattern ( ($generated@@266 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@153 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@152 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@72 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) (= (type $generated@@452) $generated@@145)) (= ($generated@@253 ($generated@@220 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@135 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@135 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@135 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) (= (type $generated@@462) $generated@@145)) (= ($generated@@143 ($generated@@220 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@220 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@144 ($generated@@220 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@220 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@152 $generated@@145)) (= (type $generated@@468) $generated@@64)) (= (type $generated@@469) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@467 ($generated@@465 $generated@@468) $generated@@469) (forall (($generated@@470 Int) ) (!  (=> (and (<= 0 $generated@@470) (< $generated@@470 ($generated@@259 $generated@@467))) ($generated@@247 ($generated@@336 $generated@@467 $generated@@470) $generated@@468 $generated@@469))
 :pattern ( ($generated@@336 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@74 $generated@@467 ($generated@@465 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 Int) ) (! (= ($generated@@471 ($generated@@75 $generated@@472)) $generated@@472)
 :pattern ( ($generated@@75 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@473 ($generated@@230 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@230 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@476)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@235 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@235 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@480)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@159 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@159 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@484)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@465 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@465 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@465 $generated@@488)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated@@355 $generated@@490 ($generated@@261 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@261 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) (= ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@491) $generated@@494))) (and ($generated@@221 ($generated@@81 ($generated@@356 $generated@@491) $generated@@494) $generated@@493) ($generated@@221 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@491) $generated@@494))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) $generated@@64)) (= ($generated@@132 $generated@@495 ($generated@@391 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@495) $generated@@498))) (and ($generated@@221 ($generated@@81 ($generated@@366 $generated@@495) $generated@@498) $generated@@497) ($generated@@221 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@495) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@132 $generated@@495 ($generated@@391 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (< ($generated@@499 $generated@@501) ($generated@@500 ($generated@@220 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@220 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (< ($generated@@499 $generated@@504) ($generated@@500 ($generated@@220 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@220 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@145) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) ($generated@@221 $generated@@505 ($generated@@383 $generated@@506 $generated@@507))) (and (= ($generated@@261 ($generated@@355 ($generated@@274 $generated@@145 $generated@@145) $generated@@505)) $generated@@505) ($generated@@132 ($generated@@355 ($generated@@274 $generated@@145 $generated@@145) $generated@@505) ($generated@@383 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@221 $generated@@505 ($generated@@383 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) ($generated@@221 $generated@@508 ($generated@@391 $generated@@509 $generated@@510))) (and (= ($generated@@261 ($generated@@355 ($generated@@292 $generated@@145 $generated@@145) $generated@@508)) $generated@@508) ($generated@@132 ($generated@@355 ($generated@@292 $generated@@145 $generated@@145) $generated@@508) ($generated@@391 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@221 $generated@@508 ($generated@@391 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@145)) ($generated@@221 $generated@@513 ($generated@@135 $generated@@511 $generated@@512))) (and (= ($generated@@261 ($generated@@355 $generated@@136 $generated@@513)) $generated@@513) ($generated@@132 ($generated@@355 $generated@@136 $generated@@513) ($generated@@135 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@221 $generated@@513 ($generated@@135 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
 (not ($generated@@0 ($generated@@81 ($generated@@399 $generated@@515) $generated@@514))))
 :pattern ( (let (($generated@@515 (type $generated@@514)))
($generated@@81 ($generated@@399 $generated@@515) $generated@@514)))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@518 $generated@@519)) $generated@@62) (= ($generated@@516 ($generated@@135 $generated@@518 $generated@@519)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@136) (= ($generated@@499 ($generated@@261 $generated@@520)) ($generated@@500 $generated@@520)))
 :pattern ( ($generated@@499 ($generated@@261 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) ($generated@@221 $generated@@521 ($generated@@75 0))) (and (= ($generated@@261 ($generated@@355 $generated@@2 $generated@@521)) $generated@@521) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@521) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@521 ($generated@@75 0)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@221 $generated@@522 ($generated@@230 $generated@@523))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@230 $generated@@523))))
 :pattern ( ($generated@@221 $generated@@522 ($generated@@230 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@221 $generated@@524 ($generated@@235 $generated@@525))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@524) ($generated@@235 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@524 ($generated@@235 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@221 $generated@@526 ($generated@@159 $generated@@527))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@2) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@2) $generated@@526) ($generated@@159 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@526 ($generated@@159 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@221 $generated@@528 ($generated@@465 $generated@@529))) (and (= ($generated@@261 ($generated@@355 ($generated@@152 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@355 ($generated@@152 $generated@@145) $generated@@528) ($generated@@465 $generated@@529))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@465 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@530 ($generated@@159 $generated@@531) $generated@@532) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@530 $generated@@533)))) ($generated@@247 $generated@@533 $generated@@531 $generated@@532))
 :pattern ( ($generated@@81 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@159 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@535 $generated@@537) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@535 $generated@@537) $generated@@536))
))))) ($generated@@247 ($generated@@143 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@247 ($generated@@143 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@136) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@540) (and ($generated@@134 $generated@@538) (exists (($generated@@541 T@U) ) (!  (and (= (type $generated@@541) $generated@@64) ($generated@@74 $generated@@538 ($generated@@135 $generated@@541 $generated@@539) $generated@@540))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@135 $generated@@541 $generated@@539) $generated@@540))
))))) ($generated@@247 ($generated@@144 $generated@@538) $generated@@539 $generated@@540))
 :pattern ( ($generated@@247 ($generated@@144 $generated@@538) $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@145)) (= ($generated@@220 ($generated@@242 $generated@@542) ($generated@@242 $generated@@543)) ($generated@@242 ($generated@@220 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@542) ($generated@@242 $generated@@543)))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@261 ($generated@@8 ($generated@@240 $generated@@544))) ($generated@@242 ($generated@@261 ($generated@@8 $generated@@544))))
 :pattern ( ($generated@@261 ($generated@@8 ($generated@@240 $generated@@544))))
)))
(assert (forall (($generated@@545 T@U) ) (! (= ($generated@@261 ($generated@@242 $generated@@545)) ($generated@@242 ($generated@@261 $generated@@545)))
 :pattern ( ($generated@@261 ($generated@@242 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@153 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@152 $generated@@547)) (= ($generated@@259 $generated@@546) 0)) (= $generated@@546 ($generated@@151 $generated@@547))))
 :pattern ( ($generated@@259 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@549)))
 (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@551 $generated@@2)) (= (type $generated@@550) $generated@@2)) (<= 0 ($generated $generated@@550))) (= ($generated@@266 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)) (+ (- ($generated@@266 $generated@@548) ($generated ($generated@@81 $generated@@548 $generated@@549))) ($generated $generated@@550)))))
 :pattern ( ($generated@@266 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@2)) ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@3)) ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@4)) ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@423)) ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@145)) ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@152 $generated@@145)) (= (type $generated@@563) $generated@@64)) (= ($generated@@132 $generated@@562 ($generated@@465 $generated@@563)) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@259 $generated@@562))) ($generated@@221 ($generated@@336 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@336 $generated@@562 $generated@@564))
))))
 :pattern ( ($generated@@132 $generated@@562 ($generated@@465 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@259 $generated@@566))) (< ($generated@@500 ($generated@@355 $generated@@136 ($generated@@336 $generated@@566 $generated@@567))) ($generated@@565 $generated@@566))))
 :pattern ( ($generated@@500 ($generated@@355 $generated@@136 ($generated@@336 $generated@@566 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@64)) ($generated@@132 $generated@@568 ($generated@@383 $generated@@569 $generated@@570))) (and (and ($generated@@132 ($generated@@272 $generated@@568) ($generated@@230 $generated@@569)) ($generated@@132 ($generated@@315 $generated@@568) ($generated@@230 $generated@@570))) ($generated@@132 ($generated@@354 $generated@@568) ($generated@@230 ($generated@@135 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@132 $generated@@568 ($generated@@383 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@64)) ($generated@@132 $generated@@571 ($generated@@391 $generated@@572 $generated@@573))) (and (and ($generated@@132 ($generated@@290 $generated@@571) ($generated@@235 $generated@@572)) ($generated@@132 ($generated@@326 $generated@@571) ($generated@@235 $generated@@573))) ($generated@@132 ($generated@@365 $generated@@571) ($generated@@235 ($generated@@135 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@132 $generated@@571 ($generated@@391 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) ($generated@@132 $generated@@574 $generated@@46))
 :pattern ( ($generated@@132 $generated@@574 $generated@@46))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@3) ($generated@@132 $generated@@575 $generated@@47))
 :pattern ( ($generated@@132 $generated@@575 $generated@@47))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@4) ($generated@@132 $generated@@576 $generated@@44))
 :pattern ( ($generated@@132 $generated@@576 $generated@@44))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@423) ($generated@@132 $generated@@577 $generated@@45))
 :pattern ( ($generated@@132 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@145) ($generated@@132 $generated@@578 $generated@@48))
 :pattern ( ($generated@@132 $generated@@578 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 (T@U) Bool)
(declare-fun $generated@@584 () Int)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (= (type $generated@@579) ($generated@@152 $generated@@145)) (= (type $generated@@580) ($generated@@166 $generated@@77 $generated@@4))) (= (type $generated@@581) $generated@@77)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@586  (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= 0 ($generated@@240 0)) (< ($generated@@240 0) ($generated@@259 $generated@@579)))) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@150 $generated@@579 ($generated@@336 $generated@@579 ($generated@@240 0)))) (=> ($generated@@150 $generated@@579 ($generated@@336 $generated@@579 ($generated@@240 0))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 ($generated@@240 0)) (< ($generated@@240 0) ($generated@@259 $generated@@579)))) (=> (= (ControlFlow 0 5) (- 0 4)) (> ($generated ($generated@@355 $generated@@2 ($generated@@336 $generated@@579 ($generated@@240 0)))) 0))))))))
(let (($generated@@587  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@240 0)) (< ($generated@@240 0) ($generated@@259 $generated@@579)))) (=> (= (ControlFlow 0 2) (- 0 1)) (> ($generated ($generated@@355 $generated@@2 ($generated@@336 $generated@@579 ($generated@@240 0)))) 0)))))
(let (($generated@@588  (=> (= $generated@@580 ($generated@@165 $generated@@581 $generated@@582 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@587) (=> (= (ControlFlow 0 9) 5) $generated@@586)))))
(let (($generated@@589  (=> (and ($generated@@246 $generated@@582) ($generated@@583 $generated@@582)) (=> (and (and (and ($generated@@132 $generated@@579 ($generated@@465 $generated@@46)) ($generated@@74 $generated@@579 ($generated@@465 $generated@@46) $generated@@582)) (<= ($generated@@240 0) $generated@@584)) (and (and (= 1 $generated@@585) (forall (($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@2) true) ($generated@@150 $generated@@579 ($generated@@261 $generated@@590))) (> ($generated $generated@@590) 0))
 :pattern ( ($generated@@150 $generated@@579 ($generated@@261 $generated@@590)))
))) (and (> ($generated@@259 $generated@@579) 0) (= (ControlFlow 0 10) 9)))) $generated@@588))))
$generated@@589)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@T) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@336 (T@U Int) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (forall (($generated@@154 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@154)) 16)) (forall (($generated@@155 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@T) ) (! (= (type ($generated@@151 $generated@@156)) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
 (not ($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
 :pattern ( (let (($generated@@158 (type $generated@@157)))
($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@132 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@136)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@145)) (= (type $generated@@227) $generated@@145)) (= ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@136) (= (type $generated@@229) $generated@@136)) (= ($generated@@142 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@142 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@145) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@145)) (= (type $generated@@251) $generated@@145)) (= (type $generated@@252) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@246 $generated@@252)) (= ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@136) (= ($generated@@134 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@136) ($generated@@134 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@145) (= (type $generated@@258) $generated@@145)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert (forall (($generated@@260 T@T) ) (! (= ($generated@@259 ($generated@@151 $generated@@260)) 0)
 :pattern ( ($generated@@151 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@145)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@247 ($generated@@261 $generated@@263) $generated@@264 $generated@@265) ($generated@@74 $generated@@263 $generated@@264 $generated@@265)))
 :pattern ( ($generated@@247 ($generated@@261 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@268 T@T) ) (! (= (type ($generated@@267 $generated@@268)) ($generated@@76 $generated@@268 $generated@@2))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@79 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@76 $generated@@270 $generated@@2)) (and (= (= ($generated@@266 $generated@@269) 0) (= $generated@@269 ($generated@@267 $generated@@270))) (=> (not (= ($generated@@266 $generated@@269) 0)) (exists (($generated@@271 T@U) ) (!  (and (= (type $generated@@271) $generated@@270) (< 0 ($generated ($generated@@81 $generated@@269 $generated@@271))))
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
))))))
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@76 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 19)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@76 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@79 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@76 $generated@@309 $generated@@2)) (= ($generated@@160 $generated@@308) (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@309) (and (<= 0 ($generated ($generated@@81 $generated@@308 $generated@@310))) (<= ($generated ($generated@@81 $generated@@308 $generated@@310)) ($generated@@266 $generated@@308))))
 :pattern ( ($generated@@81 $generated@@308 $generated@@310))
)))))
 :pattern ( ($generated@@160 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(let (($generated@@313 ($generated@@275 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@274 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@273 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@272 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@276 (type $generated@@318))))
(let (($generated@@320 ($generated@@275 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@274 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@273 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@294 (type $generated@@322))))
(let (($generated@@324 ($generated@@293 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@292 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@291 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@290 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@294 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@294 (type $generated@@329))))
(let (($generated@@331 ($generated@@293 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@292 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@291 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@334) $generated@@64)) (= ($generated@@132 $generated@@333 ($generated@@159 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@333 $generated@@335)))) ($generated@@221 $generated@@335 $generated@@334))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@132 $generated@@333 ($generated@@159 $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 Int) ) (! (let (($generated@@339 ($generated@@153 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@339))
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
 (=> (= (type $generated@@340) ($generated@@152 $generated@@342)) (= ($generated@@150 $generated@@340 $generated@@341) (exists (($generated@@343 Int) ) (!  (and (and (<= 0 $generated@@343) (< $generated@@343 ($generated@@259 $generated@@340))) (= ($generated@@336 $generated@@340 $generated@@343) $generated@@341))
 :pattern ( ($generated@@336 $generated@@340 $generated@@343))
)))))
 :pattern ( ($generated@@150 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@345) $generated@@64)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@344 ($generated@@230 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@145) ($generated@@0 ($generated@@81 $generated@@344 $generated@@347))) ($generated@@247 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@74 $generated@@344 ($generated@@230 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@349) $generated@@64)) (= (type $generated@@350) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@348 ($generated@@235 $generated@@349) $generated@@350) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) ($generated@@0 ($generated@@81 $generated@@348 $generated@@351))) ($generated@@247 $generated@@351 $generated@@349 $generated@@350))
 :pattern ( ($generated@@81 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@74 $generated@@348 ($generated@@235 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(= ($generated ($generated@@81 ($generated@@267 $generated@@353) $generated@@352)) 0))
 :pattern ( (let (($generated@@353 (type $generated@@352)))
($generated@@81 ($generated@@267 $generated@@353) $generated@@352)))
)))
(assert  (and (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@354 $generated@@357)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@357))
)) (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@355 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@276 (type $generated@@360))))
(let (($generated@@362 ($generated@@275 (type $generated@@360))))
(= (type ($generated@@356 $generated@@360)) ($generated@@76 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@356 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@364) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@363) ($generated@@143 ($generated@@355 $generated@@136 $generated@@364)))) (= ($generated@@81 ($generated@@356 $generated@@363) ($generated@@143 ($generated@@355 $generated@@136 $generated@@364))) ($generated@@144 ($generated@@355 $generated@@136 $generated@@364))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@294 (type $generated@@368))))
(let (($generated@@370 ($generated@@293 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@372) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@371) ($generated@@143 ($generated@@355 $generated@@136 $generated@@372)))) (= ($generated@@81 ($generated@@366 $generated@@371) ($generated@@143 ($generated@@355 $generated@@136 $generated@@372))) ($generated@@144 ($generated@@355 $generated@@136 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@275 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@274 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@81 ($generated@@315 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@293 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@292 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@64)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@386) $generated@@390))) (and ($generated@@247 ($generated@@81 ($generated@@356 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@247 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@81 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@76 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@294 (type $generated@@401))))
(let (($generated@@403 ($generated@@293 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@292 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@291 $generated@@403 $generated@@402)) (= ($generated@@290 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@290 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@294 (type $generated@@404))))
(let (($generated@@406 ($generated@@293 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@292 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@291 $generated@@406 $generated@@405)) (= ($generated@@326 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@326 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@294 (type $generated@@407))))
(let (($generated@@409 ($generated@@293 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@292 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@291 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@145))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@276 (type $generated@@410))))
(let (($generated@@412 ($generated@@275 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@274 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@273 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@145) (= (type $generated@@414) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@410) ($generated@@261 ($generated@@220 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@354 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@294 (type $generated@@415))))
(let (($generated@@417 ($generated@@293 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@292 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@291 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@415) ($generated@@261 ($generated@@220 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@221 $generated@@420 $generated@@46)) (and (= ($generated@@261 ($generated@@355 $generated@@2 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@355 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@221 $generated@@421 $generated@@47)) (and (= ($generated@@261 ($generated@@355 $generated@@3 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@355 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@221 $generated@@422 $generated@@44)) (and (= ($generated@@261 ($generated@@355 $generated@@4 $generated@@422)) $generated@@422) ($generated@@132 ($generated@@355 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@145) ($generated@@221 $generated@@424 $generated@@45)) (and (= ($generated@@261 ($generated@@355 $generated@@423 $generated@@424)) $generated@@424) ($generated@@132 ($generated@@355 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@64) (= ($generated@@221 ($generated@@261 $generated@@425) $generated@@426) ($generated@@132 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@221 ($generated@@261 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@79 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@76 $generated@@428 $generated@@2)) (<= 0 ($generated@@266 $generated@@427))))
 :pattern ( ($generated@@266 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@153 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@152 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@72 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) (= (type $generated@@452) $generated@@145)) (= ($generated@@253 ($generated@@220 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@135 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@135 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@135 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) (= (type $generated@@462) $generated@@145)) (= ($generated@@143 ($generated@@220 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@220 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@144 ($generated@@220 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@220 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@152 $generated@@145)) (= (type $generated@@468) $generated@@64)) (= (type $generated@@469) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@467 ($generated@@465 $generated@@468) $generated@@469) (forall (($generated@@470 Int) ) (!  (=> (and (<= 0 $generated@@470) (< $generated@@470 ($generated@@259 $generated@@467))) ($generated@@247 ($generated@@336 $generated@@467 $generated@@470) $generated@@468 $generated@@469))
 :pattern ( ($generated@@336 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@74 $generated@@467 ($generated@@465 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 Int) ) (! (= ($generated@@471 ($generated@@75 $generated@@472)) $generated@@472)
 :pattern ( ($generated@@75 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@473 ($generated@@230 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@230 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@476)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@235 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@235 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@480)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@159 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@159 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@484)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@465 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@465 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@465 $generated@@488)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated@@355 $generated@@490 ($generated@@261 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@261 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) (= ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@491) $generated@@494))) (and ($generated@@221 ($generated@@81 ($generated@@356 $generated@@491) $generated@@494) $generated@@493) ($generated@@221 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@491) $generated@@494))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) $generated@@64)) (= ($generated@@132 $generated@@495 ($generated@@391 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@495) $generated@@498))) (and ($generated@@221 ($generated@@81 ($generated@@366 $generated@@495) $generated@@498) $generated@@497) ($generated@@221 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@495) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@132 $generated@@495 ($generated@@391 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (< ($generated@@499 $generated@@501) ($generated@@500 ($generated@@220 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@220 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (< ($generated@@499 $generated@@504) ($generated@@500 ($generated@@220 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@220 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@145) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) ($generated@@221 $generated@@505 ($generated@@383 $generated@@506 $generated@@507))) (and (= ($generated@@261 ($generated@@355 ($generated@@274 $generated@@145 $generated@@145) $generated@@505)) $generated@@505) ($generated@@132 ($generated@@355 ($generated@@274 $generated@@145 $generated@@145) $generated@@505) ($generated@@383 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@221 $generated@@505 ($generated@@383 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) ($generated@@221 $generated@@508 ($generated@@391 $generated@@509 $generated@@510))) (and (= ($generated@@261 ($generated@@355 ($generated@@292 $generated@@145 $generated@@145) $generated@@508)) $generated@@508) ($generated@@132 ($generated@@355 ($generated@@292 $generated@@145 $generated@@145) $generated@@508) ($generated@@391 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@221 $generated@@508 ($generated@@391 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@145)) ($generated@@221 $generated@@513 ($generated@@135 $generated@@511 $generated@@512))) (and (= ($generated@@261 ($generated@@355 $generated@@136 $generated@@513)) $generated@@513) ($generated@@132 ($generated@@355 $generated@@136 $generated@@513) ($generated@@135 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@221 $generated@@513 ($generated@@135 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
 (not ($generated@@0 ($generated@@81 ($generated@@399 $generated@@515) $generated@@514))))
 :pattern ( (let (($generated@@515 (type $generated@@514)))
($generated@@81 ($generated@@399 $generated@@515) $generated@@514)))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@518 $generated@@519)) $generated@@62) (= ($generated@@516 ($generated@@135 $generated@@518 $generated@@519)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@136) (= ($generated@@499 ($generated@@261 $generated@@520)) ($generated@@500 $generated@@520)))
 :pattern ( ($generated@@499 ($generated@@261 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) ($generated@@221 $generated@@521 ($generated@@75 0))) (and (= ($generated@@261 ($generated@@355 $generated@@2 $generated@@521)) $generated@@521) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@521) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@521 ($generated@@75 0)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@221 $generated@@522 ($generated@@230 $generated@@523))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@230 $generated@@523))))
 :pattern ( ($generated@@221 $generated@@522 ($generated@@230 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@221 $generated@@524 ($generated@@235 $generated@@525))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@524) ($generated@@235 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@524 ($generated@@235 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@221 $generated@@526 ($generated@@159 $generated@@527))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@2) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@2) $generated@@526) ($generated@@159 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@526 ($generated@@159 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@221 $generated@@528 ($generated@@465 $generated@@529))) (and (= ($generated@@261 ($generated@@355 ($generated@@152 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@355 ($generated@@152 $generated@@145) $generated@@528) ($generated@@465 $generated@@529))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@465 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@530 ($generated@@159 $generated@@531) $generated@@532) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@530 $generated@@533)))) ($generated@@247 $generated@@533 $generated@@531 $generated@@532))
 :pattern ( ($generated@@81 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@159 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@535 $generated@@537) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@535 $generated@@537) $generated@@536))
))))) ($generated@@247 ($generated@@143 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@247 ($generated@@143 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@136) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@540) (and ($generated@@134 $generated@@538) (exists (($generated@@541 T@U) ) (!  (and (= (type $generated@@541) $generated@@64) ($generated@@74 $generated@@538 ($generated@@135 $generated@@541 $generated@@539) $generated@@540))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@135 $generated@@541 $generated@@539) $generated@@540))
))))) ($generated@@247 ($generated@@144 $generated@@538) $generated@@539 $generated@@540))
 :pattern ( ($generated@@247 ($generated@@144 $generated@@538) $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@145)) (= ($generated@@220 ($generated@@242 $generated@@542) ($generated@@242 $generated@@543)) ($generated@@242 ($generated@@220 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@542) ($generated@@242 $generated@@543)))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@261 ($generated@@8 ($generated@@240 $generated@@544))) ($generated@@242 ($generated@@261 ($generated@@8 $generated@@544))))
 :pattern ( ($generated@@261 ($generated@@8 ($generated@@240 $generated@@544))))
)))
(assert (forall (($generated@@545 T@U) ) (! (= ($generated@@261 ($generated@@242 $generated@@545)) ($generated@@242 ($generated@@261 $generated@@545)))
 :pattern ( ($generated@@261 ($generated@@242 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@153 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@152 $generated@@547)) (= ($generated@@259 $generated@@546) 0)) (= $generated@@546 ($generated@@151 $generated@@547))))
 :pattern ( ($generated@@259 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@549)))
 (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@551 $generated@@2)) (= (type $generated@@550) $generated@@2)) (<= 0 ($generated $generated@@550))) (= ($generated@@266 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)) (+ (- ($generated@@266 $generated@@548) ($generated ($generated@@81 $generated@@548 $generated@@549))) ($generated $generated@@550)))))
 :pattern ( ($generated@@266 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@2)) ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@3)) ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@4)) ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@423)) ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@145)) ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@152 $generated@@145)) (= (type $generated@@563) $generated@@64)) (= ($generated@@132 $generated@@562 ($generated@@465 $generated@@563)) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@259 $generated@@562))) ($generated@@221 ($generated@@336 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@336 $generated@@562 $generated@@564))
))))
 :pattern ( ($generated@@132 $generated@@562 ($generated@@465 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@259 $generated@@566))) (< ($generated@@500 ($generated@@355 $generated@@136 ($generated@@336 $generated@@566 $generated@@567))) ($generated@@565 $generated@@566))))
 :pattern ( ($generated@@500 ($generated@@355 $generated@@136 ($generated@@336 $generated@@566 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@64)) ($generated@@132 $generated@@568 ($generated@@383 $generated@@569 $generated@@570))) (and (and ($generated@@132 ($generated@@272 $generated@@568) ($generated@@230 $generated@@569)) ($generated@@132 ($generated@@315 $generated@@568) ($generated@@230 $generated@@570))) ($generated@@132 ($generated@@354 $generated@@568) ($generated@@230 ($generated@@135 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@132 $generated@@568 ($generated@@383 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@64)) ($generated@@132 $generated@@571 ($generated@@391 $generated@@572 $generated@@573))) (and (and ($generated@@132 ($generated@@290 $generated@@571) ($generated@@235 $generated@@572)) ($generated@@132 ($generated@@326 $generated@@571) ($generated@@235 $generated@@573))) ($generated@@132 ($generated@@365 $generated@@571) ($generated@@235 ($generated@@135 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@132 $generated@@571 ($generated@@391 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) ($generated@@132 $generated@@574 $generated@@46))
 :pattern ( ($generated@@132 $generated@@574 $generated@@46))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@3) ($generated@@132 $generated@@575 $generated@@47))
 :pattern ( ($generated@@132 $generated@@575 $generated@@47))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@4) ($generated@@132 $generated@@576 $generated@@44))
 :pattern ( ($generated@@132 $generated@@576 $generated@@44))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@423) ($generated@@132 $generated@@577 $generated@@45))
 :pattern ( ($generated@@132 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@145) ($generated@@132 $generated@@578 $generated@@48))
 :pattern ( ($generated@@132 $generated@@578 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 (T@U) Bool)
(declare-fun $generated@@584 () Int)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (= (type $generated@@579) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@580) $generated@@77)) (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@582) ($generated@@152 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@586  (=> (= $generated@@579 ($generated@@165 $generated@@580 $generated@@581 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@240 0)) (< ($generated@@240 0) ($generated@@259 $generated@@582)))) (=> (= (ControlFlow 0 2) (- 0 1)) (> ($generated ($generated@@355 $generated@@2 ($generated@@336 $generated@@582 ($generated@@240 0)))) 0))))))
(let (($generated@@587  (=> (and ($generated@@246 $generated@@581) ($generated@@583 $generated@@581)) (=> (and (and (and ($generated@@132 $generated@@582 ($generated@@465 $generated@@46)) ($generated@@74 $generated@@582 ($generated@@465 $generated@@46) $generated@@581)) (<= ($generated@@240 0) $generated@@584)) (and (and (= 1 $generated@@585) (forall (($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@2) true) ($generated@@150 $generated@@582 ($generated@@261 $generated@@588))) (> ($generated $generated@@588) 0))
 :no-pattern (type $generated@@588)
 :no-pattern ($generated $generated@@588)
 :no-pattern ($generated@@0 $generated@@588)
))) (and (> ($generated@@259 $generated@@582) 0) (= (ControlFlow 0 4) 2)))) $generated@@586))))
$generated@@587)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
