(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 () Int)
(declare-fun $generated@@334 (Int Int Int) Bool)
(declare-fun $generated@@335 (Int Int Int) Bool)
(declare-fun $generated@@336 (Int Int) Int)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@T) T@U)
(declare-fun $generated@@424 () T@T)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@467 (T@U Int) T@U)
(declare-fun $generated@@476 (T@U) Int)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert  (=> (<= 0 $generated@@333) (forall (($generated@@337 Int) ($generated@@338 Int) ($generated@@339 Int) ) (!  (=> (or ($generated@@335 ($generated@@231 $generated@@337) ($generated@@231 $generated@@338) ($generated@@231 $generated@@339)) (not (= 0 $generated@@333))) (= ($generated@@334 ($generated@@231 $generated@@337) ($generated@@231 $generated@@338) ($generated@@231 $generated@@339))  (=> (not (= $generated@@338 0)) (= ($generated@@231 $generated@@339) ($generated@@231 ($generated@@336 $generated@@337 ($generated@@231 $generated@@338)))))))
 :weight 3
 :pattern ( ($generated@@334 ($generated@@231 $generated@@337) ($generated@@231 $generated@@338) ($generated@@231 $generated@@339)))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@341) $generated@@64)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@340 ($generated@@221 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@145) ($generated@@0 ($generated@@81 $generated@@340 $generated@@343))) ($generated@@238 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@81 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@74 $generated@@340 ($generated@@221 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@345) $generated@@64)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@344 ($generated@@226 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@145) ($generated@@0 ($generated@@81 $generated@@344 $generated@@347))) ($generated@@238 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@74 $generated@@344 ($generated@@226 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@349) $generated@@348)) 0))
 :pattern ( (let (($generated@@349 (type $generated@@348)))
($generated@@81 ($generated@@264 $generated@@349) $generated@@348)))
)))
(assert  (=> (<= 0 $generated@@333) (forall (($generated@@350 Int) ($generated@@351 Int) ($generated@@352 Int) ) (!  (=> (or ($generated@@335 $generated@@350 $generated@@351 $generated@@352) (not (= 0 $generated@@333))) true)
 :pattern ( ($generated@@334 $generated@@350 $generated@@351 $generated@@352))
))))
(assert  (and (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@353 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@353 $generated@@356))
)) (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@354 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@354 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@273 (type $generated@@359))))
(let (($generated@@361 ($generated@@272 (type $generated@@359))))
(= (type ($generated@@355 $generated@@359)) ($generated@@76 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@355 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@363) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@353 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) ($generated@@143 ($generated@@354 $generated@@136 $generated@@363)))) (= ($generated@@81 ($generated@@355 $generated@@362) ($generated@@143 ($generated@@354 $generated@@136 $generated@@363))) ($generated@@144 ($generated@@354 $generated@@136 $generated@@363))))))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@362) $generated@@363))
)))
(assert  (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@364 $generated@@366))
)) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@291 (type $generated@@367))))
(let (($generated@@369 ($generated@@290 (type $generated@@367))))
(= (type ($generated@@365 $generated@@367)) ($generated@@76 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@365 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@371) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@370) ($generated@@143 ($generated@@354 $generated@@136 $generated@@371)))) (= ($generated@@81 ($generated@@365 $generated@@370) ($generated@@143 ($generated@@354 $generated@@136 $generated@@371))) ($generated@@144 ($generated@@354 $generated@@136 $generated@@371))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@272 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@271 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@355 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(let (($generated@@380 ($generated@@290 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@289 $generated@@380 $generated@@379)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@377) $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@377) $generated@@381)) (= $generated@@378 ($generated@@81 ($generated@@365 $generated@@377) $generated@@381))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@377) $generated@@381))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@385) $generated@@389))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@238 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@64)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))) (and ($generated@@238 ($generated@@81 ($generated@@365 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@238 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 Int) ($generated@@399 Int) ) (! (= ($generated@@336 $generated@@398 $generated@@399) (div $generated@@398 $generated@@399))
 :pattern ( ($generated@@336 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@401 T@T) ) (! (= (type ($generated@@400 $generated@@401)) ($generated@@76 $generated@@401 $generated@@4))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@291 (type $generated@@402))))
(let (($generated@@404 ($generated@@290 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@289 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@288 $generated@@404 $generated@@403)) (= ($generated@@287 $generated@@402) ($generated@@400 $generated@@404))))))
 :pattern ( ($generated@@287 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@291 (type $generated@@405))))
(let (($generated@@407 ($generated@@290 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@289 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@288 $generated@@407 $generated@@406)) (= ($generated@@323 $generated@@405) ($generated@@400 $generated@@406))))))
 :pattern ( ($generated@@323 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@291 (type $generated@@408))))
(let (($generated@@410 ($generated@@290 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@289 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@288 $generated@@410 $generated@@409)) (= ($generated@@364 $generated@@408) ($generated@@400 $generated@@145))))))
 :pattern ( ($generated@@364 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@273 (type $generated@@411))))
(let (($generated@@413 ($generated@@272 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@271 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@270 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (and (and (= (type $generated@@414) $generated@@145) (= (type $generated@@415) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@411) ($generated@@258 ($generated@@211 $generated@@414 $generated@@415)))))
 :no-pattern (type $generated@@414)
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@353 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@291 (type $generated@@416))))
(let (($generated@@418 ($generated@@290 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@289 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@288 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@145) (= (type $generated@@420) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@416) ($generated@@258 ($generated@@211 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@364 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@46)) (and (= ($generated@@258 ($generated@@354 $generated@@2 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@354 $generated@@2 $generated@@421) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@46))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@212 $generated@@422 $generated@@47)) (and (= ($generated@@258 ($generated@@354 $generated@@3 $generated@@422)) $generated@@422) ($generated@@132 ($generated@@354 $generated@@3 $generated@@422) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@422 $generated@@47))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@145) ($generated@@212 $generated@@423 $generated@@44)) (and (= ($generated@@258 ($generated@@354 $generated@@4 $generated@@423)) $generated@@423) ($generated@@132 ($generated@@354 $generated@@4 $generated@@423) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@423 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@424) 20))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@212 $generated@@425 $generated@@45)) (and (= ($generated@@258 ($generated@@354 $generated@@424 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@354 $generated@@424 $generated@@425) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@425 $generated@@45))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (= (type $generated@@427) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@426) $generated@@427) ($generated@@132 $generated@@426 $generated@@427)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@79 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@76 $generated@@429 $generated@@2)) (<= 0 ($generated@@263 $generated@@428))))
 :pattern ( ($generated@@263 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@253 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@252 $generated@@431)) (<= 0 ($generated@@251 $generated@@430))))
 :pattern ( ($generated@@251 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@382 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@382 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@382 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@382 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@440 $generated@@441)) $generated@@58))
 :pattern ( ($generated@@382 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@390 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@390 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@390 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@390 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@390 $generated@@450 $generated@@451)) $generated@@59))
 :pattern ( ($generated@@390 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@452 $generated@@453)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@135 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@135 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@135 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@135 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) (= (type $generated@@463) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@211 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@145) (= (type $generated@@465) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@211 $generated@@464 $generated@@465))
)))
(assert  (and (forall (($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@468))
)) (forall (($generated@@469 T@U) ($generated@@470 Int) ) (! (let (($generated@@471 ($generated@@253 (type $generated@@469))))
(= (type ($generated@@467 $generated@@469 $generated@@470)) $generated@@471))
 :pattern ( ($generated@@467 $generated@@469 $generated@@470))
))))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@472) ($generated@@252 $generated@@145)) (= (type $generated@@473) $generated@@64)) (= (type $generated@@474) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@472 ($generated@@466 $generated@@473) $generated@@474) (forall (($generated@@475 Int) ) (!  (=> (and (<= 0 $generated@@475) (< $generated@@475 ($generated@@251 $generated@@472))) ($generated@@238 ($generated@@467 $generated@@472 $generated@@475) $generated@@473 $generated@@474))
 :pattern ( ($generated@@467 $generated@@472 $generated@@475))
))))
 :pattern ( ($generated@@74 $generated@@472 ($generated@@466 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@477 Int) ) (! (= ($generated@@476 ($generated@@75 $generated@@477)) $generated@@477)
 :pattern ( ($generated@@75 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@221 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@221 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@481)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@226 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@226 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@485)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@150 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@150 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@489)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@466 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@466 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@466 $generated@@493)) $generated@@57))
 :pattern ( ($generated@@466 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@494)))
(= ($generated@@354 $generated@@495 ($generated@@258 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@258 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@132 $generated@@496 ($generated@@382 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@496) $generated@@499))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@496) $generated@@499) $generated@@498) ($generated@@212 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@132 $generated@@496 ($generated@@382 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@390 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@500) $generated@@503))) (and ($generated@@212 ($generated@@81 ($generated@@365 $generated@@500) $generated@@503) $generated@@502) ($generated@@212 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@390 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@145)) (< ($generated@@504 $generated@@506) ($generated@@505 ($generated@@211 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@211 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@145)) (< ($generated@@504 $generated@@509) ($generated@@505 ($generated@@211 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@211 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) ($generated@@212 $generated@@510 ($generated@@382 $generated@@511 $generated@@512))) (and (= ($generated@@258 ($generated@@354 ($generated@@271 $generated@@145 $generated@@145) $generated@@510)) $generated@@510) ($generated@@132 ($generated@@354 ($generated@@271 $generated@@145 $generated@@145) $generated@@510) ($generated@@382 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@212 $generated@@510 ($generated@@382 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@390 $generated@@514 $generated@@515))) (and (= ($generated@@258 ($generated@@354 ($generated@@289 $generated@@145 $generated@@145) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@354 ($generated@@289 $generated@@145 $generated@@145) $generated@@513) ($generated@@390 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@390 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@145)) ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517))) (and (= ($generated@@258 ($generated@@354 $generated@@136 $generated@@518)) $generated@@518) ($generated@@132 ($generated@@354 $generated@@136 $generated@@518) ($generated@@135 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
 (not ($generated@@0 ($generated@@81 ($generated@@400 $generated@@520) $generated@@519))))
 :pattern ( (let (($generated@@520 (type $generated@@519)))
($generated@@81 ($generated@@400 $generated@@520) $generated@@519)))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@523 $generated@@524)) $generated@@62) (= ($generated@@521 ($generated@@135 $generated@@523 $generated@@524)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@136) (= ($generated@@504 ($generated@@258 $generated@@525)) ($generated@@505 $generated@@525)))
 :pattern ( ($generated@@504 ($generated@@258 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) ($generated@@212 $generated@@526 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@354 $generated@@2 $generated@@526)) $generated@@526) ($generated@@132 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@526) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@75 0)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@221 $generated@@528))) (and (= ($generated@@258 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@527) ($generated@@221 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@221 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@226 $generated@@530))) (and (= ($generated@@258 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@226 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@226 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@531 ($generated@@150 $generated@@532))) (and (= ($generated@@258 ($generated@@354 ($generated@@76 $generated@@145 $generated@@2) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@354 ($generated@@76 $generated@@145 $generated@@2) $generated@@531) ($generated@@150 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@531 ($generated@@150 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) ($generated@@212 $generated@@533 ($generated@@466 $generated@@534))) (and (= ($generated@@258 ($generated@@354 ($generated@@252 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@354 ($generated@@252 $generated@@145) $generated@@533) ($generated@@466 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@533 ($generated@@466 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@535 $generated@@538)))) ($generated@@238 $generated@@538 $generated@@536 $generated@@537))
 :pattern ( ($generated@@81 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
))))) ($generated@@238 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@545) (and ($generated@@134 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@64) ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
))))) ($generated@@238 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@547) ($generated@@233 $generated@@548)) ($generated@@233 ($generated@@211 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@547) ($generated@@233 $generated@@548)))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@549))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@549))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@549))))
)))
(assert (forall (($generated@@550 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@550)) ($generated@@233 ($generated@@258 $generated@@550)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@550)))
)))
(assert  (=> (<= 0 $generated@@333) (forall (($generated@@551 Int) ($generated@@552 Int) ($generated@@553 Int) ) (!  (=> (or ($generated@@335 $generated@@551 $generated@@552 $generated@@553) (not (= 0 $generated@@333))) (= ($generated@@334 $generated@@551 $generated@@552 $generated@@553)  (=> (not (= $generated@@552 0)) (= $generated@@553 ($generated@@336 $generated@@551 $generated@@552)))))
 :pattern ( ($generated@@334 $generated@@551 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@253 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@252 $generated@@555)) (= ($generated@@251 $generated@@554) 0)) (= $generated@@554 ($generated@@250 $generated@@555))))
 :pattern ( ($generated@@251 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@263 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@263 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@424)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@145)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@252 $generated@@145)) (= (type $generated@@571) $generated@@64)) (= ($generated@@132 $generated@@570 ($generated@@466 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@251 $generated@@570))) ($generated@@212 ($generated@@467 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@467 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@132 $generated@@570 ($generated@@466 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@251 $generated@@574))) (< ($generated@@505 ($generated@@354 $generated@@136 ($generated@@467 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@505 ($generated@@354 $generated@@136 ($generated@@467 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@132 $generated@@576 ($generated@@382 $generated@@577 $generated@@578))) (and (and ($generated@@132 ($generated@@269 $generated@@576) ($generated@@221 $generated@@577)) ($generated@@132 ($generated@@312 $generated@@576) ($generated@@221 $generated@@578))) ($generated@@132 ($generated@@353 $generated@@576) ($generated@@221 ($generated@@135 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@382 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@132 $generated@@579 ($generated@@390 $generated@@580 $generated@@581))) (and (and ($generated@@132 ($generated@@287 $generated@@579) ($generated@@226 $generated@@580)) ($generated@@132 ($generated@@323 $generated@@579) ($generated@@226 $generated@@581))) ($generated@@132 ($generated@@364 $generated@@579) ($generated@@226 ($generated@@135 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@132 $generated@@579 ($generated@@390 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@132 $generated@@582 $generated@@46))
 :pattern ( ($generated@@132 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@132 $generated@@583 $generated@@47))
 :pattern ( ($generated@@132 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@132 $generated@@584 $generated@@44))
 :pattern ( ($generated@@132 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@424) ($generated@@132 $generated@@585 $generated@@45))
 :pattern ( ($generated@@132 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@145) ($generated@@132 $generated@@586 $generated@@48))
 :pattern ( ($generated@@132 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 () Int)
(declare-fun $generated@@589 () Int)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 (T@U) Bool)
(assert  (and (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@592) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@594  (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (=> (not (= $generated@@587 0)) (= ($generated@@231 0) ($generated@@336 $generated@@588 $generated@@587)))) (exists (($generated@@595 Int) )  (=> (not (= $generated@@587 0)) (= $generated@@595 ($generated@@336 $generated@@588 $generated@@587)))))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (=> (not (= $generated@@587 0)) (= ($generated@@231 0) ($generated@@336 $generated@@588 $generated@@587)))) (exists (($generated@@596 Int) )  (=> (not (= $generated@@587 0)) (= $generated@@596 ($generated@@336 $generated@@588 $generated@@587))))) (=> (=> (not (= $generated@@587 0)) (= $generated@@589 ($generated@@336 $generated@@588 $generated@@587))) (=> (and (and (and ($generated@@74 ($generated@@8 $generated@@588) $generated@@46 $generated@@590) ($generated@@74 ($generated@@8 $generated@@587) $generated@@46 $generated@@590)) (and ($generated@@74 ($generated@@8 $generated@@589) $generated@@46 $generated@@590) ($generated@@335 $generated@@588 $generated@@587 $generated@@589))) (and (and ($generated@@335 $generated@@588 $generated@@587 $generated@@589) (= (ControlFlow 0 3) (- 0 2))) ($generated@@335 $generated@@588 $generated@@587 $generated@@589))) (or ($generated@@334 $generated@@588 $generated@@587 $generated@@589) (=> (not (= $generated@@587 0)) (= $generated@@589 ($generated@@336 $generated@@588 $generated@@587))))))))))
(let (($generated@@597  (=> (and (= $generated@@587 0) (= (ControlFlow 0 7) 3)) $generated@@594)))
(let (($generated@@598  (=> (not (= $generated@@587 0)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@587 0))) (=> (= (ControlFlow 0 5) 3) $generated@@594)))))
(let (($generated@@599  (and (=> (= (ControlFlow 0 8) 5) $generated@@598) (=> (= (ControlFlow 0 8) 7) $generated@@597))))
(let (($generated@@600 true))
(let (($generated@@601  (=> (= $generated@@591 ($generated@@156 $generated@@592 $generated@@590 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@599) (=> (= (ControlFlow 0 9) 1) $generated@@600)))))
(let (($generated@@602  (=> (and (and ($generated@@237 $generated@@590) ($generated@@593 $generated@@590)) (and (= 1 $generated@@333) (= (ControlFlow 0 10) 9))) $generated@@601)))
$generated@@602))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 () Int)
(declare-fun $generated@@68 (Int) Bool)
(declare-fun $generated@@69 (Int) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (Int) Int)
(declare-fun $generated@@136 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T) T@T)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@T) T@U)
(declare-fun $generated@@196 (T@U) Int)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@203 (T@U T@U T@U) Bool)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 () T@T)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 (T@T T@T) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@T T@T) T@U)
(declare-fun $generated@@230 (T@T T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@290 (Int Int) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@U Int) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@371 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@71 T@U) ) (! (let (($generated@@72 (type $generated@@71)))
(= (type ($generated@@70 $generated@@71)) $generated@@72))
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert  (=> (<= 0 $generated@@67) (forall (($generated@@73 Int) ) (!  (=> (or ($generated@@69 $generated@@73) (not (= 0 $generated@@67))) (= ($generated@@68 $generated@@73) ($generated@@0 ($generated@@70 ($generated@@11 true)))))
 :pattern ( ($generated@@68 $generated@@73))
))))
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@62)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 9)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 10)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 11)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@64 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@61)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (=> (<= 0 $generated@@67) (forall (($generated@@135 Int) ) (!  (=> (or ($generated@@69 ($generated@@134 $generated@@135)) (not (= 0 $generated@@67))) (= ($generated@@68 ($generated@@134 $generated@@135)) ($generated@@0 ($generated@@70 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@134 $generated@@135)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@1 ($generated@@138 $generated@@142 $generated@@143)) 12)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@139 ($generated@@138 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@138 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@140 ($generated@@138 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@138 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@140 (type $generated@@148))))
(= (type ($generated@@136 $generated@@148 $generated@@149 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@136 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 (type $generated@@155)))
(let (($generated@@157 (type $generated@@153)))
(= (type ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@155)) ($generated@@138 $generated@@157 $generated@@156))))
 :pattern ( ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@155))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@140 (type $generated@@158))))
 (=> (= (type $generated@@161) $generated@@162) (= ($generated@@136 ($generated@@141 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@159 $generated@@160) $generated@@161)))
 :weight 0
))) (and (and (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@136 ($generated@@141 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@136 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@136 ($generated@@141 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@136 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or true (= ($generated@@136 ($generated@@141 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@136 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ) (! (= (type ($generated@@137 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@138 $generated@@79 $generated@@4))
 :pattern ( ($generated@@137 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 Bool) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@64 (type $generated@@190))))
 (=> (and (and (and (and (= (type $generated@@185) $generated@@79) (= (type $generated@@186) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@187) ($generated@@63 $generated@@4))) (= (type $generated@@189) $generated@@79)) (= (type $generated@@190) ($generated@@63 $generated@@191))) (= ($generated@@0 ($generated@@136 ($generated@@137 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))  (=> (and (not (= $generated@@189 $generated@@185)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@186 $generated@@189) $generated@@187))) $generated@@188))))
 :pattern ( ($generated@@136 ($generated@@137 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@134 $generated@@192) $generated@@192)
 :pattern ( ($generated@@134 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@70 $generated@@193) $generated@@193)
 :pattern ( ($generated@@70 $generated@@193))
)))
(assert  (=> (<= 0 $generated@@67) (forall (($generated@@194 Int) ) (!  (=> (or ($generated@@69 $generated@@194) (not (= 0 $generated@@67))) true)
 :pattern ( ($generated@@68 $generated@@194))
))))
(assert  (and (and (forall (($generated@@199 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@199)) 13)) (forall (($generated@@200 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@197 $generated@@200))
))) (forall (($generated@@201 T@T) ) (! (= (type ($generated@@195 $generated@@201)) ($generated@@197 $generated@@201))
 :pattern ( ($generated@@195 $generated@@201))
))))
(assert (forall (($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@202)) 0)
 :pattern ( ($generated@@195 $generated@@202))
)))
(assert  (and (= ($generated@@1 $generated@@205) 14) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@206)) $generated@@205)
 :pattern ( ($generated@@204 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@61) (= (type $generated@@209) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@203 ($generated@@204 $generated@@207) $generated@@208 $generated@@209) ($generated@@76 $generated@@207 $generated@@208 $generated@@209)))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@207) $generated@@208 $generated@@209))
)))
(assert  (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@215 $generated@@216)) 15)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@212 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@212 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@213 (type $generated@@221))))
(= (type ($generated@@210 $generated@@221)) ($generated@@78 $generated@@222 $generated@@4)))
 :pattern ( ($generated@@210 $generated@@221))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= (type ($generated@@211 $generated@@223 $generated@@224)) ($generated@@212 $generated@@223 $generated@@224))
 :pattern ( ($generated@@211 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@T) ) (! (let (($generated@@227 (type $generated@@225)))
 (not ($generated@@0 ($generated@@83 ($generated@@210 ($generated@@211 $generated@@227 $generated@@226)) $generated@@225))))
 :pattern ( (let (($generated@@227 (type $generated@@225)))
($generated@@83 ($generated@@210 ($generated@@211 $generated@@227 $generated@@226)) $generated@@225)))
)))
(assert  (and (and (and (and (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (= ($generated@@1 ($generated@@230 $generated@@233 $generated@@234)) 16)) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@235 $generated@@236)) $generated@@235)
 :pattern ( ($generated@@230 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (! (= ($generated@@232 ($generated@@230 $generated@@237 $generated@@238)) $generated@@238)
 :pattern ( ($generated@@230 $generated@@237 $generated@@238))
))) (forall (($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@231 (type $generated@@239))))
(= (type ($generated@@228 $generated@@239)) ($generated@@78 $generated@@240 $generated@@4)))
 :pattern ( ($generated@@228 $generated@@239))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= (type ($generated@@229 $generated@@241 $generated@@242)) ($generated@@230 $generated@@241 $generated@@242))
 :pattern ( ($generated@@229 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@T) ) (! (let (($generated@@245 (type $generated@@243)))
 (not ($generated@@0 ($generated@@83 ($generated@@228 ($generated@@229 $generated@@245 $generated@@244)) $generated@@243))))
 :pattern ( (let (($generated@@245 (type $generated@@243)))
($generated@@83 ($generated@@228 ($generated@@229 $generated@@245 $generated@@244)) $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@214 (type $generated@@246))))
(let (($generated@@248 ($generated@@213 (type $generated@@246))))
 (=> (= (type $generated@@246) ($generated@@212 $generated@@248 $generated@@247)) (or (= $generated@@246 ($generated@@211 $generated@@248 $generated@@247)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) ($generated@@0 ($generated@@83 ($generated@@210 $generated@@246) $generated@@249)))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@210 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@232 (type $generated@@250))))
(let (($generated@@252 ($generated@@231 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@230 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@229 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@83 ($generated@@228 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@228 $generated@@250))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@61)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@78 $generated@@205 $generated@@4)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@256 ($generated@@254 $generated@@257) $generated@@258) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@205) ($generated@@0 ($generated@@83 $generated@@256 $generated@@259))) ($generated@@203 $generated@@259 $generated@@257 $generated@@258))
 :pattern ( ($generated@@83 $generated@@256 $generated@@259))
))))
 :pattern ( ($generated@@76 $generated@@256 ($generated@@254 $generated@@257) $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@262) ($generated@@78 $generated@@205 $generated@@4)) (= (type $generated@@263) $generated@@61)) (= (type $generated@@264) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@262 ($generated@@260 $generated@@263) $generated@@264) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@205) ($generated@@0 ($generated@@83 $generated@@262 $generated@@265))) ($generated@@203 $generated@@265 $generated@@263 $generated@@264))
 :pattern ( ($generated@@83 $generated@@262 $generated@@265))
))))
 :pattern ( ($generated@@76 $generated@@262 ($generated@@260 $generated@@263) $generated@@264))
)))
(assert  (and (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@268 $generated@@269)) $generated@@61)
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)) (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@214 (type $generated@@270))))
(let (($generated@@272 ($generated@@213 (type $generated@@270))))
(= (type ($generated@@267 $generated@@270)) ($generated@@78 $generated@@272 $generated@@271))))
 :pattern ( ($generated@@267 $generated@@270))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) ($generated@@212 $generated@@205 $generated@@205)) (= (type $generated@@274) $generated@@61)) (= (type $generated@@275) $generated@@61)) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@273 ($generated@@266 $generated@@274 $generated@@275) $generated@@276) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@205) ($generated@@0 ($generated@@83 ($generated@@210 $generated@@273) $generated@@277))) (and ($generated@@203 ($generated@@83 ($generated@@267 $generated@@273) $generated@@277) $generated@@275 $generated@@276) ($generated@@203 $generated@@277 $generated@@274 $generated@@276)))
 :pattern ( ($generated@@83 ($generated@@267 $generated@@273) $generated@@277))
 :pattern ( ($generated@@83 ($generated@@210 $generated@@273) $generated@@277))
))))
 :pattern ( ($generated@@76 $generated@@273 ($generated@@266 $generated@@274 $generated@@275) $generated@@276))
)))
(assert  (and (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@278 $generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@278 $generated@@280 $generated@@281))
)) (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@232 (type $generated@@282))))
(let (($generated@@284 ($generated@@231 (type $generated@@282))))
(= (type ($generated@@279 $generated@@282)) ($generated@@78 $generated@@284 $generated@@283))))
 :pattern ( ($generated@@279 $generated@@282))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@285) ($generated@@230 $generated@@205 $generated@@205)) (= (type $generated@@286) $generated@@61)) (= (type $generated@@287) $generated@@61)) (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@285 ($generated@@278 $generated@@286 $generated@@287) $generated@@288) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@205) ($generated@@0 ($generated@@83 ($generated@@228 $generated@@285) $generated@@289))) (and ($generated@@203 ($generated@@83 ($generated@@279 $generated@@285) $generated@@289) $generated@@287 $generated@@288) ($generated@@203 $generated@@289 $generated@@286 $generated@@288)))
 :pattern ( ($generated@@83 ($generated@@279 $generated@@285) $generated@@289))
 :pattern ( ($generated@@83 ($generated@@228 $generated@@285) $generated@@289))
))))
 :pattern ( ($generated@@76 $generated@@285 ($generated@@278 $generated@@286 $generated@@287) $generated@@288))
)))
(assert (forall (($generated@@291 Int) ($generated@@292 Int) ) (! (= ($generated@@290 $generated@@291 $generated@@292) (div $generated@@291 $generated@@292))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@78 $generated@@294 $generated@@4))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@232 (type $generated@@295))))
(let (($generated@@297 ($generated@@231 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@230 $generated@@297 $generated@@296)) (= (= $generated@@295 ($generated@@229 $generated@@297 $generated@@296)) (= ($generated@@228 $generated@@295) ($generated@@293 $generated@@297))))))
 :pattern ( ($generated@@228 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@198 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@197 $generated@@299)) (<= 0 ($generated@@196 $generated@@298))))
 :pattern ( ($generated@@196 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@61)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@61) (= (type $generated@@303) $generated@@61)) (= ($generated@@300 ($generated@@266 $generated@@302 $generated@@303)) $generated@@302))
 :pattern ( ($generated@@266 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@61)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@61) (= (type $generated@@307) $generated@@61)) (= ($generated@@304 ($generated@@266 $generated@@306 $generated@@307)) $generated@@307))
 :pattern ( ($generated@@266 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@61) (= (type $generated@@309) $generated@@61)) (= ($generated@@74 ($generated@@266 $generated@@308 $generated@@309)) $generated@@58))
 :pattern ( ($generated@@266 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@278 $generated@@312 $generated@@313)) $generated@@312))
 :pattern ( ($generated@@278 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@314 ($generated@@278 $generated@@316 $generated@@317)) $generated@@317))
 :pattern ( ($generated@@278 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@74 ($generated@@278 $generated@@318 $generated@@319)) $generated@@59))
 :pattern ( ($generated@@278 $generated@@318 $generated@@319))
)))
(assert  (and (forall (($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@320 $generated@@322))
)) (forall (($generated@@323 T@U) ($generated@@324 Int) ) (! (let (($generated@@325 ($generated@@198 (type $generated@@323))))
(= (type ($generated@@321 $generated@@323 $generated@@324)) $generated@@325))
 :pattern ( ($generated@@321 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@326) ($generated@@197 $generated@@205)) (= (type $generated@@327) $generated@@61)) (= (type $generated@@328) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@326 ($generated@@320 $generated@@327) $generated@@328) (forall (($generated@@329 Int) ) (!  (=> (and (<= 0 $generated@@329) (< $generated@@329 ($generated@@196 $generated@@326))) ($generated@@203 ($generated@@321 $generated@@326 $generated@@329) $generated@@327 $generated@@328))
 :pattern ( ($generated@@321 $generated@@326 $generated@@329))
))))
 :pattern ( ($generated@@76 $generated@@326 ($generated@@320 $generated@@327) $generated@@328))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 ($generated@@77 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@77 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@332 ($generated@@254 $generated@@334)) $generated@@334))
 :pattern ( ($generated@@254 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@61) (= ($generated@@74 ($generated@@254 $generated@@335)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@61) (= ($generated@@336 ($generated@@260 $generated@@338)) $generated@@338))
 :pattern ( ($generated@@260 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@74 ($generated@@260 $generated@@339)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@339))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@341 ($generated@@340 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@340 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@74 ($generated@@340 $generated@@345)) $generated@@56))
 :pattern ( ($generated@@340 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (= (type ($generated@@346 $generated@@347)) $generated@@61)
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@346 ($generated@@320 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@320 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@61) (= ($generated@@74 ($generated@@320 $generated@@349)) $generated@@57))
 :pattern ( ($generated@@320 $generated@@349))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated@@350 $generated@@354 ($generated@@204 $generated@@353)) $generated@@353))
 :pattern ( ($generated@@204 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 $generated@@356) $generated@@355))))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@83 ($generated@@293 $generated@@356) $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@205 $generated@@2)) (= (type $generated@@358) $generated@@61)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@340 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@205) (< 0 ($generated ($generated@@83 $generated@@357 $generated@@360)))) ($generated@@203 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@340 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 Int) ) (! (= ($generated@@204 ($generated@@8 ($generated@@134 $generated@@361))) ($generated@@70 ($generated@@204 ($generated@@8 $generated@@361))))
 :pattern ( ($generated@@204 ($generated@@8 ($generated@@134 $generated@@361))))
)))
(assert (forall (($generated@@362 T@U) ) (! (= ($generated@@204 ($generated@@70 $generated@@362)) ($generated@@70 ($generated@@204 $generated@@362)))
 :pattern ( ($generated@@204 ($generated@@70 $generated@@362)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@198 (type $generated@@363))))
 (=> (and (= (type $generated@@363) ($generated@@197 $generated@@364)) (= ($generated@@196 $generated@@363) 0)) (= $generated@@363 ($generated@@195 $generated@@364))))
 :pattern ( ($generated@@196 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@366) $generated@@2)) ($generated@@76 $generated@@366 $generated@@46 $generated@@365))
 :pattern ( ($generated@@76 $generated@@366 $generated@@46 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@368) $generated@@3)) ($generated@@76 $generated@@368 $generated@@47 $generated@@367))
 :pattern ( ($generated@@76 $generated@@368 $generated@@47 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@370) $generated@@4)) ($generated@@76 $generated@@370 $generated@@44 $generated@@369))
 :pattern ( ($generated@@76 $generated@@370 $generated@@44 $generated@@369))
)))
(assert (= ($generated@@1 $generated@@371) 17))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@373) $generated@@371)) ($generated@@76 $generated@@373 $generated@@45 $generated@@372))
 :pattern ( ($generated@@76 $generated@@373 $generated@@45 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@375) $generated@@205)) ($generated@@76 $generated@@375 $generated@@48 $generated@@374))
 :pattern ( ($generated@@76 $generated@@375 $generated@@48 $generated@@374))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 () Int)
(declare-fun $generated@@379 () T@U)
(declare-fun $generated@@380 () T@U)
(declare-fun $generated@@381 () T@U)
(declare-fun $generated@@382 (T@U) Bool)
(declare-fun $generated@@383 (T@U) Bool)
(assert  (and (and (= (type $generated@@379) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@380) ($generated@@138 $generated@@79 $generated@@4))) (= (type $generated@@381) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@384  (=> (and (forall (($generated@@385 Int) ) (!  (=> (not (= $generated@@376 0)) (=> (= $generated@@385 ($generated@@290 $generated@@377 $generated@@376)) ($generated@@69 $generated@@385)))
 :pattern ( ($generated@@68 $generated@@385))
)) (= (ControlFlow 0 3) (- 0 2))) (exists (($generated@@386 Int) ) (!  (or (not (not (= $generated@@376 0))) (and (= $generated@@386 ($generated@@290 $generated@@377 $generated@@376)) ($generated@@68 $generated@@386)))
 :pattern ( ($generated@@68 $generated@@386))
)))))
(let (($generated@@387  (=> (and (not (= $generated@@378 ($generated@@290 $generated@@377 $generated@@376))) (= (ControlFlow 0 6) 3)) $generated@@384)))
(let (($generated@@388  (=> (and (and (= $generated@@378 ($generated@@290 $generated@@377 $generated@@376)) ($generated@@76 ($generated@@8 $generated@@378) $generated@@46 $generated@@379)) (and ($generated@@69 $generated@@378) (= (ControlFlow 0 5) 3))) $generated@@384)))
(let (($generated@@389  (=> (not (= $generated@@376 0)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (not (= $generated@@376 0))) (and (=> (= (ControlFlow 0 7) 5) $generated@@388) (=> (= (ControlFlow 0 7) 6) $generated@@387))))))
(let (($generated@@390  (=> (and (= $generated@@376 0) (= (ControlFlow 0 4) 3)) $generated@@384)))
(let (($generated@@391  (and (=> (= (ControlFlow 0 9) 7) $generated@@389) (=> (= (ControlFlow 0 9) 4) $generated@@390))))
(let (($generated@@392 true))
(let (($generated@@393  (=> (= $generated@@380 ($generated@@137 $generated@@381 $generated@@379 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@391) (=> (= (ControlFlow 0 10) 1) $generated@@392)))))
(let (($generated@@394  (=> (and (and ($generated@@382 $generated@@379) ($generated@@383 $generated@@379)) (and (= 1 $generated@@67) (= (ControlFlow 0 11) 10))) $generated@@393)))
$generated@@394))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 () Int)
(declare-fun $generated@@334 (Int Int Int) Bool)
(declare-fun $generated@@335 (Int Int Int) Bool)
(declare-fun $generated@@336 (Int Int) Int)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@T) T@U)
(declare-fun $generated@@424 () T@T)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@467 (T@U Int) T@U)
(declare-fun $generated@@476 (T@U) Int)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert  (=> (<= 0 $generated@@333) (forall (($generated@@337 Int) ($generated@@338 Int) ($generated@@339 Int) ) (!  (=> (or ($generated@@335 ($generated@@231 $generated@@337) ($generated@@231 $generated@@338) ($generated@@231 $generated@@339)) (not (= 0 $generated@@333))) (= ($generated@@334 ($generated@@231 $generated@@337) ($generated@@231 $generated@@338) ($generated@@231 $generated@@339))  (=> (not (= $generated@@338 0)) (= ($generated@@231 $generated@@339) ($generated@@231 ($generated@@336 $generated@@337 ($generated@@231 $generated@@338)))))))
 :weight 3
 :pattern ( ($generated@@334 ($generated@@231 $generated@@337) ($generated@@231 $generated@@338) ($generated@@231 $generated@@339)))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@341) $generated@@64)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@340 ($generated@@221 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@145) ($generated@@0 ($generated@@81 $generated@@340 $generated@@343))) ($generated@@238 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@81 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@74 $generated@@340 ($generated@@221 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@345) $generated@@64)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@344 ($generated@@226 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@145) ($generated@@0 ($generated@@81 $generated@@344 $generated@@347))) ($generated@@238 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@74 $generated@@344 ($generated@@226 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@349) $generated@@348)) 0))
 :pattern ( (let (($generated@@349 (type $generated@@348)))
($generated@@81 ($generated@@264 $generated@@349) $generated@@348)))
)))
(assert  (=> (<= 0 $generated@@333) (forall (($generated@@350 Int) ($generated@@351 Int) ($generated@@352 Int) ) (!  (=> (or ($generated@@335 $generated@@350 $generated@@351 $generated@@352) (not (= 0 $generated@@333))) true)
 :pattern ( ($generated@@334 $generated@@350 $generated@@351 $generated@@352))
))))
(assert  (and (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@353 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@353 $generated@@356))
)) (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@354 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@354 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@273 (type $generated@@359))))
(let (($generated@@361 ($generated@@272 (type $generated@@359))))
(= (type ($generated@@355 $generated@@359)) ($generated@@76 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@355 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@363) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@353 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) ($generated@@143 ($generated@@354 $generated@@136 $generated@@363)))) (= ($generated@@81 ($generated@@355 $generated@@362) ($generated@@143 ($generated@@354 $generated@@136 $generated@@363))) ($generated@@144 ($generated@@354 $generated@@136 $generated@@363))))))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@362) $generated@@363))
)))
(assert  (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@364 $generated@@366))
)) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@291 (type $generated@@367))))
(let (($generated@@369 ($generated@@290 (type $generated@@367))))
(= (type ($generated@@365 $generated@@367)) ($generated@@76 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@365 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@371) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@370) ($generated@@143 ($generated@@354 $generated@@136 $generated@@371)))) (= ($generated@@81 ($generated@@365 $generated@@370) ($generated@@143 ($generated@@354 $generated@@136 $generated@@371))) ($generated@@144 ($generated@@354 $generated@@136 $generated@@371))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@272 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@271 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@355 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(let (($generated@@380 ($generated@@290 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@289 $generated@@380 $generated@@379)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@377) $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@377) $generated@@381)) (= $generated@@378 ($generated@@81 ($generated@@365 $generated@@377) $generated@@381))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@377) $generated@@381))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@385) $generated@@389))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@238 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@64)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))) (and ($generated@@238 ($generated@@81 ($generated@@365 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@238 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 Int) ($generated@@399 Int) ) (! (= ($generated@@336 $generated@@398 $generated@@399) (div $generated@@398 $generated@@399))
 :pattern ( ($generated@@336 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@401 T@T) ) (! (= (type ($generated@@400 $generated@@401)) ($generated@@76 $generated@@401 $generated@@4))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@291 (type $generated@@402))))
(let (($generated@@404 ($generated@@290 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@289 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@288 $generated@@404 $generated@@403)) (= ($generated@@287 $generated@@402) ($generated@@400 $generated@@404))))))
 :pattern ( ($generated@@287 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@291 (type $generated@@405))))
(let (($generated@@407 ($generated@@290 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@289 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@288 $generated@@407 $generated@@406)) (= ($generated@@323 $generated@@405) ($generated@@400 $generated@@406))))))
 :pattern ( ($generated@@323 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@291 (type $generated@@408))))
(let (($generated@@410 ($generated@@290 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@289 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@288 $generated@@410 $generated@@409)) (= ($generated@@364 $generated@@408) ($generated@@400 $generated@@145))))))
 :pattern ( ($generated@@364 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@273 (type $generated@@411))))
(let (($generated@@413 ($generated@@272 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@271 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@270 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (and (and (= (type $generated@@414) $generated@@145) (= (type $generated@@415) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@411) ($generated@@258 ($generated@@211 $generated@@414 $generated@@415)))))
 :no-pattern (type $generated@@414)
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@353 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@291 (type $generated@@416))))
(let (($generated@@418 ($generated@@290 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@289 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@288 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@145) (= (type $generated@@420) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@416) ($generated@@258 ($generated@@211 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@364 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@212 $generated@@421 $generated@@46)) (and (= ($generated@@258 ($generated@@354 $generated@@2 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@354 $generated@@2 $generated@@421) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@421 $generated@@46))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@212 $generated@@422 $generated@@47)) (and (= ($generated@@258 ($generated@@354 $generated@@3 $generated@@422)) $generated@@422) ($generated@@132 ($generated@@354 $generated@@3 $generated@@422) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@422 $generated@@47))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@145) ($generated@@212 $generated@@423 $generated@@44)) (and (= ($generated@@258 ($generated@@354 $generated@@4 $generated@@423)) $generated@@423) ($generated@@132 ($generated@@354 $generated@@4 $generated@@423) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@423 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@424) 20))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@212 $generated@@425 $generated@@45)) (and (= ($generated@@258 ($generated@@354 $generated@@424 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@354 $generated@@424 $generated@@425) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@425 $generated@@45))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (= (type $generated@@427) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@426) $generated@@427) ($generated@@132 $generated@@426 $generated@@427)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@79 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@76 $generated@@429 $generated@@2)) (<= 0 ($generated@@263 $generated@@428))))
 :pattern ( ($generated@@263 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@253 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@252 $generated@@431)) (<= 0 ($generated@@251 $generated@@430))))
 :pattern ( ($generated@@251 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@382 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@382 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@382 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@382 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@440 $generated@@441)) $generated@@58))
 :pattern ( ($generated@@382 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@390 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@390 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@390 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@390 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@390 $generated@@450 $generated@@451)) $generated@@59))
 :pattern ( ($generated@@390 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@452 $generated@@453)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@135 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@135 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@135 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@135 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) (= (type $generated@@463) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@211 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@145) (= (type $generated@@465) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@211 $generated@@464 $generated@@465))
)))
(assert  (and (forall (($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@468))
)) (forall (($generated@@469 T@U) ($generated@@470 Int) ) (! (let (($generated@@471 ($generated@@253 (type $generated@@469))))
(= (type ($generated@@467 $generated@@469 $generated@@470)) $generated@@471))
 :pattern ( ($generated@@467 $generated@@469 $generated@@470))
))))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@472) ($generated@@252 $generated@@145)) (= (type $generated@@473) $generated@@64)) (= (type $generated@@474) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@472 ($generated@@466 $generated@@473) $generated@@474) (forall (($generated@@475 Int) ) (!  (=> (and (<= 0 $generated@@475) (< $generated@@475 ($generated@@251 $generated@@472))) ($generated@@238 ($generated@@467 $generated@@472 $generated@@475) $generated@@473 $generated@@474))
 :pattern ( ($generated@@467 $generated@@472 $generated@@475))
))))
 :pattern ( ($generated@@74 $generated@@472 ($generated@@466 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@477 Int) ) (! (= ($generated@@476 ($generated@@75 $generated@@477)) $generated@@477)
 :pattern ( ($generated@@75 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@221 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@221 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@481)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@226 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@226 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@485)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@150 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@150 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@489)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@466 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@466 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@466 $generated@@493)) $generated@@57))
 :pattern ( ($generated@@466 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@494)))
(= ($generated@@354 $generated@@495 ($generated@@258 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@258 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) (= ($generated@@132 $generated@@496 ($generated@@382 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@496) $generated@@499))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@496) $generated@@499) $generated@@498) ($generated@@212 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@496) $generated@@499))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@132 $generated@@496 ($generated@@382 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@390 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@500) $generated@@503))) (and ($generated@@212 ($generated@@81 ($generated@@365 $generated@@500) $generated@@503) $generated@@502) ($generated@@212 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@390 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@145)) (< ($generated@@504 $generated@@506) ($generated@@505 ($generated@@211 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@211 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@145)) (< ($generated@@504 $generated@@509) ($generated@@505 ($generated@@211 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@211 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) ($generated@@212 $generated@@510 ($generated@@382 $generated@@511 $generated@@512))) (and (= ($generated@@258 ($generated@@354 ($generated@@271 $generated@@145 $generated@@145) $generated@@510)) $generated@@510) ($generated@@132 ($generated@@354 ($generated@@271 $generated@@145 $generated@@145) $generated@@510) ($generated@@382 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@212 $generated@@510 ($generated@@382 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@390 $generated@@514 $generated@@515))) (and (= ($generated@@258 ($generated@@354 ($generated@@289 $generated@@145 $generated@@145) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@354 ($generated@@289 $generated@@145 $generated@@145) $generated@@513) ($generated@@390 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@390 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@145)) ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517))) (and (= ($generated@@258 ($generated@@354 $generated@@136 $generated@@518)) $generated@@518) ($generated@@132 ($generated@@354 $generated@@136 $generated@@518) ($generated@@135 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
 (not ($generated@@0 ($generated@@81 ($generated@@400 $generated@@520) $generated@@519))))
 :pattern ( (let (($generated@@520 (type $generated@@519)))
($generated@@81 ($generated@@400 $generated@@520) $generated@@519)))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@523 $generated@@524)) $generated@@62) (= ($generated@@521 ($generated@@135 $generated@@523 $generated@@524)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@136) (= ($generated@@504 ($generated@@258 $generated@@525)) ($generated@@505 $generated@@525)))
 :pattern ( ($generated@@504 ($generated@@258 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) ($generated@@212 $generated@@526 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@354 $generated@@2 $generated@@526)) $generated@@526) ($generated@@132 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@526) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@75 0)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@221 $generated@@528))) (and (= ($generated@@258 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@527) ($generated@@221 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@221 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@226 $generated@@530))) (and (= ($generated@@258 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@354 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@226 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@226 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@531 ($generated@@150 $generated@@532))) (and (= ($generated@@258 ($generated@@354 ($generated@@76 $generated@@145 $generated@@2) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@354 ($generated@@76 $generated@@145 $generated@@2) $generated@@531) ($generated@@150 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@531 ($generated@@150 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) ($generated@@212 $generated@@533 ($generated@@466 $generated@@534))) (and (= ($generated@@258 ($generated@@354 ($generated@@252 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@354 ($generated@@252 $generated@@145) $generated@@533) ($generated@@466 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@533 ($generated@@466 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@535 $generated@@538)))) ($generated@@238 $generated@@538 $generated@@536 $generated@@537))
 :pattern ( ($generated@@81 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
))))) ($generated@@238 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@545) (and ($generated@@134 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@64) ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
))))) ($generated@@238 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@547) ($generated@@233 $generated@@548)) ($generated@@233 ($generated@@211 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@547) ($generated@@233 $generated@@548)))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@549))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@549))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@549))))
)))
(assert (forall (($generated@@550 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@550)) ($generated@@233 ($generated@@258 $generated@@550)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@550)))
)))
(assert  (=> (<= 0 $generated@@333) (forall (($generated@@551 Int) ($generated@@552 Int) ($generated@@553 Int) ) (!  (=> (or ($generated@@335 $generated@@551 $generated@@552 $generated@@553) (not (= 0 $generated@@333))) (= ($generated@@334 $generated@@551 $generated@@552 $generated@@553)  (=> (not (= $generated@@552 0)) (= $generated@@553 ($generated@@336 $generated@@551 $generated@@552)))))
 :pattern ( ($generated@@334 $generated@@551 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@253 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@252 $generated@@555)) (= ($generated@@251 $generated@@554) 0)) (= $generated@@554 ($generated@@250 $generated@@555))))
 :pattern ( ($generated@@251 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@263 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@263 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@424)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@145)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@252 $generated@@145)) (= (type $generated@@571) $generated@@64)) (= ($generated@@132 $generated@@570 ($generated@@466 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@251 $generated@@570))) ($generated@@212 ($generated@@467 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@467 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@132 $generated@@570 ($generated@@466 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@251 $generated@@574))) (< ($generated@@505 ($generated@@354 $generated@@136 ($generated@@467 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@505 ($generated@@354 $generated@@136 ($generated@@467 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@132 $generated@@576 ($generated@@382 $generated@@577 $generated@@578))) (and (and ($generated@@132 ($generated@@269 $generated@@576) ($generated@@221 $generated@@577)) ($generated@@132 ($generated@@312 $generated@@576) ($generated@@221 $generated@@578))) ($generated@@132 ($generated@@353 $generated@@576) ($generated@@221 ($generated@@135 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@382 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@132 $generated@@579 ($generated@@390 $generated@@580 $generated@@581))) (and (and ($generated@@132 ($generated@@287 $generated@@579) ($generated@@226 $generated@@580)) ($generated@@132 ($generated@@323 $generated@@579) ($generated@@226 $generated@@581))) ($generated@@132 ($generated@@364 $generated@@579) ($generated@@226 ($generated@@135 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@132 $generated@@579 ($generated@@390 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@132 $generated@@582 $generated@@46))
 :pattern ( ($generated@@132 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@132 $generated@@583 $generated@@47))
 :pattern ( ($generated@@132 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@132 $generated@@584 $generated@@44))
 :pattern ( ($generated@@132 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@424) ($generated@@132 $generated@@585 $generated@@45))
 :pattern ( ($generated@@132 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@145) ($generated@@132 $generated@@586 $generated@@48))
 :pattern ( ($generated@@132 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 () Int)
(declare-fun $generated@@589 () Int)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 (T@U) Bool)
(assert  (and (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@592) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@594 true))
(let (($generated@@595  (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@587 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (and ($generated@@132 ($generated@@8 ($generated@@336 $generated@@588 $generated@@587)) $generated@@46) (= ($generated@@336 $generated@@588 $generated@@587) ($generated@@336 $generated@@588 $generated@@587))) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (= ($generated@@231 0) ($generated@@336 $generated@@588 $generated@@587))) (exists (($generated@@596 Int) ) (= $generated@@596 ($generated@@336 $generated@@588 $generated@@587)))))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@336 $generated@@588 $generated@@587)) $generated@@46) (= ($generated@@336 $generated@@588 $generated@@587) ($generated@@336 $generated@@588 $generated@@587))) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (= ($generated@@231 0) ($generated@@336 $generated@@588 $generated@@587))) (exists (($generated@@597 Int) ) (= $generated@@597 ($generated@@336 $generated@@588 $generated@@587))))) (=> (= $generated@@589 ($generated@@336 $generated@@588 $generated@@587)) (=> (and (and (and ($generated@@74 ($generated@@8 $generated@@588) $generated@@46 $generated@@590) ($generated@@74 ($generated@@8 $generated@@587) $generated@@46 $generated@@590)) (and ($generated@@74 ($generated@@8 $generated@@589) $generated@@46 $generated@@590) ($generated@@335 $generated@@588 $generated@@587 $generated@@589))) (and (and ($generated@@335 $generated@@588 $generated@@587 $generated@@589) (= (ControlFlow 0 2) (- 0 1))) ($generated@@335 $generated@@588 $generated@@587 $generated@@589))) (or ($generated@@334 $generated@@588 $generated@@587 $generated@@589) (=> (not (= $generated@@587 0)) (= $generated@@589 ($generated@@336 $generated@@588 $generated@@587)))))))))))
(let (($generated@@598  (=> (= $generated@@591 ($generated@@156 $generated@@592 $generated@@590 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@595) (=> (= (ControlFlow 0 6) 5) $generated@@594)))))
(let (($generated@@599  (=> (and (and (and ($generated@@237 $generated@@590) ($generated@@593 $generated@@590)) (= 1 $generated@@333)) (and (not (= $generated@@587 0)) (= (ControlFlow 0 7) 6))) $generated@@598)))
$generated@@599)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@345 () Int)
(declare-fun $generated@@346 (Int Int Int) Bool)
(declare-fun $generated@@347 (Int Int Int) Bool)
(declare-fun $generated@@348 (Int Int) Int)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@224 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)))
)))
(assert  (=> (<= 0 $generated@@345) (forall (($generated@@349 Int) ($generated@@350 Int) ($generated@@351 Int) ) (!  (=> (or ($generated@@347 ($generated@@243 $generated@@349) ($generated@@243 $generated@@350) ($generated@@243 $generated@@351)) (not (= 0 $generated@@345))) (= ($generated@@346 ($generated@@243 $generated@@349) ($generated@@243 $generated@@350) ($generated@@243 $generated@@351))  (=> (not (= $generated@@350 0)) (= ($generated@@243 $generated@@351) ($generated@@243 ($generated@@348 $generated@@349 ($generated@@243 $generated@@350)))))))
 :weight 3
 :pattern ( ($generated@@346 ($generated@@243 $generated@@349) ($generated@@243 $generated@@350) ($generated@@243 $generated@@351)))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@233 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@250 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@233 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@238 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@250 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@238 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@276 $generated@@361) $generated@@360)))
)))
(assert  (=> (<= 0 $generated@@345) (forall (($generated@@362 Int) ($generated@@363 Int) ($generated@@364 Int) ) (!  (=> (or ($generated@@347 $generated@@362 $generated@@363 $generated@@364) (not (= 0 $generated@@345))) true)
 :pattern ( ($generated@@346 $generated@@362 $generated@@363 $generated@@364))
))))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@285 (type $generated@@371))))
(let (($generated@@373 ($generated@@284 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@375) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) ($generated@@143 ($generated@@366 $generated@@136 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@143 ($generated@@366 $generated@@136 $generated@@375))) ($generated@@144 ($generated@@366 $generated@@136 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@303 (type $generated@@379))))
(let (($generated@@381 ($generated@@302 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@383) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@382) ($generated@@143 ($generated@@366 $generated@@136 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@143 ($generated@@366 $generated@@136 $generated@@383))) ($generated@@144 ($generated@@366 $generated@@136 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@284 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@283 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@302 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@301 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@397) $generated@@401))) (and ($generated@@250 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@250 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@405) $generated@@409))) (and ($generated@@250 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@250 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 Int) ($generated@@411 Int) ) (! (= ($generated@@348 $generated@@410 $generated@@411) (div $generated@@410 $generated@@411))
 :pattern ( ($generated@@348 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@76 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@303 (type $generated@@414))))
(let (($generated@@416 ($generated@@302 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@301 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@300 $generated@@416 $generated@@415)) (= ($generated@@299 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@299 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@303 (type $generated@@417))))
(let (($generated@@419 ($generated@@302 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@301 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@300 $generated@@419 $generated@@418)) (= ($generated@@335 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@335 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@303 (type $generated@@420))))
(let (($generated@@422 ($generated@@302 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@301 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@300 $generated@@422 $generated@@421)) (= ($generated@@376 $generated@@420) ($generated@@412 $generated@@145))))))
 :pattern ( ($generated@@376 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@285 (type $generated@@423))))
(let (($generated@@425 ($generated@@284 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@283 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@282 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@145) (= (type $generated@@427) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@423) ($generated@@270 ($generated@@223 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@365 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@303 (type $generated@@428))))
(let (($generated@@430 ($generated@@302 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@301 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@300 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@145) (= (type $generated@@432) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@428) ($generated@@270 ($generated@@223 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@376 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@224 $generated@@433 $generated@@46)) (and (= ($generated@@270 ($generated@@366 $generated@@2 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@366 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@145) ($generated@@224 $generated@@434 $generated@@47)) (and (= ($generated@@270 ($generated@@366 $generated@@3 $generated@@434)) $generated@@434) ($generated@@132 ($generated@@366 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@145) ($generated@@224 $generated@@435 $generated@@44)) (and (= ($generated@@270 ($generated@@366 $generated@@4 $generated@@435)) $generated@@435) ($generated@@132 ($generated@@366 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 20))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@224 $generated@@437 $generated@@45)) (and (= ($generated@@270 ($generated@@366 $generated@@436 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@366 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@64) (= ($generated@@224 ($generated@@270 $generated@@438) $generated@@439) ($generated@@132 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@275 $generated@@440))))
 :pattern ( ($generated@@275 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@265 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@264 $generated@@443)) (<= 0 ($generated@@263 $generated@@442))))
 :pattern ( ($generated@@263 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@402 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@145) (= (type $generated@@465) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@135 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@135 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@135 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@135 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@145) (= (type $generated@@475) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@223 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@145) (= (type $generated@@477) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@223 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ($generated@@482 Int) ) (! (let (($generated@@483 ($generated@@265 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481 $generated@@482)) $generated@@483))
 :pattern ( ($generated@@479 $generated@@481 $generated@@482))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@264 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@484 ($generated@@478 $generated@@485) $generated@@486) (forall (($generated@@487 Int) ) (!  (=> (and (<= 0 $generated@@487) (< $generated@@487 ($generated@@263 $generated@@484))) ($generated@@250 ($generated@@479 $generated@@484 $generated@@487) $generated@@485 $generated@@486))
 :pattern ( ($generated@@479 $generated@@484 $generated@@487))
))))
 :pattern ( ($generated@@74 $generated@@484 ($generated@@478 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@75 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@75 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@233 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@233 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@238 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@238 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@150 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@150 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@478 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@478 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@478 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@478 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@366 $generated@@507 ($generated@@270 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@270 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@132 $generated@@508 ($generated@@394 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@508) $generated@@511))) (and ($generated@@224 ($generated@@81 ($generated@@367 $generated@@508) $generated@@511) $generated@@510) ($generated@@224 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@132 $generated@@508 ($generated@@394 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@132 $generated@@512 ($generated@@402 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@512) $generated@@515))) (and ($generated@@224 ($generated@@81 ($generated@@377 $generated@@512) $generated@@515) $generated@@514) ($generated@@224 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@132 $generated@@512 ($generated@@402 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@145)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@223 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@223 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@145)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@223 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@223 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@224 $generated@@522 ($generated@@394 $generated@@523 $generated@@524))) (and (= ($generated@@270 ($generated@@366 ($generated@@283 $generated@@145 $generated@@145) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@366 ($generated@@283 $generated@@145 $generated@@145) $generated@@522) ($generated@@394 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@394 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@224 $generated@@525 ($generated@@402 $generated@@526 $generated@@527))) (and (= ($generated@@270 ($generated@@366 ($generated@@301 $generated@@145 $generated@@145) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@366 ($generated@@301 $generated@@145 $generated@@145) $generated@@525) ($generated@@402 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@224 $generated@@525 ($generated@@402 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@145)) ($generated@@224 $generated@@530 ($generated@@135 $generated@@528 $generated@@529))) (and (= ($generated@@270 ($generated@@366 $generated@@136 $generated@@530)) $generated@@530) ($generated@@132 ($generated@@366 $generated@@136 $generated@@530) ($generated@@135 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@224 $generated@@530 ($generated@@135 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@81 ($generated@@412 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@81 ($generated@@412 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@535 $generated@@536)) $generated@@62) (= ($generated@@533 ($generated@@135 $generated@@535 $generated@@536)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@136) (= ($generated@@516 ($generated@@270 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@270 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) ($generated@@224 $generated@@538 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@366 $generated@@2 $generated@@538)) $generated@@538) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@75 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@233 $generated@@540))) (and (= ($generated@@270 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@539) ($generated@@233 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@233 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@238 $generated@@542))) (and (= ($generated@@270 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@541) ($generated@@238 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@238 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@64)) ($generated@@224 $generated@@543 ($generated@@150 $generated@@544))) (and (= ($generated@@270 ($generated@@366 ($generated@@76 $generated@@145 $generated@@2) $generated@@543)) $generated@@543) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@2) $generated@@543) ($generated@@150 $generated@@544))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@150 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@64)) ($generated@@224 $generated@@545 ($generated@@478 $generated@@546))) (and (= ($generated@@270 ($generated@@366 ($generated@@264 $generated@@145) $generated@@545)) $generated@@545) ($generated@@132 ($generated@@366 ($generated@@264 $generated@@145) $generated@@545) ($generated@@478 $generated@@546))))
 :pattern ( ($generated@@224 $generated@@545 ($generated@@478 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@547 ($generated@@150 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@547 $generated@@550)))) ($generated@@250 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@81 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@150 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@250 ($generated@@143 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@136) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@557) (and ($generated@@134 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@64) ($generated@@74 $generated@@555 ($generated@@135 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@135 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@250 ($generated@@144 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@559) ($generated@@245 $generated@@560)) ($generated@@245 ($generated@@223 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@559) ($generated@@245 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@243 $generated@@561))) ($generated@@245 ($generated@@270 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@243 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@562)) ($generated@@245 ($generated@@270 $generated@@562)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@562)))
)))
(assert  (=> (<= 0 $generated@@345) (forall (($generated@@563 Int) ($generated@@564 Int) ($generated@@565 Int) ) (!  (=> (or ($generated@@347 $generated@@563 $generated@@564 $generated@@565) (not (= 0 $generated@@345))) (= ($generated@@346 $generated@@563 $generated@@564 $generated@@565)  (=> (not (= $generated@@564 0)) (= $generated@@565 ($generated@@348 $generated@@563 $generated@@564)))))
 :pattern ( ($generated@@346 $generated@@563 $generated@@564 $generated@@565))
))))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@265 (type $generated@@566))))
 (=> (and (= (type $generated@@566) ($generated@@264 $generated@@567)) (= ($generated@@263 $generated@@566) 0)) (= $generated@@566 ($generated@@262 $generated@@567))))
 :pattern ( ($generated@@263 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@569)))
 (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@571 $generated@@2)) (= (type $generated@@570) $generated@@2)) (<= 0 ($generated $generated@@570))) (= ($generated@@275 ($generated@@82 $generated@@568 $generated@@569 $generated@@570)) (+ (- ($generated@@275 $generated@@568) ($generated ($generated@@81 $generated@@568 $generated@@569))) ($generated $generated@@570)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@568 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@2)) ($generated@@74 $generated@@573 $generated@@46 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@46 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@3)) ($generated@@74 $generated@@575 $generated@@47 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@47 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@4)) ($generated@@74 $generated@@577 $generated@@44 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@44 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@436)) ($generated@@74 $generated@@579 $generated@@45 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@45 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@145)) ($generated@@74 $generated@@581 $generated@@48 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@48 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@264 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= ($generated@@132 $generated@@582 ($generated@@478 $generated@@583)) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@263 $generated@@582))) ($generated@@224 ($generated@@479 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@479 $generated@@582 $generated@@584))
))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@478 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ) (!  (=> (= (type $generated@@586) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@263 $generated@@586))) (< ($generated@@517 ($generated@@366 $generated@@136 ($generated@@479 $generated@@586 $generated@@587))) ($generated@@585 $generated@@586))))
 :pattern ( ($generated@@517 ($generated@@366 $generated@@136 ($generated@@479 $generated@@586 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@132 $generated@@588 ($generated@@394 $generated@@589 $generated@@590))) (and (and ($generated@@132 ($generated@@281 $generated@@588) ($generated@@233 $generated@@589)) ($generated@@132 ($generated@@324 $generated@@588) ($generated@@233 $generated@@590))) ($generated@@132 ($generated@@365 $generated@@588) ($generated@@233 ($generated@@135 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@132 $generated@@588 ($generated@@394 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@132 $generated@@591 ($generated@@402 $generated@@592 $generated@@593))) (and (and ($generated@@132 ($generated@@299 $generated@@591) ($generated@@238 $generated@@592)) ($generated@@132 ($generated@@335 $generated@@591) ($generated@@238 $generated@@593))) ($generated@@132 ($generated@@376 $generated@@591) ($generated@@238 ($generated@@135 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@132 $generated@@591 ($generated@@402 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@2) ($generated@@132 $generated@@594 $generated@@46))
 :pattern ( ($generated@@132 $generated@@594 $generated@@46))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@3) ($generated@@132 $generated@@595 $generated@@47))
 :pattern ( ($generated@@132 $generated@@595 $generated@@47))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@4) ($generated@@132 $generated@@596 $generated@@44))
 :pattern ( ($generated@@132 $generated@@596 $generated@@44))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@436) ($generated@@132 $generated@@597 $generated@@45))
 :pattern ( ($generated@@132 $generated@@597 $generated@@45))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@145) ($generated@@132 $generated@@598 $generated@@48))
 :pattern ( ($generated@@132 $generated@@598 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@600) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@601) $generated@@77)) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@603) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@605 true))
(let (($generated@@606  (=> (and (= $generated@@599 0) (= (ControlFlow 0 5) 2)) $generated@@605)))
(let (($generated@@607  (=> (not (= $generated@@599 0)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= $generated@@599 0))) (=> (not (= $generated@@599 0)) (=> (= (ControlFlow 0 3) 2) $generated@@605))))))
(let (($generated@@608  (=> (= $generated@@600 ($generated@@211 $generated@@601 $generated@@602 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@607) (=> (= (ControlFlow 0 6) 5) $generated@@606)))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= $generated@@603 ($generated@@156 $generated@@601 $generated@@602 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@609) (=> (= (ControlFlow 0 7) 6) $generated@@608)))))
(let (($generated@@611  (=> (and (and ($generated@@249 $generated@@602) ($generated@@604 $generated@@602)) (and (= 0 $generated@@345) (= (ControlFlow 0 8) 7))) $generated@@610)))
$generated@@611))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
