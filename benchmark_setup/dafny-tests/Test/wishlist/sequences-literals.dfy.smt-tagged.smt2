(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@U Int) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@149)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) (= (type $generated@@237) $generated@@149)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@158) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@134 $generated@@158)) (= (type $generated@@257) $generated@@158)) (= (type $generated@@258) $generated@@64)) (and ($generated@@145 $generated@@256 ($generated@@254 $generated@@258)) ($generated@@229 $generated@@257 $generated@@258))) ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@158) (= (type $generated@@271) $generated@@158)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@272 ($generated@@163 $generated@@273)) 0)
 :pattern ( ($generated@@163 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (= (type $generated@@274) ($generated@@134 $generated@@276)) (= ($generated@@272 ($generated@@133 $generated@@274 $generated@@275)) (+ 1 ($generated@@272 $generated@@274)))))
 :pattern ( ($generated@@133 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@158)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@168 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@168 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@135 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@331) ($generated@@134 $generated@@334)) (and (=> (= $generated@@332 ($generated@@272 $generated@@331)) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) $generated@@333)) (=> (not (= $generated@@332 ($generated@@272 $generated@@331))) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) ($generated@@327 $generated@@331 $generated@@332))))))
 :pattern ( ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@292 (type $generated@@335))))
(let (($generated@@337 ($generated@@291 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@290 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@289 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@288 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@310 (type $generated@@346))))
(let (($generated@@348 ($generated@@309 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@308 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@307 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@306 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@229 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@134 $generated@@362)) (= ($generated@@132 $generated@@360 $generated@@361) (exists (($generated@@363 Int) ) (!  (and (and (<= 0 $generated@@363) (< $generated@@363 ($generated@@272 $generated@@360))) (= ($generated@@327 $generated@@360 $generated@@363) $generated@@361))
 :pattern ( ($generated@@327 $generated@@360 $generated@@363))
)))))
 :pattern ( ($generated@@132 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@158) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@260 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@158) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@283 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@292 (type $generated@@380))))
(let (($generated@@382 ($generated@@291 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@291 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@290 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@309 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@308 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))) (and ($generated@@260 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@260 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@260 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@260 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@306 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@306 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@350 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@350 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@277 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@277 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@277 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@277 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@145 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@277 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@229 ($generated@@277 $generated@@445) $generated@@446) ($generated@@145 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@277 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@135 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@134 $generated@@450)) (<= 0 ($generated@@272 $generated@@449))))
 :pattern ( ($generated@@272 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@403 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@403 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@403 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@411 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@411 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@266 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@148 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@148 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@148 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@134 $generated@@158)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@272 $generated@@485))) ($generated@@260 ($generated@@327 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@327 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@238 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@238 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@243 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@243 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@167 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@167 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@254 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@375 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@229 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@229 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@81 ($generated@@386 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@158) (= (type $generated@@520) $generated@@158)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@228 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@228 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@158) (= (type $generated@@522) $generated@@158)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@228 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@228 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@158) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523)) $generated@@523) ($generated@@145 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523) ($generated@@403 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@158) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526)) $generated@@526) ($generated@@145 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526) ($generated@@411 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@158)) ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@375 $generated@@149 $generated@@531)) $generated@@531) ($generated@@145 ($generated@@375 $generated@@149 $generated@@531) ($generated@@148 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@419 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@135 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540)) ($generated@@134 $generated@@541)))
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@135 (type $generated@@542))))
(= (type ($generated@@539 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (=> (= (type $generated@@544) ($generated@@134 $generated@@546)) (and (= ($generated@@538 ($generated@@133 $generated@@544 $generated@@545)) $generated@@544) (= ($generated@@539 ($generated@@133 $generated@@544 $generated@@545)) $generated@@545))))
 :pattern ( ($generated@@133 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@149) (= ($generated@@517 ($generated@@277 $generated@@547)) ($generated@@518 $generated@@547)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) ($generated@@229 $generated@@548 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@64)) ($generated@@229 $generated@@553 ($generated@@167 $generated@@554))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553) ($generated@@167 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@167 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@64)) ($generated@@229 $generated@@555 ($generated@@254 $generated@@556))) (and (= ($generated@@277 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555) ($generated@@254 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@254 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@260 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@563) (and ($generated@@147 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@567) (and ($generated@@147 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@158)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@277 $generated@@572)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@135 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@134 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@163 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@282 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@443)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@158)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@134 $generated@@158)) (= (type $generated@@590) $generated@@64)) (= ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@229 ($generated@@327 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@327 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597))) (and (and ($generated@@145 ($generated@@288 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@145 ($generated@@339 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@145 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@148 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@306 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@145 ($generated@@385 $generated@@598) ($generated@@243 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@145 $generated@@601 $generated@@46))
 :pattern ( ($generated@@145 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@145 $generated@@602 $generated@@47))
 :pattern ( ($generated@@145 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@145 $generated@@603 $generated@@44))
 :pattern ( ($generated@@145 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@443) ($generated@@145 $generated@@604 $generated@@45))
 :pattern ( ($generated@@145 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@158) ($generated@@145 $generated@@605 $generated@@48))
 :pattern ( ($generated@@145 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (and (= (type $generated@@606) ($generated@@134 $generated@@158)) (= (type $generated@@607) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@608) $generated@@77)) (= (type $generated@@609) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@611) ($generated@@134 $generated@@158))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@613 true))
(let (($generated@@614  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@2) ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
 :pattern ( ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
)))))
(let (($generated@@616  (=> (and (= $generated@@607 ($generated@@173 $generated@@608 $generated@@609 $generated@@60 false)) (= $generated@@606 ($generated@@250 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 0)))) ($generated@@277 ($generated@@8 ($generated@@248 1)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 ($generated@@248 6))))))) (and (=> (= (ControlFlow 0 4) 2) $generated@@614) (=> (= (ControlFlow 0 4) 3) $generated@@613)))))
(let (($generated@@617  (=> (and ($generated@@259 $generated@@609) ($generated@@610 $generated@@609)) (=> (and (and (and ($generated@@145 $generated@@611 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@611 ($generated@@254 $generated@@46) $generated@@609)) true) (and (= 0 $generated@@612) (= (ControlFlow 0 5) 4))) $generated@@616))))
$generated@@617)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@U Int) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@149)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) (= (type $generated@@237) $generated@@149)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@158) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@134 $generated@@158)) (= (type $generated@@257) $generated@@158)) (= (type $generated@@258) $generated@@64)) (and ($generated@@145 $generated@@256 ($generated@@254 $generated@@258)) ($generated@@229 $generated@@257 $generated@@258))) ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@158) (= (type $generated@@271) $generated@@158)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@272 ($generated@@163 $generated@@273)) 0)
 :pattern ( ($generated@@163 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (= (type $generated@@274) ($generated@@134 $generated@@276)) (= ($generated@@272 ($generated@@133 $generated@@274 $generated@@275)) (+ 1 ($generated@@272 $generated@@274)))))
 :pattern ( ($generated@@133 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@158)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@168 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@168 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@135 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@331) ($generated@@134 $generated@@334)) (and (=> (= $generated@@332 ($generated@@272 $generated@@331)) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) $generated@@333)) (=> (not (= $generated@@332 ($generated@@272 $generated@@331))) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) ($generated@@327 $generated@@331 $generated@@332))))))
 :pattern ( ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@292 (type $generated@@335))))
(let (($generated@@337 ($generated@@291 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@290 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@289 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@288 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@310 (type $generated@@346))))
(let (($generated@@348 ($generated@@309 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@308 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@307 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@306 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@229 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@134 $generated@@362)) (= ($generated@@132 $generated@@360 $generated@@361) (exists (($generated@@363 Int) ) (!  (and (and (<= 0 $generated@@363) (< $generated@@363 ($generated@@272 $generated@@360))) (= ($generated@@327 $generated@@360 $generated@@363) $generated@@361))
 :pattern ( ($generated@@327 $generated@@360 $generated@@363))
)))))
 :pattern ( ($generated@@132 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@158) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@260 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@158) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@283 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@292 (type $generated@@380))))
(let (($generated@@382 ($generated@@291 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@291 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@290 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@309 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@308 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))) (and ($generated@@260 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@260 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@260 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@260 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@306 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@306 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@350 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@350 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@277 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@277 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@277 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@277 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@145 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@277 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@229 ($generated@@277 $generated@@445) $generated@@446) ($generated@@145 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@277 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@135 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@134 $generated@@450)) (<= 0 ($generated@@272 $generated@@449))))
 :pattern ( ($generated@@272 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@403 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@403 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@403 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@411 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@411 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@266 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@148 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@148 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@148 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@134 $generated@@158)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@272 $generated@@485))) ($generated@@260 ($generated@@327 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@327 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@238 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@238 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@243 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@243 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@167 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@167 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@254 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@375 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@229 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@229 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@81 ($generated@@386 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@158) (= (type $generated@@520) $generated@@158)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@228 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@228 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@158) (= (type $generated@@522) $generated@@158)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@228 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@228 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@158) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523)) $generated@@523) ($generated@@145 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523) ($generated@@403 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@158) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526)) $generated@@526) ($generated@@145 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526) ($generated@@411 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@158)) ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@375 $generated@@149 $generated@@531)) $generated@@531) ($generated@@145 ($generated@@375 $generated@@149 $generated@@531) ($generated@@148 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@419 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@135 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540)) ($generated@@134 $generated@@541)))
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@135 (type $generated@@542))))
(= (type ($generated@@539 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (=> (= (type $generated@@544) ($generated@@134 $generated@@546)) (and (= ($generated@@538 ($generated@@133 $generated@@544 $generated@@545)) $generated@@544) (= ($generated@@539 ($generated@@133 $generated@@544 $generated@@545)) $generated@@545))))
 :pattern ( ($generated@@133 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@149) (= ($generated@@517 ($generated@@277 $generated@@547)) ($generated@@518 $generated@@547)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) ($generated@@229 $generated@@548 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@64)) ($generated@@229 $generated@@553 ($generated@@167 $generated@@554))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553) ($generated@@167 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@167 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@64)) ($generated@@229 $generated@@555 ($generated@@254 $generated@@556))) (and (= ($generated@@277 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555) ($generated@@254 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@254 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@260 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@563) (and ($generated@@147 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@567) (and ($generated@@147 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@158)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@277 $generated@@572)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@135 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@134 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@163 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@282 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@443)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@158)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@134 $generated@@158)) (= (type $generated@@590) $generated@@64)) (= ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@229 ($generated@@327 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@327 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597))) (and (and ($generated@@145 ($generated@@288 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@145 ($generated@@339 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@145 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@148 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@306 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@145 ($generated@@385 $generated@@598) ($generated@@243 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@145 $generated@@601 $generated@@46))
 :pattern ( ($generated@@145 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@145 $generated@@602 $generated@@47))
 :pattern ( ($generated@@145 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@145 $generated@@603 $generated@@44))
 :pattern ( ($generated@@145 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@443) ($generated@@145 $generated@@604 $generated@@45))
 :pattern ( ($generated@@145 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@158) ($generated@@145 $generated@@605 $generated@@48))
 :pattern ( ($generated@@145 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (and (= (type $generated@@606) ($generated@@134 $generated@@158)) (= (type $generated@@607) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@608) $generated@@77)) (= (type $generated@@609) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@611) ($generated@@134 $generated@@158))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@613 true))
(let (($generated@@614  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@2) ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
 :pattern ( ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
)))))
(let (($generated@@616  (=> (and (= $generated@@607 ($generated@@173 $generated@@608 $generated@@609 $generated@@60 false)) (= $generated@@606 ($generated@@250 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 0)))) ($generated@@277 ($generated@@8 ($generated@@248 1)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 ($generated@@248 6))))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 0)))) (=> ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 0))) (and (=> (= (ControlFlow 0 4) 2) $generated@@614) (=> (= (ControlFlow 0 4) 3) $generated@@613)))))))
(let (($generated@@617  (=> (and ($generated@@259 $generated@@609) ($generated@@610 $generated@@609)) (=> (and (and (and ($generated@@145 $generated@@611 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@611 ($generated@@254 $generated@@46) $generated@@609)) true) (and (= 0 $generated@@612) (= (ControlFlow 0 6) 4))) $generated@@616))))
$generated@@617)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@U Int) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@149)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) (= (type $generated@@237) $generated@@149)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@158) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@134 $generated@@158)) (= (type $generated@@257) $generated@@158)) (= (type $generated@@258) $generated@@64)) (and ($generated@@145 $generated@@256 ($generated@@254 $generated@@258)) ($generated@@229 $generated@@257 $generated@@258))) ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@158) (= (type $generated@@271) $generated@@158)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@272 ($generated@@163 $generated@@273)) 0)
 :pattern ( ($generated@@163 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (= (type $generated@@274) ($generated@@134 $generated@@276)) (= ($generated@@272 ($generated@@133 $generated@@274 $generated@@275)) (+ 1 ($generated@@272 $generated@@274)))))
 :pattern ( ($generated@@133 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@158)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@168 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@168 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@135 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@331) ($generated@@134 $generated@@334)) (and (=> (= $generated@@332 ($generated@@272 $generated@@331)) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) $generated@@333)) (=> (not (= $generated@@332 ($generated@@272 $generated@@331))) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) ($generated@@327 $generated@@331 $generated@@332))))))
 :pattern ( ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@292 (type $generated@@335))))
(let (($generated@@337 ($generated@@291 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@290 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@289 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@288 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@310 (type $generated@@346))))
(let (($generated@@348 ($generated@@309 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@308 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@307 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@306 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@229 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@134 $generated@@362)) (= ($generated@@132 $generated@@360 $generated@@361) (exists (($generated@@363 Int) ) (!  (and (and (<= 0 $generated@@363) (< $generated@@363 ($generated@@272 $generated@@360))) (= ($generated@@327 $generated@@360 $generated@@363) $generated@@361))
 :pattern ( ($generated@@327 $generated@@360 $generated@@363))
)))))
 :pattern ( ($generated@@132 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@158) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@260 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@158) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@283 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@292 (type $generated@@380))))
(let (($generated@@382 ($generated@@291 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@291 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@290 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@309 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@308 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))) (and ($generated@@260 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@260 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@260 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@260 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@306 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@306 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@350 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@350 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@277 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@277 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@277 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@277 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@145 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@277 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@229 ($generated@@277 $generated@@445) $generated@@446) ($generated@@145 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@277 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@135 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@134 $generated@@450)) (<= 0 ($generated@@272 $generated@@449))))
 :pattern ( ($generated@@272 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@403 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@403 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@403 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@411 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@411 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@266 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@148 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@148 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@148 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@134 $generated@@158)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@272 $generated@@485))) ($generated@@260 ($generated@@327 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@327 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@238 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@238 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@243 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@243 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@167 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@167 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@254 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@375 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@229 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@229 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@81 ($generated@@386 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@158) (= (type $generated@@520) $generated@@158)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@228 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@228 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@158) (= (type $generated@@522) $generated@@158)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@228 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@228 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@158) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523)) $generated@@523) ($generated@@145 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523) ($generated@@403 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@158) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526)) $generated@@526) ($generated@@145 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526) ($generated@@411 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@158)) ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@375 $generated@@149 $generated@@531)) $generated@@531) ($generated@@145 ($generated@@375 $generated@@149 $generated@@531) ($generated@@148 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@419 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@135 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540)) ($generated@@134 $generated@@541)))
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@135 (type $generated@@542))))
(= (type ($generated@@539 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (=> (= (type $generated@@544) ($generated@@134 $generated@@546)) (and (= ($generated@@538 ($generated@@133 $generated@@544 $generated@@545)) $generated@@544) (= ($generated@@539 ($generated@@133 $generated@@544 $generated@@545)) $generated@@545))))
 :pattern ( ($generated@@133 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@149) (= ($generated@@517 ($generated@@277 $generated@@547)) ($generated@@518 $generated@@547)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) ($generated@@229 $generated@@548 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@64)) ($generated@@229 $generated@@553 ($generated@@167 $generated@@554))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553) ($generated@@167 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@167 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@64)) ($generated@@229 $generated@@555 ($generated@@254 $generated@@556))) (and (= ($generated@@277 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555) ($generated@@254 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@254 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@260 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@563) (and ($generated@@147 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@567) (and ($generated@@147 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@158)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@277 $generated@@572)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@135 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@134 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@163 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@282 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@443)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@158)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@134 $generated@@158)) (= (type $generated@@590) $generated@@64)) (= ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@229 ($generated@@327 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@327 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597))) (and (and ($generated@@145 ($generated@@288 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@145 ($generated@@339 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@145 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@148 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@306 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@145 ($generated@@385 $generated@@598) ($generated@@243 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@145 $generated@@601 $generated@@46))
 :pattern ( ($generated@@145 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@145 $generated@@602 $generated@@47))
 :pattern ( ($generated@@145 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@145 $generated@@603 $generated@@44))
 :pattern ( ($generated@@145 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@443) ($generated@@145 $generated@@604 $generated@@45))
 :pattern ( ($generated@@145 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@158) ($generated@@145 $generated@@605 $generated@@48))
 :pattern ( ($generated@@145 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (and (= (type $generated@@606) ($generated@@134 $generated@@158)) (= (type $generated@@607) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@608) $generated@@77)) (= (type $generated@@609) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@611) ($generated@@134 $generated@@158))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@613 true))
(let (($generated@@614  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@2) ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
 :no-pattern (type $generated@@615)
 :no-pattern ($generated $generated@@615)
 :no-pattern ($generated@@0 $generated@@615)
)))))
(let (($generated@@616  (=> (and (= $generated@@607 ($generated@@173 $generated@@608 $generated@@609 $generated@@60 false)) (= $generated@@606 ($generated@@250 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 0)))) ($generated@@277 ($generated@@8 ($generated@@248 1)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 ($generated@@248 6))))))) (and (=> (= (ControlFlow 0 4) 2) $generated@@614) (=> (= (ControlFlow 0 4) 3) $generated@@613)))))
(let (($generated@@617  (=> (and ($generated@@259 $generated@@609) ($generated@@610 $generated@@609)) (=> (and (and (and ($generated@@145 $generated@@611 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@611 ($generated@@254 $generated@@46) $generated@@609)) true) (and (= 0 $generated@@612) (= (ControlFlow 0 5) 4))) $generated@@616))))
$generated@@617)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@U Int) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@149)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) (= (type $generated@@237) $generated@@149)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@158) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@134 $generated@@158)) (= (type $generated@@257) $generated@@158)) (= (type $generated@@258) $generated@@64)) (and ($generated@@145 $generated@@256 ($generated@@254 $generated@@258)) ($generated@@229 $generated@@257 $generated@@258))) ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@158) (= (type $generated@@271) $generated@@158)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@272 ($generated@@163 $generated@@273)) 0)
 :pattern ( ($generated@@163 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (= (type $generated@@274) ($generated@@134 $generated@@276)) (= ($generated@@272 ($generated@@133 $generated@@274 $generated@@275)) (+ 1 ($generated@@272 $generated@@274)))))
 :pattern ( ($generated@@133 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@158)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@168 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@168 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@135 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@331) ($generated@@134 $generated@@334)) (and (=> (= $generated@@332 ($generated@@272 $generated@@331)) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) $generated@@333)) (=> (not (= $generated@@332 ($generated@@272 $generated@@331))) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) ($generated@@327 $generated@@331 $generated@@332))))))
 :pattern ( ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@292 (type $generated@@335))))
(let (($generated@@337 ($generated@@291 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@290 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@289 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@288 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@310 (type $generated@@346))))
(let (($generated@@348 ($generated@@309 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@308 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@307 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@306 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@229 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@134 $generated@@362)) (= ($generated@@132 $generated@@360 $generated@@361) (exists (($generated@@363 Int) ) (!  (and (and (<= 0 $generated@@363) (< $generated@@363 ($generated@@272 $generated@@360))) (= ($generated@@327 $generated@@360 $generated@@363) $generated@@361))
 :pattern ( ($generated@@327 $generated@@360 $generated@@363))
)))))
 :pattern ( ($generated@@132 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@158) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@260 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@158) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@283 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@292 (type $generated@@380))))
(let (($generated@@382 ($generated@@291 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@291 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@290 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@309 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@308 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))) (and ($generated@@260 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@260 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@260 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@260 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@306 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@306 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@350 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@350 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@277 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@277 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@277 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@277 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@145 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@277 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@229 ($generated@@277 $generated@@445) $generated@@446) ($generated@@145 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@277 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@135 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@134 $generated@@450)) (<= 0 ($generated@@272 $generated@@449))))
 :pattern ( ($generated@@272 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@403 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@403 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@403 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@411 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@411 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@266 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@148 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@148 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@148 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@134 $generated@@158)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@272 $generated@@485))) ($generated@@260 ($generated@@327 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@327 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@238 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@238 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@243 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@243 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@167 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@167 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@254 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@375 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@229 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@229 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@81 ($generated@@386 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@158) (= (type $generated@@520) $generated@@158)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@228 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@228 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@158) (= (type $generated@@522) $generated@@158)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@228 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@228 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@158) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523)) $generated@@523) ($generated@@145 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523) ($generated@@403 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@158) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526)) $generated@@526) ($generated@@145 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526) ($generated@@411 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@158)) ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@375 $generated@@149 $generated@@531)) $generated@@531) ($generated@@145 ($generated@@375 $generated@@149 $generated@@531) ($generated@@148 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@419 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@135 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540)) ($generated@@134 $generated@@541)))
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@135 (type $generated@@542))))
(= (type ($generated@@539 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (=> (= (type $generated@@544) ($generated@@134 $generated@@546)) (and (= ($generated@@538 ($generated@@133 $generated@@544 $generated@@545)) $generated@@544) (= ($generated@@539 ($generated@@133 $generated@@544 $generated@@545)) $generated@@545))))
 :pattern ( ($generated@@133 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@149) (= ($generated@@517 ($generated@@277 $generated@@547)) ($generated@@518 $generated@@547)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) ($generated@@229 $generated@@548 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@64)) ($generated@@229 $generated@@553 ($generated@@167 $generated@@554))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553) ($generated@@167 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@167 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@64)) ($generated@@229 $generated@@555 ($generated@@254 $generated@@556))) (and (= ($generated@@277 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555) ($generated@@254 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@254 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@260 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@563) (and ($generated@@147 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@567) (and ($generated@@147 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@158)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@277 $generated@@572)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@135 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@134 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@163 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@282 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@443)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@158)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@134 $generated@@158)) (= (type $generated@@590) $generated@@64)) (= ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@229 ($generated@@327 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@327 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597))) (and (and ($generated@@145 ($generated@@288 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@145 ($generated@@339 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@145 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@148 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@306 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@145 ($generated@@385 $generated@@598) ($generated@@243 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@145 $generated@@601 $generated@@46))
 :pattern ( ($generated@@145 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@145 $generated@@602 $generated@@47))
 :pattern ( ($generated@@145 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@145 $generated@@603 $generated@@44))
 :pattern ( ($generated@@145 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@443) ($generated@@145 $generated@@604 $generated@@45))
 :pattern ( ($generated@@145 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@158) ($generated@@145 $generated@@605 $generated@@48))
 :pattern ( ($generated@@145 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (and (= (type $generated@@606) ($generated@@134 $generated@@158)) (= (type $generated@@607) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@608) $generated@@77)) (= (type $generated@@609) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@611) ($generated@@134 $generated@@158))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@613 true))
(let (($generated@@614  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@2) ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
 :pattern ( ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
)))))
(let (($generated@@616  (=> (and (= $generated@@607 ($generated@@173 $generated@@608 $generated@@609 $generated@@60 false)) (= $generated@@606 ($generated@@250 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 0)))) ($generated@@277 ($generated@@8 ($generated@@248 1)))) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 4)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 ($generated@@248 6)))) ($generated@@277 ($generated@@8 ($generated@@248 7)))) ($generated@@277 ($generated@@8 ($generated@@248 8)))) ($generated@@277 ($generated@@8 ($generated@@248 12)))) ($generated@@277 ($generated@@8 ($generated@@248 13)))) ($generated@@277 ($generated@@8 ($generated@@248 14)))) ($generated@@277 ($generated@@8 ($generated@@248 15)))) ($generated@@277 ($generated@@8 ($generated@@248 16)))) ($generated@@277 ($generated@@8 ($generated@@248 17)))) ($generated@@277 ($generated@@8 ($generated@@248 18)))) ($generated@@277 ($generated@@8 ($generated@@248 19)))) ($generated@@277 ($generated@@8 ($generated@@248 20)))) ($generated@@277 ($generated@@8 ($generated@@248 21)))) ($generated@@277 ($generated@@8 ($generated@@248 22)))) ($generated@@277 ($generated@@8 ($generated@@248 23)))) ($generated@@277 ($generated@@8 ($generated@@248 24)))) ($generated@@277 ($generated@@8 ($generated@@248 25)))) ($generated@@277 ($generated@@8 ($generated@@248 26)))) ($generated@@277 ($generated@@8 ($generated@@248 27)))) ($generated@@277 ($generated@@8 ($generated@@248 28)))) ($generated@@277 ($generated@@8 ($generated@@248 29)))) ($generated@@277 ($generated@@8 ($generated@@248 30)))) ($generated@@277 ($generated@@8 ($generated@@248 31)))) ($generated@@277 ($generated@@8 ($generated@@248 32)))) ($generated@@277 ($generated@@8 ($generated@@248 33)))) ($generated@@277 ($generated@@8 ($generated@@248 34)))) ($generated@@277 ($generated@@8 ($generated@@248 35)))) ($generated@@277 ($generated@@8 ($generated@@248 36)))) ($generated@@277 ($generated@@8 ($generated@@248 37)))) ($generated@@277 ($generated@@8 ($generated@@248 38)))) ($generated@@277 ($generated@@8 ($generated@@248 39)))) ($generated@@277 ($generated@@8 ($generated@@248 40)))) ($generated@@277 ($generated@@8 ($generated@@248 41)))) ($generated@@277 ($generated@@8 ($generated@@248 42)))) ($generated@@277 ($generated@@8 ($generated@@248 43)))) ($generated@@277 ($generated@@8 ($generated@@248 44)))) ($generated@@277 ($generated@@8 ($generated@@248 45)))) ($generated@@277 ($generated@@8 ($generated@@248 46)))) ($generated@@277 ($generated@@8 ($generated@@248 47)))) ($generated@@277 ($generated@@8 ($generated@@248 48)))) ($generated@@277 ($generated@@8 ($generated@@248 49)))) ($generated@@277 ($generated@@8 ($generated@@248 50)))) ($generated@@277 ($generated@@8 ($generated@@248 51)))) ($generated@@277 ($generated@@8 ($generated@@248 52)))) ($generated@@277 ($generated@@8 ($generated@@248 53)))) ($generated@@277 ($generated@@8 ($generated@@248 54)))) ($generated@@277 ($generated@@8 ($generated@@248 55)))) ($generated@@277 ($generated@@8 ($generated@@248 56)))) ($generated@@277 ($generated@@8 ($generated@@248 57)))) ($generated@@277 ($generated@@8 ($generated@@248 58)))) ($generated@@277 ($generated@@8 ($generated@@248 59)))) ($generated@@277 ($generated@@8 ($generated@@248 60)))) ($generated@@277 ($generated@@8 ($generated@@248 61)))) ($generated@@277 ($generated@@8 ($generated@@248 62)))) ($generated@@277 ($generated@@8 ($generated@@248 63)))) ($generated@@277 ($generated@@8 ($generated@@248 64)))) ($generated@@277 ($generated@@8 ($generated@@248 65)))) ($generated@@277 ($generated@@8 ($generated@@248 66)))) ($generated@@277 ($generated@@8 ($generated@@248 67)))) ($generated@@277 ($generated@@8 ($generated@@248 68)))) ($generated@@277 ($generated@@8 ($generated@@248 69)))) ($generated@@277 ($generated@@8 ($generated@@248 70)))) ($generated@@277 ($generated@@8 ($generated@@248 71)))) ($generated@@277 ($generated@@8 ($generated@@248 72)))) ($generated@@277 ($generated@@8 ($generated@@248 73)))) ($generated@@277 ($generated@@8 ($generated@@248 74)))) ($generated@@277 ($generated@@8 ($generated@@248 75)))) ($generated@@277 ($generated@@8 ($generated@@248 76)))) ($generated@@277 ($generated@@8 ($generated@@248 77)))) ($generated@@277 ($generated@@8 ($generated@@248 78)))) ($generated@@277 ($generated@@8 ($generated@@248 79)))) ($generated@@277 ($generated@@8 ($generated@@248 80)))) ($generated@@277 ($generated@@8 ($generated@@248 81)))) ($generated@@277 ($generated@@8 ($generated@@248 82)))) ($generated@@277 ($generated@@8 ($generated@@248 83)))) ($generated@@277 ($generated@@8 ($generated@@248 84)))) ($generated@@277 ($generated@@8 ($generated@@248 85)))) ($generated@@277 ($generated@@8 ($generated@@248 86)))) ($generated@@277 ($generated@@8 ($generated@@248 87)))) ($generated@@277 ($generated@@8 ($generated@@248 88)))) ($generated@@277 ($generated@@8 ($generated@@248 89)))) ($generated@@277 ($generated@@8 ($generated@@248 90)))) ($generated@@277 ($generated@@8 ($generated@@248 91)))) ($generated@@277 ($generated@@8 ($generated@@248 92)))) ($generated@@277 ($generated@@8 ($generated@@248 93)))) ($generated@@277 ($generated@@8 ($generated@@248 94)))) ($generated@@277 ($generated@@8 ($generated@@248 95)))) ($generated@@277 ($generated@@8 ($generated@@248 96)))) ($generated@@277 ($generated@@8 ($generated@@248 97)))) ($generated@@277 ($generated@@8 ($generated@@248 98)))) ($generated@@277 ($generated@@8 ($generated@@248 99)))) ($generated@@277 ($generated@@8 ($generated@@248 100)))) ($generated@@277 ($generated@@8 ($generated@@248 101)))) ($generated@@277 ($generated@@8 ($generated@@248 102)))) ($generated@@277 ($generated@@8 ($generated@@248 103)))) ($generated@@277 ($generated@@8 ($generated@@248 104)))) ($generated@@277 ($generated@@8 ($generated@@248 105)))) ($generated@@277 ($generated@@8 ($generated@@248 106)))) ($generated@@277 ($generated@@8 ($generated@@248 107)))) ($generated@@277 ($generated@@8 ($generated@@248 108)))) ($generated@@277 ($generated@@8 ($generated@@248 109)))) ($generated@@277 ($generated@@8 ($generated@@248 110)))) ($generated@@277 ($generated@@8 ($generated@@248 111)))) ($generated@@277 ($generated@@8 ($generated@@248 112)))) ($generated@@277 ($generated@@8 ($generated@@248 113)))) ($generated@@277 ($generated@@8 ($generated@@248 114)))) ($generated@@277 ($generated@@8 ($generated@@248 115)))) ($generated@@277 ($generated@@8 ($generated@@248 116)))) ($generated@@277 ($generated@@8 ($generated@@248 117)))) ($generated@@277 ($generated@@8 ($generated@@248 118)))) ($generated@@277 ($generated@@8 ($generated@@248 122)))) ($generated@@277 ($generated@@8 ($generated@@248 123)))) ($generated@@277 ($generated@@8 ($generated@@248 124)))) ($generated@@277 ($generated@@8 ($generated@@248 125)))) ($generated@@277 ($generated@@8 ($generated@@248 126)))) ($generated@@277 ($generated@@8 ($generated@@248 127)))) ($generated@@277 ($generated@@8 ($generated@@248 128)))) ($generated@@277 ($generated@@8 ($generated@@248 129)))) ($generated@@277 ($generated@@8 ($generated@@248 130)))) ($generated@@277 ($generated@@8 ($generated@@248 131)))) ($generated@@277 ($generated@@8 ($generated@@248 132)))) ($generated@@277 ($generated@@8 ($generated@@248 133)))) ($generated@@277 ($generated@@8 ($generated@@248 134)))) ($generated@@277 ($generated@@8 ($generated@@248 135)))) ($generated@@277 ($generated@@8 ($generated@@248 136))))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 0)))) (=> ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 0))) (and (=> (= (ControlFlow 0 4) 2) $generated@@614) (=> (= (ControlFlow 0 4) 3) $generated@@613)))))))
(let (($generated@@617  (=> (and ($generated@@259 $generated@@609) ($generated@@610 $generated@@609)) (=> (and (and (and ($generated@@145 $generated@@611 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@611 ($generated@@254 $generated@@46) $generated@@609)) true) (and (= 0 $generated@@612) (= (ControlFlow 0 6) 4))) $generated@@616))))
$generated@@617)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@U Int) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@149)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) (= (type $generated@@237) $generated@@149)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@158) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@134 $generated@@158)) (= (type $generated@@257) $generated@@158)) (= (type $generated@@258) $generated@@64)) (and ($generated@@145 $generated@@256 ($generated@@254 $generated@@258)) ($generated@@229 $generated@@257 $generated@@258))) ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@158) (= (type $generated@@271) $generated@@158)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@272 ($generated@@163 $generated@@273)) 0)
 :pattern ( ($generated@@163 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (= (type $generated@@274) ($generated@@134 $generated@@276)) (= ($generated@@272 ($generated@@133 $generated@@274 $generated@@275)) (+ 1 ($generated@@272 $generated@@274)))))
 :pattern ( ($generated@@133 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@158)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@168 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@168 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@135 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@331) ($generated@@134 $generated@@334)) (and (=> (= $generated@@332 ($generated@@272 $generated@@331)) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) $generated@@333)) (=> (not (= $generated@@332 ($generated@@272 $generated@@331))) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) ($generated@@327 $generated@@331 $generated@@332))))))
 :pattern ( ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@292 (type $generated@@335))))
(let (($generated@@337 ($generated@@291 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@290 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@289 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@288 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@310 (type $generated@@346))))
(let (($generated@@348 ($generated@@309 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@308 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@307 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@306 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@229 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@134 $generated@@362)) (= ($generated@@132 $generated@@360 $generated@@361) (exists (($generated@@363 Int) ) (!  (and (and (<= 0 $generated@@363) (< $generated@@363 ($generated@@272 $generated@@360))) (= ($generated@@327 $generated@@360 $generated@@363) $generated@@361))
 :pattern ( ($generated@@327 $generated@@360 $generated@@363))
)))))
 :pattern ( ($generated@@132 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@158) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@260 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@158) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@283 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@292 (type $generated@@380))))
(let (($generated@@382 ($generated@@291 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@291 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@290 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@309 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@308 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))) (and ($generated@@260 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@260 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@260 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@260 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@306 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@306 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@350 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@350 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@277 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@277 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@277 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@277 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@145 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@277 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@229 ($generated@@277 $generated@@445) $generated@@446) ($generated@@145 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@277 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@135 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@134 $generated@@450)) (<= 0 ($generated@@272 $generated@@449))))
 :pattern ( ($generated@@272 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@403 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@403 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@403 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@411 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@411 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@266 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@148 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@148 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@148 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@134 $generated@@158)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@272 $generated@@485))) ($generated@@260 ($generated@@327 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@327 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@238 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@238 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@243 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@243 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@167 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@167 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@254 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@375 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@229 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@229 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@81 ($generated@@386 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@158) (= (type $generated@@520) $generated@@158)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@228 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@228 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@158) (= (type $generated@@522) $generated@@158)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@228 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@228 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@158) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523)) $generated@@523) ($generated@@145 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523) ($generated@@403 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@158) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526)) $generated@@526) ($generated@@145 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526) ($generated@@411 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@158)) ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@375 $generated@@149 $generated@@531)) $generated@@531) ($generated@@145 ($generated@@375 $generated@@149 $generated@@531) ($generated@@148 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@419 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@135 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540)) ($generated@@134 $generated@@541)))
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@135 (type $generated@@542))))
(= (type ($generated@@539 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (=> (= (type $generated@@544) ($generated@@134 $generated@@546)) (and (= ($generated@@538 ($generated@@133 $generated@@544 $generated@@545)) $generated@@544) (= ($generated@@539 ($generated@@133 $generated@@544 $generated@@545)) $generated@@545))))
 :pattern ( ($generated@@133 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@149) (= ($generated@@517 ($generated@@277 $generated@@547)) ($generated@@518 $generated@@547)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) ($generated@@229 $generated@@548 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@64)) ($generated@@229 $generated@@553 ($generated@@167 $generated@@554))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553) ($generated@@167 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@167 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@64)) ($generated@@229 $generated@@555 ($generated@@254 $generated@@556))) (and (= ($generated@@277 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555) ($generated@@254 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@254 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@260 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@563) (and ($generated@@147 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@567) (and ($generated@@147 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@158)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@277 $generated@@572)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@135 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@134 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@163 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@282 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@443)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@158)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@134 $generated@@158)) (= (type $generated@@590) $generated@@64)) (= ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@229 ($generated@@327 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@327 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597))) (and (and ($generated@@145 ($generated@@288 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@145 ($generated@@339 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@145 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@148 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@306 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@145 ($generated@@385 $generated@@598) ($generated@@243 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@145 $generated@@601 $generated@@46))
 :pattern ( ($generated@@145 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@145 $generated@@602 $generated@@47))
 :pattern ( ($generated@@145 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@145 $generated@@603 $generated@@44))
 :pattern ( ($generated@@145 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@443) ($generated@@145 $generated@@604 $generated@@45))
 :pattern ( ($generated@@145 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@158) ($generated@@145 $generated@@605 $generated@@48))
 :pattern ( ($generated@@145 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (and (= (type $generated@@606) ($generated@@134 $generated@@158)) (= (type $generated@@607) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@608) $generated@@77)) (= (type $generated@@609) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@611) ($generated@@134 $generated@@158))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@613 true))
(let (($generated@@614  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@2) ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
 :pattern ( ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
)))))
(let (($generated@@616  (=> (and (= $generated@@607 ($generated@@173 $generated@@608 $generated@@609 $generated@@60 false)) (= $generated@@606 ($generated@@250 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 0)))) ($generated@@277 ($generated@@8 ($generated@@248 1)))) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 4)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 ($generated@@248 6)))) ($generated@@277 ($generated@@8 ($generated@@248 7)))) ($generated@@277 ($generated@@8 ($generated@@248 8)))) ($generated@@277 ($generated@@8 ($generated@@248 12)))) ($generated@@277 ($generated@@8 ($generated@@248 13)))) ($generated@@277 ($generated@@8 ($generated@@248 14)))) ($generated@@277 ($generated@@8 ($generated@@248 15)))) ($generated@@277 ($generated@@8 ($generated@@248 16)))) ($generated@@277 ($generated@@8 ($generated@@248 17)))) ($generated@@277 ($generated@@8 ($generated@@248 18)))) ($generated@@277 ($generated@@8 ($generated@@248 19)))) ($generated@@277 ($generated@@8 ($generated@@248 20)))) ($generated@@277 ($generated@@8 ($generated@@248 21)))) ($generated@@277 ($generated@@8 ($generated@@248 22)))) ($generated@@277 ($generated@@8 ($generated@@248 23)))) ($generated@@277 ($generated@@8 ($generated@@248 24)))) ($generated@@277 ($generated@@8 ($generated@@248 25)))) ($generated@@277 ($generated@@8 ($generated@@248 26)))) ($generated@@277 ($generated@@8 ($generated@@248 27)))) ($generated@@277 ($generated@@8 ($generated@@248 28)))) ($generated@@277 ($generated@@8 ($generated@@248 29)))) ($generated@@277 ($generated@@8 ($generated@@248 30)))) ($generated@@277 ($generated@@8 ($generated@@248 31)))) ($generated@@277 ($generated@@8 ($generated@@248 32)))) ($generated@@277 ($generated@@8 ($generated@@248 33)))) ($generated@@277 ($generated@@8 ($generated@@248 34)))) ($generated@@277 ($generated@@8 ($generated@@248 35)))) ($generated@@277 ($generated@@8 ($generated@@248 36)))) ($generated@@277 ($generated@@8 ($generated@@248 37)))) ($generated@@277 ($generated@@8 ($generated@@248 38)))) ($generated@@277 ($generated@@8 ($generated@@248 39)))) ($generated@@277 ($generated@@8 ($generated@@248 40)))) ($generated@@277 ($generated@@8 ($generated@@248 41)))) ($generated@@277 ($generated@@8 ($generated@@248 42)))) ($generated@@277 ($generated@@8 ($generated@@248 43)))) ($generated@@277 ($generated@@8 ($generated@@248 44)))) ($generated@@277 ($generated@@8 ($generated@@248 45)))) ($generated@@277 ($generated@@8 ($generated@@248 46)))) ($generated@@277 ($generated@@8 ($generated@@248 47)))) ($generated@@277 ($generated@@8 ($generated@@248 48)))) ($generated@@277 ($generated@@8 ($generated@@248 49)))) ($generated@@277 ($generated@@8 ($generated@@248 50)))) ($generated@@277 ($generated@@8 ($generated@@248 51)))) ($generated@@277 ($generated@@8 ($generated@@248 52)))) ($generated@@277 ($generated@@8 ($generated@@248 53)))) ($generated@@277 ($generated@@8 ($generated@@248 54)))) ($generated@@277 ($generated@@8 ($generated@@248 55)))) ($generated@@277 ($generated@@8 ($generated@@248 56)))) ($generated@@277 ($generated@@8 ($generated@@248 57)))) ($generated@@277 ($generated@@8 ($generated@@248 58)))) ($generated@@277 ($generated@@8 ($generated@@248 59)))) ($generated@@277 ($generated@@8 ($generated@@248 60)))) ($generated@@277 ($generated@@8 ($generated@@248 61)))) ($generated@@277 ($generated@@8 ($generated@@248 62)))) ($generated@@277 ($generated@@8 ($generated@@248 63)))) ($generated@@277 ($generated@@8 ($generated@@248 64)))) ($generated@@277 ($generated@@8 ($generated@@248 65)))) ($generated@@277 ($generated@@8 ($generated@@248 66)))) ($generated@@277 ($generated@@8 ($generated@@248 67)))) ($generated@@277 ($generated@@8 ($generated@@248 68)))) ($generated@@277 ($generated@@8 ($generated@@248 69)))) ($generated@@277 ($generated@@8 ($generated@@248 70)))) ($generated@@277 ($generated@@8 ($generated@@248 71)))) ($generated@@277 ($generated@@8 ($generated@@248 72)))) ($generated@@277 ($generated@@8 ($generated@@248 73)))) ($generated@@277 ($generated@@8 ($generated@@248 74)))) ($generated@@277 ($generated@@8 ($generated@@248 75)))) ($generated@@277 ($generated@@8 ($generated@@248 76)))) ($generated@@277 ($generated@@8 ($generated@@248 77)))) ($generated@@277 ($generated@@8 ($generated@@248 78)))) ($generated@@277 ($generated@@8 ($generated@@248 79)))) ($generated@@277 ($generated@@8 ($generated@@248 80)))) ($generated@@277 ($generated@@8 ($generated@@248 81)))) ($generated@@277 ($generated@@8 ($generated@@248 82)))) ($generated@@277 ($generated@@8 ($generated@@248 83)))) ($generated@@277 ($generated@@8 ($generated@@248 84)))) ($generated@@277 ($generated@@8 ($generated@@248 85)))) ($generated@@277 ($generated@@8 ($generated@@248 86)))) ($generated@@277 ($generated@@8 ($generated@@248 87)))) ($generated@@277 ($generated@@8 ($generated@@248 88)))) ($generated@@277 ($generated@@8 ($generated@@248 89)))) ($generated@@277 ($generated@@8 ($generated@@248 90)))) ($generated@@277 ($generated@@8 ($generated@@248 91)))) ($generated@@277 ($generated@@8 ($generated@@248 92)))) ($generated@@277 ($generated@@8 ($generated@@248 93)))) ($generated@@277 ($generated@@8 ($generated@@248 94)))) ($generated@@277 ($generated@@8 ($generated@@248 95)))) ($generated@@277 ($generated@@8 ($generated@@248 96)))) ($generated@@277 ($generated@@8 ($generated@@248 97)))) ($generated@@277 ($generated@@8 ($generated@@248 98)))) ($generated@@277 ($generated@@8 ($generated@@248 99)))) ($generated@@277 ($generated@@8 ($generated@@248 100)))) ($generated@@277 ($generated@@8 ($generated@@248 101)))) ($generated@@277 ($generated@@8 ($generated@@248 102)))) ($generated@@277 ($generated@@8 ($generated@@248 103)))) ($generated@@277 ($generated@@8 ($generated@@248 104)))) ($generated@@277 ($generated@@8 ($generated@@248 105)))) ($generated@@277 ($generated@@8 ($generated@@248 106)))) ($generated@@277 ($generated@@8 ($generated@@248 107)))) ($generated@@277 ($generated@@8 ($generated@@248 108)))) ($generated@@277 ($generated@@8 ($generated@@248 109)))) ($generated@@277 ($generated@@8 ($generated@@248 110)))) ($generated@@277 ($generated@@8 ($generated@@248 111)))) ($generated@@277 ($generated@@8 ($generated@@248 112)))) ($generated@@277 ($generated@@8 ($generated@@248 113)))) ($generated@@277 ($generated@@8 ($generated@@248 114)))) ($generated@@277 ($generated@@8 ($generated@@248 115)))) ($generated@@277 ($generated@@8 ($generated@@248 116)))) ($generated@@277 ($generated@@8 ($generated@@248 117)))) ($generated@@277 ($generated@@8 ($generated@@248 118)))) ($generated@@277 ($generated@@8 ($generated@@248 122)))) ($generated@@277 ($generated@@8 ($generated@@248 123)))) ($generated@@277 ($generated@@8 ($generated@@248 124)))) ($generated@@277 ($generated@@8 ($generated@@248 125)))) ($generated@@277 ($generated@@8 ($generated@@248 126)))) ($generated@@277 ($generated@@8 ($generated@@248 127)))) ($generated@@277 ($generated@@8 ($generated@@248 128)))) ($generated@@277 ($generated@@8 ($generated@@248 129)))) ($generated@@277 ($generated@@8 ($generated@@248 130)))) ($generated@@277 ($generated@@8 ($generated@@248 131)))) ($generated@@277 ($generated@@8 ($generated@@248 132)))) ($generated@@277 ($generated@@8 ($generated@@248 133)))) ($generated@@277 ($generated@@8 ($generated@@248 134)))) ($generated@@277 ($generated@@8 ($generated@@248 135)))) ($generated@@277 ($generated@@8 ($generated@@248 136))))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 122)))) (=> ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 122))) (and (=> (= (ControlFlow 0 4) 2) $generated@@614) (=> (= (ControlFlow 0 4) 3) $generated@@613)))))))
(let (($generated@@617  (=> (and ($generated@@259 $generated@@609) ($generated@@610 $generated@@609)) (=> (and (and (and ($generated@@145 $generated@@611 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@611 ($generated@@254 $generated@@46) $generated@@609)) true) (and (= 0 $generated@@612) (= (ControlFlow 0 6) 4))) $generated@@616))))
$generated@@617)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@U Int) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@149)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) (= (type $generated@@237) $generated@@149)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@158) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@134 $generated@@158)) (= (type $generated@@257) $generated@@158)) (= (type $generated@@258) $generated@@64)) (and ($generated@@145 $generated@@256 ($generated@@254 $generated@@258)) ($generated@@229 $generated@@257 $generated@@258))) ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@158) (= (type $generated@@271) $generated@@158)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@272 ($generated@@163 $generated@@273)) 0)
 :pattern ( ($generated@@163 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (= (type $generated@@274) ($generated@@134 $generated@@276)) (= ($generated@@272 ($generated@@133 $generated@@274 $generated@@275)) (+ 1 ($generated@@272 $generated@@274)))))
 :pattern ( ($generated@@133 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@158)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@168 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@168 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@135 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@331) ($generated@@134 $generated@@334)) (and (=> (= $generated@@332 ($generated@@272 $generated@@331)) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) $generated@@333)) (=> (not (= $generated@@332 ($generated@@272 $generated@@331))) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) ($generated@@327 $generated@@331 $generated@@332))))))
 :pattern ( ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@292 (type $generated@@335))))
(let (($generated@@337 ($generated@@291 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@290 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@289 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@288 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@310 (type $generated@@346))))
(let (($generated@@348 ($generated@@309 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@308 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@307 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@306 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@229 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@134 $generated@@362)) (= ($generated@@132 $generated@@360 $generated@@361) (exists (($generated@@363 Int) ) (!  (and (and (<= 0 $generated@@363) (< $generated@@363 ($generated@@272 $generated@@360))) (= ($generated@@327 $generated@@360 $generated@@363) $generated@@361))
 :pattern ( ($generated@@327 $generated@@360 $generated@@363))
)))))
 :pattern ( ($generated@@132 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@158) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@260 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@158) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@283 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@292 (type $generated@@380))))
(let (($generated@@382 ($generated@@291 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@291 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@290 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@309 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@308 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))) (and ($generated@@260 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@260 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@260 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@260 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@306 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@306 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@350 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@350 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@277 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@277 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@277 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@277 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@145 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@277 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@229 ($generated@@277 $generated@@445) $generated@@446) ($generated@@145 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@277 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@135 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@134 $generated@@450)) (<= 0 ($generated@@272 $generated@@449))))
 :pattern ( ($generated@@272 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@403 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@403 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@403 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@411 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@411 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@266 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@148 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@148 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@148 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@134 $generated@@158)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@272 $generated@@485))) ($generated@@260 ($generated@@327 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@327 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@238 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@238 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@243 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@243 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@167 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@167 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@254 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@375 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@229 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@229 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@81 ($generated@@386 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@158) (= (type $generated@@520) $generated@@158)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@228 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@228 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@158) (= (type $generated@@522) $generated@@158)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@228 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@228 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@158) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523)) $generated@@523) ($generated@@145 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523) ($generated@@403 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@158) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526)) $generated@@526) ($generated@@145 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526) ($generated@@411 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@158)) ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@375 $generated@@149 $generated@@531)) $generated@@531) ($generated@@145 ($generated@@375 $generated@@149 $generated@@531) ($generated@@148 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@419 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@135 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540)) ($generated@@134 $generated@@541)))
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@135 (type $generated@@542))))
(= (type ($generated@@539 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (=> (= (type $generated@@544) ($generated@@134 $generated@@546)) (and (= ($generated@@538 ($generated@@133 $generated@@544 $generated@@545)) $generated@@544) (= ($generated@@539 ($generated@@133 $generated@@544 $generated@@545)) $generated@@545))))
 :pattern ( ($generated@@133 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@149) (= ($generated@@517 ($generated@@277 $generated@@547)) ($generated@@518 $generated@@547)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) ($generated@@229 $generated@@548 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@64)) ($generated@@229 $generated@@553 ($generated@@167 $generated@@554))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553) ($generated@@167 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@167 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@64)) ($generated@@229 $generated@@555 ($generated@@254 $generated@@556))) (and (= ($generated@@277 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555) ($generated@@254 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@254 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@260 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@563) (and ($generated@@147 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@567) (and ($generated@@147 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@158)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@277 $generated@@572)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@135 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@134 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@163 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@282 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@443)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@158)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@134 $generated@@158)) (= (type $generated@@590) $generated@@64)) (= ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@229 ($generated@@327 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@327 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597))) (and (and ($generated@@145 ($generated@@288 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@145 ($generated@@339 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@145 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@148 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@306 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@145 ($generated@@385 $generated@@598) ($generated@@243 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@145 $generated@@601 $generated@@46))
 :pattern ( ($generated@@145 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@145 $generated@@602 $generated@@47))
 :pattern ( ($generated@@145 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@145 $generated@@603 $generated@@44))
 :pattern ( ($generated@@145 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@443) ($generated@@145 $generated@@604 $generated@@45))
 :pattern ( ($generated@@145 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@158) ($generated@@145 $generated@@605 $generated@@48))
 :pattern ( ($generated@@145 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(assert  (and (and (and (and (= (type $generated@@606) ($generated@@134 $generated@@158)) (= (type $generated@@608) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@77)) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@612) ($generated@@134 $generated@@158))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@614  (=> (= (ControlFlow 0 3) (- 0 2)) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@2) (and ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)) (>= ($generated $generated@@615) ($generated@@248 120))))
 :pattern ( ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)))
)))))
(let (($generated@@616  (=> (and (not ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 $generated@@607)))) (= (ControlFlow 0 5) 3)) $generated@@614)))
(let (($generated@@617  (=> (and ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 $generated@@607))) (= (ControlFlow 0 4) 3)) $generated@@614)))
(let (($generated@@618  (and (=> (= (ControlFlow 0 6) 4) $generated@@617) (=> (= (ControlFlow 0 6) 5) $generated@@616))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (and (= $generated@@608 ($generated@@173 $generated@@609 $generated@@610 $generated@@60 false)) (= $generated@@606 ($generated@@250 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 0)))) ($generated@@277 ($generated@@8 ($generated@@248 1)))) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 4)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 ($generated@@248 6)))) ($generated@@277 ($generated@@8 ($generated@@248 7)))) ($generated@@277 ($generated@@8 ($generated@@248 8)))) ($generated@@277 ($generated@@8 ($generated@@248 12)))) ($generated@@277 ($generated@@8 ($generated@@248 13)))) ($generated@@277 ($generated@@8 ($generated@@248 14)))) ($generated@@277 ($generated@@8 ($generated@@248 15)))) ($generated@@277 ($generated@@8 ($generated@@248 16)))) ($generated@@277 ($generated@@8 ($generated@@248 17)))) ($generated@@277 ($generated@@8 ($generated@@248 18)))) ($generated@@277 ($generated@@8 ($generated@@248 19)))) ($generated@@277 ($generated@@8 ($generated@@248 20)))) ($generated@@277 ($generated@@8 ($generated@@248 21)))) ($generated@@277 ($generated@@8 ($generated@@248 22)))) ($generated@@277 ($generated@@8 ($generated@@248 23)))) ($generated@@277 ($generated@@8 ($generated@@248 24)))) ($generated@@277 ($generated@@8 ($generated@@248 25)))) ($generated@@277 ($generated@@8 ($generated@@248 26)))) ($generated@@277 ($generated@@8 ($generated@@248 27)))) ($generated@@277 ($generated@@8 ($generated@@248 28)))) ($generated@@277 ($generated@@8 ($generated@@248 29)))) ($generated@@277 ($generated@@8 ($generated@@248 30)))) ($generated@@277 ($generated@@8 ($generated@@248 31)))) ($generated@@277 ($generated@@8 ($generated@@248 32)))) ($generated@@277 ($generated@@8 ($generated@@248 33)))) ($generated@@277 ($generated@@8 ($generated@@248 34)))) ($generated@@277 ($generated@@8 ($generated@@248 35)))) ($generated@@277 ($generated@@8 ($generated@@248 36)))) ($generated@@277 ($generated@@8 ($generated@@248 37)))) ($generated@@277 ($generated@@8 ($generated@@248 38)))) ($generated@@277 ($generated@@8 ($generated@@248 39)))) ($generated@@277 ($generated@@8 ($generated@@248 40)))) ($generated@@277 ($generated@@8 ($generated@@248 41)))) ($generated@@277 ($generated@@8 ($generated@@248 42)))) ($generated@@277 ($generated@@8 ($generated@@248 43)))) ($generated@@277 ($generated@@8 ($generated@@248 44)))) ($generated@@277 ($generated@@8 ($generated@@248 45)))) ($generated@@277 ($generated@@8 ($generated@@248 46)))) ($generated@@277 ($generated@@8 ($generated@@248 47)))) ($generated@@277 ($generated@@8 ($generated@@248 48)))) ($generated@@277 ($generated@@8 ($generated@@248 49)))) ($generated@@277 ($generated@@8 ($generated@@248 50)))) ($generated@@277 ($generated@@8 ($generated@@248 51)))) ($generated@@277 ($generated@@8 ($generated@@248 52)))) ($generated@@277 ($generated@@8 ($generated@@248 53)))) ($generated@@277 ($generated@@8 ($generated@@248 54)))) ($generated@@277 ($generated@@8 ($generated@@248 55)))) ($generated@@277 ($generated@@8 ($generated@@248 56)))) ($generated@@277 ($generated@@8 ($generated@@248 57)))) ($generated@@277 ($generated@@8 ($generated@@248 58)))) ($generated@@277 ($generated@@8 ($generated@@248 59)))) ($generated@@277 ($generated@@8 ($generated@@248 60)))) ($generated@@277 ($generated@@8 ($generated@@248 61)))) ($generated@@277 ($generated@@8 ($generated@@248 62)))) ($generated@@277 ($generated@@8 ($generated@@248 63)))) ($generated@@277 ($generated@@8 ($generated@@248 64)))) ($generated@@277 ($generated@@8 ($generated@@248 65)))) ($generated@@277 ($generated@@8 ($generated@@248 66)))) ($generated@@277 ($generated@@8 ($generated@@248 67)))) ($generated@@277 ($generated@@8 ($generated@@248 68)))) ($generated@@277 ($generated@@8 ($generated@@248 69)))) ($generated@@277 ($generated@@8 ($generated@@248 70)))) ($generated@@277 ($generated@@8 ($generated@@248 71)))) ($generated@@277 ($generated@@8 ($generated@@248 72)))) ($generated@@277 ($generated@@8 ($generated@@248 73)))) ($generated@@277 ($generated@@8 ($generated@@248 74)))) ($generated@@277 ($generated@@8 ($generated@@248 75)))) ($generated@@277 ($generated@@8 ($generated@@248 76)))) ($generated@@277 ($generated@@8 ($generated@@248 77)))) ($generated@@277 ($generated@@8 ($generated@@248 78)))) ($generated@@277 ($generated@@8 ($generated@@248 79)))) ($generated@@277 ($generated@@8 ($generated@@248 80)))) ($generated@@277 ($generated@@8 ($generated@@248 81)))) ($generated@@277 ($generated@@8 ($generated@@248 82)))) ($generated@@277 ($generated@@8 ($generated@@248 83)))) ($generated@@277 ($generated@@8 ($generated@@248 84)))) ($generated@@277 ($generated@@8 ($generated@@248 85)))) ($generated@@277 ($generated@@8 ($generated@@248 86)))) ($generated@@277 ($generated@@8 ($generated@@248 87)))) ($generated@@277 ($generated@@8 ($generated@@248 88)))) ($generated@@277 ($generated@@8 ($generated@@248 89)))) ($generated@@277 ($generated@@8 ($generated@@248 90)))) ($generated@@277 ($generated@@8 ($generated@@248 91)))) ($generated@@277 ($generated@@8 ($generated@@248 92)))) ($generated@@277 ($generated@@8 ($generated@@248 93)))) ($generated@@277 ($generated@@8 ($generated@@248 94)))) ($generated@@277 ($generated@@8 ($generated@@248 95)))) ($generated@@277 ($generated@@8 ($generated@@248 96)))) ($generated@@277 ($generated@@8 ($generated@@248 97)))) ($generated@@277 ($generated@@8 ($generated@@248 98)))) ($generated@@277 ($generated@@8 ($generated@@248 99)))) ($generated@@277 ($generated@@8 ($generated@@248 100)))) ($generated@@277 ($generated@@8 ($generated@@248 101)))) ($generated@@277 ($generated@@8 ($generated@@248 102)))) ($generated@@277 ($generated@@8 ($generated@@248 103)))) ($generated@@277 ($generated@@8 ($generated@@248 104)))) ($generated@@277 ($generated@@8 ($generated@@248 105)))) ($generated@@277 ($generated@@8 ($generated@@248 106)))) ($generated@@277 ($generated@@8 ($generated@@248 107)))) ($generated@@277 ($generated@@8 ($generated@@248 108)))) ($generated@@277 ($generated@@8 ($generated@@248 109)))) ($generated@@277 ($generated@@8 ($generated@@248 110)))) ($generated@@277 ($generated@@8 ($generated@@248 111)))) ($generated@@277 ($generated@@8 ($generated@@248 112)))) ($generated@@277 ($generated@@8 ($generated@@248 113)))) ($generated@@277 ($generated@@8 ($generated@@248 114)))) ($generated@@277 ($generated@@8 ($generated@@248 115)))) ($generated@@277 ($generated@@8 ($generated@@248 116)))) ($generated@@277 ($generated@@8 ($generated@@248 117)))) ($generated@@277 ($generated@@8 ($generated@@248 118)))) ($generated@@277 ($generated@@8 ($generated@@248 122)))) ($generated@@277 ($generated@@8 ($generated@@248 123)))) ($generated@@277 ($generated@@8 ($generated@@248 124)))) ($generated@@277 ($generated@@8 ($generated@@248 125)))) ($generated@@277 ($generated@@8 ($generated@@248 126)))) ($generated@@277 ($generated@@8 ($generated@@248 127)))) ($generated@@277 ($generated@@8 ($generated@@248 128)))) ($generated@@277 ($generated@@8 ($generated@@248 129)))) ($generated@@277 ($generated@@8 ($generated@@248 130)))) ($generated@@277 ($generated@@8 ($generated@@248 131)))) ($generated@@277 ($generated@@8 ($generated@@248 132)))) ($generated@@277 ($generated@@8 ($generated@@248 133)))) ($generated@@277 ($generated@@8 ($generated@@248 134)))) ($generated@@277 ($generated@@8 ($generated@@248 135)))) ($generated@@277 ($generated@@8 ($generated@@248 136))))))) (and (=> (= (ControlFlow 0 7) 6) $generated@@618) (=> (= (ControlFlow 0 7) 1) $generated@@619)))))
(let (($generated@@621  (=> (and ($generated@@259 $generated@@610) ($generated@@611 $generated@@610)) (=> (and (and (and ($generated@@145 $generated@@612 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@612 ($generated@@254 $generated@@46) $generated@@610)) true) (and (= 0 $generated@@613) (= (ControlFlow 0 8) 7))) $generated@@620))))
$generated@@621))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@U Int) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@149)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) (= (type $generated@@237) $generated@@149)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@158) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@134 $generated@@158)) (= (type $generated@@257) $generated@@158)) (= (type $generated@@258) $generated@@64)) (and ($generated@@145 $generated@@256 ($generated@@254 $generated@@258)) ($generated@@229 $generated@@257 $generated@@258))) ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@158) (= (type $generated@@271) $generated@@158)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@272 ($generated@@163 $generated@@273)) 0)
 :pattern ( ($generated@@163 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (= (type $generated@@274) ($generated@@134 $generated@@276)) (= ($generated@@272 ($generated@@133 $generated@@274 $generated@@275)) (+ 1 ($generated@@272 $generated@@274)))))
 :pattern ( ($generated@@133 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@158)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@168 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@168 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@135 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@331) ($generated@@134 $generated@@334)) (and (=> (= $generated@@332 ($generated@@272 $generated@@331)) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) $generated@@333)) (=> (not (= $generated@@332 ($generated@@272 $generated@@331))) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) ($generated@@327 $generated@@331 $generated@@332))))))
 :pattern ( ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@292 (type $generated@@335))))
(let (($generated@@337 ($generated@@291 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@290 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@289 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@288 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@310 (type $generated@@346))))
(let (($generated@@348 ($generated@@309 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@308 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@307 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@306 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@229 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@134 $generated@@362)) (= ($generated@@132 $generated@@360 $generated@@361) (exists (($generated@@363 Int) ) (!  (and (and (<= 0 $generated@@363) (< $generated@@363 ($generated@@272 $generated@@360))) (= ($generated@@327 $generated@@360 $generated@@363) $generated@@361))
 :pattern ( ($generated@@327 $generated@@360 $generated@@363))
)))))
 :pattern ( ($generated@@132 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@158) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@260 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@158) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@283 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@292 (type $generated@@380))))
(let (($generated@@382 ($generated@@291 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@291 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@290 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@309 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@308 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))) (and ($generated@@260 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@260 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@260 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@260 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@306 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@306 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@350 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@350 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@277 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@277 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@277 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@277 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@145 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@277 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@229 ($generated@@277 $generated@@445) $generated@@446) ($generated@@145 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@277 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@135 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@134 $generated@@450)) (<= 0 ($generated@@272 $generated@@449))))
 :pattern ( ($generated@@272 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@403 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@403 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@403 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@411 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@411 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@266 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@148 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@148 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@148 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@134 $generated@@158)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@272 $generated@@485))) ($generated@@260 ($generated@@327 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@327 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@238 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@238 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@243 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@243 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@167 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@167 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@254 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@375 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@229 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@229 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@81 ($generated@@386 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@158) (= (type $generated@@520) $generated@@158)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@228 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@228 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@158) (= (type $generated@@522) $generated@@158)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@228 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@228 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@158) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523)) $generated@@523) ($generated@@145 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523) ($generated@@403 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@158) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526)) $generated@@526) ($generated@@145 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526) ($generated@@411 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@158)) ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@375 $generated@@149 $generated@@531)) $generated@@531) ($generated@@145 ($generated@@375 $generated@@149 $generated@@531) ($generated@@148 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@419 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@135 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540)) ($generated@@134 $generated@@541)))
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@135 (type $generated@@542))))
(= (type ($generated@@539 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (=> (= (type $generated@@544) ($generated@@134 $generated@@546)) (and (= ($generated@@538 ($generated@@133 $generated@@544 $generated@@545)) $generated@@544) (= ($generated@@539 ($generated@@133 $generated@@544 $generated@@545)) $generated@@545))))
 :pattern ( ($generated@@133 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@149) (= ($generated@@517 ($generated@@277 $generated@@547)) ($generated@@518 $generated@@547)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) ($generated@@229 $generated@@548 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@64)) ($generated@@229 $generated@@553 ($generated@@167 $generated@@554))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553) ($generated@@167 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@167 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@64)) ($generated@@229 $generated@@555 ($generated@@254 $generated@@556))) (and (= ($generated@@277 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555) ($generated@@254 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@254 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@260 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@563) (and ($generated@@147 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@567) (and ($generated@@147 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@158)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@277 $generated@@572)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@135 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@134 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@163 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@282 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@443)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@158)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@134 $generated@@158)) (= (type $generated@@590) $generated@@64)) (= ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@229 ($generated@@327 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@327 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597))) (and (and ($generated@@145 ($generated@@288 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@145 ($generated@@339 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@145 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@148 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@306 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@145 ($generated@@385 $generated@@598) ($generated@@243 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@145 $generated@@601 $generated@@46))
 :pattern ( ($generated@@145 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@145 $generated@@602 $generated@@47))
 :pattern ( ($generated@@145 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@145 $generated@@603 $generated@@44))
 :pattern ( ($generated@@145 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@443) ($generated@@145 $generated@@604 $generated@@45))
 :pattern ( ($generated@@145 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@158) ($generated@@145 $generated@@605 $generated@@48))
 :pattern ( ($generated@@145 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(assert  (and (and (and (and (= (type $generated@@606) ($generated@@134 $generated@@158)) (= (type $generated@@608) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@77)) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@612) ($generated@@134 $generated@@158))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@614  (=> (= (ControlFlow 0 3) (- 0 2)) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@2) (and ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)) (>= ($generated $generated@@615) ($generated@@248 120))))
 :no-pattern (type $generated@@615)
 :no-pattern ($generated $generated@@615)
 :no-pattern ($generated@@0 $generated@@615)
)))))
(let (($generated@@616  (=> (and (not ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 $generated@@607)))) (= (ControlFlow 0 5) 3)) $generated@@614)))
(let (($generated@@617  (=> (and ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 $generated@@607))) (= (ControlFlow 0 4) 3)) $generated@@614)))
(let (($generated@@618  (and (=> (= (ControlFlow 0 6) 4) $generated@@617) (=> (= (ControlFlow 0 6) 5) $generated@@616))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (and (= $generated@@608 ($generated@@173 $generated@@609 $generated@@610 $generated@@60 false)) (= $generated@@606 ($generated@@250 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 0)))) ($generated@@277 ($generated@@8 ($generated@@248 1)))) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 4)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 ($generated@@248 6)))) ($generated@@277 ($generated@@8 ($generated@@248 7)))) ($generated@@277 ($generated@@8 ($generated@@248 8)))) ($generated@@277 ($generated@@8 ($generated@@248 12)))) ($generated@@277 ($generated@@8 ($generated@@248 13)))) ($generated@@277 ($generated@@8 ($generated@@248 14)))) ($generated@@277 ($generated@@8 ($generated@@248 15)))) ($generated@@277 ($generated@@8 ($generated@@248 16)))) ($generated@@277 ($generated@@8 ($generated@@248 17)))) ($generated@@277 ($generated@@8 ($generated@@248 18)))) ($generated@@277 ($generated@@8 ($generated@@248 19)))) ($generated@@277 ($generated@@8 ($generated@@248 20)))) ($generated@@277 ($generated@@8 ($generated@@248 21)))) ($generated@@277 ($generated@@8 ($generated@@248 22)))) ($generated@@277 ($generated@@8 ($generated@@248 23)))) ($generated@@277 ($generated@@8 ($generated@@248 24)))) ($generated@@277 ($generated@@8 ($generated@@248 25)))) ($generated@@277 ($generated@@8 ($generated@@248 26)))) ($generated@@277 ($generated@@8 ($generated@@248 27)))) ($generated@@277 ($generated@@8 ($generated@@248 28)))) ($generated@@277 ($generated@@8 ($generated@@248 29)))) ($generated@@277 ($generated@@8 ($generated@@248 30)))) ($generated@@277 ($generated@@8 ($generated@@248 31)))) ($generated@@277 ($generated@@8 ($generated@@248 32)))) ($generated@@277 ($generated@@8 ($generated@@248 33)))) ($generated@@277 ($generated@@8 ($generated@@248 34)))) ($generated@@277 ($generated@@8 ($generated@@248 35)))) ($generated@@277 ($generated@@8 ($generated@@248 36)))) ($generated@@277 ($generated@@8 ($generated@@248 37)))) ($generated@@277 ($generated@@8 ($generated@@248 38)))) ($generated@@277 ($generated@@8 ($generated@@248 39)))) ($generated@@277 ($generated@@8 ($generated@@248 40)))) ($generated@@277 ($generated@@8 ($generated@@248 41)))) ($generated@@277 ($generated@@8 ($generated@@248 42)))) ($generated@@277 ($generated@@8 ($generated@@248 43)))) ($generated@@277 ($generated@@8 ($generated@@248 44)))) ($generated@@277 ($generated@@8 ($generated@@248 45)))) ($generated@@277 ($generated@@8 ($generated@@248 46)))) ($generated@@277 ($generated@@8 ($generated@@248 47)))) ($generated@@277 ($generated@@8 ($generated@@248 48)))) ($generated@@277 ($generated@@8 ($generated@@248 49)))) ($generated@@277 ($generated@@8 ($generated@@248 50)))) ($generated@@277 ($generated@@8 ($generated@@248 51)))) ($generated@@277 ($generated@@8 ($generated@@248 52)))) ($generated@@277 ($generated@@8 ($generated@@248 53)))) ($generated@@277 ($generated@@8 ($generated@@248 54)))) ($generated@@277 ($generated@@8 ($generated@@248 55)))) ($generated@@277 ($generated@@8 ($generated@@248 56)))) ($generated@@277 ($generated@@8 ($generated@@248 57)))) ($generated@@277 ($generated@@8 ($generated@@248 58)))) ($generated@@277 ($generated@@8 ($generated@@248 59)))) ($generated@@277 ($generated@@8 ($generated@@248 60)))) ($generated@@277 ($generated@@8 ($generated@@248 61)))) ($generated@@277 ($generated@@8 ($generated@@248 62)))) ($generated@@277 ($generated@@8 ($generated@@248 63)))) ($generated@@277 ($generated@@8 ($generated@@248 64)))) ($generated@@277 ($generated@@8 ($generated@@248 65)))) ($generated@@277 ($generated@@8 ($generated@@248 66)))) ($generated@@277 ($generated@@8 ($generated@@248 67)))) ($generated@@277 ($generated@@8 ($generated@@248 68)))) ($generated@@277 ($generated@@8 ($generated@@248 69)))) ($generated@@277 ($generated@@8 ($generated@@248 70)))) ($generated@@277 ($generated@@8 ($generated@@248 71)))) ($generated@@277 ($generated@@8 ($generated@@248 72)))) ($generated@@277 ($generated@@8 ($generated@@248 73)))) ($generated@@277 ($generated@@8 ($generated@@248 74)))) ($generated@@277 ($generated@@8 ($generated@@248 75)))) ($generated@@277 ($generated@@8 ($generated@@248 76)))) ($generated@@277 ($generated@@8 ($generated@@248 77)))) ($generated@@277 ($generated@@8 ($generated@@248 78)))) ($generated@@277 ($generated@@8 ($generated@@248 79)))) ($generated@@277 ($generated@@8 ($generated@@248 80)))) ($generated@@277 ($generated@@8 ($generated@@248 81)))) ($generated@@277 ($generated@@8 ($generated@@248 82)))) ($generated@@277 ($generated@@8 ($generated@@248 83)))) ($generated@@277 ($generated@@8 ($generated@@248 84)))) ($generated@@277 ($generated@@8 ($generated@@248 85)))) ($generated@@277 ($generated@@8 ($generated@@248 86)))) ($generated@@277 ($generated@@8 ($generated@@248 87)))) ($generated@@277 ($generated@@8 ($generated@@248 88)))) ($generated@@277 ($generated@@8 ($generated@@248 89)))) ($generated@@277 ($generated@@8 ($generated@@248 90)))) ($generated@@277 ($generated@@8 ($generated@@248 91)))) ($generated@@277 ($generated@@8 ($generated@@248 92)))) ($generated@@277 ($generated@@8 ($generated@@248 93)))) ($generated@@277 ($generated@@8 ($generated@@248 94)))) ($generated@@277 ($generated@@8 ($generated@@248 95)))) ($generated@@277 ($generated@@8 ($generated@@248 96)))) ($generated@@277 ($generated@@8 ($generated@@248 97)))) ($generated@@277 ($generated@@8 ($generated@@248 98)))) ($generated@@277 ($generated@@8 ($generated@@248 99)))) ($generated@@277 ($generated@@8 ($generated@@248 100)))) ($generated@@277 ($generated@@8 ($generated@@248 101)))) ($generated@@277 ($generated@@8 ($generated@@248 102)))) ($generated@@277 ($generated@@8 ($generated@@248 103)))) ($generated@@277 ($generated@@8 ($generated@@248 104)))) ($generated@@277 ($generated@@8 ($generated@@248 105)))) ($generated@@277 ($generated@@8 ($generated@@248 106)))) ($generated@@277 ($generated@@8 ($generated@@248 107)))) ($generated@@277 ($generated@@8 ($generated@@248 108)))) ($generated@@277 ($generated@@8 ($generated@@248 109)))) ($generated@@277 ($generated@@8 ($generated@@248 110)))) ($generated@@277 ($generated@@8 ($generated@@248 111)))) ($generated@@277 ($generated@@8 ($generated@@248 112)))) ($generated@@277 ($generated@@8 ($generated@@248 113)))) ($generated@@277 ($generated@@8 ($generated@@248 114)))) ($generated@@277 ($generated@@8 ($generated@@248 115)))) ($generated@@277 ($generated@@8 ($generated@@248 116)))) ($generated@@277 ($generated@@8 ($generated@@248 117)))) ($generated@@277 ($generated@@8 ($generated@@248 118)))) ($generated@@277 ($generated@@8 ($generated@@248 122)))) ($generated@@277 ($generated@@8 ($generated@@248 123)))) ($generated@@277 ($generated@@8 ($generated@@248 124)))) ($generated@@277 ($generated@@8 ($generated@@248 125)))) ($generated@@277 ($generated@@8 ($generated@@248 126)))) ($generated@@277 ($generated@@8 ($generated@@248 127)))) ($generated@@277 ($generated@@8 ($generated@@248 128)))) ($generated@@277 ($generated@@8 ($generated@@248 129)))) ($generated@@277 ($generated@@8 ($generated@@248 130)))) ($generated@@277 ($generated@@8 ($generated@@248 131)))) ($generated@@277 ($generated@@8 ($generated@@248 132)))) ($generated@@277 ($generated@@8 ($generated@@248 133)))) ($generated@@277 ($generated@@8 ($generated@@248 134)))) ($generated@@277 ($generated@@8 ($generated@@248 135)))) ($generated@@277 ($generated@@8 ($generated@@248 136))))))) (and (=> (= (ControlFlow 0 7) 6) $generated@@618) (=> (= (ControlFlow 0 7) 1) $generated@@619)))))
(let (($generated@@621  (=> (and ($generated@@259 $generated@@610) ($generated@@611 $generated@@610)) (=> (and (and (and ($generated@@145 $generated@@612 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@612 ($generated@@254 $generated@@46) $generated@@610)) true) (and (= 0 $generated@@613) (= (ControlFlow 0 8) 7))) $generated@@620))))
$generated@@621))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@U Int) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@136)) 14)) (forall (($generated@@137 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@133 $generated@@138 $generated@@139)) ($generated@@134 $generated@@140)))
 :pattern ( ($generated@@133 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@142)))
 (=> (and (= (type $generated@@141) ($generated@@134 $generated@@144)) (= (type $generated@@143) $generated@@144)) (= ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143)  (or (= $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@143)))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@75 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@64)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@64) (= (type $generated@@153) $generated@@64)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@T) ) (! (= (type ($generated@@163 $generated@@164)) ($generated@@134 $generated@@164))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
 (not ($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
 :pattern ( (let (($generated@@166 (type $generated@@165)))
($generated@@132 ($generated@@163 $generated@@166) $generated@@165)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@145 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@145 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@149)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@145 ($generated@@228 $generated@@234 $generated@@235) ($generated@@148 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@149) (= (type $generated@@237) $generated@@149)) (= ($generated@@155 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@155 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@158) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@145 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@134 $generated@@158)) (= (type $generated@@257) $generated@@158)) (= (type $generated@@258) $generated@@64)) (and ($generated@@145 $generated@@256 ($generated@@254 $generated@@258)) ($generated@@229 $generated@@257 $generated@@258))) ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
 :pattern ( ($generated@@145 ($generated@@133 $generated@@256 $generated@@257) ($generated@@254 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@263 $generated@@264) ($generated@@148 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@149) (= ($generated@@147 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@149) ($generated@@147 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@158) (= (type $generated@@271) $generated@@158)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@147 $generated@@269))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@272 ($generated@@163 $generated@@273)) 0)
 :pattern ( ($generated@@163 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (= (type $generated@@274) ($generated@@134 $generated@@276)) (= ($generated@@272 ($generated@@133 $generated@@274 $generated@@275)) (+ 1 ($generated@@272 $generated@@274)))))
 :pattern ( ($generated@@133 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@158)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@260 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@168 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@168 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 Int) ) (! (let (($generated@@330 ($generated@@135 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@331) ($generated@@134 $generated@@334)) (and (=> (= $generated@@332 ($generated@@272 $generated@@331)) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) $generated@@333)) (=> (not (= $generated@@332 ($generated@@272 $generated@@331))) (= ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332) ($generated@@327 $generated@@331 $generated@@332))))))
 :pattern ( ($generated@@327 ($generated@@133 $generated@@331 $generated@@333) $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@292 (type $generated@@335))))
(let (($generated@@337 ($generated@@291 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@290 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@289 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@288 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@310 (type $generated@@346))))
(let (($generated@@348 ($generated@@309 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@308 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@307 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@306 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@229 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@145 $generated@@357 ($generated@@167 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@134 $generated@@362)) (= ($generated@@132 $generated@@360 $generated@@361) (exists (($generated@@363 Int) ) (!  (and (and (<= 0 $generated@@363) (< $generated@@363 ($generated@@272 $generated@@360))) (= ($generated@@327 $generated@@360 $generated@@363) $generated@@361))
 :pattern ( ($generated@@327 $generated@@360 $generated@@363))
)))))
 :pattern ( ($generated@@132 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@158) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@260 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@158 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@158) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@260 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@283 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@292 (type $generated@@380))))
(let (($generated@@382 ($generated@@291 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@156 ($generated@@375 $generated@@149 $generated@@384))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@310 (type $generated@@388))))
(let (($generated@@390 ($generated@@309 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@375 $generated@@149 $generated@@392))) ($generated@@157 ($generated@@375 $generated@@149 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@291 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@290 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@309 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@308 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))) (and ($generated@@260 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@260 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))) (and ($generated@@260 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@260 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@310 (type $generated@@421))))
(let (($generated@@423 ($generated@@309 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@308 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@307 $generated@@423 $generated@@422)) (= ($generated@@306 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@306 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@350 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@350 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@385 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@430) ($generated@@277 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@310 (type $generated@@435))))
(let (($generated@@437 ($generated@@309 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@308 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@307 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@435) ($generated@@277 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@385 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@375 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@277 ($generated@@375 $generated@@3 $generated@@441)) $generated@@441) ($generated@@145 ($generated@@375 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@277 ($generated@@375 $generated@@4 $generated@@442)) $generated@@442) ($generated@@145 ($generated@@375 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@277 ($generated@@375 $generated@@443 $generated@@444)) $generated@@444) ($generated@@145 ($generated@@375 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@229 ($generated@@277 $generated@@445) $generated@@446) ($generated@@145 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@277 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@282 $generated@@447))))
 :pattern ( ($generated@@282 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@135 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@134 $generated@@450)) (<= 0 ($generated@@272 $generated@@449))))
 :pattern ( ($generated@@272 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@403 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@403 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@403 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@411 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@411 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@266 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@148 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@148 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@148 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@134 $generated@@158)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@272 $generated@@485))) ($generated@@260 ($generated@@327 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@327 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@254 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@238 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@238 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@243 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@243 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@167 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@167 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@254 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@254 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@375 $generated@@508 ($generated@@277 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@277 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))) (and ($generated@@229 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@229 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@145 $generated@@509 ($generated@@403 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@158) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@81 ($generated@@386 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@145 $generated@@513 ($generated@@411 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@158) (= (type $generated@@520) $generated@@158)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@228 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@228 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@158) (= (type $generated@@522) $generated@@158)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@228 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@228 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@158) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523)) $generated@@523) ($generated@@145 ($generated@@375 ($generated@@290 $generated@@158 $generated@@158) $generated@@523) ($generated@@403 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@229 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@158) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528))) (and (= ($generated@@277 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526)) $generated@@526) ($generated@@145 ($generated@@375 ($generated@@308 $generated@@158 $generated@@158) $generated@@526) ($generated@@411 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@229 $generated@@526 ($generated@@411 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@158)) ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530))) (and (= ($generated@@277 ($generated@@375 $generated@@149 $generated@@531)) $generated@@531) ($generated@@145 ($generated@@375 $generated@@149 $generated@@531) ($generated@@148 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@148 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@419 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@148 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@148 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@148 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@135 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540)) ($generated@@134 $generated@@541)))
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@135 (type $generated@@542))))
(= (type ($generated@@539 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (=> (= (type $generated@@544) ($generated@@134 $generated@@546)) (and (= ($generated@@538 ($generated@@133 $generated@@544 $generated@@545)) $generated@@544) (= ($generated@@539 ($generated@@133 $generated@@544 $generated@@545)) $generated@@545))))
 :pattern ( ($generated@@133 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@149) (= ($generated@@517 ($generated@@277 $generated@@547)) ($generated@@518 $generated@@547)))
 :pattern ( ($generated@@517 ($generated@@277 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) ($generated@@229 $generated@@548 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@375 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@548) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@75 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@64)) ($generated@@229 $generated@@553 ($generated@@167 $generated@@554))) (and (= ($generated@@277 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@375 ($generated@@76 $generated@@158 $generated@@2) $generated@@553) ($generated@@167 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@167 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@64)) ($generated@@229 $generated@@555 ($generated@@254 $generated@@556))) (and (= ($generated@@277 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@375 ($generated@@134 $generated@@158) $generated@@555) ($generated@@254 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@254 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@76 $generated@@158 $generated@@2)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (< 0 ($generated ($generated@@81 $generated@@557 $generated@@560)))) ($generated@@260 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@167 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@563) (and ($generated@@147 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@260 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@567) (and ($generated@@147 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@260 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@158)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@277 $generated@@572)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@135 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@134 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@163 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@76 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@282 $generated@@575) ($generated ($generated@@81 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@2)) ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@3)) ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@4)) ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@443)) ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@158)) ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@134 $generated@@158)) (= (type $generated@@590) $generated@@64)) (= ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@229 ($generated@@327 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@327 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@254 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@134 $generated@@158)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@518 ($generated@@375 $generated@@149 ($generated@@327 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@290 $generated@@158 $generated@@158)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597))) (and (and ($generated@@145 ($generated@@288 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@145 ($generated@@339 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@145 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@148 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@403 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@308 $generated@@158 $generated@@158)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@306 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@145 ($generated@@350 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@145 ($generated@@385 $generated@@598) ($generated@@243 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@145 $generated@@601 $generated@@46))
 :pattern ( ($generated@@145 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@145 $generated@@602 $generated@@47))
 :pattern ( ($generated@@145 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@145 $generated@@603 $generated@@44))
 :pattern ( ($generated@@145 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@443) ($generated@@145 $generated@@604 $generated@@45))
 :pattern ( ($generated@@145 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@158) ($generated@@145 $generated@@605 $generated@@48))
 :pattern ( ($generated@@145 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(assert  (and (and (and (and (= (type $generated@@606) ($generated@@134 $generated@@158)) (= (type $generated@@608) ($generated@@174 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@77)) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@612) ($generated@@134 $generated@@158))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@614  (=> (= (ControlFlow 0 3) (- 0 2)) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@2) (and ($generated@@132 $generated@@606 ($generated@@277 $generated@@615)) (< ($generated $generated@@615) 3)))
 :no-pattern (type $generated@@615)
 :no-pattern ($generated $generated@@615)
 :no-pattern ($generated@@0 $generated@@615)
)))))
(let (($generated@@616  (=> (and (not ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 $generated@@607)))) (= (ControlFlow 0 5) 3)) $generated@@614)))
(let (($generated@@617  (=> (and ($generated@@132 $generated@@606 ($generated@@277 ($generated@@8 $generated@@607))) (= (ControlFlow 0 4) 3)) $generated@@614)))
(let (($generated@@618  (and (=> (= (ControlFlow 0 6) 4) $generated@@617) (=> (= (ControlFlow 0 6) 5) $generated@@616))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (and (= $generated@@608 ($generated@@173 $generated@@609 $generated@@610 $generated@@60 false)) (= $generated@@606 ($generated@@250 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@133 ($generated@@163 $generated@@158) ($generated@@277 ($generated@@8 ($generated@@248 0)))) ($generated@@277 ($generated@@8 ($generated@@248 1)))) ($generated@@277 ($generated@@8 ($generated@@248 2)))) ($generated@@277 ($generated@@8 ($generated@@248 3)))) ($generated@@277 ($generated@@8 ($generated@@248 4)))) ($generated@@277 ($generated@@8 ($generated@@248 5)))) ($generated@@277 ($generated@@8 ($generated@@248 6)))) ($generated@@277 ($generated@@8 ($generated@@248 7)))) ($generated@@277 ($generated@@8 ($generated@@248 8)))) ($generated@@277 ($generated@@8 ($generated@@248 12)))) ($generated@@277 ($generated@@8 ($generated@@248 13)))) ($generated@@277 ($generated@@8 ($generated@@248 14)))) ($generated@@277 ($generated@@8 ($generated@@248 15)))) ($generated@@277 ($generated@@8 ($generated@@248 16)))) ($generated@@277 ($generated@@8 ($generated@@248 17)))) ($generated@@277 ($generated@@8 ($generated@@248 18)))) ($generated@@277 ($generated@@8 ($generated@@248 19)))) ($generated@@277 ($generated@@8 ($generated@@248 20)))) ($generated@@277 ($generated@@8 ($generated@@248 21)))) ($generated@@277 ($generated@@8 ($generated@@248 22)))) ($generated@@277 ($generated@@8 ($generated@@248 23)))) ($generated@@277 ($generated@@8 ($generated@@248 24)))) ($generated@@277 ($generated@@8 ($generated@@248 25)))) ($generated@@277 ($generated@@8 ($generated@@248 26)))) ($generated@@277 ($generated@@8 ($generated@@248 27)))) ($generated@@277 ($generated@@8 ($generated@@248 28)))) ($generated@@277 ($generated@@8 ($generated@@248 29)))) ($generated@@277 ($generated@@8 ($generated@@248 30)))) ($generated@@277 ($generated@@8 ($generated@@248 31)))) ($generated@@277 ($generated@@8 ($generated@@248 32)))) ($generated@@277 ($generated@@8 ($generated@@248 33)))) ($generated@@277 ($generated@@8 ($generated@@248 34)))) ($generated@@277 ($generated@@8 ($generated@@248 35)))) ($generated@@277 ($generated@@8 ($generated@@248 36)))) ($generated@@277 ($generated@@8 ($generated@@248 37)))) ($generated@@277 ($generated@@8 ($generated@@248 38)))) ($generated@@277 ($generated@@8 ($generated@@248 39)))) ($generated@@277 ($generated@@8 ($generated@@248 40)))) ($generated@@277 ($generated@@8 ($generated@@248 41)))) ($generated@@277 ($generated@@8 ($generated@@248 42)))) ($generated@@277 ($generated@@8 ($generated@@248 43)))) ($generated@@277 ($generated@@8 ($generated@@248 44)))) ($generated@@277 ($generated@@8 ($generated@@248 45)))) ($generated@@277 ($generated@@8 ($generated@@248 46)))) ($generated@@277 ($generated@@8 ($generated@@248 47)))) ($generated@@277 ($generated@@8 ($generated@@248 48)))) ($generated@@277 ($generated@@8 ($generated@@248 49)))) ($generated@@277 ($generated@@8 ($generated@@248 50)))) ($generated@@277 ($generated@@8 ($generated@@248 51)))) ($generated@@277 ($generated@@8 ($generated@@248 52)))) ($generated@@277 ($generated@@8 ($generated@@248 53)))) ($generated@@277 ($generated@@8 ($generated@@248 54)))) ($generated@@277 ($generated@@8 ($generated@@248 55)))) ($generated@@277 ($generated@@8 ($generated@@248 56)))) ($generated@@277 ($generated@@8 ($generated@@248 57)))) ($generated@@277 ($generated@@8 ($generated@@248 58)))) ($generated@@277 ($generated@@8 ($generated@@248 59)))) ($generated@@277 ($generated@@8 ($generated@@248 60)))) ($generated@@277 ($generated@@8 ($generated@@248 61)))) ($generated@@277 ($generated@@8 ($generated@@248 62)))) ($generated@@277 ($generated@@8 ($generated@@248 63)))) ($generated@@277 ($generated@@8 ($generated@@248 64)))) ($generated@@277 ($generated@@8 ($generated@@248 65)))) ($generated@@277 ($generated@@8 ($generated@@248 66)))) ($generated@@277 ($generated@@8 ($generated@@248 67)))) ($generated@@277 ($generated@@8 ($generated@@248 68)))) ($generated@@277 ($generated@@8 ($generated@@248 69)))) ($generated@@277 ($generated@@8 ($generated@@248 70)))) ($generated@@277 ($generated@@8 ($generated@@248 71)))) ($generated@@277 ($generated@@8 ($generated@@248 72)))) ($generated@@277 ($generated@@8 ($generated@@248 73)))) ($generated@@277 ($generated@@8 ($generated@@248 74)))) ($generated@@277 ($generated@@8 ($generated@@248 75)))) ($generated@@277 ($generated@@8 ($generated@@248 76)))) ($generated@@277 ($generated@@8 ($generated@@248 77)))) ($generated@@277 ($generated@@8 ($generated@@248 78)))) ($generated@@277 ($generated@@8 ($generated@@248 79)))) ($generated@@277 ($generated@@8 ($generated@@248 80)))) ($generated@@277 ($generated@@8 ($generated@@248 81)))) ($generated@@277 ($generated@@8 ($generated@@248 82)))) ($generated@@277 ($generated@@8 ($generated@@248 83)))) ($generated@@277 ($generated@@8 ($generated@@248 84)))) ($generated@@277 ($generated@@8 ($generated@@248 85)))) ($generated@@277 ($generated@@8 ($generated@@248 86)))) ($generated@@277 ($generated@@8 ($generated@@248 87)))) ($generated@@277 ($generated@@8 ($generated@@248 88)))) ($generated@@277 ($generated@@8 ($generated@@248 89)))) ($generated@@277 ($generated@@8 ($generated@@248 90)))) ($generated@@277 ($generated@@8 ($generated@@248 91)))) ($generated@@277 ($generated@@8 ($generated@@248 92)))) ($generated@@277 ($generated@@8 ($generated@@248 93)))) ($generated@@277 ($generated@@8 ($generated@@248 94)))) ($generated@@277 ($generated@@8 ($generated@@248 95)))) ($generated@@277 ($generated@@8 ($generated@@248 96)))) ($generated@@277 ($generated@@8 ($generated@@248 97)))) ($generated@@277 ($generated@@8 ($generated@@248 98)))) ($generated@@277 ($generated@@8 ($generated@@248 99)))) ($generated@@277 ($generated@@8 ($generated@@248 100)))) ($generated@@277 ($generated@@8 ($generated@@248 101)))) ($generated@@277 ($generated@@8 ($generated@@248 102)))) ($generated@@277 ($generated@@8 ($generated@@248 103)))) ($generated@@277 ($generated@@8 ($generated@@248 104)))) ($generated@@277 ($generated@@8 ($generated@@248 105)))) ($generated@@277 ($generated@@8 ($generated@@248 106)))) ($generated@@277 ($generated@@8 ($generated@@248 107)))) ($generated@@277 ($generated@@8 ($generated@@248 108)))) ($generated@@277 ($generated@@8 ($generated@@248 109)))) ($generated@@277 ($generated@@8 ($generated@@248 110)))) ($generated@@277 ($generated@@8 ($generated@@248 111)))) ($generated@@277 ($generated@@8 ($generated@@248 112)))) ($generated@@277 ($generated@@8 ($generated@@248 113)))) ($generated@@277 ($generated@@8 ($generated@@248 114)))) ($generated@@277 ($generated@@8 ($generated@@248 115)))) ($generated@@277 ($generated@@8 ($generated@@248 116)))) ($generated@@277 ($generated@@8 ($generated@@248 117)))) ($generated@@277 ($generated@@8 ($generated@@248 118)))) ($generated@@277 ($generated@@8 ($generated@@248 122)))) ($generated@@277 ($generated@@8 ($generated@@248 123)))) ($generated@@277 ($generated@@8 ($generated@@248 124)))) ($generated@@277 ($generated@@8 ($generated@@248 125)))) ($generated@@277 ($generated@@8 ($generated@@248 126)))) ($generated@@277 ($generated@@8 ($generated@@248 127)))) ($generated@@277 ($generated@@8 ($generated@@248 128)))) ($generated@@277 ($generated@@8 ($generated@@248 129)))) ($generated@@277 ($generated@@8 ($generated@@248 130)))) ($generated@@277 ($generated@@8 ($generated@@248 131)))) ($generated@@277 ($generated@@8 ($generated@@248 132)))) ($generated@@277 ($generated@@8 ($generated@@248 133)))) ($generated@@277 ($generated@@8 ($generated@@248 134)))) ($generated@@277 ($generated@@8 ($generated@@248 135)))) ($generated@@277 ($generated@@8 ($generated@@248 136))))))) (and (=> (= (ControlFlow 0 7) 6) $generated@@618) (=> (= (ControlFlow 0 7) 1) $generated@@619)))))
(let (($generated@@621  (=> (and ($generated@@259 $generated@@610) ($generated@@611 $generated@@610)) (=> (and (and (and ($generated@@145 $generated@@612 ($generated@@254 $generated@@46)) ($generated@@74 $generated@@612 ($generated@@254 $generated@@46) $generated@@610)) true) (and (= 0 $generated@@613) (= (ControlFlow 0 8) 7))) $generated@@620))))
$generated@@621))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
