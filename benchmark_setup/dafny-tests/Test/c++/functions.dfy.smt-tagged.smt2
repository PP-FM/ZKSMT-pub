(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 18446744073709551616))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@256 (Int) Bool)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (=> (<= 1 $generated@@254) (forall (($generated@@257 Int) ) (!  (=> (or ($generated@@256 $generated@@257) (and (not (= 1 $generated@@254)) (and (<= ($generated@@248 0) $generated@@257) (< $generated@@257 4294967296)))) (= ($generated@@255 $generated@@257) (+ $generated@@257 1)))
 :pattern ( ($generated@@255 $generated@@257))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@150)) (= (type $generated@@263) $generated@@150)) (= (type $generated@@264) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@258 $generated@@264)) (= ($generated@@76 ($generated@@228 $generated@@262 $generated@@263) ($generated@@140 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@262 $generated@@263) ($generated@@140 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@141) (= ($generated@@139 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@267))
)))
(assert  (=> (<= 1 $generated@@254) (forall (($generated@@268 Int) ) (!  (=> (or ($generated@@256 $generated@@268) (and (not (= 1 $generated@@254)) (and (<= ($generated@@248 0) $generated@@268) (< $generated@@268 4294967296)))) (and (<= ($generated@@248 0) ($generated@@255 $generated@@268)) (< ($generated@@255 $generated@@268) 18446744073709551616)))
 :pattern ( ($generated@@255 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@141) ($generated@@139 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@150) (= (type $generated@@271) $generated@@150)) (= $generated@@269 ($generated@@228 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@139 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@150)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@66) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@76 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (=> (<= 1 $generated@@254) (forall (($generated@@327 Int) ) (!  (=> (or ($generated@@256 ($generated@@248 $generated@@327)) (and (not (= 1 $generated@@254)) (and (<= ($generated@@248 0) $generated@@327) (< $generated@@327 4294967296)))) (= ($generated@@255 ($generated@@248 $generated@@327)) ($generated@@248 (+ $generated@@327 1))))
 :weight 3
 :pattern ( ($generated@@255 ($generated@@248 $generated@@327)))
))))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@81 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@78 $generated@@329 $generated@@2)) (= ($generated@@156 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@83 $generated@@328 $generated@@330))) (<= ($generated ($generated@@83 $generated@@328 $generated@@330)) ($generated@@285 $generated@@328))))
 :pattern ( ($generated@@83 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@156 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@150) ($generated@@229 $generated@@334 $generated@@134)) (and (= ($generated@@280 ($generated@@331 $generated@@2 $generated@@334)) $generated@@334) ($generated@@137 ($generated@@331 $generated@@2 $generated@@334) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@334 $generated@@134))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(let (($generated@@337 ($generated@@294 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@293 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@292 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@291 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@295 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@78 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@295 (type $generated@@342))))
(let (($generated@@344 ($generated@@294 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@293 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@292 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(let (($generated@@348 ($generated@@312 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@311 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@310 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@309 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@313 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@78 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@313 (type $generated@@353))))
(let (($generated@@355 ($generated@@312 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@311 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@310 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@358) $generated@@66)) (= ($generated@@137 $generated@@357 ($generated@@155 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@357 $generated@@359)))) ($generated@@229 $generated@@359 $generated@@358))
 :pattern ( ($generated@@83 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@137 $generated@@357 ($generated@@155 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@361) $generated@@66)) (= (type $generated@@362) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@360 ($generated@@238 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@150) ($generated@@0 ($generated@@83 $generated@@360 $generated@@363))) ($generated@@259 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@83 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@76 $generated@@360 ($generated@@238 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@365) $generated@@66)) (= (type $generated@@366) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@364 ($generated@@243 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@150) ($generated@@0 ($generated@@83 $generated@@364 $generated@@367))) ($generated@@259 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@83 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@76 $generated@@364 ($generated@@243 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@83 ($generated@@286 $generated@@369) $generated@@368)))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@295 (type $generated@@373))))
(let (($generated@@375 ($generated@@294 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@377) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@376) ($generated@@148 ($generated@@331 $generated@@141 $generated@@377)))) (= ($generated@@83 ($generated@@371 $generated@@376) ($generated@@148 ($generated@@331 $generated@@141 $generated@@377))) ($generated@@149 ($generated@@331 $generated@@141 $generated@@377))))))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@313 (type $generated@@381))))
(let (($generated@@383 ($generated@@312 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@385) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@384) ($generated@@148 ($generated@@331 $generated@@141 $generated@@385)))) (= ($generated@@83 ($generated@@379 $generated@@384) ($generated@@148 ($generated@@331 $generated@@141 $generated@@385))) ($generated@@149 ($generated@@331 $generated@@141 $generated@@385))))))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@294 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@293 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@339 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@371 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@339 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@312 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@311 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@83 ($generated@@350 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@83 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@391) $generated@@395))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@83 ($generated@@350 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@66)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@399) $generated@@403))) (and ($generated@@259 ($generated@@83 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@259 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@76 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@66)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@407) $generated@@411))) (and ($generated@@259 ($generated@@83 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@259 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@76 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@78 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@313 (type $generated@@414))))
(let (($generated@@416 ($generated@@312 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@311 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@310 $generated@@416 $generated@@415)) (= ($generated@@309 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@309 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@313 (type $generated@@417))))
(let (($generated@@419 ($generated@@312 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@311 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@310 $generated@@419 $generated@@418)) (= ($generated@@350 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@350 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@313 (type $generated@@420))))
(let (($generated@@422 ($generated@@312 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@311 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@310 $generated@@422 $generated@@421)) (= ($generated@@378 $generated@@420) ($generated@@412 $generated@@150))))))
 :pattern ( ($generated@@378 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@295 (type $generated@@423))))
(let (($generated@@425 ($generated@@294 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@293 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@292 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@150) (= (type $generated@@427) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@370 $generated@@423) ($generated@@280 ($generated@@228 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@370 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@313 (type $generated@@428))))
(let (($generated@@430 ($generated@@312 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@311 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@310 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@150) (= (type $generated@@432) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@378 $generated@@428) ($generated@@280 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@378 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@150) ($generated@@229 $generated@@433 $generated@@46)) (and (= ($generated@@280 ($generated@@331 $generated@@2 $generated@@433)) $generated@@433) ($generated@@137 ($generated@@331 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@229 $generated@@434 $generated@@47)) (and (= ($generated@@280 ($generated@@331 $generated@@3 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@331 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@150) ($generated@@229 $generated@@435 $generated@@44)) (and (= ($generated@@280 ($generated@@331 $generated@@4 $generated@@435)) $generated@@435) ($generated@@137 ($generated@@331 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 20))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@150) ($generated@@229 $generated@@437 $generated@@45)) (and (= ($generated@@280 ($generated@@331 $generated@@436 $generated@@437)) $generated@@437) ($generated@@137 ($generated@@331 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@66) (= ($generated@@229 ($generated@@280 $generated@@438) $generated@@439) ($generated@@137 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@229 ($generated@@280 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@81 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@78 $generated@@441 $generated@@2)) (<= 0 ($generated@@285 $generated@@440))))
 :pattern ( ($generated@@285 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@66)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@66) (= (type $generated@@447) $generated@@66)) (= ($generated@@444 ($generated@@396 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@396 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@66)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@448 ($generated@@396 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@74 ($generated@@396 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@66)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@66) (= (type $generated@@457) $generated@@66)) (= ($generated@@454 ($generated@@404 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@404 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@458 ($generated@@404 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@74 ($generated@@404 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@150) (= (type $generated@@465) $generated@@150)) (= ($generated@@265 ($generated@@228 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@140 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@140 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@140 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@140 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@150) (= (type $generated@@475) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@228 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@150) (= (type $generated@@477) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@228 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ($generated@@482 Int) ) (! (let (($generated@@483 ($generated@@275 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481 $generated@@482)) $generated@@483))
 :pattern ( ($generated@@479 $generated@@481 $generated@@482))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@274 $generated@@150)) (= (type $generated@@485) $generated@@66)) (= (type $generated@@486) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@484 ($generated@@478 $generated@@485) $generated@@486) (forall (($generated@@487 Int) ) (!  (=> (and (<= 0 $generated@@487) (< $generated@@487 ($generated@@273 $generated@@484))) ($generated@@259 ($generated@@479 $generated@@484 $generated@@487) $generated@@485 $generated@@486))
 :pattern ( ($generated@@479 $generated@@484 $generated@@487))
))))
 :pattern ( ($generated@@76 $generated@@484 ($generated@@478 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@77 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@77 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@238 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@238 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@494 ($generated@@243 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@243 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@155 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@155 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@478 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@478 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@478 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@478 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@331 $generated@@507 ($generated@@280 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@280 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@509) $generated@@66)) (= (type $generated@@510) $generated@@66)) (= ($generated@@137 $generated@@508 ($generated@@396 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@508) $generated@@511))) (and ($generated@@229 ($generated@@83 ($generated@@371 $generated@@508) $generated@@511) $generated@@510) ($generated@@229 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@508) $generated@@511))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@137 $generated@@508 ($generated@@396 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@513) $generated@@66)) (= (type $generated@@514) $generated@@66)) (= ($generated@@137 $generated@@512 ($generated@@404 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@512) $generated@@515))) (and ($generated@@229 ($generated@@83 ($generated@@379 $generated@@512) $generated@@515) $generated@@514) ($generated@@229 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@512) $generated@@515))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@137 $generated@@512 ($generated@@404 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@228 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@228 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) (= (type $generated@@521) $generated@@150)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@228 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@228 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@229 $generated@@522 ($generated@@396 $generated@@523 $generated@@524))) (and (= ($generated@@280 ($generated@@331 ($generated@@293 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@331 ($generated@@293 $generated@@150 $generated@@150) $generated@@522) ($generated@@396 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@229 $generated@@522 ($generated@@396 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@229 $generated@@525 ($generated@@404 $generated@@526 $generated@@527))) (and (= ($generated@@280 ($generated@@331 ($generated@@311 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@331 ($generated@@311 $generated@@150 $generated@@150) $generated@@525) ($generated@@404 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@229 $generated@@525 ($generated@@404 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@229 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@280 ($generated@@331 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@331 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@412 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@412 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@535 $generated@@536)) $generated@@62) (= ($generated@@533 ($generated@@140 $generated@@535 $generated@@536)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@141) (= ($generated@@516 ($generated@@280 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@280 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@150) ($generated@@229 $generated@@538 ($generated@@77 0))) (and (= ($generated@@280 ($generated@@331 $generated@@2 $generated@@538)) $generated@@538) ($generated@@137 ($generated@@331 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@538 ($generated@@77 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@66)) ($generated@@229 $generated@@539 ($generated@@238 $generated@@540))) (and (= ($generated@@280 ($generated@@331 ($generated@@78 $generated@@150 $generated@@4) $generated@@539)) $generated@@539) ($generated@@137 ($generated@@331 ($generated@@78 $generated@@150 $generated@@4) $generated@@539) ($generated@@238 $generated@@540))))
 :pattern ( ($generated@@229 $generated@@539 ($generated@@238 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@150) (= (type $generated@@542) $generated@@66)) ($generated@@229 $generated@@541 ($generated@@243 $generated@@542))) (and (= ($generated@@280 ($generated@@331 ($generated@@78 $generated@@150 $generated@@4) $generated@@541)) $generated@@541) ($generated@@137 ($generated@@331 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@243 $generated@@542))))
 :pattern ( ($generated@@229 $generated@@541 ($generated@@243 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@150) (= (type $generated@@544) $generated@@66)) ($generated@@229 $generated@@543 ($generated@@155 $generated@@544))) (and (= ($generated@@280 ($generated@@331 ($generated@@78 $generated@@150 $generated@@2) $generated@@543)) $generated@@543) ($generated@@137 ($generated@@331 ($generated@@78 $generated@@150 $generated@@2) $generated@@543) ($generated@@155 $generated@@544))))
 :pattern ( ($generated@@229 $generated@@543 ($generated@@155 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@150) (= (type $generated@@546) $generated@@66)) ($generated@@229 $generated@@545 ($generated@@478 $generated@@546))) (and (= ($generated@@280 ($generated@@331 ($generated@@274 $generated@@150) $generated@@545)) $generated@@545) ($generated@@137 ($generated@@331 ($generated@@274 $generated@@150) $generated@@545) ($generated@@478 $generated@@546))))
 :pattern ( ($generated@@229 $generated@@545 ($generated@@478 $generated@@546)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@533 $generated@@134) $generated@@65))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@547 $generated@@550)))) ($generated@@259 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@83 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@141) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@553) (and ($generated@@139 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@66) ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@259 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@259 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@141) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@557) (and ($generated@@139 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@66) ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@259 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@259 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@2) (= ($generated@@137 $generated@@559 $generated@@134)  (and (<= ($generated@@248 0) ($generated $generated@@559)) (< ($generated $generated@@559) 18446744073709551616))))
 :pattern ( ($generated@@137 $generated@@559 $generated@@134))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@150) (= (type $generated@@561) $generated@@150)) (= ($generated@@228 ($generated@@250 $generated@@560) ($generated@@250 $generated@@561)) ($generated@@250 ($generated@@228 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@560) ($generated@@250 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@248 $generated@@562))) ($generated@@250 ($generated@@280 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@248 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@280 ($generated@@250 $generated@@563)) ($generated@@250 ($generated@@280 $generated@@563)))
 :pattern ( ($generated@@280 ($generated@@250 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@275 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@274 $generated@@565)) (= ($generated@@273 $generated@@564) 0)) (= $generated@@564 ($generated@@272 $generated@@565))))
 :pattern ( ($generated@@273 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@285 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@285 $generated@@566) ($generated ($generated@@83 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@2)) ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@3)) ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@4)) ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@436)) ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@150)) ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@274 $generated@@150)) (= (type $generated@@581) $generated@@66)) (= ($generated@@137 $generated@@580 ($generated@@478 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@273 $generated@@580))) ($generated@@229 ($generated@@479 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@479 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@137 $generated@@580 ($generated@@478 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@274 $generated@@150)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@273 $generated@@584))) (< ($generated@@517 ($generated@@331 $generated@@141 ($generated@@479 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@517 ($generated@@331 $generated@@141 ($generated@@479 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@137 $generated@@586 ($generated@@396 $generated@@587 $generated@@588))) (and (and ($generated@@137 ($generated@@291 $generated@@586) ($generated@@238 $generated@@587)) ($generated@@137 ($generated@@339 $generated@@586) ($generated@@238 $generated@@588))) ($generated@@137 ($generated@@370 $generated@@586) ($generated@@238 ($generated@@140 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@137 $generated@@586 ($generated@@396 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@137 $generated@@589 ($generated@@404 $generated@@590 $generated@@591))) (and (and ($generated@@137 ($generated@@309 $generated@@589) ($generated@@243 $generated@@590)) ($generated@@137 ($generated@@350 $generated@@589) ($generated@@243 $generated@@591))) ($generated@@137 ($generated@@378 $generated@@589) ($generated@@243 ($generated@@140 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@137 $generated@@589 ($generated@@404 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@137 $generated@@592 $generated@@46))
 :pattern ( ($generated@@137 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@137 $generated@@593 $generated@@47))
 :pattern ( ($generated@@137 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@137 $generated@@594 $generated@@44))
 :pattern ( ($generated@@137 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@436) ($generated@@137 $generated@@595 $generated@@45))
 :pattern ( ($generated@@137 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@150) ($generated@@137 $generated@@596 $generated@@48))
 :pattern ( ($generated@@137 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@597) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@598) $generated@@79)) (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@603) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@605  (=> (= $generated@@597 ($generated@@216 $generated@@598 $generated@@599 $generated@@60 false)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (and (<= ($generated@@248 0) $generated@@600) (< $generated@@600 18446744073709551616))) (=> (and (<= ($generated@@248 0) $generated@@600) (< $generated@@600 18446744073709551616)) (=> (= $generated@@601 ($generated@@248 1)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@248 0) $generated@@601) (< $generated@@601 18446744073709551616))) (=> (and (<= ($generated@@248 0) $generated@@601) (< $generated@@601 18446744073709551616)) (=> (and (= $generated@@602 (+ $generated@@600 1)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@248 0) $generated@@602) (< $generated@@602 18446744073709551616)))))))))))
(let (($generated@@606 true))
(let (($generated@@607  (=> (= $generated@@603 ($generated@@161 $generated@@598 $generated@@599 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@606) (=> (= (ControlFlow 0 6) 3) $generated@@605)))))
(let (($generated@@608  (=> (and ($generated@@258 $generated@@599) ($generated@@604 $generated@@599)) (=> (and (and (<= ($generated@@248 0) $generated@@600) (< $generated@@600 4294967296)) (and (= 1 $generated@@254) (= (ControlFlow 0 7) 6))) $generated@@607))))
$generated@@608)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@345 () Int)
(declare-fun $generated@@346 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@347 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U Int) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@224 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)))
)))
(assert  (and (and (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 Int) ($generated@@353 T@U) ) (! (= (type ($generated@@346 $generated@@350 $generated@@351 $generated@@352 $generated@@353)) $generated@@145)
 :pattern ( ($generated@@346 $generated@@350 $generated@@351 $generated@@352 $generated@@353))
)) (forall (($generated@@354 T@U) ) (! (= (type ($generated@@348 $generated@@354)) $generated@@64)
 :pattern ( ($generated@@348 $generated@@354))
))) (forall (($generated@@355 T@U) ($generated@@356 Int) ) (! (let (($generated@@357 ($generated@@265 (type $generated@@355))))
(= (type ($generated@@349 $generated@@355 $generated@@356)) $generated@@357))
 :pattern ( ($generated@@349 $generated@@355 $generated@@356))
))))
(assert  (=> (<= 1 $generated@@345) (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 Int) ($generated@@361 T@U) ) (!  (=> (and (and (and (= (type $generated@@358) $generated@@64) (= (type $generated@@359) ($generated@@264 $generated@@145))) (= (type $generated@@361) $generated@@145)) (or ($generated@@347 $generated@@358 ($generated@@245 $generated@@359) ($generated@@243 $generated@@360) $generated@@361) (and (not (= 1 $generated@@345)) (and (and (and ($generated@@132 $generated@@359 ($generated@@348 $generated@@358)) (and (<= ($generated@@243 0) $generated@@360) (< $generated@@360 4294967296))) ($generated@@224 $generated@@361 $generated@@358)) (< ($generated@@263 ($generated@@245 $generated@@359)) 1000))))) (= ($generated@@346 $generated@@358 ($generated@@245 $generated@@359) ($generated@@243 $generated@@360) $generated@@361) (ite (> ($generated@@263 ($generated@@245 $generated@@359)) $generated@@360) ($generated@@349 ($generated@@245 $generated@@359) ($generated@@243 $generated@@360)) $generated@@361)))
 :weight 3
 :pattern ( ($generated@@346 $generated@@358 ($generated@@245 $generated@@359) ($generated@@243 $generated@@360) $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@233 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@145) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@250 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@233 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@238 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@145) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@250 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@238 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@81 ($generated@@276 $generated@@371) $generated@@370)))
)))
(assert  (and (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@372 $generated@@375)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@372 $generated@@375))
)) (forall (($generated@@376 T@T) ($generated@@377 T@U) ) (! (= (type ($generated@@373 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@373 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@285 (type $generated@@378))))
(let (($generated@@380 ($generated@@284 (type $generated@@378))))
(= (type ($generated@@374 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@374 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@381) ($generated@@143 ($generated@@373 $generated@@136 $generated@@382)))) (= ($generated@@81 ($generated@@374 $generated@@381) ($generated@@143 ($generated@@373 $generated@@136 $generated@@382))) ($generated@@144 ($generated@@373 $generated@@136 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@303 (type $generated@@386))))
(let (($generated@@388 ($generated@@302 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@76 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@390) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@389) ($generated@@143 ($generated@@373 $generated@@136 $generated@@390)))) (= ($generated@@81 ($generated@@384 $generated@@389) ($generated@@143 ($generated@@373 $generated@@136 $generated@@390))) ($generated@@144 ($generated@@373 $generated@@136 $generated@@390))))))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@284 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@283 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@81 ($generated@@374 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@302 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@301 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@81 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@404) $generated@@408))) (and ($generated@@250 ($generated@@81 ($generated@@374 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@250 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@64)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) $generated@@64)) (= (type $generated@@415) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@412) $generated@@416))) (and ($generated@@250 ($generated@@81 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@250 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@74 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@76 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (= ($generated@@299 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@299 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@303 (type $generated@@422))))
(let (($generated@@424 ($generated@@302 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@301 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@300 $generated@@424 $generated@@423)) (= ($generated@@335 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@335 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@303 (type $generated@@425))))
(let (($generated@@427 ($generated@@302 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@301 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@300 $generated@@427 $generated@@426)) (= ($generated@@383 $generated@@425) ($generated@@417 $generated@@145))))))
 :pattern ( ($generated@@383 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@285 (type $generated@@428))))
(let (($generated@@430 ($generated@@284 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@283 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@282 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@145) (= (type $generated@@432) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@428) ($generated@@270 ($generated@@223 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@303 (type $generated@@433))))
(let (($generated@@435 ($generated@@302 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@301 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@300 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@145) (= (type $generated@@437) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@383 $generated@@433) ($generated@@270 ($generated@@223 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@383 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@224 $generated@@438 $generated@@46)) (and (= ($generated@@270 ($generated@@373 $generated@@2 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@373 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@224 $generated@@439 $generated@@47)) (and (= ($generated@@270 ($generated@@373 $generated@@3 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@373 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@224 $generated@@440 $generated@@44)) (and (= ($generated@@270 ($generated@@373 $generated@@4 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@373 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) ($generated@@224 $generated@@442 $generated@@45)) (and (= ($generated@@270 ($generated@@373 $generated@@441 $generated@@442)) $generated@@442) ($generated@@132 ($generated@@373 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@64) (= ($generated@@224 ($generated@@270 $generated@@443) $generated@@444) ($generated@@132 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@443) $generated@@444))
)))
(assert  (=> (<= 1 $generated@@345) (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 Int) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) ($generated@@264 $generated@@145))) (= (type $generated@@448) $generated@@145)) (or ($generated@@347 $generated@@445 ($generated@@245 $generated@@446) ($generated@@243 $generated@@447) ($generated@@245 $generated@@448)) (and (not (= 1 $generated@@345)) (and (and (and ($generated@@132 $generated@@446 ($generated@@348 $generated@@445)) (and (<= ($generated@@243 0) $generated@@447) (< $generated@@447 4294967296))) ($generated@@224 $generated@@448 $generated@@445)) (< ($generated@@263 ($generated@@245 $generated@@446)) 1000))))) (= ($generated@@346 $generated@@445 ($generated@@245 $generated@@446) ($generated@@243 $generated@@447) ($generated@@245 $generated@@448)) (ite (> ($generated@@263 ($generated@@245 $generated@@446)) $generated@@447) ($generated@@349 ($generated@@245 $generated@@446) ($generated@@243 $generated@@447)) $generated@@448)))
 :weight 3
 :pattern ( ($generated@@346 $generated@@445 ($generated@@245 $generated@@446) ($generated@@243 $generated@@447) ($generated@@245 $generated@@448)))
))))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@79 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@76 $generated@@450 $generated@@2)) (<= 0 ($generated@@275 $generated@@449))))
 :pattern ( ($generated@@275 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@265 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@264 $generated@@452)) (<= 0 ($generated@@263 $generated@@451))))
 :pattern ( ($generated@@263 $generated@@451))
)))
(assert  (=> (<= 1 $generated@@345) (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 Int) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) ($generated@@264 $generated@@145))) (= (type $generated@@456) $generated@@145)) (or ($generated@@347 $generated@@453 $generated@@454 $generated@@455 $generated@@456) (and (not (= 1 $generated@@345)) (and (and (and ($generated@@132 $generated@@454 ($generated@@348 $generated@@453)) (and (<= ($generated@@243 0) $generated@@455) (< $generated@@455 4294967296))) ($generated@@224 $generated@@456 $generated@@453)) (< ($generated@@263 $generated@@454) 1000))))) (= ($generated@@346 $generated@@453 $generated@@454 $generated@@455 $generated@@456) (ite (> ($generated@@263 $generated@@454) $generated@@455) ($generated@@349 $generated@@454 $generated@@455) $generated@@456)))
 :pattern ( ($generated@@346 $generated@@453 $generated@@454 $generated@@455 $generated@@456))
))))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@401 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@401 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@409 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@409 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@409 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@409 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@72 ($generated@@409 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@135 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@135 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@135 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@135 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) (= (type $generated@@488) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@223 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) (= (type $generated@@490) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@264 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@491 ($generated@@348 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@263 $generated@@491))) ($generated@@250 ($generated@@349 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@349 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@74 $generated@@491 ($generated@@348 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@75 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@75 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@233 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@233 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@238 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@238 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@150 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@150 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@348 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@348 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@348 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@348 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@373 $generated@@514 ($generated@@270 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@270 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@401 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@515) $generated@@518))) (and ($generated@@224 ($generated@@81 ($generated@@374 $generated@@515) $generated@@518) $generated@@517) ($generated@@224 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@401 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@132 $generated@@519 ($generated@@409 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@519) $generated@@522))) (and ($generated@@224 ($generated@@81 ($generated@@384 $generated@@519) $generated@@522) $generated@@521) ($generated@@224 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@132 $generated@@519 ($generated@@409 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@223 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@223 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@145)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@223 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@223 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@224 $generated@@529 ($generated@@401 $generated@@530 $generated@@531))) (and (= ($generated@@270 ($generated@@373 ($generated@@283 $generated@@145 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@373 ($generated@@283 $generated@@145 $generated@@145) $generated@@529) ($generated@@401 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@401 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@224 $generated@@532 ($generated@@409 $generated@@533 $generated@@534))) (and (= ($generated@@270 ($generated@@373 ($generated@@301 $generated@@145 $generated@@145) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@373 ($generated@@301 $generated@@145 $generated@@145) $generated@@532) ($generated@@409 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@409 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@145)) ($generated@@224 $generated@@537 ($generated@@135 $generated@@535 $generated@@536))) (and (= ($generated@@270 ($generated@@373 $generated@@136 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@373 $generated@@136 $generated@@537) ($generated@@135 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@135 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@417 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@417 $generated@@539) $generated@@538)))
)))
(assert  (=> (<= 1 $generated@@345) (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 Int) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) ($generated@@264 $generated@@145))) (= (type $generated@@543) $generated@@145)) (or ($generated@@347 $generated@@540 $generated@@541 $generated@@542 $generated@@543) (and (not (= 1 $generated@@345)) (and (and (and ($generated@@132 $generated@@541 ($generated@@348 $generated@@540)) (and (<= ($generated@@243 0) $generated@@542) (< $generated@@542 4294967296))) ($generated@@224 $generated@@543 $generated@@540)) (< ($generated@@263 $generated@@541) 1000))))) ($generated@@224 ($generated@@346 $generated@@540 $generated@@541 $generated@@542 $generated@@543) $generated@@540))
 :pattern ( ($generated@@346 $generated@@540 $generated@@541 $generated@@542 $generated@@543))
))))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@69)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@135 $generated@@546 $generated@@547)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@136) (= ($generated@@523 ($generated@@270 $generated@@548)) ($generated@@524 $generated@@548)))
 :pattern ( ($generated@@523 ($generated@@270 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) ($generated@@224 $generated@@549 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@373 $generated@@2 $generated@@549)) $generated@@549) ($generated@@132 ($generated@@373 ($generated@@76 $generated@@145 $generated@@4) $generated@@549) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@549 ($generated@@75 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@233 $generated@@551))) (and (= ($generated@@270 ($generated@@373 ($generated@@76 $generated@@145 $generated@@4) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@373 ($generated@@76 $generated@@145 $generated@@4) $generated@@550) ($generated@@233 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@233 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@224 $generated@@552 ($generated@@238 $generated@@553))) (and (= ($generated@@270 ($generated@@373 ($generated@@76 $generated@@145 $generated@@4) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@373 ($generated@@76 $generated@@145 $generated@@4) $generated@@552) ($generated@@238 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@238 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@64)) ($generated@@224 $generated@@554 ($generated@@150 $generated@@555))) (and (= ($generated@@270 ($generated@@373 ($generated@@76 $generated@@145 $generated@@2) $generated@@554)) $generated@@554) ($generated@@132 ($generated@@373 ($generated@@76 $generated@@145 $generated@@2) $generated@@554) ($generated@@150 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@150 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@64)) ($generated@@224 $generated@@556 ($generated@@348 $generated@@557))) (and (= ($generated@@270 ($generated@@373 ($generated@@264 $generated@@145) $generated@@556)) $generated@@556) ($generated@@132 ($generated@@373 ($generated@@264 $generated@@145) $generated@@556) ($generated@@348 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@348 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@558 ($generated@@150 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@558 $generated@@561)))) ($generated@@250 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@81 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@150 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@564) (and ($generated@@134 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@135 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@135 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@250 ($generated@@143 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@568) (and ($generated@@134 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@64) ($generated@@74 $generated@@566 ($generated@@135 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@74 $generated@@566 ($generated@@135 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@250 ($generated@@144 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@145) (= (type $generated@@571) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)) ($generated@@245 ($generated@@223 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)))
)))
(assert (forall (($generated@@572 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@243 $generated@@572))) ($generated@@245 ($generated@@270 ($generated@@8 $generated@@572))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@243 $generated@@572))))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@573)) ($generated@@245 ($generated@@270 $generated@@573)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@265 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@264 $generated@@575)) (= ($generated@@263 $generated@@574) 0)) (= $generated@@574 ($generated@@262 $generated@@575))))
 :pattern ( ($generated@@263 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@76 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@275 ($generated@@82 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@275 $generated@@576) ($generated ($generated@@81 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@2)) ($generated@@74 $generated@@581 $generated@@46 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@46 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@3)) ($generated@@74 $generated@@583 $generated@@47 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@47 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@4)) ($generated@@74 $generated@@585 $generated@@44 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@44 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@441)) ($generated@@74 $generated@@587 $generated@@45 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@45 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@145)) ($generated@@74 $generated@@589 $generated@@48 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@48 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@264 $generated@@145)) (= (type $generated@@591) $generated@@64)) (= ($generated@@132 $generated@@590 ($generated@@348 $generated@@591)) (forall (($generated@@592 Int) ) (!  (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@263 $generated@@590))) ($generated@@224 ($generated@@349 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@349 $generated@@590 $generated@@592))
))))
 :pattern ( ($generated@@132 $generated@@590 ($generated@@348 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@263 $generated@@594))) (< ($generated@@524 ($generated@@373 $generated@@136 ($generated@@349 $generated@@594 $generated@@595))) ($generated@@593 $generated@@594))))
 :pattern ( ($generated@@524 ($generated@@373 $generated@@136 ($generated@@349 $generated@@594 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) $generated@@64)) ($generated@@132 $generated@@596 ($generated@@401 $generated@@597 $generated@@598))) (and (and ($generated@@132 ($generated@@281 $generated@@596) ($generated@@233 $generated@@597)) ($generated@@132 ($generated@@324 $generated@@596) ($generated@@233 $generated@@598))) ($generated@@132 ($generated@@372 $generated@@596) ($generated@@233 ($generated@@135 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@132 $generated@@596 ($generated@@401 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) $generated@@64)) ($generated@@132 $generated@@599 ($generated@@409 $generated@@600 $generated@@601))) (and (and ($generated@@132 ($generated@@299 $generated@@599) ($generated@@238 $generated@@600)) ($generated@@132 ($generated@@335 $generated@@599) ($generated@@238 $generated@@601))) ($generated@@132 ($generated@@383 $generated@@599) ($generated@@238 ($generated@@135 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@132 $generated@@599 ($generated@@409 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@2) ($generated@@132 $generated@@602 $generated@@46))
 :pattern ( ($generated@@132 $generated@@602 $generated@@46))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@3) ($generated@@132 $generated@@603 $generated@@47))
 :pattern ( ($generated@@132 $generated@@603 $generated@@47))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@4) ($generated@@132 $generated@@604 $generated@@44))
 :pattern ( ($generated@@132 $generated@@604 $generated@@44))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@441) ($generated@@132 $generated@@605 $generated@@45))
 :pattern ( ($generated@@132 $generated@@605 $generated@@45))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@145) ($generated@@132 $generated@@606 $generated@@48))
 :pattern ( ($generated@@132 $generated@@606 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@607) ($generated@@264 $generated@@145)) (= (type $generated@@609) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@610) $generated@@77)) (= (type $generated@@611) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@613) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@615) $generated@@64)) (= (type $generated@@616) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@617 true))
(let (($generated@@618  (=> (and (> ($generated@@263 $generated@@607) $generated@@608) (= (ControlFlow 0 3) (- 0 2))) (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@263 $generated@@607))))))
(let (($generated@@619  (=> (and (= $generated@@609 ($generated@@211 $generated@@610 $generated@@611 $generated@@60 false)) (= $generated@@612 ($generated@@263 $generated@@607))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= ($generated@@243 0) $generated@@612) (< $generated@@612 4294967296))) (=> (and (<= ($generated@@243 0) $generated@@612) (< $generated@@612 4294967296)) (and (=> (= (ControlFlow 0 5) 3) $generated@@618) (=> (= (ControlFlow 0 5) 4) $generated@@617)))))))
(let (($generated@@620 true))
(let (($generated@@621  (=> (and (= $generated@@613 ($generated@@156 $generated@@610 $generated@@611 $generated@@60 false)) (< ($generated@@263 $generated@@607) 1000)) (and (=> (= (ControlFlow 0 7) 1) $generated@@620) (=> (= (ControlFlow 0 7) 5) $generated@@619)))))
(let (($generated@@622  (=> (and (and ($generated@@249 $generated@@611) ($generated@@614 $generated@@611)) ($generated@@132 $generated@@607 ($generated@@348 $generated@@615))) (=> (and (and (and (<= ($generated@@243 0) $generated@@608) (< $generated@@608 4294967296)) ($generated@@224 $generated@@616 $generated@@615)) (and (= 1 $generated@@345) (= (ControlFlow 0 8) 7))) $generated@@621))))
$generated@@622)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@252 (Int) Bool)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@T T@U) T@U)
(declare-fun $generated@@268 () Int)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@270 (Int) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 (T@U T@U) Bool)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@320 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@333 (T@U) Int)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@382 (T@U T@U T@U) T@U)
(declare-fun $generated@@383 (T@T T@T T@T) T@T)
(declare-fun $generated@@384 (T@U T@U T@U) T@U)
(declare-fun $generated@@385 (T@T) T@T)
(declare-fun $generated@@386 (T@T) T@T)
(declare-fun $generated@@387 (T@T) T@T)
(declare-fun $generated@@388 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@477 () T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@528 (T@U T@U) T@U)
(declare-fun $generated@@536 (T@U T@U) T@U)
(declare-fun $generated@@552 (T@T) T@U)
(declare-fun $generated@@576 () T@T)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(declare-fun $generated@@633 (T@U) T@U)
(declare-fun $generated@@634 (T@U Int) T@U)
(declare-fun $generated@@643 (T@U) Int)
(declare-fun $generated@@645 (T@U) T@U)
(declare-fun $generated@@649 (T@U) T@U)
(declare-fun $generated@@653 (T@U) T@U)
(declare-fun $generated@@657 (T@U) T@U)
(declare-fun $generated@@671 (T@U) Int)
(declare-fun $generated@@672 (T@U) Int)
(declare-fun $generated@@693 (T@U) T@U)
(declare-fun $generated@@752 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= (type $generated@@136) $generated@@68))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
 :pattern ( ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@79 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@79 0)))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))) (= ($generated@@1 $generated@@144) 15)) (= (type $generated@@142) $generated@@144)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@143) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@152) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@141 $generated@@136 $generated@@136 $generated@@151 $generated@@142 $generated@@152) $generated@@150)) false))
 :pattern ( ($generated@@85 ($generated@@141 $generated@@136 $generated@@136 $generated@@151 $generated@@142 $generated@@152) $generated@@150))
)))
(assert  (and (= ($generated@@1 $generated@@155) 16) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@68) (= (type $generated@@159) $generated@@68)) (= (type $generated@@160) $generated@@155)) ($generated@@139 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@139 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@143)
 :pattern ( ($generated@@162 $generated@@164))
)) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@143)
 :pattern ( ($generated@@163 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@155) (= (type $generated@@167) $generated@@155)) true) (= ($generated@@161 $generated@@166 $generated@@167)  (and (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)) (= ($generated@@163 $generated@@166) ($generated@@163 $generated@@167)))))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@172) $generated@@68)) ($generated@@139 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@139 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 17)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@71 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@224) ($generated@@70 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@70 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@71 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@81) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@236) ($generated@@70 $generated@@4))) (= (type $generated@@238) $generated@@81)) (= (type $generated@@239) ($generated@@70 $generated@@240))) (= ($generated@@0 ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@68)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) $generated@@144) (= (type $generated@@246) $generated@@68)) (= (type $generated@@247) $generated@@68)) (= (type $generated@@248) $generated@@68)) (= (type $generated@@249) $generated@@68)) (and (and ($generated@@139 $generated@@245 ($generated@@241 $generated@@246 $generated@@247)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@143) ($generated@@242 $generated@@250 $generated@@248)) ($generated@@242 $generated@@250 $generated@@246))
 :pattern ( ($generated@@242 $generated@@250 $generated@@248))
 :pattern ( ($generated@@242 $generated@@250 $generated@@246))
))) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@143) ($generated@@242 $generated@@251 $generated@@247)) ($generated@@242 $generated@@251 $generated@@249))
 :pattern ( ($generated@@242 $generated@@251 $generated@@247))
 :pattern ( ($generated@@242 $generated@@251 $generated@@249))
)))) ($generated@@139 $generated@@245 ($generated@@241 $generated@@248 $generated@@249)))
 :pattern ( ($generated@@139 $generated@@245 ($generated@@241 $generated@@246 $generated@@247)) ($generated@@139 $generated@@245 ($generated@@241 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@254 Int) ) (!  (=> (and (<= ($generated@@253 0) $generated@@254) (< $generated@@254 18446744073709551616)) (= ($generated@@252 $generated@@254) (< $generated@@254 100)))
 :pattern ( ($generated@@252 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@155)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@68) (= (type $generated@@259) $generated@@68)) (= (type $generated@@260) $generated@@143)) (= (type $generated@@261) $generated@@143)) (= ($generated@@139 ($generated@@255 $generated@@260 $generated@@261) ($generated@@154 $generated@@258 $generated@@259))  (and ($generated@@242 $generated@@260 $generated@@258) ($generated@@242 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@139 ($generated@@255 $generated@@260 $generated@@261) ($generated@@154 $generated@@258 $generated@@259)))
)))
(assert (forall (($generated@@264 T@T) ($generated@@265 T@U) ) (! (= (type ($generated@@263 $generated@@264 $generated@@265)) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@267) $generated@@143)) (= ($generated@@262 $generated@@136 $generated@@136 $generated@@266 $generated@@142 $generated@@267) ($generated@@252 ($generated ($generated@@263 $generated@@2 $generated@@267)))))
 :pattern ( ($generated@@262 $generated@@136 $generated@@136 $generated@@266 $generated@@142 $generated@@267))
)))
(assert  (=> (<= 1 $generated@@268) (forall (($generated@@271 Int) ) (!  (=> (or ($generated@@270 $generated@@271) (and (not (= 1 $generated@@268)) (and (and (<= ($generated@@253 0) $generated@@271) (< $generated@@271 18446744073709551616)) (< $generated@@271 100)))) (= ($generated@@269 $generated@@271) (+ $generated@@271 1)))
 :pattern ( ($generated@@269 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@155) (= (type $generated@@273) $generated@@155)) (= ($generated@@161 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@161 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@68)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@277) $generated@@68)) (= ($generated@@139 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@143) ($generated@@0 ($generated@@85 $generated@@276 $generated@@278))) ($generated@@242 $generated@@278 $generated@@277))
 :pattern ( ($generated@@85 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@139 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@282) $generated@@68)) (= ($generated@@139 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@143) ($generated@@0 ($generated@@85 $generated@@281 $generated@@283))) ($generated@@242 $generated@@283 $generated@@282))
 :pattern ( ($generated@@85 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@139 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@253 $generated@@284) $generated@@284)
 :pattern ( ($generated@@253 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (= (type $generated@@289) ($generated@@80 $generated@@81 $generated@@82)) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@80 $generated@@293 $generated@@4))
 :pattern ( ($generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) $generated@@68)) (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@297) $generated@@144)) (= (type $generated@@298) $generated@@143)) (and ($generated@@290 $generated@@296) (and ($generated@@242 $generated@@298 $generated@@294) ($generated@@139 $generated@@297 ($generated@@241 $generated@@294 $generated@@295))))) (= ($generated@@291 ($generated@@141 $generated@@294 $generated@@295 $generated@@289 $generated@@297 $generated@@298) ($generated@@292 $generated@@143)) ($generated@@291 ($generated@@141 $generated@@294 $generated@@295 $generated@@296 $generated@@297 $generated@@298) ($generated@@292 $generated@@143))))
 :pattern ( ($generated@@141 $generated@@294 $generated@@295 $generated@@289 $generated@@297 $generated@@298) ($generated@@290 $generated@@296))
 :pattern ( ($generated@@141 $generated@@294 $generated@@295 $generated@@296 $generated@@297 $generated@@298))
)))
(assert  (=> (<= 1 $generated@@268) (forall (($generated@@299 Int) ) (!  (=> (or ($generated@@270 $generated@@299) (and (not (= 1 $generated@@268)) (and (and (<= ($generated@@253 0) $generated@@299) (< $generated@@299 18446744073709551616)) (< $generated@@299 100)))) (and (<= ($generated@@253 0) ($generated@@269 $generated@@299)) (< ($generated@@269 $generated@@299) 18446744073709551616)))
 :pattern ( ($generated@@269 $generated@@299))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@68) (= (type $generated@@302) $generated@@68)) (= (type $generated@@303) $generated@@143)) (= (type $generated@@304) $generated@@143)) (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@290 $generated@@305)) (= ($generated@@78 ($generated@@255 $generated@@303 $generated@@304) ($generated@@154 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@78 ($generated@@255 $generated@@303 $generated@@304) ($generated@@154 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@72)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@155) (= ($generated@@153 $generated@@308) (= ($generated@@306 $generated@@308) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@155) ($generated@@153 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@143) (= (type $generated@@311) $generated@@143)) (= $generated@@309 ($generated@@255 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@153 $generated@@309))
)))
(assert  (and (and (forall (($generated@@316 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@316)) 18)) (forall (($generated@@317 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@314 $generated@@317))
))) (forall (($generated@@318 T@T) ) (! (= (type ($generated@@312 $generated@@318)) ($generated@@314 $generated@@318))
 :pattern ( ($generated@@312 $generated@@318))
))))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@319)) 0)
 :pattern ( ($generated@@312 $generated@@319))
)))
(assert  (and (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (! (= (type ($generated@@320 $generated@@322 $generated@@323 $generated@@324 $generated@@325 $generated@@326)) $generated@@143)
 :pattern ( ($generated@@320 $generated@@322 $generated@@323 $generated@@324 $generated@@325 $generated@@326))
)) (forall (($generated@@327 T@U) ) (! (= (type ($generated@@321 $generated@@327)) $generated@@143)
 :pattern ( ($generated@@321 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@329) $generated@@143)) (= ($generated@@320 $generated@@136 $generated@@136 $generated@@328 $generated@@142 $generated@@329) ($generated@@321 ($generated@@8 ($generated@@269 ($generated ($generated@@263 $generated@@2 $generated@@329)))))))
 :pattern ( ($generated@@320 $generated@@136 $generated@@136 $generated@@328 $generated@@142 $generated@@329))
)))
(assert ($generated@@290 $generated@@289))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@68) (= (type $generated@@332) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@300 ($generated@@321 $generated@@330) $generated@@331 $generated@@332) ($generated@@78 $generated@@330 $generated@@331 $generated@@332)))
 :pattern ( ($generated@@300 ($generated@@321 $generated@@330) $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@335 T@T) ) (! (= (type ($generated@@334 $generated@@335)) ($generated@@80 $generated@@335 $generated@@2))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@83 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@80 $generated@@337 $generated@@2)) (and (= (= ($generated@@333 $generated@@336) 0) (= $generated@@336 ($generated@@334 $generated@@337))) (=> (not (= ($generated@@333 $generated@@336) 0)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) (< 0 ($generated ($generated@@85 $generated@@336 $generated@@338))))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 19)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@80 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@85 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@85 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert  (and (and (and (and (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@362 $generated@@363)) 20)) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@359 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@359 $generated@@366 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@359 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@360 (type $generated@@368))))
(= (type ($generated@@357 $generated@@368)) ($generated@@80 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@368))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= (type ($generated@@358 $generated@@370 $generated@@371)) ($generated@@359 $generated@@370 $generated@@371))
 :pattern ( ($generated@@358 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@T) ) (! (let (($generated@@374 (type $generated@@372)))
 (not ($generated@@0 ($generated@@85 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372))))
 :pattern ( (let (($generated@@374 (type $generated@@372)))
($generated@@85 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@83 (type $generated@@375))))
 (=> (and (= (type $generated@@375) ($generated@@80 $generated@@377 $generated@@4)) (= (type $generated@@376) ($generated@@80 $generated@@377 $generated@@4))) (= ($generated@@291 $generated@@375 $generated@@376) (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@377) (= ($generated@@0 ($generated@@85 $generated@@375 $generated@@378)) ($generated@@0 ($generated@@85 $generated@@376 $generated@@378))))
 :pattern ( ($generated@@85 $generated@@375 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@378))
)))))
 :pattern ( ($generated@@291 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@83 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@80 $generated@@380 $generated@@2)) (= ($generated@@169 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@85 $generated@@379 $generated@@381))) (<= ($generated ($generated@@85 $generated@@379 $generated@@381)) ($generated@@333 $generated@@379))))
 :pattern ( ($generated@@85 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@169 $generated@@379))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@389 T@T) ($generated@@390 T@T) ($generated@@391 T@T) ) (= ($generated@@1 ($generated@@383 $generated@@389 $generated@@390 $generated@@391)) 21)) (forall (($generated@@392 T@T) ($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@385 ($generated@@383 $generated@@392 $generated@@393 $generated@@394)) $generated@@392)
 :pattern ( ($generated@@383 $generated@@392 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ($generated@@397 T@T) ) (! (= ($generated@@386 ($generated@@383 $generated@@395 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@383 $generated@@395 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@T) ($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@387 ($generated@@383 $generated@@398 $generated@@399 $generated@@400)) $generated@@400)
 :pattern ( ($generated@@383 $generated@@398 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@387 (type $generated@@401))))
(= (type ($generated@@384 $generated@@401 $generated@@402 $generated@@403)) $generated@@404))
 :pattern ( ($generated@@384 $generated@@401 $generated@@402 $generated@@403))
))) (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 (type $generated@@407)))
(let (($generated@@411 (type $generated@@406)))
(= (type ($generated@@388 $generated@@405 $generated@@406 $generated@@407 $generated@@408)) ($generated@@383 $generated@@411 $generated@@410 $generated@@409)))))
 :pattern ( ($generated@@388 $generated@@405 $generated@@406 $generated@@407 $generated@@408))
))) (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@387 (type $generated@@412))))
 (=> (= (type $generated@@415) $generated@@416) (= ($generated@@384 ($generated@@388 $generated@@412 $generated@@413 $generated@@414 $generated@@415) $generated@@413 $generated@@414) $generated@@415)))
 :weight 0
))) (and (and (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (or (= $generated@@419 $generated@@421) (= ($generated@@384 ($generated@@388 $generated@@418 $generated@@419 $generated@@420 $generated@@417) $generated@@421 $generated@@422) ($generated@@384 $generated@@418 $generated@@421 $generated@@422)))
 :weight 0
)) (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (or (= $generated@@426 $generated@@428) (= ($generated@@384 ($generated@@388 $generated@@424 $generated@@425 $generated@@426 $generated@@423) $generated@@427 $generated@@428) ($generated@@384 $generated@@424 $generated@@427 $generated@@428)))
 :weight 0
))) (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (or true (= ($generated@@384 ($generated@@388 $generated@@430 $generated@@431 $generated@@432 $generated@@429) $generated@@433 $generated@@434) ($generated@@384 $generated@@430 $generated@@433 $generated@@434)))
 :weight 0
)))) (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@382 $generated@@435 $generated@@436 $generated@@437)) $generated@@144)
 :pattern ( ($generated@@382 $generated@@435 $generated@@436 $generated@@437))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@438) $generated@@68) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@441) ($generated@@383 ($generated@@80 $generated@@81 $generated@@82) $generated@@143 $generated@@143))) (= (type $generated@@442) ($generated@@383 ($generated@@80 $generated@@81 $generated@@82) $generated@@143 $generated@@4))) (= (type $generated@@443) ($generated@@383 ($generated@@80 $generated@@81 $generated@@82) $generated@@143 ($generated@@80 $generated@@143 $generated@@4)))) (= (type $generated@@444) $generated@@143)) (= ($generated@@320 $generated@@438 $generated@@439 $generated@@440 ($generated@@382 $generated@@441 $generated@@442 $generated@@443) $generated@@444) ($generated@@384 $generated@@441 $generated@@440 $generated@@444)))
 :pattern ( ($generated@@320 $generated@@438 $generated@@439 $generated@@440 ($generated@@382 $generated@@441 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@143) ($generated@@242 $generated@@445 $generated@@136)) (and (= ($generated@@321 ($generated@@263 $generated@@2 $generated@@445)) $generated@@445) ($generated@@139 ($generated@@263 $generated@@2 $generated@@445) $generated@@136)))
 :pattern ( ($generated@@242 $generated@@445 $generated@@136))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@343 (type $generated@@446))))
(let (($generated@@448 ($generated@@342 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@341 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@340 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@446) $generated@@449)))
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@339 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@343 (type $generated@@451))))
(= (type ($generated@@450 $generated@@451)) ($generated@@80 $generated@@452 $generated@@4)))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@343 (type $generated@@453))))
(let (($generated@@455 ($generated@@342 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@341 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@340 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@454) ($generated@@0 ($generated@@85 ($generated@@450 $generated@@453) $generated@@456)))
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@450 $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@361 (type $generated@@457))))
(let (($generated@@459 ($generated@@360 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@359 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@358 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@457) $generated@@460)))
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@357 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@361 (type $generated@@462))))
(= (type ($generated@@461 $generated@@462)) ($generated@@80 $generated@@463 $generated@@4)))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@361 (type $generated@@464))))
(let (($generated@@466 ($generated@@360 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@359 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@358 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@465) ($generated@@0 ($generated@@85 ($generated@@461 $generated@@464) $generated@@467)))
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@461 $generated@@464))
)))
(assert  (=> (<= 1 $generated@@268) (forall (($generated@@468 Int) ) (!  (=> (or ($generated@@270 ($generated@@253 $generated@@468)) (and (not (= 1 $generated@@268)) (and (and (<= ($generated@@253 0) $generated@@468) (< $generated@@468 18446744073709551616)) ($generated@@0 ($generated@@285 ($generated@@11 (< $generated@@468 100))))))) (= ($generated@@269 ($generated@@253 $generated@@468)) ($generated@@253 (+ $generated@@468 1))))
 :weight 3
 :pattern ( ($generated@@269 ($generated@@253 $generated@@468)))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@470) $generated@@68)) (= ($generated@@139 $generated@@469 ($generated@@168 $generated@@470)) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@469 $generated@@471)))) ($generated@@242 $generated@@471 $generated@@470))
 :pattern ( ($generated@@85 $generated@@469 $generated@@471))
))))
 :pattern ( ($generated@@139 $generated@@469 ($generated@@168 $generated@@470)))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@472) $generated@@144) (= (type $generated@@473) $generated@@68)) (= (type $generated@@474) $generated@@68)) (= (type $generated@@475) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@290 $generated@@475) ($generated@@78 $generated@@472 ($generated@@241 $generated@@473 $generated@@474) $generated@@475))) (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@143) (=> (and ($generated@@300 $generated@@476 $generated@@473 $generated@@475) ($generated@@262 $generated@@473 $generated@@474 $generated@@475 $generated@@472 $generated@@476)) ($generated@@300 ($generated@@320 $generated@@473 $generated@@474 $generated@@475 $generated@@472 $generated@@476) $generated@@474 $generated@@475)))
 :pattern ( ($generated@@320 $generated@@473 $generated@@474 $generated@@475 $generated@@472 $generated@@476))
)))
 :pattern ( ($generated@@78 $generated@@472 ($generated@@241 $generated@@473 $generated@@474) $generated@@475))
)))
(assert (= (type $generated@@477) $generated@@81))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@478) $generated@@144) (= (type $generated@@479) $generated@@68)) (= (type $generated@@480) $generated@@68)) (= (type $generated@@481) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@290 $generated@@481)) (= ($generated@@78 $generated@@478 ($generated@@241 $generated@@479 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@143) (=> (and (and ($generated@@242 $generated@@482 $generated@@479) ($generated@@300 $generated@@482 $generated@@479 $generated@@481)) ($generated@@262 $generated@@479 $generated@@480 $generated@@481 $generated@@478 $generated@@482)) (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@81) (=> (and (not (= $generated@@483 $generated@@477)) ($generated@@0 ($generated@@85 ($generated@@141 $generated@@479 $generated@@480 $generated@@481 $generated@@478 $generated@@482) ($generated@@321 $generated@@483)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@481 $generated@@483) $generated@@60))))
 :pattern ( ($generated@@85 ($generated@@141 $generated@@479 $generated@@480 $generated@@481 $generated@@478 $generated@@482) ($generated@@321 $generated@@483)))
))))
 :pattern ( ($generated@@320 $generated@@479 $generated@@480 $generated@@481 $generated@@478 $generated@@482))
 :pattern ( ($generated@@141 $generated@@479 $generated@@480 $generated@@481 $generated@@478 $generated@@482))
))))
 :pattern ( ($generated@@78 $generated@@478 ($generated@@241 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@485) $generated@@68)) (= (type $generated@@486) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@484 ($generated@@274 $generated@@485) $generated@@486) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@143) ($generated@@0 ($generated@@85 $generated@@484 $generated@@487))) ($generated@@300 $generated@@487 $generated@@485 $generated@@486))
 :pattern ( ($generated@@85 $generated@@484 $generated@@487))
))))
 :pattern ( ($generated@@78 $generated@@484 ($generated@@274 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@489) $generated@@68)) (= (type $generated@@490) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@488 ($generated@@279 $generated@@489) $generated@@490) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@143) ($generated@@0 ($generated@@85 $generated@@488 $generated@@491))) ($generated@@300 $generated@@491 $generated@@489 $generated@@490))
 :pattern ( ($generated@@85 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@78 $generated@@488 ($generated@@279 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
(= ($generated ($generated@@85 ($generated@@334 $generated@@493) $generated@@492)) 0))
 :pattern ( (let (($generated@@493 (type $generated@@492)))
($generated@@85 ($generated@@334 $generated@@493) $generated@@492)))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@343 (type $generated@@497))))
(let (($generated@@499 ($generated@@342 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497)) ($generated@@80 $generated@@499 $generated@@498))))
 :pattern ( ($generated@@495 $generated@@497))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) ($generated@@341 $generated@@143 $generated@@143)) (= (type $generated@@501) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@494 $generated@@500) $generated@@501))  (and ($generated@@0 ($generated@@85 ($generated@@339 $generated@@500) ($generated@@162 ($generated@@263 $generated@@155 $generated@@501)))) (= ($generated@@85 ($generated@@495 $generated@@500) ($generated@@162 ($generated@@263 $generated@@155 $generated@@501))) ($generated@@163 ($generated@@263 $generated@@155 $generated@@501))))))
 :pattern ( ($generated@@85 ($generated@@494 $generated@@500) $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@361 (type $generated@@505))))
(let (($generated@@507 ($generated@@360 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505)) ($generated@@80 $generated@@507 $generated@@506))))
 :pattern ( ($generated@@503 $generated@@505))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) ($generated@@359 $generated@@143 $generated@@143)) (= (type $generated@@509) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@502 $generated@@508) $generated@@509))  (and ($generated@@0 ($generated@@85 ($generated@@357 $generated@@508) ($generated@@162 ($generated@@263 $generated@@155 $generated@@509)))) (= ($generated@@85 ($generated@@503 $generated@@508) ($generated@@162 ($generated@@263 $generated@@155 $generated@@509))) ($generated@@163 ($generated@@263 $generated@@155 $generated@@509))))))
 :pattern ( ($generated@@85 ($generated@@502 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(let (($generated@@513 ($generated@@342 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@341 $generated@@513 $generated@@512)) (= ($generated@@0 ($generated@@85 ($generated@@450 $generated@@510) $generated@@511)) (exists (($generated@@514 T@U) ) (!  (and (= (type $generated@@514) $generated@@513) (and ($generated@@0 ($generated@@85 ($generated@@339 $generated@@510) $generated@@514)) (= $generated@@511 ($generated@@85 ($generated@@495 $generated@@510) $generated@@514))))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@510) $generated@@514))
 :pattern ( ($generated@@85 ($generated@@495 $generated@@510) $generated@@514))
))))))
 :pattern ( ($generated@@85 ($generated@@450 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(let (($generated@@518 ($generated@@360 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@359 $generated@@518 $generated@@517)) (= ($generated@@0 ($generated@@85 ($generated@@461 $generated@@515) $generated@@516)) (exists (($generated@@519 T@U) ) (!  (and (= (type $generated@@519) $generated@@518) (and ($generated@@0 ($generated@@85 ($generated@@357 $generated@@515) $generated@@519)) (= $generated@@516 ($generated@@85 ($generated@@503 $generated@@515) $generated@@519))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@515) $generated@@519))
 :pattern ( ($generated@@85 ($generated@@503 $generated@@515) $generated@@519))
))))))
 :pattern ( ($generated@@85 ($generated@@461 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@523) ($generated@@383 ($generated@@80 $generated@@81 $generated@@82) $generated@@143 $generated@@143))) (= (type $generated@@524) ($generated@@383 ($generated@@80 $generated@@81 $generated@@82) $generated@@143 $generated@@4))) (= (type $generated@@525) ($generated@@383 ($generated@@80 $generated@@81 $generated@@82) $generated@@143 ($generated@@80 $generated@@143 $generated@@4)))) (= (type $generated@@526) $generated@@143)) (= (type $generated@@527) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@141 $generated@@520 $generated@@521 $generated@@522 ($generated@@382 $generated@@523 $generated@@524 $generated@@525) $generated@@526) $generated@@527)) ($generated@@0 ($generated@@85 ($generated@@384 $generated@@525 $generated@@522 $generated@@526) $generated@@527))))
 :pattern ( ($generated@@85 ($generated@@141 $generated@@520 $generated@@521 $generated@@522 ($generated@@382 $generated@@523 $generated@@524 $generated@@525) $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (! (= (type ($generated@@528 $generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) ($generated@@341 $generated@@143 $generated@@143)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@531 ($generated@@528 $generated@@532 $generated@@533) $generated@@534) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@531) $generated@@535))) (and ($generated@@300 ($generated@@85 ($generated@@495 $generated@@531) $generated@@535) $generated@@533 $generated@@534) ($generated@@300 $generated@@535 $generated@@532 $generated@@534)))
 :pattern ( ($generated@@85 ($generated@@495 $generated@@531) $generated@@535))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@531) $generated@@535))
))))
 :pattern ( ($generated@@78 $generated@@531 ($generated@@528 $generated@@532 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@536 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) ($generated@@359 $generated@@143 $generated@@143)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@539 ($generated@@536 $generated@@540 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@539) $generated@@543))) (and ($generated@@300 ($generated@@85 ($generated@@503 $generated@@539) $generated@@543) $generated@@541 $generated@@542) ($generated@@300 $generated@@543 $generated@@540 $generated@@542)))
 :pattern ( ($generated@@85 ($generated@@503 $generated@@539) $generated@@543))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@539) $generated@@543))
))))
 :pattern ( ($generated@@78 $generated@@539 ($generated@@536 $generated@@540 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@83 (type $generated@@544))))
 (=> (and (and (= (type $generated@@544) ($generated@@80 $generated@@546 $generated@@4)) (= (type $generated@@545) ($generated@@80 $generated@@546 $generated@@4))) ($generated@@291 $generated@@544 $generated@@545)) (= $generated@@544 $generated@@545)))
 :pattern ( ($generated@@291 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@144) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) $generated@@68)) (= ($generated@@139 $generated@@547 ($generated@@241 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@551) $generated@@143)) (=> (and (and ($generated@@290 $generated@@550) ($generated@@242 $generated@@551 $generated@@548)) ($generated@@262 $generated@@548 $generated@@549 $generated@@550 $generated@@547 $generated@@551)) ($generated@@242 ($generated@@320 $generated@@548 $generated@@549 $generated@@550 $generated@@547 $generated@@551) $generated@@549)))
 :pattern ( ($generated@@320 $generated@@548 $generated@@549 $generated@@550 $generated@@547 $generated@@551))
))))
 :pattern ( ($generated@@139 $generated@@547 ($generated@@241 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@553 T@T) ) (! (= (type ($generated@@552 $generated@@553)) ($generated@@80 $generated@@553 $generated@@4))
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@361 (type $generated@@554))))
(let (($generated@@556 ($generated@@360 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@359 $generated@@556 $generated@@555)) (= (= $generated@@554 ($generated@@358 $generated@@556 $generated@@555)) (= ($generated@@357 $generated@@554) ($generated@@552 $generated@@556))))))
 :pattern ( ($generated@@357 $generated@@554))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@361 (type $generated@@557))))
(let (($generated@@559 ($generated@@360 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@359 $generated@@559 $generated@@558)) (= (= $generated@@557 ($generated@@358 $generated@@559 $generated@@558)) (= ($generated@@461 $generated@@557) ($generated@@552 $generated@@558))))))
 :pattern ( ($generated@@461 $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@361 (type $generated@@560))))
(let (($generated@@562 ($generated@@360 (type $generated@@560))))
 (=> (= (type $generated@@560) ($generated@@359 $generated@@562 $generated@@561)) (= (= $generated@@560 ($generated@@358 $generated@@562 $generated@@561)) (= ($generated@@502 $generated@@560) ($generated@@552 $generated@@143))))))
 :pattern ( ($generated@@502 $generated@@560))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@343 (type $generated@@563))))
(let (($generated@@565 ($generated@@342 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@341 $generated@@565 $generated@@564)) (or (= $generated@@563 ($generated@@340 $generated@@565 $generated@@564)) (exists (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (and (and (= (type $generated@@566) $generated@@143) (= (type $generated@@567) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@494 $generated@@563) ($generated@@321 ($generated@@255 $generated@@566 $generated@@567)))))
 :no-pattern (type $generated@@566)
 :no-pattern (type $generated@@567)
 :no-pattern ($generated $generated@@566)
 :no-pattern ($generated@@0 $generated@@566)
 :no-pattern ($generated $generated@@567)
 :no-pattern ($generated@@0 $generated@@567)
))))))
 :pattern ( ($generated@@494 $generated@@563))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@361 (type $generated@@568))))
(let (($generated@@570 ($generated@@360 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@359 $generated@@570 $generated@@569)) (or (= $generated@@568 ($generated@@358 $generated@@570 $generated@@569)) (exists (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (and (and (= (type $generated@@571) $generated@@143) (= (type $generated@@572) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@502 $generated@@568) ($generated@@321 ($generated@@255 $generated@@571 $generated@@572)))))
 :no-pattern (type $generated@@571)
 :no-pattern (type $generated@@572)
 :no-pattern ($generated $generated@@571)
 :no-pattern ($generated@@0 $generated@@571)
 :no-pattern ($generated $generated@@572)
 :no-pattern ($generated@@0 $generated@@572)
))))))
 :pattern ( ($generated@@502 $generated@@568))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@143) ($generated@@242 $generated@@573 $generated@@46)) (and (= ($generated@@321 ($generated@@263 $generated@@2 $generated@@573)) $generated@@573) ($generated@@139 ($generated@@263 $generated@@2 $generated@@573) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@573 $generated@@46))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@143) ($generated@@242 $generated@@574 $generated@@47)) (and (= ($generated@@321 ($generated@@263 $generated@@3 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@263 $generated@@3 $generated@@574) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@574 $generated@@47))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@143) ($generated@@242 $generated@@575 $generated@@44)) (and (= ($generated@@321 ($generated@@263 $generated@@4 $generated@@575)) $generated@@575) ($generated@@139 ($generated@@263 $generated@@4 $generated@@575) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@575 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@576) 22))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@143) ($generated@@242 $generated@@577 $generated@@45)) (and (= ($generated@@321 ($generated@@263 $generated@@576 $generated@@577)) $generated@@577) ($generated@@139 ($generated@@263 $generated@@576 $generated@@577) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@68) (= ($generated@@242 ($generated@@321 $generated@@578) $generated@@579) ($generated@@139 $generated@@578 $generated@@579)))
 :pattern ( ($generated@@242 ($generated@@321 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@583) ($generated@@383 ($generated@@80 $generated@@81 $generated@@82) $generated@@143 $generated@@143))) (= (type $generated@@584) ($generated@@383 ($generated@@80 $generated@@81 $generated@@82) $generated@@143 $generated@@4))) (= (type $generated@@585) ($generated@@383 ($generated@@80 $generated@@81 $generated@@82) $generated@@143 ($generated@@80 $generated@@143 $generated@@4)))) (= (type $generated@@586) $generated@@143)) ($generated@@0 ($generated@@384 $generated@@584 $generated@@582 $generated@@586))) ($generated@@262 $generated@@580 $generated@@581 $generated@@582 ($generated@@382 $generated@@583 $generated@@584 $generated@@585) $generated@@586))
 :pattern ( ($generated@@262 $generated@@580 $generated@@581 $generated@@582 ($generated@@382 $generated@@583 $generated@@584 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@83 (type $generated@@587))))
 (=> (= (type $generated@@587) ($generated@@80 $generated@@588 $generated@@2)) (<= 0 ($generated@@333 $generated@@587))))
 :pattern ( ($generated@@333 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@315 (type $generated@@589))))
 (=> (= (type $generated@@589) ($generated@@314 $generated@@590)) (<= 0 ($generated@@313 $generated@@589))))
 :pattern ( ($generated@@313 $generated@@589))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@68)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@68) (= (type $generated@@594) $generated@@68)) (= ($generated@@591 ($generated@@528 $generated@@593 $generated@@594)) $generated@@593))
 :pattern ( ($generated@@528 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@68)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@68) (= (type $generated@@598) $generated@@68)) (= ($generated@@595 ($generated@@528 $generated@@597 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@528 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@68) (= (type $generated@@600) $generated@@68)) (= ($generated@@76 ($generated@@528 $generated@@599 $generated@@600)) $generated@@58))
 :pattern ( ($generated@@528 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@68)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@68) (= (type $generated@@604) $generated@@68)) (= ($generated@@601 ($generated@@536 $generated@@603 $generated@@604)) $generated@@603))
 :pattern ( ($generated@@536 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@68)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@68)) (= ($generated@@605 ($generated@@536 $generated@@607 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@536 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@68) (= (type $generated@@610) $generated@@68)) (= ($generated@@76 ($generated@@536 $generated@@609 $generated@@610)) $generated@@59))
 :pattern ( ($generated@@536 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@68)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@68)) (= ($generated@@611 ($generated@@241 $generated@@613 $generated@@614)) $generated@@613))
 :pattern ( ($generated@@241 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@68)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@68) (= (type $generated@@618) $generated@@68)) (= ($generated@@615 ($generated@@241 $generated@@617 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@241 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@143) (= (type $generated@@620) $generated@@143)) (= ($generated@@306 ($generated@@255 $generated@@619 $generated@@620)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@68)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@68) (= (type $generated@@624) $generated@@68)) (= ($generated@@621 ($generated@@154 $generated@@623 $generated@@624)) $generated@@623))
 :pattern ( ($generated@@154 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ) (! (= (type ($generated@@625 $generated@@626)) $generated@@68)
 :pattern ( ($generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@68) (= (type $generated@@628) $generated@@68)) (= ($generated@@625 ($generated@@154 $generated@@627 $generated@@628)) $generated@@628))
 :pattern ( ($generated@@154 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@143) (= (type $generated@@630) $generated@@143)) (= ($generated@@162 ($generated@@255 $generated@@629 $generated@@630)) $generated@@629))
 :pattern ( ($generated@@255 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@143) (= (type $generated@@632) $generated@@143)) (= ($generated@@163 ($generated@@255 $generated@@631 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@255 $generated@@631 $generated@@632))
)))
(assert  (and (forall (($generated@@635 T@U) ) (! (= (type ($generated@@633 $generated@@635)) $generated@@68)
 :pattern ( ($generated@@633 $generated@@635))
)) (forall (($generated@@636 T@U) ($generated@@637 Int) ) (! (let (($generated@@638 ($generated@@315 (type $generated@@636))))
(= (type ($generated@@634 $generated@@636 $generated@@637)) $generated@@638))
 :pattern ( ($generated@@634 $generated@@636 $generated@@637))
))))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@314 $generated@@143)) (= (type $generated@@640) $generated@@68)) (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@639 ($generated@@633 $generated@@640) $generated@@641) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@313 $generated@@639))) ($generated@@300 ($generated@@634 $generated@@639 $generated@@642) $generated@@640 $generated@@641))
 :pattern ( ($generated@@634 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@78 $generated@@639 ($generated@@633 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@644 Int) ) (! (= ($generated@@643 ($generated@@79 $generated@@644)) $generated@@644)
 :pattern ( ($generated@@79 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ) (! (= (type ($generated@@645 $generated@@646)) $generated@@68)
 :pattern ( ($generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@68) (= ($generated@@645 ($generated@@274 $generated@@647)) $generated@@647))
 :pattern ( ($generated@@274 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@68) (= ($generated@@76 ($generated@@274 $generated@@648)) $generated@@54))
 :pattern ( ($generated@@274 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (! (= (type ($generated@@649 $generated@@650)) $generated@@68)
 :pattern ( ($generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@68) (= ($generated@@649 ($generated@@279 $generated@@651)) $generated@@651))
 :pattern ( ($generated@@279 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@68) (= ($generated@@76 ($generated@@279 $generated@@652)) $generated@@55))
 :pattern ( ($generated@@279 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ) (! (= (type ($generated@@653 $generated@@654)) $generated@@68)
 :pattern ( ($generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@68) (= ($generated@@653 ($generated@@168 $generated@@655)) $generated@@655))
 :pattern ( ($generated@@168 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@68) (= ($generated@@76 ($generated@@168 $generated@@656)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ) (! (= (type ($generated@@657 $generated@@658)) $generated@@68)
 :pattern ( ($generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@68) (= ($generated@@657 ($generated@@633 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@633 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@68) (= ($generated@@76 ($generated@@633 $generated@@660)) $generated@@57))
 :pattern ( ($generated@@633 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 (type $generated@@661)))
(= ($generated@@263 $generated@@662 ($generated@@321 $generated@@661)) $generated@@661))
 :pattern ( ($generated@@321 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@341 $generated@@143 $generated@@143)) (= (type $generated@@664) $generated@@68)) (= (type $generated@@665) $generated@@68)) (= ($generated@@139 $generated@@663 ($generated@@528 $generated@@664 $generated@@665)) (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@663) $generated@@666))) (and ($generated@@242 ($generated@@85 ($generated@@495 $generated@@663) $generated@@666) $generated@@665) ($generated@@242 $generated@@666 $generated@@664)))
 :pattern ( ($generated@@85 ($generated@@495 $generated@@663) $generated@@666))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@663) $generated@@666))
))))
 :pattern ( ($generated@@139 $generated@@663 ($generated@@528 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@667) ($generated@@359 $generated@@143 $generated@@143)) (= (type $generated@@668) $generated@@68)) (= (type $generated@@669) $generated@@68)) (= ($generated@@139 $generated@@667 ($generated@@536 $generated@@668 $generated@@669)) (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@667) $generated@@670))) (and ($generated@@242 ($generated@@85 ($generated@@503 $generated@@667) $generated@@670) $generated@@669) ($generated@@242 $generated@@670 $generated@@668)))
 :pattern ( ($generated@@85 ($generated@@503 $generated@@667) $generated@@670))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@667) $generated@@670))
))))
 :pattern ( ($generated@@139 $generated@@667 ($generated@@536 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@143) (= (type $generated@@674) $generated@@143)) (< ($generated@@671 $generated@@673) ($generated@@672 ($generated@@255 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@255 $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@143) (= (type $generated@@676) $generated@@143)) (< ($generated@@671 $generated@@676) ($generated@@672 ($generated@@255 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@255 $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@143) (= (type $generated@@678) $generated@@68)) (= (type $generated@@679) $generated@@68)) ($generated@@242 $generated@@677 ($generated@@528 $generated@@678 $generated@@679))) (and (= ($generated@@321 ($generated@@263 ($generated@@341 $generated@@143 $generated@@143) $generated@@677)) $generated@@677) ($generated@@139 ($generated@@263 ($generated@@341 $generated@@143 $generated@@143) $generated@@677) ($generated@@528 $generated@@678 $generated@@679))))
 :pattern ( ($generated@@242 $generated@@677 ($generated@@528 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) $generated@@143) (= (type $generated@@681) $generated@@68)) (= (type $generated@@682) $generated@@68)) ($generated@@242 $generated@@680 ($generated@@536 $generated@@681 $generated@@682))) (and (= ($generated@@321 ($generated@@263 ($generated@@359 $generated@@143 $generated@@143) $generated@@680)) $generated@@680) ($generated@@139 ($generated@@263 ($generated@@359 $generated@@143 $generated@@143) $generated@@680) ($generated@@536 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@242 $generated@@680 ($generated@@536 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@68) (= (type $generated@@684) $generated@@68)) (= (type $generated@@685) $generated@@143)) ($generated@@242 $generated@@685 ($generated@@241 $generated@@683 $generated@@684))) (and (= ($generated@@321 ($generated@@263 $generated@@144 $generated@@685)) $generated@@685) ($generated@@139 ($generated@@263 $generated@@144 $generated@@685) ($generated@@241 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@242 $generated@@685 ($generated@@241 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@68) (= (type $generated@@687) $generated@@68)) (= (type $generated@@688) $generated@@143)) ($generated@@242 $generated@@688 ($generated@@154 $generated@@686 $generated@@687))) (and (= ($generated@@321 ($generated@@263 $generated@@155 $generated@@688)) $generated@@688) ($generated@@139 ($generated@@263 $generated@@155 $generated@@688) ($generated@@154 $generated@@686 $generated@@687))))
 :pattern ( ($generated@@242 $generated@@688 ($generated@@154 $generated@@686 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ) (! (let (($generated@@690 (type $generated@@689)))
 (not ($generated@@0 ($generated@@85 ($generated@@292 $generated@@690) $generated@@689))))
 :pattern ( (let (($generated@@690 (type $generated@@689)))
($generated@@85 ($generated@@292 $generated@@690) $generated@@689)))
)))
(assert (forall (($generated@@691 T@U) ) (! (let (($generated@@692 (type $generated@@691)))
 (not ($generated@@0 ($generated@@85 ($generated@@552 $generated@@692) $generated@@691))))
 :pattern ( (let (($generated@@692 (type $generated@@691)))
($generated@@85 ($generated@@552 $generated@@692) $generated@@691)))
)))
(assert (forall (($generated@@694 T@U) ) (! (= (type ($generated@@693 $generated@@694)) $generated@@73)
 :pattern ( ($generated@@693 $generated@@694))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) $generated@@68) (= (type $generated@@696) $generated@@68)) (and (= ($generated@@76 ($generated@@241 $generated@@695 $generated@@696)) $generated@@61) (= ($generated@@693 ($generated@@241 $generated@@695 $generated@@696)) $generated@@65)))
 :pattern ( ($generated@@241 $generated@@695 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@68) (= (type $generated@@698) $generated@@68)) (and (= ($generated@@76 ($generated@@154 $generated@@697 $generated@@698)) $generated@@63) (= ($generated@@693 ($generated@@154 $generated@@697 $generated@@698)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@697 $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@699) $generated@@68) (= (type $generated@@700) $generated@@68)) (= (type $generated@@701) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@702) $generated@@144)) (= (type $generated@@703) $generated@@143)) (and (and ($generated@@290 $generated@@701) (and ($generated@@242 $generated@@703 $generated@@699) ($generated@@139 $generated@@702 ($generated@@241 $generated@@699 $generated@@700)))) ($generated@@291 ($generated@@141 $generated@@699 $generated@@700 $generated@@289 $generated@@702 $generated@@703) ($generated@@292 $generated@@143)))) (= ($generated@@262 $generated@@699 $generated@@700 $generated@@289 $generated@@702 $generated@@703) ($generated@@262 $generated@@699 $generated@@700 $generated@@701 $generated@@702 $generated@@703)))
 :pattern ( ($generated@@262 $generated@@699 $generated@@700 $generated@@289 $generated@@702 $generated@@703) ($generated@@290 $generated@@701))
 :pattern ( ($generated@@262 $generated@@699 $generated@@700 $generated@@701 $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@155) (= ($generated@@671 ($generated@@321 $generated@@704)) ($generated@@672 $generated@@704)))
 :pattern ( ($generated@@671 ($generated@@321 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 Int) ) (!  (=> (= (type $generated@@705) ($generated@@80 $generated@@81 $generated@@82)) (= ($generated@@269 $generated@@706) ($generated ($generated@@263 $generated@@2 ($generated@@320 $generated@@136 $generated@@136 $generated@@705 $generated@@142 ($generated@@321 ($generated@@8 $generated@@706)))))))
 :pattern ( ($generated@@269 $generated@@706) ($generated@@290 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@143) ($generated@@242 $generated@@707 ($generated@@79 0))) (and (= ($generated@@321 ($generated@@263 $generated@@2 $generated@@707)) $generated@@707) ($generated@@139 ($generated@@263 ($generated@@80 $generated@@143 $generated@@4) $generated@@707) ($generated@@79 0))))
 :pattern ( ($generated@@242 $generated@@707 ($generated@@79 0)))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (= (type $generated@@708) $generated@@143) (= (type $generated@@709) $generated@@68)) ($generated@@242 $generated@@708 ($generated@@274 $generated@@709))) (and (= ($generated@@321 ($generated@@263 ($generated@@80 $generated@@143 $generated@@4) $generated@@708)) $generated@@708) ($generated@@139 ($generated@@263 ($generated@@80 $generated@@143 $generated@@4) $generated@@708) ($generated@@274 $generated@@709))))
 :pattern ( ($generated@@242 $generated@@708 ($generated@@274 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (= (type $generated@@710) $generated@@143) (= (type $generated@@711) $generated@@68)) ($generated@@242 $generated@@710 ($generated@@279 $generated@@711))) (and (= ($generated@@321 ($generated@@263 ($generated@@80 $generated@@143 $generated@@4) $generated@@710)) $generated@@710) ($generated@@139 ($generated@@263 ($generated@@80 $generated@@143 $generated@@4) $generated@@710) ($generated@@279 $generated@@711))))
 :pattern ( ($generated@@242 $generated@@710 ($generated@@279 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (= (type $generated@@712) $generated@@143) (= (type $generated@@713) $generated@@68)) ($generated@@242 $generated@@712 ($generated@@168 $generated@@713))) (and (= ($generated@@321 ($generated@@263 ($generated@@80 $generated@@143 $generated@@2) $generated@@712)) $generated@@712) ($generated@@139 ($generated@@263 ($generated@@80 $generated@@143 $generated@@2) $generated@@712) ($generated@@168 $generated@@713))))
 :pattern ( ($generated@@242 $generated@@712 ($generated@@168 $generated@@713)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@714) $generated@@143) (= (type $generated@@715) $generated@@68)) ($generated@@242 $generated@@714 ($generated@@633 $generated@@715))) (and (= ($generated@@321 ($generated@@263 ($generated@@314 $generated@@143) $generated@@714)) $generated@@714) ($generated@@139 ($generated@@263 ($generated@@314 $generated@@143) $generated@@714) ($generated@@633 $generated@@715))))
 :pattern ( ($generated@@242 $generated@@714 ($generated@@633 $generated@@715)))
)))
(assert (= ($generated@@76 $generated@@136) $generated@@64))
(assert (= ($generated@@693 $generated@@136) $generated@@67))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@716) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@717) $generated@@68)) (= (type $generated@@718) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@716 ($generated@@168 $generated@@717) $generated@@718) (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@716 $generated@@719)))) ($generated@@300 $generated@@719 $generated@@717 $generated@@718))
 :pattern ( ($generated@@85 $generated@@716 $generated@@719))
))))
 :pattern ( ($generated@@78 $generated@@716 ($generated@@168 $generated@@717) $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) $generated@@155) (= (type $generated@@721) $generated@@68)) (= (type $generated@@722) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@290 $generated@@722) (and ($generated@@153 $generated@@720) (exists (($generated@@723 T@U) ) (!  (and (= (type $generated@@723) $generated@@68) ($generated@@78 $generated@@720 ($generated@@154 $generated@@721 $generated@@723) $generated@@722))
 :pattern ( ($generated@@78 $generated@@720 ($generated@@154 $generated@@721 $generated@@723) $generated@@722))
))))) ($generated@@300 ($generated@@162 $generated@@720) $generated@@721 $generated@@722))
 :pattern ( ($generated@@300 ($generated@@162 $generated@@720) $generated@@721 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (and (= (type $generated@@724) $generated@@155) (= (type $generated@@725) $generated@@68)) (= (type $generated@@726) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@290 $generated@@726) (and ($generated@@153 $generated@@724) (exists (($generated@@727 T@U) ) (!  (and (= (type $generated@@727) $generated@@68) ($generated@@78 $generated@@724 ($generated@@154 $generated@@727 $generated@@725) $generated@@726))
 :pattern ( ($generated@@78 $generated@@724 ($generated@@154 $generated@@727 $generated@@725) $generated@@726))
))))) ($generated@@300 ($generated@@163 $generated@@724) $generated@@725 $generated@@726))
 :pattern ( ($generated@@300 ($generated@@163 $generated@@724) $generated@@725 $generated@@726))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@2) (= ($generated@@139 $generated@@728 $generated@@136)  (and (<= ($generated@@253 0) ($generated $generated@@728)) (< ($generated $generated@@728) 18446744073709551616))))
 :pattern ( ($generated@@139 $generated@@728 $generated@@136))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@729) $generated@@143) (= (type $generated@@730) $generated@@143)) (= ($generated@@255 ($generated@@285 $generated@@729) ($generated@@285 $generated@@730)) ($generated@@285 ($generated@@255 $generated@@729 $generated@@730))))
 :pattern ( ($generated@@255 ($generated@@285 $generated@@729) ($generated@@285 $generated@@730)))
)))
(assert (forall (($generated@@731 Int) ) (! (= ($generated@@321 ($generated@@8 ($generated@@253 $generated@@731))) ($generated@@285 ($generated@@321 ($generated@@8 $generated@@731))))
 :pattern ( ($generated@@321 ($generated@@8 ($generated@@253 $generated@@731))))
)))
(assert (forall (($generated@@732 T@U) ) (! (= ($generated@@321 ($generated@@285 $generated@@732)) ($generated@@285 ($generated@@321 $generated@@732)))
 :pattern ( ($generated@@321 ($generated@@285 $generated@@732)))
)))
(assert (forall (($generated@@733 T@U) ) (! (let (($generated@@734 ($generated@@315 (type $generated@@733))))
 (=> (and (= (type $generated@@733) ($generated@@314 $generated@@734)) (= ($generated@@313 $generated@@733) 0)) (= $generated@@733 ($generated@@312 $generated@@734))))
 :pattern ( ($generated@@313 $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ) (! (let (($generated@@738 (type $generated@@736)))
 (=> (and (and (= (type $generated@@735) ($generated@@80 $generated@@738 $generated@@2)) (= (type $generated@@737) $generated@@2)) (<= 0 ($generated $generated@@737))) (= ($generated@@333 ($generated@@86 $generated@@735 $generated@@736 $generated@@737)) (+ (- ($generated@@333 $generated@@735) ($generated ($generated@@85 $generated@@735 $generated@@736))) ($generated $generated@@737)))))
 :pattern ( ($generated@@333 ($generated@@86 $generated@@735 $generated@@736 $generated@@737)))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@739) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@740) $generated@@2)) ($generated@@78 $generated@@740 $generated@@46 $generated@@739))
 :pattern ( ($generated@@78 $generated@@740 $generated@@46 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@741) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@742) $generated@@3)) ($generated@@78 $generated@@742 $generated@@47 $generated@@741))
 :pattern ( ($generated@@78 $generated@@742 $generated@@47 $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@743) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@744) $generated@@4)) ($generated@@78 $generated@@744 $generated@@44 $generated@@743))
 :pattern ( ($generated@@78 $generated@@744 $generated@@44 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (= (type $generated@@745) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@746) $generated@@576)) ($generated@@78 $generated@@746 $generated@@45 $generated@@745))
 :pattern ( ($generated@@78 $generated@@746 $generated@@45 $generated@@745))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@747) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@748) $generated@@143)) ($generated@@78 $generated@@748 $generated@@48 $generated@@747))
 :pattern ( ($generated@@78 $generated@@748 $generated@@48 $generated@@747))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (= (type $generated@@749) ($generated@@314 $generated@@143)) (= (type $generated@@750) $generated@@68)) (= ($generated@@139 $generated@@749 ($generated@@633 $generated@@750)) (forall (($generated@@751 Int) ) (!  (=> (and (<= 0 $generated@@751) (< $generated@@751 ($generated@@313 $generated@@749))) ($generated@@242 ($generated@@634 $generated@@749 $generated@@751) $generated@@750))
 :pattern ( ($generated@@634 $generated@@749 $generated@@751))
))))
 :pattern ( ($generated@@139 $generated@@749 ($generated@@633 $generated@@750)))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 Int) ) (!  (=> (= (type $generated@@753) ($generated@@314 $generated@@143)) (=> (and (<= 0 $generated@@754) (< $generated@@754 ($generated@@313 $generated@@753))) (< ($generated@@672 ($generated@@263 $generated@@155 ($generated@@634 $generated@@753 $generated@@754))) ($generated@@752 $generated@@753))))
 :pattern ( ($generated@@672 ($generated@@263 $generated@@155 ($generated@@634 $generated@@753 $generated@@754))))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (and (and (= (type $generated@@755) ($generated@@341 $generated@@143 $generated@@143)) (= (type $generated@@756) $generated@@68)) (= (type $generated@@757) $generated@@68)) ($generated@@139 $generated@@755 ($generated@@528 $generated@@756 $generated@@757))) (and (and ($generated@@139 ($generated@@339 $generated@@755) ($generated@@274 $generated@@756)) ($generated@@139 ($generated@@450 $generated@@755) ($generated@@274 $generated@@757))) ($generated@@139 ($generated@@494 $generated@@755) ($generated@@274 ($generated@@154 $generated@@756 $generated@@757)))))
 :pattern ( ($generated@@139 $generated@@755 ($generated@@528 $generated@@756 $generated@@757)))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (and (and (= (type $generated@@758) ($generated@@359 $generated@@143 $generated@@143)) (= (type $generated@@759) $generated@@68)) (= (type $generated@@760) $generated@@68)) ($generated@@139 $generated@@758 ($generated@@536 $generated@@759 $generated@@760))) (and (and ($generated@@139 ($generated@@357 $generated@@758) ($generated@@279 $generated@@759)) ($generated@@139 ($generated@@461 $generated@@758) ($generated@@279 $generated@@760))) ($generated@@139 ($generated@@502 $generated@@758) ($generated@@279 ($generated@@154 $generated@@759 $generated@@760)))))
 :pattern ( ($generated@@139 $generated@@758 ($generated@@536 $generated@@759 $generated@@760)))
)))
(assert (forall (($generated@@761 T@U) ) (!  (=> (= (type $generated@@761) $generated@@2) ($generated@@139 $generated@@761 $generated@@46))
 :pattern ( ($generated@@139 $generated@@761 $generated@@46))
)))
(assert (forall (($generated@@762 T@U) ) (!  (=> (= (type $generated@@762) $generated@@3) ($generated@@139 $generated@@762 $generated@@47))
 :pattern ( ($generated@@139 $generated@@762 $generated@@47))
)))
(assert (forall (($generated@@763 T@U) ) (!  (=> (= (type $generated@@763) $generated@@4) ($generated@@139 $generated@@763 $generated@@44))
 :pattern ( ($generated@@139 $generated@@763 $generated@@44))
)))
(assert (forall (($generated@@764 T@U) ) (!  (=> (= (type $generated@@764) $generated@@576) ($generated@@139 $generated@@764 $generated@@45))
 :pattern ( ($generated@@139 $generated@@764 $generated@@45))
)))
(assert (forall (($generated@@765 T@U) ) (!  (=> (= (type $generated@@765) $generated@@143) ($generated@@139 $generated@@765 $generated@@48))
 :pattern ( ($generated@@139 $generated@@765 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@766 () T@U)
(declare-fun $generated@@767 () T@U)
(declare-fun $generated@@768 () Int)
(declare-fun $generated@@769 () Int)
(declare-fun $generated@@770 () Int)
(declare-fun $generated@@771 () T@U)
(declare-fun $generated@@772 () Int)
(declare-fun $generated@@773 (T@U) Bool)
(assert  (and (and (= (type $generated@@766) ($generated@@175 $generated@@81 $generated@@4)) (= (type $generated@@767) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@771) ($generated@@175 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@774  (=> (and (= $generated@@766 ($generated@@229 $generated@@477 $generated@@767 $generated@@60 false)) (= $generated@@768 ($generated@@253 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@253 0) $generated@@768) (< $generated@@768 18446744073709551616))) (=> (and (<= ($generated@@253 0) $generated@@768) (< $generated@@768 18446744073709551616)) (=> (and (= $generated@@769 (+ $generated@@770 1)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@253 0) $generated@@769) (< $generated@@769 18446744073709551616))))))))
(let (($generated@@775 true))
(let (($generated@@776  (=> (and (= $generated@@771 ($generated@@174 $generated@@477 $generated@@767 $generated@@60 false)) (= $generated@@772 ($generated@@253 100))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= ($generated@@253 0) $generated@@772) (< $generated@@772 18446744073709551616))) (=> (and (<= ($generated@@253 0) $generated@@772) (< $generated@@772 18446744073709551616)) (=> (< $generated@@770 100) (and (=> (= (ControlFlow 0 5) 1) $generated@@775) (=> (= (ControlFlow 0 5) 3) $generated@@774))))))))
(let (($generated@@777  (=> (and ($generated@@290 $generated@@767) ($generated@@773 $generated@@767)) (=> (and (and (<= ($generated@@253 0) $generated@@770) (< $generated@@770 18446744073709551616)) (and (= 1 $generated@@268) (= (ControlFlow 0 7) 5))) $generated@@776))))
$generated@@777)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@258 (Int) Bool)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@T T@U) T@U)
(declare-fun $generated@@274 () Int)
(declare-fun $generated@@275 (Int) Int)
(declare-fun $generated@@276 (Int) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@296 (T@U) Bool)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@306 (T@U T@U T@U) Bool)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@326 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@349 (T@U) Int)
(declare-fun $generated@@350 (T@T) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@T) T@U)
(declare-fun $generated@@361 (T@T T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@363 (T@T) T@T)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@T) T@U)
(declare-fun $generated@@379 (T@T T@T) T@T)
(declare-fun $generated@@380 (T@T) T@T)
(declare-fun $generated@@381 (T@T) T@T)
(declare-fun $generated@@402 (T@U T@U T@U) T@U)
(declare-fun $generated@@403 (T@T T@T T@T) T@T)
(declare-fun $generated@@404 (T@U T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@T)
(declare-fun $generated@@406 (T@T) T@T)
(declare-fun $generated@@407 (T@T) T@T)
(declare-fun $generated@@408 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@551 (T@U T@U) T@U)
(declare-fun $generated@@559 (T@U T@U) T@U)
(declare-fun $generated@@578 (T@T) T@U)
(declare-fun $generated@@602 () T@T)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@637 (T@U) T@U)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@659 (T@U) T@U)
(declare-fun $generated@@660 (T@U Int) T@U)
(declare-fun $generated@@669 (T@U) Int)
(declare-fun $generated@@671 (T@U) T@U)
(declare-fun $generated@@675 (T@U) T@U)
(declare-fun $generated@@679 (T@U) T@U)
(declare-fun $generated@@683 (T@U) T@U)
(declare-fun $generated@@687 (T@U) T@U)
(declare-fun $generated@@690 (T@U) T@U)
(declare-fun $generated@@703 (T@U) Int)
(declare-fun $generated@@704 (T@U) Int)
(declare-fun $generated@@840 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= (type $generated@@61) $generated@@72)) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@72)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@74 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@74 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@71)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@139 $generated@@140 $generated@@141)) (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@140 $generated@@142) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60))
)))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert  (and (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@71)
 :pattern ( ($generated@@143 $generated@@145))
)) (= (type $generated@@144) $generated@@84)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@71) (= (type $generated@@147) $generated@@84)) (= (type $generated@@148) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@147 ($generated@@143 $generated@@146) $generated@@148)  (or (= $generated@@147 $generated@@144) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@147 ($generated@@143 $generated@@146) $generated@@148))
)))
(assert (= (type $generated@@149) $generated@@71))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@150 $generated@@149 $generated@@151))
 :pattern ( ($generated@@81 $generated@@150 $generated@@149 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@152 $generated@@153 ($generated@@82 0)))
 :pattern ( ($generated@@152 $generated@@153 ($generated@@82 0)))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@154 $generated@@155)) $generated@@71)
 :pattern ( ($generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@71) (= (type $generated@@157) $generated@@84)) (= (type $generated@@158) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@157 ($generated@@154 $generated@@156) $generated@@158) ($generated@@81 $generated@@157 ($generated@@143 $generated@@156) $generated@@158)))
 :pattern ( ($generated@@81 $generated@@157 ($generated@@154 $generated@@156) $generated@@158))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@161) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@159 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167)) ($generated@@83 $generated@@161 $generated@@4))
 :pattern ( ($generated@@159 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167))
))) (= ($generated@@1 $generated@@162) 15)) (= (type $generated@@160) $generated@@162)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@161) (= (type $generated@@169) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@170) $generated@@161)) (= ($generated@@0 ($generated@@88 ($generated@@159 $generated@@149 $generated@@149 $generated@@169 $generated@@160 $generated@@170) $generated@@168)) false))
 :pattern ( ($generated@@88 ($generated@@159 $generated@@149 $generated@@149 $generated@@169 $generated@@160 $generated@@170) $generated@@168))
)))
(assert  (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@71)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@71) (= (type $generated@@177) $generated@@71)) (= (type $generated@@178) $generated@@173)) ($generated@@152 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@152 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@161)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@161)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@173) (= (type $generated@@185) $generated@@173)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@71)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@83 $generated@@161 $generated@@2)) (= (type $generated@@190) $generated@@71)) ($generated@@152 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@152 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@84 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@74 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@84) (= (type $generated@@241) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@242) ($generated@@73 $generated@@4))) (= (type $generated@@244) $generated@@84)) (= (type $generated@@245) ($generated@@73 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@71)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@162) (= (type $generated@@252) $generated@@71)) (= (type $generated@@253) $generated@@71)) (= (type $generated@@254) $generated@@71)) (= (type $generated@@255) $generated@@71)) (and (and ($generated@@152 $generated@@251 ($generated@@247 $generated@@252 $generated@@253)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@161) ($generated@@248 $generated@@256 $generated@@254)) ($generated@@248 $generated@@256 $generated@@252))
 :pattern ( ($generated@@248 $generated@@256 $generated@@254))
 :pattern ( ($generated@@248 $generated@@256 $generated@@252))
))) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@161) ($generated@@248 $generated@@257 $generated@@253)) ($generated@@248 $generated@@257 $generated@@255))
 :pattern ( ($generated@@248 $generated@@257 $generated@@253))
 :pattern ( ($generated@@248 $generated@@257 $generated@@255))
)))) ($generated@@152 $generated@@251 ($generated@@247 $generated@@254 $generated@@255)))
 :pattern ( ($generated@@152 $generated@@251 ($generated@@247 $generated@@252 $generated@@253)) ($generated@@152 $generated@@251 ($generated@@247 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@260 Int) ) (!  (=> (and (<= ($generated@@259 0) $generated@@260) (< $generated@@260 18446744073709551616)) (= ($generated@@258 $generated@@260) (< $generated@@260 100)))
 :pattern ( ($generated@@258 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@261 $generated@@262 $generated@@263)) $generated@@173)
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (= (type $generated@@264) $generated@@71) (= (type $generated@@265) $generated@@71)) (= (type $generated@@266) $generated@@161)) (= (type $generated@@267) $generated@@161)) (= ($generated@@152 ($generated@@261 $generated@@266 $generated@@267) ($generated@@172 $generated@@264 $generated@@265))  (and ($generated@@248 $generated@@266 $generated@@264) ($generated@@248 $generated@@267 $generated@@265))))
 :pattern ( ($generated@@152 ($generated@@261 $generated@@266 $generated@@267) ($generated@@172 $generated@@264 $generated@@265)))
)))
(assert (forall (($generated@@270 T@T) ($generated@@271 T@U) ) (! (= (type ($generated@@269 $generated@@270 $generated@@271)) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@273) $generated@@161)) (= ($generated@@268 $generated@@149 $generated@@149 $generated@@272 $generated@@160 $generated@@273) ($generated@@258 ($generated ($generated@@269 $generated@@2 $generated@@273)))))
 :pattern ( ($generated@@268 $generated@@149 $generated@@149 $generated@@272 $generated@@160 $generated@@273))
)))
(assert  (=> (<= 1 $generated@@274) (forall (($generated@@277 Int) ) (!  (=> (or ($generated@@276 $generated@@277) (and (not (= 1 $generated@@274)) (and (and (<= ($generated@@259 0) $generated@@277) (< $generated@@277 18446744073709551616)) (< $generated@@277 100)))) (= ($generated@@275 $generated@@277) (+ $generated@@277 1)))
 :pattern ( ($generated@@275 $generated@@277))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@173) (= (type $generated@@279) $generated@@173)) (= ($generated@@179 $generated@@278 $generated@@279) (= $generated@@278 $generated@@279)))
 :pattern ( ($generated@@179 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@71)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@83 $generated@@161 $generated@@4)) (= (type $generated@@283) $generated@@71)) (= ($generated@@152 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@161) ($generated@@0 ($generated@@88 $generated@@282 $generated@@284))) ($generated@@248 $generated@@284 $generated@@283))
 :pattern ( ($generated@@88 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@152 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@71)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@83 $generated@@161 $generated@@4)) (= (type $generated@@288) $generated@@71)) (= ($generated@@152 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@161) ($generated@@0 ($generated@@88 $generated@@287 $generated@@289))) ($generated@@248 $generated@@289 $generated@@288))
 :pattern ( ($generated@@88 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@152 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@290 Int) ) (! (= ($generated@@259 $generated@@290) $generated@@290)
 :pattern ( ($generated@@259 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 (type $generated@@292)))
(= (type ($generated@@291 $generated@@292)) $generated@@293))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= ($generated@@291 $generated@@294) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (= (type $generated@@295) ($generated@@83 $generated@@84 $generated@@85)) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@83 $generated@@299 $generated@@4))
 :pattern ( ($generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@71) (= (type $generated@@301) $generated@@71)) (= (type $generated@@302) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@303) $generated@@162)) (= (type $generated@@304) $generated@@161)) (and ($generated@@296 $generated@@302) (and ($generated@@248 $generated@@304 $generated@@300) ($generated@@152 $generated@@303 ($generated@@247 $generated@@300 $generated@@301))))) (= ($generated@@297 ($generated@@159 $generated@@300 $generated@@301 $generated@@295 $generated@@303 $generated@@304) ($generated@@298 $generated@@161)) ($generated@@297 ($generated@@159 $generated@@300 $generated@@301 $generated@@302 $generated@@303 $generated@@304) ($generated@@298 $generated@@161))))
 :pattern ( ($generated@@159 $generated@@300 $generated@@301 $generated@@295 $generated@@303 $generated@@304) ($generated@@296 $generated@@302))
 :pattern ( ($generated@@159 $generated@@300 $generated@@301 $generated@@302 $generated@@303 $generated@@304))
)))
(assert  (=> (<= 1 $generated@@274) (forall (($generated@@305 Int) ) (!  (=> (or ($generated@@276 $generated@@305) (and (not (= 1 $generated@@274)) (and (and (<= ($generated@@259 0) $generated@@305) (< $generated@@305 18446744073709551616)) (< $generated@@305 100)))) (and (<= ($generated@@259 0) ($generated@@275 $generated@@305)) (< ($generated@@275 $generated@@305) 18446744073709551616)))
 :pattern ( ($generated@@275 $generated@@305))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@307) $generated@@71) (= (type $generated@@308) $generated@@71)) (= (type $generated@@309) $generated@@161)) (= (type $generated@@310) $generated@@161)) (= (type $generated@@311) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@296 $generated@@311)) (= ($generated@@81 ($generated@@261 $generated@@309 $generated@@310) ($generated@@172 $generated@@307 $generated@@308) $generated@@311)  (and ($generated@@306 $generated@@309 $generated@@307 $generated@@311) ($generated@@306 $generated@@310 $generated@@308 $generated@@311))))
 :pattern ( ($generated@@81 ($generated@@261 $generated@@309 $generated@@310) ($generated@@172 $generated@@307 $generated@@308) $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@75)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@173) (= ($generated@@171 $generated@@314) (= ($generated@@312 $generated@@314) $generated@@62)))
 :pattern ( ($generated@@171 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@173) ($generated@@171 $generated@@315)) (exists (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (and (and (= (type $generated@@316) $generated@@161) (= (type $generated@@317) $generated@@161)) (= $generated@@315 ($generated@@261 $generated@@316 $generated@@317)))
 :no-pattern (type $generated@@316)
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@171 $generated@@315))
)))
(assert  (and (and (forall (($generated@@322 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@322)) 18)) (forall (($generated@@323 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@320 $generated@@323))
))) (forall (($generated@@324 T@T) ) (! (= (type ($generated@@318 $generated@@324)) ($generated@@320 $generated@@324))
 :pattern ( ($generated@@318 $generated@@324))
))))
(assert (forall (($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@325)) 0)
 :pattern ( ($generated@@318 $generated@@325))
)))
(assert  (and (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (! (= (type ($generated@@326 $generated@@328 $generated@@329 $generated@@330 $generated@@331 $generated@@332)) $generated@@161)
 :pattern ( ($generated@@326 $generated@@328 $generated@@329 $generated@@330 $generated@@331 $generated@@332))
)) (forall (($generated@@333 T@U) ) (! (= (type ($generated@@327 $generated@@333)) $generated@@161)
 :pattern ( ($generated@@327 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@335) $generated@@161)) (= ($generated@@326 $generated@@149 $generated@@149 $generated@@334 $generated@@160 $generated@@335) ($generated@@327 ($generated@@8 ($generated@@275 ($generated ($generated@@269 $generated@@2 $generated@@335)))))))
 :pattern ( ($generated@@326 $generated@@149 $generated@@149 $generated@@334 $generated@@160 $generated@@335))
)))
(assert ($generated@@296 $generated@@295))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@71) (= (type $generated@@337) $generated@@84)) (= ($generated@@152 $generated@@337 ($generated@@154 $generated@@336))  (and ($generated@@152 $generated@@337 ($generated@@143 $generated@@336)) (not (= $generated@@337 $generated@@144)))))
 :pattern ( ($generated@@152 $generated@@337 ($generated@@154 $generated@@336)))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@71) (= (type $generated@@340) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@306 ($generated@@327 $generated@@338) $generated@@339 $generated@@340) ($generated@@81 $generated@@338 $generated@@339 $generated@@340)))
 :pattern ( ($generated@@306 ($generated@@327 $generated@@338) $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@341) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@342) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@343) $generated@@161)) (= (type $generated@@344) $generated@@71)) ($generated@@139 $generated@@341 $generated@@342)) ($generated@@306 $generated@@343 $generated@@344 $generated@@341)) ($generated@@306 $generated@@343 $generated@@344 $generated@@342))
 :pattern ( ($generated@@139 $generated@@341 $generated@@342) ($generated@@306 $generated@@343 $generated@@344 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@345) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@346) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@348) $generated@@71)) ($generated@@139 $generated@@345 $generated@@346)) ($generated@@81 $generated@@347 $generated@@348 $generated@@345)) ($generated@@81 $generated@@347 $generated@@348 $generated@@346))
 :pattern ( ($generated@@139 $generated@@345 $generated@@346) ($generated@@81 $generated@@347 $generated@@348 $generated@@345))
)))
(assert (forall (($generated@@351 T@T) ) (! (= (type ($generated@@350 $generated@@351)) ($generated@@83 $generated@@351 $generated@@2))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@86 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@83 $generated@@353 $generated@@2)) (and (= (= ($generated@@349 $generated@@352) 0) (= $generated@@352 ($generated@@350 $generated@@353))) (=> (not (= ($generated@@349 $generated@@352) 0)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) (< 0 ($generated ($generated@@88 $generated@@352 $generated@@354))))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (= (type ($generated@@355 $generated@@356)) $generated@@76)
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@71) (and (= ($generated@@79 ($generated@@154 $generated@@357)) $generated@@65) (= ($generated@@355 ($generated@@154 $generated@@357)) $generated@@70)))
 :pattern ( ($generated@@154 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@71) (and (= ($generated@@79 ($generated@@143 $generated@@358)) $generated@@66) (= ($generated@@355 ($generated@@143 $generated@@358)) $generated@@70)))
 :pattern ( ($generated@@143 $generated@@358))
)))
(assert  (and (and (and (and (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (= ($generated@@1 ($generated@@361 $generated@@364 $generated@@365)) 19)) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@362 ($generated@@361 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@361 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@363 ($generated@@361 $generated@@368 $generated@@369)) $generated@@369)
 :pattern ( ($generated@@361 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@362 (type $generated@@370))))
(= (type ($generated@@359 $generated@@370)) ($generated@@83 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@370))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= (type ($generated@@360 $generated@@372 $generated@@373)) ($generated@@361 $generated@@372 $generated@@373))
 :pattern ( ($generated@@360 $generated@@372 $generated@@373))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@T) ) (! (let (($generated@@376 (type $generated@@374)))
 (not ($generated@@0 ($generated@@88 ($generated@@359 ($generated@@360 $generated@@376 $generated@@375)) $generated@@374))))
 :pattern ( (let (($generated@@376 (type $generated@@374)))
($generated@@88 ($generated@@359 ($generated@@360 $generated@@376 $generated@@375)) $generated@@374)))
)))
(assert  (and (and (and (and (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (= ($generated@@1 ($generated@@379 $generated@@382 $generated@@383)) 20)) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@380 ($generated@@379 $generated@@384 $generated@@385)) $generated@@384)
 :pattern ( ($generated@@379 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= ($generated@@381 ($generated@@379 $generated@@386 $generated@@387)) $generated@@387)
 :pattern ( ($generated@@379 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@380 (type $generated@@388))))
(= (type ($generated@@377 $generated@@388)) ($generated@@83 $generated@@389 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@388))
))) (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (! (= (type ($generated@@378 $generated@@390 $generated@@391)) ($generated@@379 $generated@@390 $generated@@391))
 :pattern ( ($generated@@378 $generated@@390 $generated@@391))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@T) ) (! (let (($generated@@394 (type $generated@@392)))
 (not ($generated@@0 ($generated@@88 ($generated@@377 ($generated@@378 $generated@@394 $generated@@393)) $generated@@392))))
 :pattern ( (let (($generated@@394 (type $generated@@392)))
($generated@@88 ($generated@@377 ($generated@@378 $generated@@394 $generated@@393)) $generated@@392)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@86 (type $generated@@395))))
 (=> (and (= (type $generated@@395) ($generated@@83 $generated@@397 $generated@@4)) (= (type $generated@@396) ($generated@@83 $generated@@397 $generated@@4))) (= ($generated@@297 $generated@@395 $generated@@396) (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@397) (= ($generated@@0 ($generated@@88 $generated@@395 $generated@@398)) ($generated@@0 ($generated@@88 $generated@@396 $generated@@398))))
 :pattern ( ($generated@@88 $generated@@395 $generated@@398))
 :pattern ( ($generated@@88 $generated@@396 $generated@@398))
)))))
 :pattern ( ($generated@@297 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@86 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@83 $generated@@400 $generated@@2)) (= ($generated@@187 $generated@@399) (forall (($generated@@401 T@U) ) (!  (=> (= (type $generated@@401) $generated@@400) (and (<= 0 ($generated ($generated@@88 $generated@@399 $generated@@401))) (<= ($generated ($generated@@88 $generated@@399 $generated@@401)) ($generated@@349 $generated@@399))))
 :pattern ( ($generated@@88 $generated@@399 $generated@@401))
)))))
 :pattern ( ($generated@@187 $generated@@399))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@409 T@T) ($generated@@410 T@T) ($generated@@411 T@T) ) (= ($generated@@1 ($generated@@403 $generated@@409 $generated@@410 $generated@@411)) 21)) (forall (($generated@@412 T@T) ($generated@@413 T@T) ($generated@@414 T@T) ) (! (= ($generated@@405 ($generated@@403 $generated@@412 $generated@@413 $generated@@414)) $generated@@412)
 :pattern ( ($generated@@403 $generated@@412 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@T) ($generated@@416 T@T) ($generated@@417 T@T) ) (! (= ($generated@@406 ($generated@@403 $generated@@415 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@403 $generated@@415 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@T) ($generated@@419 T@T) ($generated@@420 T@T) ) (! (= ($generated@@407 ($generated@@403 $generated@@418 $generated@@419 $generated@@420)) $generated@@420)
 :pattern ( ($generated@@403 $generated@@418 $generated@@419 $generated@@420))
))) (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@407 (type $generated@@421))))
(= (type ($generated@@404 $generated@@421 $generated@@422 $generated@@423)) $generated@@424))
 :pattern ( ($generated@@404 $generated@@421 $generated@@422 $generated@@423))
))) (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 (type $generated@@427)))
(let (($generated@@431 (type $generated@@426)))
(= (type ($generated@@408 $generated@@425 $generated@@426 $generated@@427 $generated@@428)) ($generated@@403 $generated@@431 $generated@@430 $generated@@429)))))
 :pattern ( ($generated@@408 $generated@@425 $generated@@426 $generated@@427 $generated@@428))
))) (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@407 (type $generated@@432))))
 (=> (= (type $generated@@435) $generated@@436) (= ($generated@@404 ($generated@@408 $generated@@432 $generated@@433 $generated@@434 $generated@@435) $generated@@433 $generated@@434) $generated@@435)))
 :weight 0
))) (and (and (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (or (= $generated@@439 $generated@@441) (= ($generated@@404 ($generated@@408 $generated@@438 $generated@@439 $generated@@440 $generated@@437) $generated@@441 $generated@@442) ($generated@@404 $generated@@438 $generated@@441 $generated@@442)))
 :weight 0
)) (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (or (= $generated@@446 $generated@@448) (= ($generated@@404 ($generated@@408 $generated@@444 $generated@@445 $generated@@446 $generated@@443) $generated@@447 $generated@@448) ($generated@@404 $generated@@444 $generated@@447 $generated@@448)))
 :weight 0
))) (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (or true (= ($generated@@404 ($generated@@408 $generated@@450 $generated@@451 $generated@@452 $generated@@449) $generated@@453 $generated@@454) ($generated@@404 $generated@@450 $generated@@453 $generated@@454)))
 :weight 0
)))) (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@402 $generated@@455 $generated@@456 $generated@@457)) $generated@@162)
 :pattern ( ($generated@@402 $generated@@455 $generated@@456 $generated@@457))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@458) $generated@@71) (= (type $generated@@459) $generated@@71)) (= (type $generated@@460) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@461) ($generated@@403 ($generated@@83 $generated@@84 $generated@@85) $generated@@161 $generated@@161))) (= (type $generated@@462) ($generated@@403 ($generated@@83 $generated@@84 $generated@@85) $generated@@161 $generated@@4))) (= (type $generated@@463) ($generated@@403 ($generated@@83 $generated@@84 $generated@@85) $generated@@161 ($generated@@83 $generated@@161 $generated@@4)))) (= (type $generated@@464) $generated@@161)) (= ($generated@@326 $generated@@458 $generated@@459 $generated@@460 ($generated@@402 $generated@@461 $generated@@462 $generated@@463) $generated@@464) ($generated@@404 $generated@@461 $generated@@460 $generated@@464)))
 :pattern ( ($generated@@326 $generated@@458 $generated@@459 $generated@@460 ($generated@@402 $generated@@461 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@161) ($generated@@248 $generated@@465 $generated@@149)) (and (= ($generated@@327 ($generated@@269 $generated@@2 $generated@@465)) $generated@@465) ($generated@@152 ($generated@@269 $generated@@2 $generated@@465) $generated@@149)))
 :pattern ( ($generated@@248 $generated@@465 $generated@@149))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@71)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@71) (= (type $generated@@469) $generated@@84)) (= ($generated@@152 $generated@@469 ($generated@@143 $generated@@468))  (or (= $generated@@469 $generated@@144) (= ($generated@@466 $generated@@469) ($generated@@143 $generated@@468)))))
 :pattern ( ($generated@@152 $generated@@469 ($generated@@143 $generated@@468)))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@363 (type $generated@@470))))
(let (($generated@@472 ($generated@@362 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@361 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@360 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@472) ($generated@@0 ($generated@@88 ($generated@@359 $generated@@470) $generated@@473)))
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@359 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@363 (type $generated@@475))))
(= (type ($generated@@474 $generated@@475)) ($generated@@83 $generated@@476 $generated@@4)))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@363 (type $generated@@477))))
(let (($generated@@479 ($generated@@362 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@361 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@360 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ) (!  (and (= (type $generated@@480) $generated@@478) ($generated@@0 ($generated@@88 ($generated@@474 $generated@@477) $generated@@480)))
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@474 $generated@@477))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@381 (type $generated@@481))))
(let (($generated@@483 ($generated@@380 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@379 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@378 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ) (!  (and (= (type $generated@@484) $generated@@483) ($generated@@0 ($generated@@88 ($generated@@377 $generated@@481) $generated@@484)))
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@377 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@381 (type $generated@@486))))
(= (type ($generated@@485 $generated@@486)) ($generated@@83 $generated@@487 $generated@@4)))
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@381 (type $generated@@488))))
(let (($generated@@490 ($generated@@380 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@379 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@378 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ) (!  (and (= (type $generated@@491) $generated@@489) ($generated@@0 ($generated@@88 ($generated@@485 $generated@@488) $generated@@491)))
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@485 $generated@@488))
)))
(assert  (=> (<= 1 $generated@@274) (forall (($generated@@492 Int) ) (!  (=> (or ($generated@@276 ($generated@@259 $generated@@492)) (and (not (= 1 $generated@@274)) (and (and (<= ($generated@@259 0) $generated@@492) (< $generated@@492 18446744073709551616)) ($generated@@0 ($generated@@291 ($generated@@11 (< $generated@@492 100))))))) (= ($generated@@275 ($generated@@259 $generated@@492)) ($generated@@259 (+ $generated@@492 1))))
 :weight 3
 :pattern ( ($generated@@275 ($generated@@259 $generated@@492)))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) ($generated@@83 $generated@@161 $generated@@2)) (= (type $generated@@494) $generated@@71)) (= ($generated@@152 $generated@@493 ($generated@@186 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@161) (< 0 ($generated ($generated@@88 $generated@@493 $generated@@495)))) ($generated@@248 $generated@@495 $generated@@494))
 :pattern ( ($generated@@88 $generated@@493 $generated@@495))
))))
 :pattern ( ($generated@@152 $generated@@493 ($generated@@186 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@496) $generated@@162) (= (type $generated@@497) $generated@@71)) (= (type $generated@@498) $generated@@71)) (= (type $generated@@499) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@296 $generated@@499) ($generated@@81 $generated@@496 ($generated@@247 $generated@@497 $generated@@498) $generated@@499))) (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@161) (=> (and ($generated@@306 $generated@@500 $generated@@497 $generated@@499) ($generated@@268 $generated@@497 $generated@@498 $generated@@499 $generated@@496 $generated@@500)) ($generated@@306 ($generated@@326 $generated@@497 $generated@@498 $generated@@499 $generated@@496 $generated@@500) $generated@@498 $generated@@499)))
 :pattern ( ($generated@@326 $generated@@497 $generated@@498 $generated@@499 $generated@@496 $generated@@500))
)))
 :pattern ( ($generated@@81 $generated@@496 ($generated@@247 $generated@@497 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@501) $generated@@162) (= (type $generated@@502) $generated@@71)) (= (type $generated@@503) $generated@@71)) (= (type $generated@@504) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@296 $generated@@504)) (= ($generated@@81 $generated@@501 ($generated@@247 $generated@@502 $generated@@503) $generated@@504) (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@161) (=> (and (and ($generated@@248 $generated@@505 $generated@@502) ($generated@@306 $generated@@505 $generated@@502 $generated@@504)) ($generated@@268 $generated@@502 $generated@@503 $generated@@504 $generated@@501 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@84) (=> (and (not (= $generated@@506 $generated@@144)) ($generated@@0 ($generated@@88 ($generated@@159 $generated@@502 $generated@@503 $generated@@504 $generated@@501 $generated@@505) ($generated@@327 $generated@@506)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@504 $generated@@506) $generated@@60))))
 :pattern ( ($generated@@88 ($generated@@159 $generated@@502 $generated@@503 $generated@@504 $generated@@501 $generated@@505) ($generated@@327 $generated@@506)))
))))
 :pattern ( ($generated@@326 $generated@@502 $generated@@503 $generated@@504 $generated@@501 $generated@@505))
 :pattern ( ($generated@@159 $generated@@502 $generated@@503 $generated@@504 $generated@@501 $generated@@505))
))))
 :pattern ( ($generated@@81 $generated@@501 ($generated@@247 $generated@@502 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@83 $generated@@161 $generated@@4)) (= (type $generated@@508) $generated@@71)) (= (type $generated@@509) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@507 ($generated@@280 $generated@@508) $generated@@509) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@161) ($generated@@0 ($generated@@88 $generated@@507 $generated@@510))) ($generated@@306 $generated@@510 $generated@@508 $generated@@509))
 :pattern ( ($generated@@88 $generated@@507 $generated@@510))
))))
 :pattern ( ($generated@@81 $generated@@507 ($generated@@280 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@83 $generated@@161 $generated@@4)) (= (type $generated@@512) $generated@@71)) (= (type $generated@@513) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@511 ($generated@@285 $generated@@512) $generated@@513) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@161) ($generated@@0 ($generated@@88 $generated@@511 $generated@@514))) ($generated@@306 $generated@@514 $generated@@512 $generated@@513))
 :pattern ( ($generated@@88 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@81 $generated@@511 ($generated@@285 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
(= ($generated ($generated@@88 ($generated@@350 $generated@@516) $generated@@515)) 0))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@88 ($generated@@350 $generated@@516) $generated@@515)))
)))
(assert  (and (forall (($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@519)) ($generated@@83 $generated@@161 $generated@@4))
 :pattern ( ($generated@@517 $generated@@519))
)) (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@363 (type $generated@@520))))
(let (($generated@@522 ($generated@@362 (type $generated@@520))))
(= (type ($generated@@518 $generated@@520)) ($generated@@83 $generated@@522 $generated@@521))))
 :pattern ( ($generated@@518 $generated@@520))
))))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) ($generated@@361 $generated@@161 $generated@@161)) (= (type $generated@@524) $generated@@161)) (= ($generated@@0 ($generated@@88 ($generated@@517 $generated@@523) $generated@@524))  (and ($generated@@0 ($generated@@88 ($generated@@359 $generated@@523) ($generated@@180 ($generated@@269 $generated@@173 $generated@@524)))) (= ($generated@@88 ($generated@@518 $generated@@523) ($generated@@180 ($generated@@269 $generated@@173 $generated@@524))) ($generated@@181 ($generated@@269 $generated@@173 $generated@@524))))))
 :pattern ( ($generated@@88 ($generated@@517 $generated@@523) $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) ($generated@@83 $generated@@161 $generated@@4))
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@381 (type $generated@@528))))
(let (($generated@@530 ($generated@@380 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528)) ($generated@@83 $generated@@530 $generated@@529))))
 :pattern ( ($generated@@526 $generated@@528))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) ($generated@@379 $generated@@161 $generated@@161)) (= (type $generated@@532) $generated@@161)) (= ($generated@@0 ($generated@@88 ($generated@@525 $generated@@531) $generated@@532))  (and ($generated@@0 ($generated@@88 ($generated@@377 $generated@@531) ($generated@@180 ($generated@@269 $generated@@173 $generated@@532)))) (= ($generated@@88 ($generated@@526 $generated@@531) ($generated@@180 ($generated@@269 $generated@@173 $generated@@532))) ($generated@@181 ($generated@@269 $generated@@173 $generated@@532))))))
 :pattern ( ($generated@@88 ($generated@@525 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(let (($generated@@536 ($generated@@362 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@361 $generated@@536 $generated@@535)) (= ($generated@@0 ($generated@@88 ($generated@@474 $generated@@533) $generated@@534)) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@536) (and ($generated@@0 ($generated@@88 ($generated@@359 $generated@@533) $generated@@537)) (= $generated@@534 ($generated@@88 ($generated@@518 $generated@@533) $generated@@537))))
 :pattern ( ($generated@@88 ($generated@@359 $generated@@533) $generated@@537))
 :pattern ( ($generated@@88 ($generated@@518 $generated@@533) $generated@@537))
))))))
 :pattern ( ($generated@@88 ($generated@@474 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(let (($generated@@541 ($generated@@380 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@379 $generated@@541 $generated@@540)) (= ($generated@@0 ($generated@@88 ($generated@@485 $generated@@538) $generated@@539)) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@541) (and ($generated@@0 ($generated@@88 ($generated@@377 $generated@@538) $generated@@542)) (= $generated@@539 ($generated@@88 ($generated@@526 $generated@@538) $generated@@542))))
 :pattern ( ($generated@@88 ($generated@@377 $generated@@538) $generated@@542))
 :pattern ( ($generated@@88 ($generated@@526 $generated@@538) $generated@@542))
))))))
 :pattern ( ($generated@@88 ($generated@@485 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@543) $generated@@71) (= (type $generated@@544) $generated@@71)) (= (type $generated@@545) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@546) ($generated@@403 ($generated@@83 $generated@@84 $generated@@85) $generated@@161 $generated@@161))) (= (type $generated@@547) ($generated@@403 ($generated@@83 $generated@@84 $generated@@85) $generated@@161 $generated@@4))) (= (type $generated@@548) ($generated@@403 ($generated@@83 $generated@@84 $generated@@85) $generated@@161 ($generated@@83 $generated@@161 $generated@@4)))) (= (type $generated@@549) $generated@@161)) (= (type $generated@@550) $generated@@161)) (= ($generated@@0 ($generated@@88 ($generated@@159 $generated@@543 $generated@@544 $generated@@545 ($generated@@402 $generated@@546 $generated@@547 $generated@@548) $generated@@549) $generated@@550)) ($generated@@0 ($generated@@88 ($generated@@404 $generated@@548 $generated@@545 $generated@@549) $generated@@550))))
 :pattern ( ($generated@@88 ($generated@@159 $generated@@543 $generated@@544 $generated@@545 ($generated@@402 $generated@@546 $generated@@547 $generated@@548) $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (! (= (type ($generated@@551 $generated@@552 $generated@@553)) $generated@@71)
 :pattern ( ($generated@@551 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) ($generated@@361 $generated@@161 $generated@@161)) (= (type $generated@@555) $generated@@71)) (= (type $generated@@556) $generated@@71)) (= (type $generated@@557) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@554 ($generated@@551 $generated@@555 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@161) ($generated@@0 ($generated@@88 ($generated@@359 $generated@@554) $generated@@558))) (and ($generated@@306 ($generated@@88 ($generated@@518 $generated@@554) $generated@@558) $generated@@556 $generated@@557) ($generated@@306 $generated@@558 $generated@@555 $generated@@557)))
 :pattern ( ($generated@@88 ($generated@@518 $generated@@554) $generated@@558))
 :pattern ( ($generated@@88 ($generated@@359 $generated@@554) $generated@@558))
))))
 :pattern ( ($generated@@81 $generated@@554 ($generated@@551 $generated@@555 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (= (type ($generated@@559 $generated@@560 $generated@@561)) $generated@@71)
 :pattern ( ($generated@@559 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) ($generated@@379 $generated@@161 $generated@@161)) (= (type $generated@@563) $generated@@71)) (= (type $generated@@564) $generated@@71)) (= (type $generated@@565) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@562 ($generated@@559 $generated@@563 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@161) ($generated@@0 ($generated@@88 ($generated@@377 $generated@@562) $generated@@566))) (and ($generated@@306 ($generated@@88 ($generated@@526 $generated@@562) $generated@@566) $generated@@564 $generated@@565) ($generated@@306 $generated@@566 $generated@@563 $generated@@565)))
 :pattern ( ($generated@@88 ($generated@@526 $generated@@562) $generated@@566))
 :pattern ( ($generated@@88 ($generated@@377 $generated@@562) $generated@@566))
))))
 :pattern ( ($generated@@81 $generated@@562 ($generated@@559 $generated@@563 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@86 (type $generated@@567))))
 (=> (and (and (= (type $generated@@567) ($generated@@83 $generated@@569 $generated@@4)) (= (type $generated@@568) ($generated@@83 $generated@@569 $generated@@4))) ($generated@@297 $generated@@567 $generated@@568)) (= $generated@@567 $generated@@568)))
 :pattern ( ($generated@@297 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@570) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@571) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@572) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@570 $generated@@572))) (and ($generated@@139 $generated@@570 $generated@@571) ($generated@@139 $generated@@571 $generated@@572))) ($generated@@139 $generated@@570 $generated@@572))
 :pattern ( ($generated@@139 $generated@@570 $generated@@571) ($generated@@139 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@162) (= (type $generated@@574) $generated@@71)) (= (type $generated@@575) $generated@@71)) (= ($generated@@152 $generated@@573 ($generated@@247 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@577) $generated@@161)) (=> (and (and ($generated@@296 $generated@@576) ($generated@@248 $generated@@577 $generated@@574)) ($generated@@268 $generated@@574 $generated@@575 $generated@@576 $generated@@573 $generated@@577)) ($generated@@248 ($generated@@326 $generated@@574 $generated@@575 $generated@@576 $generated@@573 $generated@@577) $generated@@575)))
 :pattern ( ($generated@@326 $generated@@574 $generated@@575 $generated@@576 $generated@@573 $generated@@577))
))))
 :pattern ( ($generated@@152 $generated@@573 ($generated@@247 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@579 T@T) ) (! (= (type ($generated@@578 $generated@@579)) ($generated@@83 $generated@@579 $generated@@4))
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@381 (type $generated@@580))))
(let (($generated@@582 ($generated@@380 (type $generated@@580))))
 (=> (= (type $generated@@580) ($generated@@379 $generated@@582 $generated@@581)) (= (= $generated@@580 ($generated@@378 $generated@@582 $generated@@581)) (= ($generated@@377 $generated@@580) ($generated@@578 $generated@@582))))))
 :pattern ( ($generated@@377 $generated@@580))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@381 (type $generated@@583))))
(let (($generated@@585 ($generated@@380 (type $generated@@583))))
 (=> (= (type $generated@@583) ($generated@@379 $generated@@585 $generated@@584)) (= (= $generated@@583 ($generated@@378 $generated@@585 $generated@@584)) (= ($generated@@485 $generated@@583) ($generated@@578 $generated@@584))))))
 :pattern ( ($generated@@485 $generated@@583))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@381 (type $generated@@586))))
(let (($generated@@588 ($generated@@380 (type $generated@@586))))
 (=> (= (type $generated@@586) ($generated@@379 $generated@@588 $generated@@587)) (= (= $generated@@586 ($generated@@378 $generated@@588 $generated@@587)) (= ($generated@@525 $generated@@586) ($generated@@578 $generated@@161))))))
 :pattern ( ($generated@@525 $generated@@586))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@363 (type $generated@@589))))
(let (($generated@@591 ($generated@@362 (type $generated@@589))))
 (=> (= (type $generated@@589) ($generated@@361 $generated@@591 $generated@@590)) (or (= $generated@@589 ($generated@@360 $generated@@591 $generated@@590)) (exists (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (and (and (= (type $generated@@592) $generated@@161) (= (type $generated@@593) $generated@@161)) ($generated@@0 ($generated@@88 ($generated@@517 $generated@@589) ($generated@@327 ($generated@@261 $generated@@592 $generated@@593)))))
 :no-pattern (type $generated@@592)
 :no-pattern (type $generated@@593)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
 :no-pattern ($generated $generated@@593)
 :no-pattern ($generated@@0 $generated@@593)
))))))
 :pattern ( ($generated@@517 $generated@@589))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@381 (type $generated@@594))))
(let (($generated@@596 ($generated@@380 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@379 $generated@@596 $generated@@595)) (or (= $generated@@594 ($generated@@378 $generated@@596 $generated@@595)) (exists (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (and (and (= (type $generated@@597) $generated@@161) (= (type $generated@@598) $generated@@161)) ($generated@@0 ($generated@@88 ($generated@@525 $generated@@594) ($generated@@327 ($generated@@261 $generated@@597 $generated@@598)))))
 :no-pattern (type $generated@@597)
 :no-pattern (type $generated@@598)
 :no-pattern ($generated $generated@@597)
 :no-pattern ($generated@@0 $generated@@597)
 :no-pattern ($generated $generated@@598)
 :no-pattern ($generated@@0 $generated@@598)
))))))
 :pattern ( ($generated@@525 $generated@@594))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@161) ($generated@@248 $generated@@599 $generated@@46)) (and (= ($generated@@327 ($generated@@269 $generated@@2 $generated@@599)) $generated@@599) ($generated@@152 ($generated@@269 $generated@@2 $generated@@599) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@161) ($generated@@248 $generated@@600 $generated@@47)) (and (= ($generated@@327 ($generated@@269 $generated@@3 $generated@@600)) $generated@@600) ($generated@@152 ($generated@@269 $generated@@3 $generated@@600) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@161) ($generated@@248 $generated@@601 $generated@@44)) (and (= ($generated@@327 ($generated@@269 $generated@@4 $generated@@601)) $generated@@601) ($generated@@152 ($generated@@269 $generated@@4 $generated@@601) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@601 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@602) 22))
(assert (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@161) ($generated@@248 $generated@@603 $generated@@45)) (and (= ($generated@@327 ($generated@@269 $generated@@602 $generated@@603)) $generated@@603) ($generated@@152 ($generated@@269 $generated@@602 $generated@@603) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@71) (= ($generated@@248 ($generated@@327 $generated@@604) $generated@@605) ($generated@@152 $generated@@604 $generated@@605)))
 :pattern ( ($generated@@248 ($generated@@327 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@606) $generated@@71) (= (type $generated@@607) $generated@@71)) (= (type $generated@@608) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@609) ($generated@@403 ($generated@@83 $generated@@84 $generated@@85) $generated@@161 $generated@@161))) (= (type $generated@@610) ($generated@@403 ($generated@@83 $generated@@84 $generated@@85) $generated@@161 $generated@@4))) (= (type $generated@@611) ($generated@@403 ($generated@@83 $generated@@84 $generated@@85) $generated@@161 ($generated@@83 $generated@@161 $generated@@4)))) (= (type $generated@@612) $generated@@161)) ($generated@@0 ($generated@@404 $generated@@610 $generated@@608 $generated@@612))) ($generated@@268 $generated@@606 $generated@@607 $generated@@608 ($generated@@402 $generated@@609 $generated@@610 $generated@@611) $generated@@612))
 :pattern ( ($generated@@268 $generated@@606 $generated@@607 $generated@@608 ($generated@@402 $generated@@609 $generated@@610 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@86 (type $generated@@613))))
 (=> (= (type $generated@@613) ($generated@@83 $generated@@614 $generated@@2)) (<= 0 ($generated@@349 $generated@@613))))
 :pattern ( ($generated@@349 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@321 (type $generated@@615))))
 (=> (= (type $generated@@615) ($generated@@320 $generated@@616)) (<= 0 ($generated@@319 $generated@@615))))
 :pattern ( ($generated@@319 $generated@@615))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@71)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@71) (= (type $generated@@620) $generated@@71)) (= ($generated@@617 ($generated@@551 $generated@@619 $generated@@620)) $generated@@619))
 :pattern ( ($generated@@551 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@71)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@71) (= (type $generated@@624) $generated@@71)) (= ($generated@@621 ($generated@@551 $generated@@623 $generated@@624)) $generated@@624))
 :pattern ( ($generated@@551 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@71) (= (type $generated@@626) $generated@@71)) (= ($generated@@79 ($generated@@551 $generated@@625 $generated@@626)) $generated@@58))
 :pattern ( ($generated@@551 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@71)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@71) (= (type $generated@@630) $generated@@71)) (= ($generated@@627 ($generated@@559 $generated@@629 $generated@@630)) $generated@@629))
 :pattern ( ($generated@@559 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@71)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@71) (= (type $generated@@634) $generated@@71)) (= ($generated@@631 ($generated@@559 $generated@@633 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@559 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@71) (= (type $generated@@636) $generated@@71)) (= ($generated@@79 ($generated@@559 $generated@@635 $generated@@636)) $generated@@59))
 :pattern ( ($generated@@559 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ) (! (= (type ($generated@@637 $generated@@638)) $generated@@71)
 :pattern ( ($generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@71) (= (type $generated@@640) $generated@@71)) (= ($generated@@637 ($generated@@247 $generated@@639 $generated@@640)) $generated@@639))
 :pattern ( ($generated@@247 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ) (! (= (type ($generated@@641 $generated@@642)) $generated@@71)
 :pattern ( ($generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@71) (= (type $generated@@644) $generated@@71)) (= ($generated@@641 ($generated@@247 $generated@@643 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@247 $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@161) (= (type $generated@@646) $generated@@161)) (= ($generated@@312 ($generated@@261 $generated@@645 $generated@@646)) $generated@@62))
 :pattern ( ($generated@@261 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@71)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@71) (= (type $generated@@650) $generated@@71)) (= ($generated@@647 ($generated@@172 $generated@@649 $generated@@650)) $generated@@649))
 :pattern ( ($generated@@172 $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@71)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@71) (= (type $generated@@654) $generated@@71)) (= ($generated@@651 ($generated@@172 $generated@@653 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@172 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@161) (= (type $generated@@656) $generated@@161)) (= ($generated@@180 ($generated@@261 $generated@@655 $generated@@656)) $generated@@655))
 :pattern ( ($generated@@261 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@161) (= (type $generated@@658) $generated@@161)) (= ($generated@@181 ($generated@@261 $generated@@657 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@261 $generated@@657 $generated@@658))
)))
(assert  (and (forall (($generated@@661 T@U) ) (! (= (type ($generated@@659 $generated@@661)) $generated@@71)
 :pattern ( ($generated@@659 $generated@@661))
)) (forall (($generated@@662 T@U) ($generated@@663 Int) ) (! (let (($generated@@664 ($generated@@321 (type $generated@@662))))
(= (type ($generated@@660 $generated@@662 $generated@@663)) $generated@@664))
 :pattern ( ($generated@@660 $generated@@662 $generated@@663))
))))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@320 $generated@@161)) (= (type $generated@@666) $generated@@71)) (= (type $generated@@667) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@665 ($generated@@659 $generated@@666) $generated@@667) (forall (($generated@@668 Int) ) (!  (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@319 $generated@@665))) ($generated@@306 ($generated@@660 $generated@@665 $generated@@668) $generated@@666 $generated@@667))
 :pattern ( ($generated@@660 $generated@@665 $generated@@668))
))))
 :pattern ( ($generated@@81 $generated@@665 ($generated@@659 $generated@@666) $generated@@667))
)))
(assert (forall (($generated@@670 Int) ) (! (= ($generated@@669 ($generated@@82 $generated@@670)) $generated@@670)
 :pattern ( ($generated@@82 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ) (! (= (type ($generated@@671 $generated@@672)) $generated@@71)
 :pattern ( ($generated@@671 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@71) (= ($generated@@671 ($generated@@280 $generated@@673)) $generated@@673))
 :pattern ( ($generated@@280 $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@71) (= ($generated@@79 ($generated@@280 $generated@@674)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ) (! (= (type ($generated@@675 $generated@@676)) $generated@@71)
 :pattern ( ($generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@71) (= ($generated@@675 ($generated@@285 $generated@@677)) $generated@@677))
 :pattern ( ($generated@@285 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@71) (= ($generated@@79 ($generated@@285 $generated@@678)) $generated@@55))
 :pattern ( ($generated@@285 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ) (! (= (type ($generated@@679 $generated@@680)) $generated@@71)
 :pattern ( ($generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@71) (= ($generated@@679 ($generated@@186 $generated@@681)) $generated@@681))
 :pattern ( ($generated@@186 $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@71) (= ($generated@@79 ($generated@@186 $generated@@682)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ) (! (= (type ($generated@@683 $generated@@684)) $generated@@71)
 :pattern ( ($generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@71) (= ($generated@@683 ($generated@@659 $generated@@685)) $generated@@685))
 :pattern ( ($generated@@659 $generated@@685))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@71) (= ($generated@@79 ($generated@@659 $generated@@686)) $generated@@57))
 :pattern ( ($generated@@659 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ) (! (= (type ($generated@@687 $generated@@688)) $generated@@71)
 :pattern ( ($generated@@687 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@71) (= ($generated@@687 ($generated@@154 $generated@@689)) $generated@@689))
 :pattern ( ($generated@@154 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ) (! (= (type ($generated@@690 $generated@@691)) $generated@@71)
 :pattern ( ($generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@71) (= ($generated@@690 ($generated@@143 $generated@@692)) $generated@@692))
 :pattern ( ($generated@@143 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ) (! (let (($generated@@694 (type $generated@@693)))
(= ($generated@@269 $generated@@694 ($generated@@327 $generated@@693)) $generated@@693))
 :pattern ( ($generated@@327 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@695) ($generated@@361 $generated@@161 $generated@@161)) (= (type $generated@@696) $generated@@71)) (= (type $generated@@697) $generated@@71)) (= ($generated@@152 $generated@@695 ($generated@@551 $generated@@696 $generated@@697)) (forall (($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@698) $generated@@161) ($generated@@0 ($generated@@88 ($generated@@359 $generated@@695) $generated@@698))) (and ($generated@@248 ($generated@@88 ($generated@@518 $generated@@695) $generated@@698) $generated@@697) ($generated@@248 $generated@@698 $generated@@696)))
 :pattern ( ($generated@@88 ($generated@@518 $generated@@695) $generated@@698))
 :pattern ( ($generated@@88 ($generated@@359 $generated@@695) $generated@@698))
))))
 :pattern ( ($generated@@152 $generated@@695 ($generated@@551 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (= (type $generated@@699) ($generated@@379 $generated@@161 $generated@@161)) (= (type $generated@@700) $generated@@71)) (= (type $generated@@701) $generated@@71)) (= ($generated@@152 $generated@@699 ($generated@@559 $generated@@700 $generated@@701)) (forall (($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@161) ($generated@@0 ($generated@@88 ($generated@@377 $generated@@699) $generated@@702))) (and ($generated@@248 ($generated@@88 ($generated@@526 $generated@@699) $generated@@702) $generated@@701) ($generated@@248 $generated@@702 $generated@@700)))
 :pattern ( ($generated@@88 ($generated@@526 $generated@@699) $generated@@702))
 :pattern ( ($generated@@88 ($generated@@377 $generated@@699) $generated@@702))
))))
 :pattern ( ($generated@@152 $generated@@699 ($generated@@559 $generated@@700 $generated@@701)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@161) (= (type $generated@@706) $generated@@161)) (< ($generated@@703 $generated@@705) ($generated@@704 ($generated@@261 $generated@@705 $generated@@706))))
 :pattern ( ($generated@@261 $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@161) (= (type $generated@@708) $generated@@161)) (< ($generated@@703 $generated@@708) ($generated@@704 ($generated@@261 $generated@@707 $generated@@708))))
 :pattern ( ($generated@@261 $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) $generated@@161) (= (type $generated@@710) $generated@@71)) (= (type $generated@@711) $generated@@71)) ($generated@@248 $generated@@709 ($generated@@551 $generated@@710 $generated@@711))) (and (= ($generated@@327 ($generated@@269 ($generated@@361 $generated@@161 $generated@@161) $generated@@709)) $generated@@709) ($generated@@152 ($generated@@269 ($generated@@361 $generated@@161 $generated@@161) $generated@@709) ($generated@@551 $generated@@710 $generated@@711))))
 :pattern ( ($generated@@248 $generated@@709 ($generated@@551 $generated@@710 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (and (= (type $generated@@712) $generated@@161) (= (type $generated@@713) $generated@@71)) (= (type $generated@@714) $generated@@71)) ($generated@@248 $generated@@712 ($generated@@559 $generated@@713 $generated@@714))) (and (= ($generated@@327 ($generated@@269 ($generated@@379 $generated@@161 $generated@@161) $generated@@712)) $generated@@712) ($generated@@152 ($generated@@269 ($generated@@379 $generated@@161 $generated@@161) $generated@@712) ($generated@@559 $generated@@713 $generated@@714))))
 :pattern ( ($generated@@248 $generated@@712 ($generated@@559 $generated@@713 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (and (= (type $generated@@715) $generated@@71) (= (type $generated@@716) $generated@@71)) (= (type $generated@@717) $generated@@161)) ($generated@@248 $generated@@717 ($generated@@247 $generated@@715 $generated@@716))) (and (= ($generated@@327 ($generated@@269 $generated@@162 $generated@@717)) $generated@@717) ($generated@@152 ($generated@@269 $generated@@162 $generated@@717) ($generated@@247 $generated@@715 $generated@@716))))
 :pattern ( ($generated@@248 $generated@@717 ($generated@@247 $generated@@715 $generated@@716)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (and (= (type $generated@@718) $generated@@71) (= (type $generated@@719) $generated@@71)) (= (type $generated@@720) $generated@@161)) ($generated@@248 $generated@@720 ($generated@@172 $generated@@718 $generated@@719))) (and (= ($generated@@327 ($generated@@269 $generated@@173 $generated@@720)) $generated@@720) ($generated@@152 ($generated@@269 $generated@@173 $generated@@720) ($generated@@172 $generated@@718 $generated@@719))))
 :pattern ( ($generated@@248 $generated@@720 ($generated@@172 $generated@@718 $generated@@719)))
)))
(assert (forall (($generated@@721 T@U) ) (! (let (($generated@@722 (type $generated@@721)))
 (not ($generated@@0 ($generated@@88 ($generated@@298 $generated@@722) $generated@@721))))
 :pattern ( (let (($generated@@722 (type $generated@@721)))
($generated@@88 ($generated@@298 $generated@@722) $generated@@721)))
)))
(assert (forall (($generated@@723 T@U) ) (! (let (($generated@@724 (type $generated@@723)))
 (not ($generated@@0 ($generated@@88 ($generated@@578 $generated@@724) $generated@@723))))
 :pattern ( (let (($generated@@724 (type $generated@@723)))
($generated@@88 ($generated@@578 $generated@@724) $generated@@723)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@725) $generated@@71) (= (type $generated@@726) $generated@@71)) (and (= ($generated@@79 ($generated@@247 $generated@@725 $generated@@726)) $generated@@61) (= ($generated@@355 ($generated@@247 $generated@@725 $generated@@726)) $generated@@67)))
 :pattern ( ($generated@@247 $generated@@725 $generated@@726))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@727) $generated@@71) (= (type $generated@@728) $generated@@71)) (and (= ($generated@@79 ($generated@@172 $generated@@727 $generated@@728)) $generated@@63) (= ($generated@@355 ($generated@@172 $generated@@727 $generated@@728)) $generated@@68)))
 :pattern ( ($generated@@172 $generated@@727 $generated@@728))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@729) $generated@@71) (= (type $generated@@730) $generated@@71)) (= (type $generated@@731) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@732) $generated@@162)) (= (type $generated@@733) $generated@@161)) (and (and ($generated@@296 $generated@@731) (and ($generated@@248 $generated@@733 $generated@@729) ($generated@@152 $generated@@732 ($generated@@247 $generated@@729 $generated@@730)))) ($generated@@297 ($generated@@159 $generated@@729 $generated@@730 $generated@@295 $generated@@732 $generated@@733) ($generated@@298 $generated@@161)))) (= ($generated@@268 $generated@@729 $generated@@730 $generated@@295 $generated@@732 $generated@@733) ($generated@@268 $generated@@729 $generated@@730 $generated@@731 $generated@@732 $generated@@733)))
 :pattern ( ($generated@@268 $generated@@729 $generated@@730 $generated@@295 $generated@@732 $generated@@733) ($generated@@296 $generated@@731))
 :pattern ( ($generated@@268 $generated@@729 $generated@@730 $generated@@731 $generated@@732 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@173) (= ($generated@@703 ($generated@@327 $generated@@734)) ($generated@@704 $generated@@734)))
 :pattern ( ($generated@@703 ($generated@@327 $generated@@734)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 Int) ) (!  (=> (= (type $generated@@735) ($generated@@83 $generated@@84 $generated@@85)) (= ($generated@@275 $generated@@736) ($generated ($generated@@269 $generated@@2 ($generated@@326 $generated@@149 $generated@@149 $generated@@735 $generated@@160 ($generated@@327 ($generated@@8 $generated@@736)))))))
 :pattern ( ($generated@@275 $generated@@736) ($generated@@296 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (and (= (type $generated@@737) $generated@@161) ($generated@@248 $generated@@737 ($generated@@82 0))) (and (= ($generated@@327 ($generated@@269 $generated@@2 $generated@@737)) $generated@@737) ($generated@@152 ($generated@@269 ($generated@@83 $generated@@161 $generated@@4) $generated@@737) ($generated@@82 0))))
 :pattern ( ($generated@@248 $generated@@737 ($generated@@82 0)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (= (type $generated@@738) $generated@@161) (= (type $generated@@739) $generated@@71)) ($generated@@248 $generated@@738 ($generated@@280 $generated@@739))) (and (= ($generated@@327 ($generated@@269 ($generated@@83 $generated@@161 $generated@@4) $generated@@738)) $generated@@738) ($generated@@152 ($generated@@269 ($generated@@83 $generated@@161 $generated@@4) $generated@@738) ($generated@@280 $generated@@739))))
 :pattern ( ($generated@@248 $generated@@738 ($generated@@280 $generated@@739)))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (= (type $generated@@740) $generated@@161) (= (type $generated@@741) $generated@@71)) ($generated@@248 $generated@@740 ($generated@@285 $generated@@741))) (and (= ($generated@@327 ($generated@@269 ($generated@@83 $generated@@161 $generated@@4) $generated@@740)) $generated@@740) ($generated@@152 ($generated@@269 ($generated@@83 $generated@@161 $generated@@4) $generated@@740) ($generated@@285 $generated@@741))))
 :pattern ( ($generated@@248 $generated@@740 ($generated@@285 $generated@@741)))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (and (= (type $generated@@742) $generated@@161) (= (type $generated@@743) $generated@@71)) ($generated@@248 $generated@@742 ($generated@@186 $generated@@743))) (and (= ($generated@@327 ($generated@@269 ($generated@@83 $generated@@161 $generated@@2) $generated@@742)) $generated@@742) ($generated@@152 ($generated@@269 ($generated@@83 $generated@@161 $generated@@2) $generated@@742) ($generated@@186 $generated@@743))))
 :pattern ( ($generated@@248 $generated@@742 ($generated@@186 $generated@@743)))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (and (= (type $generated@@744) $generated@@161) (= (type $generated@@745) $generated@@71)) ($generated@@248 $generated@@744 ($generated@@659 $generated@@745))) (and (= ($generated@@327 ($generated@@269 ($generated@@320 $generated@@161) $generated@@744)) $generated@@744) ($generated@@152 ($generated@@269 ($generated@@320 $generated@@161) $generated@@744) ($generated@@659 $generated@@745))))
 :pattern ( ($generated@@248 $generated@@744 ($generated@@659 $generated@@745)))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (and (= (type $generated@@746) $generated@@71) (= (type $generated@@747) $generated@@161)) ($generated@@248 $generated@@747 ($generated@@154 $generated@@746))) (and (= ($generated@@327 ($generated@@269 $generated@@84 $generated@@747)) $generated@@747) ($generated@@152 ($generated@@269 $generated@@84 $generated@@747) ($generated@@154 $generated@@746))))
 :pattern ( ($generated@@248 $generated@@747 ($generated@@154 $generated@@746)))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (and (= (type $generated@@748) $generated@@71) (= (type $generated@@749) $generated@@161)) ($generated@@248 $generated@@749 ($generated@@143 $generated@@748))) (and (= ($generated@@327 ($generated@@269 $generated@@84 $generated@@749)) $generated@@749) ($generated@@152 ($generated@@269 $generated@@84 $generated@@749) ($generated@@143 $generated@@748))))
 :pattern ( ($generated@@248 $generated@@749 ($generated@@143 $generated@@748)))
)))
(assert (= ($generated@@79 $generated@@149) $generated@@64))
(assert (= ($generated@@355 $generated@@149) $generated@@69))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (and (= (type $generated@@750) ($generated@@83 $generated@@161 $generated@@2)) (= (type $generated@@751) $generated@@71)) (= (type $generated@@752) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@750 ($generated@@186 $generated@@751) $generated@@752) (forall (($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@753) $generated@@161) (< 0 ($generated ($generated@@88 $generated@@750 $generated@@753)))) ($generated@@306 $generated@@753 $generated@@751 $generated@@752))
 :pattern ( ($generated@@88 $generated@@750 $generated@@753))
))))
 :pattern ( ($generated@@81 $generated@@750 ($generated@@186 $generated@@751) $generated@@752))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@754) $generated@@71) (= (type $generated@@755) $generated@@71)) (= (type $generated@@756) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@757) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@758) $generated@@162)) (= (type $generated@@759) $generated@@161)) (and (and (and ($generated@@139 $generated@@756 $generated@@757) (and ($generated@@296 $generated@@756) ($generated@@296 $generated@@757))) (and ($generated@@248 $generated@@759 $generated@@754) ($generated@@152 $generated@@758 ($generated@@247 $generated@@754 $generated@@755)))) (forall (($generated@@760 T@U) ($generated@@761 T@U) ) (! (let (($generated@@762 ($generated@@74 (type $generated@@761))))
 (=> (and (and (= (type $generated@@760) $generated@@84) (= (type $generated@@761) ($generated@@73 $generated@@762))) (and (not (= $generated@@760 $generated@@144)) ($generated@@0 ($generated@@88 ($generated@@159 $generated@@754 $generated@@755 $generated@@756 $generated@@758 $generated@@759) ($generated@@327 $generated@@760))))) (= ($generated@@90 ($generated@@88 $generated@@756 $generated@@760) $generated@@761) ($generated@@90 ($generated@@88 $generated@@757 $generated@@760) $generated@@761))))
 :no-pattern (type $generated@@760)
 :no-pattern (type $generated@@761)
 :no-pattern ($generated $generated@@760)
 :no-pattern ($generated@@0 $generated@@760)
 :no-pattern ($generated $generated@@761)
 :no-pattern ($generated@@0 $generated@@761)
)))) (= ($generated@@268 $generated@@754 $generated@@755 $generated@@756 $generated@@758 $generated@@759) ($generated@@268 $generated@@754 $generated@@755 $generated@@757 $generated@@758 $generated@@759)))
 :pattern ( ($generated@@139 $generated@@756 $generated@@757) ($generated@@268 $generated@@754 $generated@@755 $generated@@757 $generated@@758 $generated@@759))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@763) $generated@@71) (= (type $generated@@764) $generated@@71)) (= (type $generated@@765) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@766) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@767) $generated@@162)) (= (type $generated@@768) $generated@@161)) (and (and (and ($generated@@139 $generated@@765 $generated@@766) (and ($generated@@296 $generated@@765) ($generated@@296 $generated@@766))) (and ($generated@@248 $generated@@768 $generated@@763) ($generated@@152 $generated@@767 ($generated@@247 $generated@@763 $generated@@764)))) (forall (($generated@@769 T@U) ($generated@@770 T@U) ) (! (let (($generated@@771 ($generated@@74 (type $generated@@770))))
 (=> (and (and (= (type $generated@@769) $generated@@84) (= (type $generated@@770) ($generated@@73 $generated@@771))) (and (not (= $generated@@769 $generated@@144)) ($generated@@0 ($generated@@88 ($generated@@159 $generated@@763 $generated@@764 $generated@@766 $generated@@767 $generated@@768) ($generated@@327 $generated@@769))))) (= ($generated@@90 ($generated@@88 $generated@@765 $generated@@769) $generated@@770) ($generated@@90 ($generated@@88 $generated@@766 $generated@@769) $generated@@770))))
 :no-pattern (type $generated@@769)
 :no-pattern (type $generated@@770)
 :no-pattern ($generated $generated@@769)
 :no-pattern ($generated@@0 $generated@@769)
 :no-pattern ($generated $generated@@770)
 :no-pattern ($generated@@0 $generated@@770)
)))) (= ($generated@@268 $generated@@763 $generated@@764 $generated@@765 $generated@@767 $generated@@768) ($generated@@268 $generated@@763 $generated@@764 $generated@@766 $generated@@767 $generated@@768)))
 :pattern ( ($generated@@139 $generated@@765 $generated@@766) ($generated@@268 $generated@@763 $generated@@764 $generated@@766 $generated@@767 $generated@@768))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (and (= (type $generated@@772) $generated@@173) (= (type $generated@@773) $generated@@71)) (= (type $generated@@774) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@296 $generated@@774) (and ($generated@@171 $generated@@772) (exists (($generated@@775 T@U) ) (!  (and (= (type $generated@@775) $generated@@71) ($generated@@81 $generated@@772 ($generated@@172 $generated@@773 $generated@@775) $generated@@774))
 :pattern ( ($generated@@81 $generated@@772 ($generated@@172 $generated@@773 $generated@@775) $generated@@774))
))))) ($generated@@306 ($generated@@180 $generated@@772) $generated@@773 $generated@@774))
 :pattern ( ($generated@@306 ($generated@@180 $generated@@772) $generated@@773 $generated@@774))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (and (= (type $generated@@776) $generated@@173) (= (type $generated@@777) $generated@@71)) (= (type $generated@@778) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@296 $generated@@778) (and ($generated@@171 $generated@@776) (exists (($generated@@779 T@U) ) (!  (and (= (type $generated@@779) $generated@@71) ($generated@@81 $generated@@776 ($generated@@172 $generated@@779 $generated@@777) $generated@@778))
 :pattern ( ($generated@@81 $generated@@776 ($generated@@172 $generated@@779 $generated@@777) $generated@@778))
))))) ($generated@@306 ($generated@@181 $generated@@776) $generated@@777 $generated@@778))
 :pattern ( ($generated@@306 ($generated@@181 $generated@@776) $generated@@777 $generated@@778))
)))
(assert (forall (($generated@@780 T@U) ) (!  (=> (= (type $generated@@780) $generated@@2) (= ($generated@@152 $generated@@780 $generated@@149)  (and (<= ($generated@@259 0) ($generated $generated@@780)) (< ($generated $generated@@780) 18446744073709551616))))
 :pattern ( ($generated@@152 $generated@@780 $generated@@149))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (= (type $generated@@781) $generated@@161) (= (type $generated@@782) $generated@@161)) (= ($generated@@261 ($generated@@291 $generated@@781) ($generated@@291 $generated@@782)) ($generated@@291 ($generated@@261 $generated@@781 $generated@@782))))
 :pattern ( ($generated@@261 ($generated@@291 $generated@@781) ($generated@@291 $generated@@782)))
)))
(assert (forall (($generated@@783 Int) ) (! (= ($generated@@327 ($generated@@8 ($generated@@259 $generated@@783))) ($generated@@291 ($generated@@327 ($generated@@8 $generated@@783))))
 :pattern ( ($generated@@327 ($generated@@8 ($generated@@259 $generated@@783))))
)))
(assert (forall (($generated@@784 T@U) ) (! (= ($generated@@327 ($generated@@291 $generated@@784)) ($generated@@291 ($generated@@327 $generated@@784)))
 :pattern ( ($generated@@327 ($generated@@291 $generated@@784)))
)))
(assert (forall (($generated@@785 T@U) ) (! (let (($generated@@786 ($generated@@321 (type $generated@@785))))
 (=> (and (= (type $generated@@785) ($generated@@320 $generated@@786)) (= ($generated@@319 $generated@@785) 0)) (= $generated@@785 ($generated@@318 $generated@@786))))
 :pattern ( ($generated@@319 $generated@@785))
)))
(assert (forall (($generated@@787 T@U) ($generated@@788 T@U) ($generated@@789 T@U) ) (! (let (($generated@@790 (type $generated@@788)))
 (=> (and (and (= (type $generated@@787) ($generated@@83 $generated@@790 $generated@@2)) (= (type $generated@@789) $generated@@2)) (<= 0 ($generated $generated@@789))) (= ($generated@@349 ($generated@@89 $generated@@787 $generated@@788 $generated@@789)) (+ (- ($generated@@349 $generated@@787) ($generated ($generated@@88 $generated@@787 $generated@@788))) ($generated $generated@@789)))))
 :pattern ( ($generated@@349 ($generated@@89 $generated@@787 $generated@@788 $generated@@789)))
)))
(assert (forall (($generated@@791 T@U) ($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ($generated@@795 T@U) ($generated@@796 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@791) $generated@@71) (= (type $generated@@792) $generated@@71)) (= (type $generated@@793) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@794) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@795) $generated@@162)) (= (type $generated@@796) $generated@@161)) (and (and (and ($generated@@139 $generated@@793 $generated@@794) (and ($generated@@296 $generated@@793) ($generated@@296 $generated@@794))) (and ($generated@@248 $generated@@796 $generated@@791) ($generated@@152 $generated@@795 ($generated@@247 $generated@@791 $generated@@792)))) (forall (($generated@@797 T@U) ($generated@@798 T@U) ) (! (let (($generated@@799 ($generated@@74 (type $generated@@798))))
 (=> (and (and (= (type $generated@@797) $generated@@84) (= (type $generated@@798) ($generated@@73 $generated@@799))) (and (not (= $generated@@797 $generated@@144)) ($generated@@0 ($generated@@88 ($generated@@159 $generated@@791 $generated@@792 $generated@@793 $generated@@795 $generated@@796) ($generated@@327 $generated@@797))))) (= ($generated@@90 ($generated@@88 $generated@@793 $generated@@797) $generated@@798) ($generated@@90 ($generated@@88 $generated@@794 $generated@@797) $generated@@798))))
 :no-pattern (type $generated@@797)
 :no-pattern (type $generated@@798)
 :no-pattern ($generated $generated@@797)
 :no-pattern ($generated@@0 $generated@@797)
 :no-pattern ($generated $generated@@798)
 :no-pattern ($generated@@0 $generated@@798)
)))) (= ($generated@@159 $generated@@791 $generated@@792 $generated@@793 $generated@@795 $generated@@796) ($generated@@159 $generated@@791 $generated@@792 $generated@@794 $generated@@795 $generated@@796)))
 :pattern ( ($generated@@139 $generated@@793 $generated@@794) ($generated@@159 $generated@@791 $generated@@792 $generated@@794 $generated@@795 $generated@@796))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 T@U) ($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ($generated@@805 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@800) $generated@@71) (= (type $generated@@801) $generated@@71)) (= (type $generated@@802) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@803) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@804) $generated@@162)) (= (type $generated@@805) $generated@@161)) (and (and (and ($generated@@139 $generated@@802 $generated@@803) (and ($generated@@296 $generated@@802) ($generated@@296 $generated@@803))) (and ($generated@@248 $generated@@805 $generated@@800) ($generated@@152 $generated@@804 ($generated@@247 $generated@@800 $generated@@801)))) (forall (($generated@@806 T@U) ($generated@@807 T@U) ) (! (let (($generated@@808 ($generated@@74 (type $generated@@807))))
 (=> (and (and (= (type $generated@@806) $generated@@84) (= (type $generated@@807) ($generated@@73 $generated@@808))) (and (not (= $generated@@806 $generated@@144)) ($generated@@0 ($generated@@88 ($generated@@159 $generated@@800 $generated@@801 $generated@@803 $generated@@804 $generated@@805) ($generated@@327 $generated@@806))))) (= ($generated@@90 ($generated@@88 $generated@@802 $generated@@806) $generated@@807) ($generated@@90 ($generated@@88 $generated@@803 $generated@@806) $generated@@807))))
 :no-pattern (type $generated@@806)
 :no-pattern (type $generated@@807)
 :no-pattern ($generated $generated@@806)
 :no-pattern ($generated@@0 $generated@@806)
 :no-pattern ($generated $generated@@807)
 :no-pattern ($generated@@0 $generated@@807)
)))) (= ($generated@@159 $generated@@800 $generated@@801 $generated@@802 $generated@@804 $generated@@805) ($generated@@159 $generated@@800 $generated@@801 $generated@@803 $generated@@804 $generated@@805)))
 :pattern ( ($generated@@139 $generated@@802 $generated@@803) ($generated@@159 $generated@@800 $generated@@801 $generated@@803 $generated@@804 $generated@@805))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ($generated@@811 T@U) ($generated@@812 T@U) ($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@809) $generated@@71) (= (type $generated@@810) $generated@@71)) (= (type $generated@@811) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@812) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@813) $generated@@162)) (= (type $generated@@814) $generated@@161)) (and (and (and ($generated@@139 $generated@@811 $generated@@812) (and ($generated@@296 $generated@@811) ($generated@@296 $generated@@812))) (and ($generated@@248 $generated@@814 $generated@@809) ($generated@@152 $generated@@813 ($generated@@247 $generated@@809 $generated@@810)))) (forall (($generated@@815 T@U) ($generated@@816 T@U) ) (! (let (($generated@@817 ($generated@@74 (type $generated@@816))))
 (=> (and (and (= (type $generated@@815) $generated@@84) (= (type $generated@@816) ($generated@@73 $generated@@817))) (and (not (= $generated@@815 $generated@@144)) ($generated@@0 ($generated@@88 ($generated@@159 $generated@@809 $generated@@810 $generated@@811 $generated@@813 $generated@@814) ($generated@@327 $generated@@815))))) (= ($generated@@90 ($generated@@88 $generated@@811 $generated@@815) $generated@@816) ($generated@@90 ($generated@@88 $generated@@812 $generated@@815) $generated@@816))))
 :no-pattern (type $generated@@815)
 :no-pattern (type $generated@@816)
 :no-pattern ($generated $generated@@815)
 :no-pattern ($generated@@0 $generated@@815)
 :no-pattern ($generated $generated@@816)
 :no-pattern ($generated@@0 $generated@@816)
)))) (= ($generated@@326 $generated@@809 $generated@@810 $generated@@811 $generated@@813 $generated@@814) ($generated@@326 $generated@@809 $generated@@810 $generated@@812 $generated@@813 $generated@@814)))
 :pattern ( ($generated@@139 $generated@@811 $generated@@812) ($generated@@326 $generated@@809 $generated@@810 $generated@@812 $generated@@813 $generated@@814))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 T@U) ($generated@@820 T@U) ($generated@@821 T@U) ($generated@@822 T@U) ($generated@@823 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@818) $generated@@71) (= (type $generated@@819) $generated@@71)) (= (type $generated@@820) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@821) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@822) $generated@@162)) (= (type $generated@@823) $generated@@161)) (and (and (and ($generated@@139 $generated@@820 $generated@@821) (and ($generated@@296 $generated@@820) ($generated@@296 $generated@@821))) (and ($generated@@248 $generated@@823 $generated@@818) ($generated@@152 $generated@@822 ($generated@@247 $generated@@818 $generated@@819)))) (forall (($generated@@824 T@U) ($generated@@825 T@U) ) (! (let (($generated@@826 ($generated@@74 (type $generated@@825))))
 (=> (and (and (= (type $generated@@824) $generated@@84) (= (type $generated@@825) ($generated@@73 $generated@@826))) (and (not (= $generated@@824 $generated@@144)) ($generated@@0 ($generated@@88 ($generated@@159 $generated@@818 $generated@@819 $generated@@821 $generated@@822 $generated@@823) ($generated@@327 $generated@@824))))) (= ($generated@@90 ($generated@@88 $generated@@820 $generated@@824) $generated@@825) ($generated@@90 ($generated@@88 $generated@@821 $generated@@824) $generated@@825))))
 :no-pattern (type $generated@@824)
 :no-pattern (type $generated@@825)
 :no-pattern ($generated $generated@@824)
 :no-pattern ($generated@@0 $generated@@824)
 :no-pattern ($generated $generated@@825)
 :no-pattern ($generated@@0 $generated@@825)
)))) (= ($generated@@326 $generated@@818 $generated@@819 $generated@@820 $generated@@822 $generated@@823) ($generated@@326 $generated@@818 $generated@@819 $generated@@821 $generated@@822 $generated@@823)))
 :pattern ( ($generated@@139 $generated@@820 $generated@@821) ($generated@@326 $generated@@818 $generated@@819 $generated@@821 $generated@@822 $generated@@823))
)))
(assert (forall (($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (= (type $generated@@827) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@828) $generated@@2)) ($generated@@81 $generated@@828 $generated@@46 $generated@@827))
 :pattern ( ($generated@@81 $generated@@828 $generated@@46 $generated@@827))
)))
(assert (forall (($generated@@829 T@U) ($generated@@830 T@U) ) (!  (=> (and (= (type $generated@@829) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@830) $generated@@3)) ($generated@@81 $generated@@830 $generated@@47 $generated@@829))
 :pattern ( ($generated@@81 $generated@@830 $generated@@47 $generated@@829))
)))
(assert (forall (($generated@@831 T@U) ($generated@@832 T@U) ) (!  (=> (and (= (type $generated@@831) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@832) $generated@@4)) ($generated@@81 $generated@@832 $generated@@44 $generated@@831))
 :pattern ( ($generated@@81 $generated@@832 $generated@@44 $generated@@831))
)))
(assert (forall (($generated@@833 T@U) ($generated@@834 T@U) ) (!  (=> (and (= (type $generated@@833) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@834) $generated@@602)) ($generated@@81 $generated@@834 $generated@@45 $generated@@833))
 :pattern ( ($generated@@81 $generated@@834 $generated@@45 $generated@@833))
)))
(assert (forall (($generated@@835 T@U) ($generated@@836 T@U) ) (!  (=> (and (= (type $generated@@835) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@836) $generated@@161)) ($generated@@81 $generated@@836 $generated@@48 $generated@@835))
 :pattern ( ($generated@@81 $generated@@836 $generated@@48 $generated@@835))
)))
(assert (forall (($generated@@837 T@U) ($generated@@838 T@U) ) (!  (=> (and (= (type $generated@@837) ($generated@@320 $generated@@161)) (= (type $generated@@838) $generated@@71)) (= ($generated@@152 $generated@@837 ($generated@@659 $generated@@838)) (forall (($generated@@839 Int) ) (!  (=> (and (<= 0 $generated@@839) (< $generated@@839 ($generated@@319 $generated@@837))) ($generated@@248 ($generated@@660 $generated@@837 $generated@@839) $generated@@838))
 :pattern ( ($generated@@660 $generated@@837 $generated@@839))
))))
 :pattern ( ($generated@@152 $generated@@837 ($generated@@659 $generated@@838)))
)))
(assert (forall (($generated@@841 T@U) ($generated@@842 Int) ) (!  (=> (= (type $generated@@841) ($generated@@320 $generated@@161)) (=> (and (<= 0 $generated@@842) (< $generated@@842 ($generated@@319 $generated@@841))) (< ($generated@@704 ($generated@@269 $generated@@173 ($generated@@660 $generated@@841 $generated@@842))) ($generated@@840 $generated@@841))))
 :pattern ( ($generated@@704 ($generated@@269 $generated@@173 ($generated@@660 $generated@@841 $generated@@842))))
)))
(assert (forall (($generated@@843 T@U) ($generated@@844 T@U) ($generated@@845 T@U) ) (!  (=> (and (and (and (= (type $generated@@843) ($generated@@361 $generated@@161 $generated@@161)) (= (type $generated@@844) $generated@@71)) (= (type $generated@@845) $generated@@71)) ($generated@@152 $generated@@843 ($generated@@551 $generated@@844 $generated@@845))) (and (and ($generated@@152 ($generated@@359 $generated@@843) ($generated@@280 $generated@@844)) ($generated@@152 ($generated@@474 $generated@@843) ($generated@@280 $generated@@845))) ($generated@@152 ($generated@@517 $generated@@843) ($generated@@280 ($generated@@172 $generated@@844 $generated@@845)))))
 :pattern ( ($generated@@152 $generated@@843 ($generated@@551 $generated@@844 $generated@@845)))
)))
(assert (forall (($generated@@846 T@U) ($generated@@847 T@U) ($generated@@848 T@U) ) (!  (=> (and (and (and (= (type $generated@@846) ($generated@@379 $generated@@161 $generated@@161)) (= (type $generated@@847) $generated@@71)) (= (type $generated@@848) $generated@@71)) ($generated@@152 $generated@@846 ($generated@@559 $generated@@847 $generated@@848))) (and (and ($generated@@152 ($generated@@377 $generated@@846) ($generated@@285 $generated@@847)) ($generated@@152 ($generated@@485 $generated@@846) ($generated@@285 $generated@@848))) ($generated@@152 ($generated@@525 $generated@@846) ($generated@@285 ($generated@@172 $generated@@847 $generated@@848)))))
 :pattern ( ($generated@@152 $generated@@846 ($generated@@559 $generated@@847 $generated@@848)))
)))
(assert (forall (($generated@@849 T@U) ) (!  (=> (= (type $generated@@849) $generated@@2) ($generated@@152 $generated@@849 $generated@@46))
 :pattern ( ($generated@@152 $generated@@849 $generated@@46))
)))
(assert (forall (($generated@@850 T@U) ) (!  (=> (= (type $generated@@850) $generated@@3) ($generated@@152 $generated@@850 $generated@@47))
 :pattern ( ($generated@@152 $generated@@850 $generated@@47))
)))
(assert (forall (($generated@@851 T@U) ) (!  (=> (= (type $generated@@851) $generated@@4) ($generated@@152 $generated@@851 $generated@@44))
 :pattern ( ($generated@@152 $generated@@851 $generated@@44))
)))
(assert (forall (($generated@@852 T@U) ) (!  (=> (= (type $generated@@852) $generated@@602) ($generated@@152 $generated@@852 $generated@@45))
 :pattern ( ($generated@@152 $generated@@852 $generated@@45))
)))
(assert (forall (($generated@@853 T@U) ) (!  (=> (= (type $generated@@853) $generated@@161) ($generated@@152 $generated@@853 $generated@@48))
 :pattern ( ($generated@@152 $generated@@853 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@854 () T@U)
(declare-fun $generated@@855 () T@U)
(declare-fun $generated@@856 () T@U)
(declare-fun $generated@@857 () Int)
(declare-fun $generated@@858 () Int)
(declare-fun $generated@@859 () Int)
(declare-fun $generated@@860 () T@U)
(declare-fun $generated@@861 (T@U) Bool)
(declare-fun $generated@@862 () Int)
(declare-fun $generated@@863 () T@U)
(declare-fun $generated@@864 () Int)
(declare-fun $generated@@865 () Int)
(declare-fun $generated@@866 () T@U)
(declare-fun $generated@@867 () T@U)
(declare-fun $generated@@868 () T@U)
(declare-fun $generated@@869 () T@U)
(declare-fun $generated@@870 () T@U)
(declare-fun $generated@@871 () T@U)
(declare-fun $generated@@872 () Int)
(declare-fun $generated@@873 () T@U)
(declare-fun $generated@@874 () Int)
(declare-fun $generated@@875 () Int)
(declare-fun $generated@@876 () T@U)
(declare-fun $generated@@877 () T@U)
(declare-fun $generated@@878 () T@U)
(declare-fun $generated@@879 () T@U)
(declare-fun $generated@@880 () T@U)
(declare-fun $generated@@881 () T@U)
(declare-fun $generated@@882 () Int)
(declare-fun $generated@@883 () Int)
(declare-fun $generated@@884 () Bool)
(declare-fun $generated@@885 () T@U)
(declare-fun $generated@@886 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@854) ($generated@@193 $generated@@84 $generated@@4)) (= (type $generated@@855) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@856) $generated@@162)) (= (type $generated@@860) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@863) $generated@@162)) (= (type $generated@@866) $generated@@161)) (= (type $generated@@867) $generated@@71)) (= (type $generated@@868) $generated@@71)) (= (type $generated@@869) $generated@@161)) (= (type $generated@@870) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@871) $generated@@161)) (= (type $generated@@873) $generated@@162)) (= (type $generated@@876) $generated@@84)) (= (type $generated@@877) $generated@@71)) (= (type $generated@@878) $generated@@71)) (= (type $generated@@879) $generated@@161)) (= (type $generated@@880) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@881) $generated@@84)) (= (type $generated@@885) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@887  (=> (= $generated@@854 ($generated@@192 $generated@@144 $generated@@855 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (not (= 1 $generated@@274))) (=> (not (= 1 $generated@@274)) (=> (and (= $generated@@856 $generated@@160) (= $generated@@857 ($generated@@259 5))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@259 0) $generated@@857) (< $generated@@857 18446744073709551616))) (=> (and (<= ($generated@@259 0) $generated@@857) (< $generated@@857 18446744073709551616)) (=> (= $generated@@858 ($generated@@259 5)) (=> (and (<= ($generated@@259 0) $generated@@859) (< $generated@@859 18446744073709551616)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@268 $generated@@149 $generated@@149 $generated@@855 $generated@@856 ($generated@@327 ($generated@@8 $generated@@858)))) (=> ($generated@@268 $generated@@149 $generated@@149 $generated@@855 $generated@@856 ($generated@@327 ($generated@@8 $generated@@858))) (=> (and ($generated@@296 $generated@@860) ($generated@@861 $generated@@860)) (=> (and (and (<= ($generated@@259 0) $generated@@862) (< $generated@@862 18446744073709551616)) (and (forall (($generated@@888 T@U) ) (!  (=> (= (type $generated@@888) $generated@@84) (=> (and (not (= $generated@@888 $generated@@144)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@855 $generated@@888) $generated@@60))) (= ($generated@@88 $generated@@860 $generated@@888) ($generated@@88 $generated@@855 $generated@@888))))
 :pattern ( ($generated@@88 $generated@@860 $generated@@888))
)) ($generated@@139 $generated@@855 $generated@@860))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (not (= 1 $generated@@274))) (=> (not (= 1 $generated@@274)) (=> (and (= $generated@@863 $generated@@160) (= $generated@@864 ($generated@@259 6))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@259 0) $generated@@864) (< $generated@@864 18446744073709551616))) (=> (and (<= ($generated@@259 0) $generated@@864) (< $generated@@864 18446744073709551616)) (=> (= $generated@@865 ($generated@@259 6)) (=> (and (and ($generated@@248 $generated@@866 $generated@@867) ($generated@@306 $generated@@866 $generated@@867 $generated@@855)) (and (= $generated@@868 $generated@@149) (= $generated@@869 ($generated@@327 ($generated@@8 $generated@@865))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@268 $generated@@868 $generated@@868 $generated@@860 $generated@@863 $generated@@869)) (=> ($generated@@268 $generated@@868 $generated@@868 $generated@@860 $generated@@863 $generated@@869) (=> (and ($generated@@296 $generated@@870) ($generated@@861 $generated@@870)) (=> (and (and (and ($generated@@248 $generated@@871 $generated@@868) ($generated@@306 $generated@@871 $generated@@868 $generated@@870)) (forall (($generated@@889 T@U) ) (!  (=> (= (type $generated@@889) $generated@@84) (=> (and (not (= $generated@@889 $generated@@144)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@860 $generated@@889) $generated@@60))) (= ($generated@@88 $generated@@870 $generated@@889) ($generated@@88 $generated@@860 $generated@@889))))
 :pattern ( ($generated@@88 $generated@@870 $generated@@889))
))) (and ($generated@@139 $generated@@860 $generated@@870) (= $generated@@872 ($generated ($generated@@269 $generated@@2 $generated@@871))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= 1 $generated@@274))) (=> (not (= 1 $generated@@274)) (=> (and (= $generated@@873 $generated@@160) (= $generated@@874 ($generated@@259 7))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@259 0) $generated@@874) (< $generated@@874 18446744073709551616))) (=> (and (<= ($generated@@259 0) $generated@@874) (< $generated@@874 18446744073709551616)) (=> (= $generated@@875 ($generated@@259 7)) (=> (and (and (not (= $generated@@876 $generated@@144)) (and ($generated@@152 $generated@@876 ($generated@@154 $generated@@877)) ($generated@@81 $generated@@876 ($generated@@154 $generated@@877) $generated@@855))) (and (= $generated@@878 $generated@@149) (= $generated@@879 ($generated@@327 ($generated@@8 $generated@@875))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@268 $generated@@878 $generated@@878 $generated@@870 $generated@@873 $generated@@879)) (=> ($generated@@268 $generated@@878 $generated@@878 $generated@@870 $generated@@873 $generated@@879) (=> (and ($generated@@296 $generated@@880) ($generated@@861 $generated@@880)) (=> (and (and (and (not (= $generated@@881 $generated@@144)) (and ($generated@@152 $generated@@881 ($generated@@154 $generated@@878)) ($generated@@81 $generated@@881 ($generated@@154 $generated@@878) $generated@@880))) (not ($generated@@0 ($generated@@90 ($generated@@88 $generated@@870 $generated@@881) $generated@@60)))) (and (forall (($generated@@890 T@U) ) (!  (=> (= (type $generated@@890) $generated@@84) (=> (and (not (= $generated@@890 $generated@@144)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@870 $generated@@890) $generated@@60))) (= ($generated@@88 $generated@@880 $generated@@890) ($generated@@88 $generated@@870 $generated@@890))))
 :pattern ( ($generated@@88 $generated@@880 $generated@@890))
)) ($generated@@139 $generated@@870 $generated@@880))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@881 $generated@@144))))))))))))))))))))))))))))))))))))))))
(let (($generated@@891  (=> (and ($generated@@296 $generated@@855) ($generated@@861 $generated@@855)) (=> (and (and (<= ($generated@@259 0) $generated@@882) (< $generated@@882 18446744073709551616)) true) (=> (and (and (and (and (<= ($generated@@259 0) $generated@@883) (< $generated@@883 18446744073709551616)) true) (and (=> $generated@@884 (and ($generated@@152 $generated@@885 ($generated@@154 $generated@@149)) ($generated@@81 $generated@@885 ($generated@@154 $generated@@149) $generated@@855))) true)) (and (and (and (<= ($generated@@259 0) $generated@@886) (< $generated@@886 18446744073709551616)) true) (and (= 2 $generated@@274) (= (ControlFlow 0 13) 2)))) $generated@@887)))))
$generated@@891)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 (Int) Int)
(declare-fun $generated@@248 (Int) Bool)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (=> (<= 1 $generated@@246) (forall (($generated@@249 Int) ) (!  (=> (or ($generated@@248 $generated@@249) (and (not (= 1 $generated@@246)) (and (<= ($generated@@240 0) $generated@@249) (< $generated@@249 4294967296)))) (= ($generated@@247 $generated@@249) (+ $generated@@249 1)))
 :pattern ( ($generated@@247 $generated@@249))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@66) (= (type $generated@@253) $generated@@66)) (= (type $generated@@254) $generated@@154)) (= (type $generated@@255) $generated@@154)) (= (type $generated@@256) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@250 $generated@@256)) (= ($generated@@76 ($generated@@220 $generated@@254 $generated@@255) ($generated@@144 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@254 $generated@@255) ($generated@@144 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@145) (= ($generated@@143 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@259))
)))
(assert  (=> (<= 1 $generated@@246) (forall (($generated@@260 Int) ) (!  (=> (or ($generated@@248 $generated@@260) (and (not (= 1 $generated@@246)) (and (<= ($generated@@240 0) $generated@@260) (< $generated@@260 4294967296)))) (and (<= ($generated@@240 0) ($generated@@247 $generated@@260)) (< ($generated@@247 $generated@@260) 18446744073709551616)))
 :pattern ( ($generated@@247 $generated@@260))
))))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@145) ($generated@@143 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@154) (= (type $generated@@263) $generated@@154)) (= $generated@@261 ($generated@@220 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@143 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 17)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@154)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@66) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@251 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@76 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@251 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@279) $generated@@154)) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@251 $generated@@279 $generated@@280 $generated@@277)) ($generated@@251 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@251 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@282) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@284) $generated@@66)) ($generated@@134 $generated@@281 $generated@@282)) ($generated@@76 $generated@@283 $generated@@284 $generated@@281)) ($generated@@76 $generated@@283 $generated@@284 $generated@@282))
 :pattern ( ($generated@@134 $generated@@281 $generated@@282) ($generated@@76 $generated@@283 $generated@@284 $generated@@281))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (=> (<= 1 $generated@@246) (forall (($generated@@327 Int) ) (!  (=> (or ($generated@@248 ($generated@@240 $generated@@327)) (and (not (= 1 $generated@@246)) (and (<= ($generated@@240 0) $generated@@327) (< $generated@@327 4294967296)))) (= ($generated@@247 ($generated@@240 $generated@@327)) ($generated@@240 (+ $generated@@327 1))))
 :weight 3
 :pattern ( ($generated@@247 ($generated@@240 $generated@@327)))
))))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@81 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@78 $generated@@329 $generated@@2)) (= ($generated@@160 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@83 $generated@@328 $generated@@330))) (<= ($generated ($generated@@83 $generated@@328 $generated@@330)) ($generated@@285 $generated@@328))))
 :pattern ( ($generated@@83 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@160 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@154) ($generated@@221 $generated@@334 $generated@@138)) (and (= ($generated@@272 ($generated@@331 $generated@@2 $generated@@334)) $generated@@334) ($generated@@141 ($generated@@331 $generated@@2 $generated@@334) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@334 $generated@@138))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(let (($generated@@337 ($generated@@294 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@293 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@292 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@291 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@295 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@78 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@295 (type $generated@@342))))
(let (($generated@@344 ($generated@@294 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@293 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@292 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(let (($generated@@348 ($generated@@312 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@311 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@310 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@309 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@313 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@78 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@313 (type $generated@@353))))
(let (($generated@@355 ($generated@@312 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@311 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@310 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@358) $generated@@66)) (= ($generated@@141 $generated@@357 ($generated@@159 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@357 $generated@@359)))) ($generated@@221 $generated@@359 $generated@@358))
 :pattern ( ($generated@@83 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@141 $generated@@357 ($generated@@159 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@361) $generated@@66)) (= (type $generated@@362) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@360 ($generated@@230 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@154) ($generated@@0 ($generated@@83 $generated@@360 $generated@@363))) ($generated@@251 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@83 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@76 $generated@@360 ($generated@@230 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@365) $generated@@66)) (= (type $generated@@366) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@364 ($generated@@235 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@154) ($generated@@0 ($generated@@83 $generated@@364 $generated@@367))) ($generated@@251 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@83 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@76 $generated@@364 ($generated@@235 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@83 ($generated@@286 $generated@@369) $generated@@368)))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@295 (type $generated@@373))))
(let (($generated@@375 ($generated@@294 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@293 $generated@@154 $generated@@154)) (= (type $generated@@377) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@376) ($generated@@152 ($generated@@331 $generated@@145 $generated@@377)))) (= ($generated@@83 ($generated@@371 $generated@@376) ($generated@@152 ($generated@@331 $generated@@145 $generated@@377))) ($generated@@153 ($generated@@331 $generated@@145 $generated@@377))))))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@313 (type $generated@@381))))
(let (($generated@@383 ($generated@@312 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@311 $generated@@154 $generated@@154)) (= (type $generated@@385) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@384) ($generated@@152 ($generated@@331 $generated@@145 $generated@@385)))) (= ($generated@@83 ($generated@@379 $generated@@384) ($generated@@152 ($generated@@331 $generated@@145 $generated@@385))) ($generated@@153 ($generated@@331 $generated@@145 $generated@@385))))))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@294 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@293 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@339 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@371 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@339 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@312 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@311 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@83 ($generated@@350 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@83 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@391) $generated@@395))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@83 ($generated@@350 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@66)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@293 $generated@@154 $generated@@154)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@399) $generated@@403))) (and ($generated@@251 ($generated@@83 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@251 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@76 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@66)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@311 $generated@@154 $generated@@154)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@407) $generated@@411))) (and ($generated@@251 ($generated@@83 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@251 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@76 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@413) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@414) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@412 $generated@@414))) (and ($generated@@134 $generated@@412 $generated@@413) ($generated@@134 $generated@@413 $generated@@414))) ($generated@@134 $generated@@412 $generated@@414))
 :pattern ( ($generated@@134 $generated@@412 $generated@@413) ($generated@@134 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@78 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@313 (type $generated@@417))))
(let (($generated@@419 ($generated@@312 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@311 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@310 $generated@@419 $generated@@418)) (= ($generated@@309 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@309 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@313 (type $generated@@420))))
(let (($generated@@422 ($generated@@312 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@311 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@310 $generated@@422 $generated@@421)) (= ($generated@@350 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@350 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@313 (type $generated@@423))))
(let (($generated@@425 ($generated@@312 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@311 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@310 $generated@@425 $generated@@424)) (= ($generated@@378 $generated@@423) ($generated@@415 $generated@@154))))))
 :pattern ( ($generated@@378 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@295 (type $generated@@426))))
(let (($generated@@428 ($generated@@294 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@293 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@292 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@370 $generated@@426) ($generated@@272 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@370 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@313 (type $generated@@431))))
(let (($generated@@433 ($generated@@312 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@311 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@310 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@154) (= (type $generated@@435) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@378 $generated@@431) ($generated@@272 ($generated@@220 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@378 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@154) ($generated@@221 $generated@@436 $generated@@46)) (and (= ($generated@@272 ($generated@@331 $generated@@2 $generated@@436)) $generated@@436) ($generated@@141 ($generated@@331 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@154) ($generated@@221 $generated@@437 $generated@@47)) (and (= ($generated@@272 ($generated@@331 $generated@@3 $generated@@437)) $generated@@437) ($generated@@141 ($generated@@331 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@154) ($generated@@221 $generated@@438 $generated@@44)) (and (= ($generated@@272 ($generated@@331 $generated@@4 $generated@@438)) $generated@@438) ($generated@@141 ($generated@@331 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@154) ($generated@@221 $generated@@440 $generated@@45)) (and (= ($generated@@272 ($generated@@331 $generated@@439 $generated@@440)) $generated@@440) ($generated@@141 ($generated@@331 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@66) (= ($generated@@221 ($generated@@272 $generated@@441) $generated@@442) ($generated@@141 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@221 ($generated@@272 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@81 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@78 $generated@@444 $generated@@2)) (<= 0 ($generated@@285 $generated@@443))))
 :pattern ( ($generated@@285 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@267 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@266 $generated@@446)) (<= 0 ($generated@@265 $generated@@445))))
 :pattern ( ($generated@@265 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@396 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@396 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@396 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@396 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@396 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@404 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@404 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@404 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@404 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@74 ($generated@@404 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@154) (= (type $generated@@468) $generated@@154)) (= ($generated@@257 ($generated@@220 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@144 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@144 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@144 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@154) (= (type $generated@@478) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@220 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@154) (= (type $generated@@480) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@220 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@267 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@266 $generated@@154)) (= (type $generated@@488) $generated@@66)) (= (type $generated@@489) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@265 $generated@@487))) ($generated@@251 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@76 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@77 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@77 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@493 ($generated@@230 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@230 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@235 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@235 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@159 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@159 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@331 $generated@@510 ($generated@@272 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@272 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@293 $generated@@154 $generated@@154)) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@66)) (= ($generated@@141 $generated@@511 ($generated@@396 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@511) $generated@@514))) (and ($generated@@221 ($generated@@83 ($generated@@371 $generated@@511) $generated@@514) $generated@@513) ($generated@@221 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@511) $generated@@514))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@141 $generated@@511 ($generated@@396 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@311 $generated@@154 $generated@@154)) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) $generated@@66)) (= ($generated@@141 $generated@@515 ($generated@@404 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@515) $generated@@518))) (and ($generated@@221 ($generated@@83 ($generated@@379 $generated@@515) $generated@@518) $generated@@517) ($generated@@221 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@515) $generated@@518))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@141 $generated@@515 ($generated@@404 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@154) (= (type $generated@@522) $generated@@154)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@220 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@220 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@154)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@220 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@220 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@154) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@221 $generated@@525 ($generated@@396 $generated@@526 $generated@@527))) (and (= ($generated@@272 ($generated@@331 ($generated@@293 $generated@@154 $generated@@154) $generated@@525)) $generated@@525) ($generated@@141 ($generated@@331 ($generated@@293 $generated@@154 $generated@@154) $generated@@525) ($generated@@396 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@525 ($generated@@396 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@154) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) ($generated@@221 $generated@@528 ($generated@@404 $generated@@529 $generated@@530))) (and (= ($generated@@272 ($generated@@331 ($generated@@311 $generated@@154 $generated@@154) $generated@@528)) $generated@@528) ($generated@@141 ($generated@@331 ($generated@@311 $generated@@154 $generated@@154) $generated@@528) ($generated@@404 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@404 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= (type $generated@@533) $generated@@154)) ($generated@@221 $generated@@533 ($generated@@144 $generated@@531 $generated@@532))) (and (= ($generated@@272 ($generated@@331 $generated@@145 $generated@@533)) $generated@@533) ($generated@@141 ($generated@@331 $generated@@145 $generated@@533) ($generated@@144 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@221 $generated@@533 ($generated@@144 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@83 ($generated@@415 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@83 ($generated@@415 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@144 $generated@@538 $generated@@539)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@145) (= ($generated@@519 ($generated@@272 $generated@@540)) ($generated@@520 $generated@@540)))
 :pattern ( ($generated@@519 ($generated@@272 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@154) ($generated@@221 $generated@@541 ($generated@@77 0))) (and (= ($generated@@272 ($generated@@331 $generated@@2 $generated@@541)) $generated@@541) ($generated@@141 ($generated@@331 ($generated@@78 $generated@@154 $generated@@4) $generated@@541) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@77 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@230 $generated@@543))) (and (= ($generated@@272 ($generated@@331 ($generated@@78 $generated@@154 $generated@@4) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@331 ($generated@@78 $generated@@154 $generated@@4) $generated@@542) ($generated@@230 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@230 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@66)) ($generated@@221 $generated@@544 ($generated@@235 $generated@@545))) (and (= ($generated@@272 ($generated@@331 ($generated@@78 $generated@@154 $generated@@4) $generated@@544)) $generated@@544) ($generated@@141 ($generated@@331 ($generated@@78 $generated@@154 $generated@@4) $generated@@544) ($generated@@235 $generated@@545))))
 :pattern ( ($generated@@221 $generated@@544 ($generated@@235 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@66)) ($generated@@221 $generated@@546 ($generated@@159 $generated@@547))) (and (= ($generated@@272 ($generated@@331 ($generated@@78 $generated@@154 $generated@@2) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@331 ($generated@@78 $generated@@154 $generated@@2) $generated@@546) ($generated@@159 $generated@@547))))
 :pattern ( ($generated@@221 $generated@@546 ($generated@@159 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@154) (= (type $generated@@549) $generated@@66)) ($generated@@221 $generated@@548 ($generated@@481 $generated@@549))) (and (= ($generated@@272 ($generated@@331 ($generated@@266 $generated@@154) $generated@@548)) $generated@@548) ($generated@@141 ($generated@@331 ($generated@@266 $generated@@154) $generated@@548) ($generated@@481 $generated@@549))))
 :pattern ( ($generated@@221 $generated@@548 ($generated@@481 $generated@@549)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@536 $generated@@138) $generated@@65))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@159 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@251 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@159 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@250 $generated@@556) (and ($generated@@143 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@66) ($generated@@76 $generated@@554 ($generated@@144 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@144 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@251 ($generated@@152 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@251 ($generated@@152 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@250 $generated@@560) (and ($generated@@143 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@66) ($generated@@76 $generated@@558 ($generated@@144 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@76 $generated@@558 ($generated@@144 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@251 ($generated@@153 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@251 ($generated@@153 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@2) (= ($generated@@141 $generated@@562 $generated@@138)  (and (<= ($generated@@240 0) ($generated $generated@@562)) (< ($generated $generated@@562) 4294967296))))
 :pattern ( ($generated@@141 $generated@@562 $generated@@138))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@563) ($generated@@242 $generated@@564)) ($generated@@242 ($generated@@220 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@563) ($generated@@242 $generated@@564)))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@272 ($generated@@8 ($generated@@240 $generated@@565))) ($generated@@242 ($generated@@272 ($generated@@8 $generated@@565))))
 :pattern ( ($generated@@272 ($generated@@8 ($generated@@240 $generated@@565))))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@272 ($generated@@242 $generated@@566)) ($generated@@242 ($generated@@272 $generated@@566)))
 :pattern ( ($generated@@272 ($generated@@242 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@267 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@266 $generated@@568)) (= ($generated@@265 $generated@@567) 0)) (= $generated@@567 ($generated@@264 $generated@@568))))
 :pattern ( ($generated@@265 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@78 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@285 ($generated@@84 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@285 $generated@@569) ($generated ($generated@@83 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@2)) ($generated@@76 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@3)) ($generated@@76 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@4)) ($generated@@76 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@439)) ($generated@@76 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@582) $generated@@154)) ($generated@@76 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@76 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@266 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= ($generated@@141 $generated@@583 ($generated@@481 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@265 $generated@@583))) ($generated@@221 ($generated@@482 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@482 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@481 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@266 $generated@@154)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@265 $generated@@587))) (< ($generated@@520 ($generated@@331 $generated@@145 ($generated@@482 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@520 ($generated@@331 $generated@@145 ($generated@@482 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@293 $generated@@154 $generated@@154)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@141 $generated@@589 ($generated@@396 $generated@@590 $generated@@591))) (and (and ($generated@@141 ($generated@@291 $generated@@589) ($generated@@230 $generated@@590)) ($generated@@141 ($generated@@339 $generated@@589) ($generated@@230 $generated@@591))) ($generated@@141 ($generated@@370 $generated@@589) ($generated@@230 ($generated@@144 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@396 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@311 $generated@@154 $generated@@154)) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) $generated@@66)) ($generated@@141 $generated@@592 ($generated@@404 $generated@@593 $generated@@594))) (and (and ($generated@@141 ($generated@@309 $generated@@592) ($generated@@235 $generated@@593)) ($generated@@141 ($generated@@350 $generated@@592) ($generated@@235 $generated@@594))) ($generated@@141 ($generated@@378 $generated@@592) ($generated@@235 ($generated@@144 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@141 $generated@@592 ($generated@@404 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@141 $generated@@595 $generated@@46))
 :pattern ( ($generated@@141 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@141 $generated@@596 $generated@@47))
 :pattern ( ($generated@@141 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@141 $generated@@597 $generated@@44))
 :pattern ( ($generated@@141 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@439) ($generated@@141 $generated@@598 $generated@@45))
 :pattern ( ($generated@@141 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@154) ($generated@@141 $generated@@599 $generated@@48))
 :pattern ( ($generated@@141 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () Int)
(assert  (and (and (= (type $generated@@600) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@601) $generated@@79)) (= (type $generated@@602) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@606  (=> (= $generated@@600 ($generated@@165 $generated@@601 $generated@@602 $generated@@60 false)) (=> (and (= $generated@@603 ($generated@@240 12)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@240 0) $generated@@603) (< $generated@@603 4294967296))))))
(let (($generated@@607  (=> (and ($generated@@250 $generated@@602) ($generated@@604 $generated@@602)) (=> (and (and (and (<= ($generated@@240 0) $generated@@605) (< $generated@@605 18446744073709551616)) true) (and (= 3 $generated@@246) (= (ControlFlow 0 3) 2))) $generated@@606))))
$generated@@607)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
