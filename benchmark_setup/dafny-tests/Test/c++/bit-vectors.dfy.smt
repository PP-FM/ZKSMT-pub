(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 18446744073709551616))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (Int) (_ BitVec 64))
(declare-fun $generated@@74 (Int) Int)
(declare-fun $generated@@75 (Int) Bool)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 ((_ BitVec 7)) T@U)
(declare-fun $generated@@142 (T@U) (_ BitVec 7))
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 ((_ BitVec 64)) T@U)
(declare-fun $generated@@150 (T@U) (_ BitVec 64))
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@77 T@U) ) (! (let (($generated@@78 (type $generated@@77)))
(= (type ($generated@@76 $generated@@77)) $generated@@78))
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@79 Int) ) (!  (=> (or ($generated@@75 ($generated@@74 $generated@@79)) (and (not (= 1 $generated@@72)) (and (and (<= ($generated@@74 0) $generated@@79) (< $generated@@79 18446744073709551616)) ($generated@@0 ($generated@@76 ($generated@@11 (< $generated@@79 64))))))) (= ($generated@@73 ($generated@@74 $generated@@79)) (bvshl #x0000000000000001 (concat #b000000000000000000000000000000000000000000000000000000000 ((_ int2bv 7) ($generated@@74 $generated@@79))))))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@74 $generated@@79)))
))))
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@65)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@64)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert  (and (and (and (forall (($generated@@143 (_ BitVec 7)) ) (! (= ($generated@@142 ($generated@@141 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@141 $generated@@143))
)) (= ($generated@@1 $generated@@140) 14)) (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@140) (= ($generated@@141 ($generated@@142 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@142 $generated@@144))
))) (forall (($generated@@145 (_ BitVec 7)) ) (! (= (type ($generated@@141 $generated@@145)) $generated@@140)
 :pattern ( ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@140) (= (type $generated@@147) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@146 ($generated@@83 7) $generated@@147))
 :pattern ( ($generated@@82 $generated@@146 ($generated@@83 7) $generated@@147))
)))
(assert  (and (and (and (forall (($generated@@151 (_ BitVec 64)) ) (! (= ($generated@@150 ($generated@@149 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@151))
)) (= ($generated@@1 $generated@@148) 15)) (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@148) (= ($generated@@149 ($generated@@150 $generated@@152)) $generated@@152))
 :pattern ( ($generated@@150 $generated@@152))
))) (forall (($generated@@153 (_ BitVec 64)) ) (! (= (type ($generated@@149 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@154 ($generated@@83 64) $generated@@155))
 :pattern ( ($generated@@82 $generated@@154 ($generated@@83 64) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@83 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@83 0)))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@140) ($generated@@156 $generated@@158 ($generated@@83 7)))
 :pattern ( ($generated@@156 $generated@@158 ($generated@@83 7)))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@148) ($generated@@156 $generated@@159 ($generated@@83 64)))
 :pattern ( ($generated@@156 $generated@@159 ($generated@@83 64)))
)))
(assert  (and (= ($generated@@1 $generated@@162) 16) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@64)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@64) (= (type $generated@@166) $generated@@64)) (= (type $generated@@167) $generated@@162)) ($generated@@156 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@156 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 17) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@64)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@180) $generated@@64)) ($generated@@156 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@156 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@85 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@67 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@85) (= (type $generated@@231) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@232) ($generated@@66 $generated@@4))) (= (type $generated@@234) $generated@@85)) (= (type $generated@@235) ($generated@@66 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@183 $generated@@85 $generated@@4))
 :pattern ( ($generated@@237 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@67 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@85) (= (type $generated@@243) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@244) ($generated@@66 $generated@@4))) (= (type $generated@@246) $generated@@85)) (= (type $generated@@247) ($generated@@66 $generated@@248))) (= ($generated@@0 ($generated@@181 ($generated@@237 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@181 ($generated@@237 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@162)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@64) (= (type $generated@@254) $generated@@64)) (= (type $generated@@255) $generated@@171)) (= (type $generated@@256) $generated@@171)) (= ($generated@@156 ($generated@@249 $generated@@255 $generated@@256) ($generated@@161 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@156 ($generated@@249 $generated@@255 $generated@@256) ($generated@@161 $generated@@253 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@162) (= (type $generated@@258) $generated@@162)) (= ($generated@@168 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@168 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@156 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@171) ($generated@@0 ($generated@@89 $generated@@261 $generated@@263))) ($generated@@250 $generated@@263 $generated@@262))
 :pattern ( ($generated@@89 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@156 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@64)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@267) $generated@@64)) (= ($generated@@156 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@171) ($generated@@0 ($generated@@89 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@89 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@156 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@74 $generated@@269) $generated@@269)
 :pattern ( ($generated@@74 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@76 $generated@@270) $generated@@270)
 :pattern ( ($generated@@76 $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) $generated@@64)) (= (type $generated@@275) $generated@@171)) (= (type $generated@@276) $generated@@171)) (= (type $generated@@277) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@271 $generated@@277)) (= ($generated@@82 ($generated@@249 $generated@@275 $generated@@276) ($generated@@161 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@82 ($generated@@249 $generated@@275 $generated@@276) ($generated@@161 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@68)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@162) (= ($generated@@160 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@160 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@162) ($generated@@160 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@171) (= (type $generated@@283) $generated@@171)) (= $generated@@281 ($generated@@249 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@160 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 19)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@171)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@64) (= (type $generated@@296) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@272 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@82 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@272 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@84 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@87 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@84 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@89 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@84 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@89 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@89 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 21)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@84 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@89 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@89 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@87 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@84 $generated@@340 $generated@@2)) (= ($generated@@177 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@89 $generated@@339 $generated@@341))) (<= ($generated ($generated@@89 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@89 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@177 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@89 ($generated@@303 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@303 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@307 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@307 (type $generated@@349))))
(let (($generated@@351 ($generated@@306 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@305 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@304 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@89 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@325 (type $generated@@353))))
(let (($generated@@355 ($generated@@324 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@323 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@322 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@89 ($generated@@321 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@321 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@325 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@84 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@325 (type $generated@@360))))
(let (($generated@@362 ($generated@@324 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@323 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@322 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@89 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@365) $generated@@64)) (= ($generated@@156 $generated@@364 ($generated@@176 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@364 $generated@@366)))) ($generated@@250 $generated@@366 $generated@@365))
 :pattern ( ($generated@@89 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@156 $generated@@364 ($generated@@176 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@368) $generated@@64)) (= (type $generated@@369) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@367 ($generated@@259 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@171) ($generated@@0 ($generated@@89 $generated@@367 $generated@@370))) ($generated@@272 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@89 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@82 $generated@@367 ($generated@@259 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@372) $generated@@64)) (= (type $generated@@373) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@371 ($generated@@264 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@171) ($generated@@0 ($generated@@89 $generated@@371 $generated@@374))) ($generated@@272 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@89 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@82 $generated@@371 ($generated@@264 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated ($generated@@89 ($generated@@298 $generated@@376) $generated@@375)) 0))
 :pattern ( (let (($generated@@376 (type $generated@@375)))
($generated@@89 ($generated@@298 $generated@@376) $generated@@375)))
)))
(assert  (and (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@377 $generated@@380)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@377 $generated@@380))
)) (forall (($generated@@381 T@T) ($generated@@382 T@U) ) (! (= (type ($generated@@378 $generated@@381 $generated@@382)) $generated@@381)
 :pattern ( ($generated@@378 $generated@@381 $generated@@382))
))) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@307 (type $generated@@383))))
(let (($generated@@385 ($generated@@306 (type $generated@@383))))
(= (type ($generated@@379 $generated@@383)) ($generated@@84 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@379 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@305 $generated@@171 $generated@@171)) (= (type $generated@@387) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@377 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@89 ($generated@@303 $generated@@386) ($generated@@169 ($generated@@378 $generated@@162 $generated@@387)))) (= ($generated@@89 ($generated@@379 $generated@@386) ($generated@@169 ($generated@@378 $generated@@162 $generated@@387))) ($generated@@170 ($generated@@378 $generated@@162 $generated@@387))))))
 :pattern ( ($generated@@89 ($generated@@377 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@325 (type $generated@@391))))
(let (($generated@@393 ($generated@@324 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@84 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@323 $generated@@171 $generated@@171)) (= (type $generated@@395) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@89 ($generated@@321 $generated@@394) ($generated@@169 ($generated@@378 $generated@@162 $generated@@395)))) (= ($generated@@89 ($generated@@389 $generated@@394) ($generated@@169 ($generated@@378 $generated@@162 $generated@@395))) ($generated@@170 ($generated@@378 $generated@@162 $generated@@395))))))
 :pattern ( ($generated@@89 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@306 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@305 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@89 ($generated@@346 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@89 ($generated@@303 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@89 ($generated@@379 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@89 ($generated@@303 $generated@@396) $generated@@400))
 :pattern ( ($generated@@89 ($generated@@379 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@89 ($generated@@346 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@324 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@323 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@89 ($generated@@357 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@89 ($generated@@321 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@89 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@89 ($generated@@321 $generated@@401) $generated@@405))
 :pattern ( ($generated@@89 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@89 ($generated@@357 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@64)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@305 $generated@@171 $generated@@171)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@303 $generated@@409) $generated@@413))) (and ($generated@@272 ($generated@@89 ($generated@@379 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@272 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@89 ($generated@@379 $generated@@409) $generated@@413))
 :pattern ( ($generated@@89 ($generated@@303 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@82 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@323 $generated@@171 $generated@@171)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@321 $generated@@417) $generated@@421))) (and ($generated@@272 ($generated@@89 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@272 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@89 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@89 ($generated@@321 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@82 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@84 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@325 (type $generated@@424))))
(let (($generated@@426 ($generated@@324 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@323 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@322 $generated@@426 $generated@@425)) (= ($generated@@321 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@321 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@325 (type $generated@@427))))
(let (($generated@@429 ($generated@@324 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@323 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@322 $generated@@429 $generated@@428)) (= ($generated@@357 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@357 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@325 (type $generated@@430))))
(let (($generated@@432 ($generated@@324 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@323 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@322 $generated@@432 $generated@@431)) (= ($generated@@388 $generated@@430) ($generated@@422 $generated@@171))))))
 :pattern ( ($generated@@388 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@307 (type $generated@@433))))
(let (($generated@@435 ($generated@@306 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@305 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@304 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@171) (= (type $generated@@437) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@377 $generated@@433) ($generated@@292 ($generated@@249 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@377 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@325 (type $generated@@438))))
(let (($generated@@440 ($generated@@324 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@323 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@322 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@171) (= (type $generated@@442) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@388 $generated@@438) ($generated@@292 ($generated@@249 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@388 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@171) ($generated@@250 $generated@@443 $generated@@46)) (and (= ($generated@@292 ($generated@@378 $generated@@2 $generated@@443)) $generated@@443) ($generated@@156 ($generated@@378 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@171) ($generated@@250 $generated@@444 $generated@@47)) (and (= ($generated@@292 ($generated@@378 $generated@@3 $generated@@444)) $generated@@444) ($generated@@156 ($generated@@378 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@250 $generated@@445 $generated@@44)) (and (= ($generated@@292 ($generated@@378 $generated@@4 $generated@@445)) $generated@@445) ($generated@@156 ($generated@@378 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 22))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@171) ($generated@@250 $generated@@447 $generated@@45)) (and (= ($generated@@292 ($generated@@378 $generated@@446 $generated@@447)) $generated@@447) ($generated@@156 ($generated@@378 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@64) (= ($generated@@250 ($generated@@292 $generated@@448) $generated@@449) ($generated@@156 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@250 ($generated@@292 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@87 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@84 $generated@@451 $generated@@2)) (<= 0 ($generated@@297 $generated@@450))))
 :pattern ( ($generated@@297 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@287 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@286 $generated@@453)) (<= 0 ($generated@@285 $generated@@452))))
 :pattern ( ($generated@@285 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@406 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@406 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@406 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@80 ($generated@@406 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@414 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@414 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@414 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@80 ($generated@@414 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@171) (= (type $generated@@475) $generated@@171)) (= ($generated@@278 ($generated@@249 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@161 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@161 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@161 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@161 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@171) (= (type $generated@@485) $generated@@171)) (= ($generated@@169 ($generated@@249 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@249 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@171) (= (type $generated@@487) $generated@@171)) (= ($generated@@170 ($generated@@249 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@249 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@287 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@286 $generated@@171)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@285 $generated@@494))) ($generated@@272 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@82 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@83 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@83 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@259 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@259 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@80 ($generated@@259 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@264 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@264 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@80 ($generated@@264 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@176 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@176 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@80 ($generated@@176 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@80 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@378 $generated@@517 ($generated@@292 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@292 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@305 $generated@@171 $generated@@171)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@156 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@303 $generated@@518) $generated@@521))) (and ($generated@@250 ($generated@@89 ($generated@@379 $generated@@518) $generated@@521) $generated@@520) ($generated@@250 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@89 ($generated@@379 $generated@@518) $generated@@521))
 :pattern ( ($generated@@89 ($generated@@303 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@156 $generated@@518 ($generated@@406 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@323 $generated@@171 $generated@@171)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) (= ($generated@@156 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@321 $generated@@522) $generated@@525))) (and ($generated@@250 ($generated@@89 ($generated@@389 $generated@@522) $generated@@525) $generated@@524) ($generated@@250 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@89 ($generated@@389 $generated@@522) $generated@@525))
 :pattern ( ($generated@@89 ($generated@@321 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@156 $generated@@522 ($generated@@414 $generated@@523 $generated@@524)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@526 Int) ) (!  (=> (or ($generated@@75 $generated@@526) (and (not (= 1 $generated@@72)) (and (and (<= ($generated@@74 0) $generated@@526) (< $generated@@526 18446744073709551616)) (< $generated@@526 64)))) (= ($generated@@73 $generated@@526) (bvshl #x0000000000000001 (concat #b000000000000000000000000000000000000000000000000000000000 ((_ int2bv 7) $generated@@526)))))
 :pattern ( ($generated@@73 $generated@@526))
))))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@171) (= (type $generated@@530) $generated@@171)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@249 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@249 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@171) (= (type $generated@@532) $generated@@171)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@249 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@249 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@171) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) ($generated@@250 $generated@@533 ($generated@@406 $generated@@534 $generated@@535))) (and (= ($generated@@292 ($generated@@378 ($generated@@305 $generated@@171 $generated@@171) $generated@@533)) $generated@@533) ($generated@@156 ($generated@@378 ($generated@@305 $generated@@171 $generated@@171) $generated@@533) ($generated@@406 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@250 $generated@@533 ($generated@@406 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@171) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@250 $generated@@536 ($generated@@414 $generated@@537 $generated@@538))) (and (= ($generated@@292 ($generated@@378 ($generated@@323 $generated@@171 $generated@@171) $generated@@536)) $generated@@536) ($generated@@156 ($generated@@378 ($generated@@323 $generated@@171 $generated@@171) $generated@@536) ($generated@@414 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@250 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@64) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@171)) ($generated@@250 $generated@@541 ($generated@@161 $generated@@539 $generated@@540))) (and (= ($generated@@292 ($generated@@378 $generated@@162 $generated@@541)) $generated@@541) ($generated@@156 ($generated@@378 $generated@@162 $generated@@541) ($generated@@161 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@250 $generated@@541 ($generated@@161 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@89 ($generated@@422 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@89 ($generated@@422 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@69)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (and (= ($generated@@80 ($generated@@161 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@161 $generated@@546 $generated@@547)) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@162) (= ($generated@@527 ($generated@@292 $generated@@548)) ($generated@@528 $generated@@548)))
 :pattern ( ($generated@@527 ($generated@@292 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@250 $generated@@549 ($generated@@83 0))) (and (= ($generated@@292 ($generated@@378 $generated@@2 $generated@@549)) $generated@@549) ($generated@@156 ($generated@@378 ($generated@@84 $generated@@171 $generated@@4) $generated@@549) ($generated@@83 0))))
 :pattern ( ($generated@@250 $generated@@549 ($generated@@83 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@171) (= (type $generated@@551) $generated@@64)) ($generated@@250 $generated@@550 ($generated@@259 $generated@@551))) (and (= ($generated@@292 ($generated@@378 ($generated@@84 $generated@@171 $generated@@4) $generated@@550)) $generated@@550) ($generated@@156 ($generated@@378 ($generated@@84 $generated@@171 $generated@@4) $generated@@550) ($generated@@259 $generated@@551))))
 :pattern ( ($generated@@250 $generated@@550 ($generated@@259 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@64)) ($generated@@250 $generated@@552 ($generated@@264 $generated@@553))) (and (= ($generated@@292 ($generated@@378 ($generated@@84 $generated@@171 $generated@@4) $generated@@552)) $generated@@552) ($generated@@156 ($generated@@378 ($generated@@84 $generated@@171 $generated@@4) $generated@@552) ($generated@@264 $generated@@553))))
 :pattern ( ($generated@@250 $generated@@552 ($generated@@264 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@64)) ($generated@@250 $generated@@554 ($generated@@176 $generated@@555))) (and (= ($generated@@292 ($generated@@378 ($generated@@84 $generated@@171 $generated@@2) $generated@@554)) $generated@@554) ($generated@@156 ($generated@@378 ($generated@@84 $generated@@171 $generated@@2) $generated@@554) ($generated@@176 $generated@@555))))
 :pattern ( ($generated@@250 $generated@@554 ($generated@@176 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@64)) ($generated@@250 $generated@@556 ($generated@@488 $generated@@557))) (and (= ($generated@@292 ($generated@@378 ($generated@@286 $generated@@171) $generated@@556)) $generated@@556) ($generated@@156 ($generated@@378 ($generated@@286 $generated@@171) $generated@@556) ($generated@@488 $generated@@557))))
 :pattern ( ($generated@@250 $generated@@556 ($generated@@488 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@171) ($generated@@250 $generated@@558 ($generated@@83 7))) (and (= ($generated@@292 ($generated@@378 $generated@@140 $generated@@558)) $generated@@558) ($generated@@156 ($generated@@378 $generated@@140 $generated@@558) ($generated@@83 7))))
 :pattern ( ($generated@@250 $generated@@558 ($generated@@83 7)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@171) ($generated@@250 $generated@@559 ($generated@@83 64))) (and (= ($generated@@292 ($generated@@378 $generated@@148 $generated@@559)) $generated@@559) ($generated@@156 ($generated@@378 $generated@@148 $generated@@559) ($generated@@83 64))))
 :pattern ( ($generated@@250 $generated@@559 ($generated@@83 64)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@560 ($generated@@176 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@560 $generated@@563)))) ($generated@@272 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@89 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@82 $generated@@560 ($generated@@176 $generated@@561) $generated@@562))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@564 Int) ) (!  (=> (or ($generated@@75 $generated@@564) (and (not (= 1 $generated@@72)) (and (and (<= ($generated@@74 0) $generated@@564) (< $generated@@564 18446744073709551616)) (< $generated@@564 64)))) true)
 :pattern ( ($generated@@73 $generated@@564))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@162) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@271 $generated@@567) (and ($generated@@160 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@82 $generated@@565 ($generated@@161 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@82 $generated@@565 ($generated@@161 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@272 ($generated@@169 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@272 ($generated@@169 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@162) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@271 $generated@@571) (and ($generated@@160 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@82 $generated@@569 ($generated@@161 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@82 $generated@@569 ($generated@@161 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@272 ($generated@@170 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@272 ($generated@@170 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@171) (= (type $generated@@574) $generated@@171)) (= ($generated@@249 ($generated@@76 $generated@@573) ($generated@@76 $generated@@574)) ($generated@@76 ($generated@@249 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@249 ($generated@@76 $generated@@573) ($generated@@76 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@74 $generated@@575))) ($generated@@76 ($generated@@292 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@74 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@292 ($generated@@76 $generated@@576)) ($generated@@76 ($generated@@292 $generated@@576)))
 :pattern ( ($generated@@292 ($generated@@76 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@287 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@286 $generated@@578)) (= ($generated@@285 $generated@@577) 0)) (= $generated@@577 ($generated@@284 $generated@@578))))
 :pattern ( ($generated@@285 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@84 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@297 ($generated@@90 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@297 $generated@@579) ($generated ($generated@@89 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@297 ($generated@@90 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@584) $generated@@2)) ($generated@@82 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@82 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@586) $generated@@3)) ($generated@@82 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@82 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@588) $generated@@4)) ($generated@@82 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@82 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@590) $generated@@446)) ($generated@@82 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@82 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@592) $generated@@171)) ($generated@@82 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@82 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@286 $generated@@171)) (= (type $generated@@594) $generated@@64)) (= ($generated@@156 $generated@@593 ($generated@@488 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@285 $generated@@593))) ($generated@@250 ($generated@@489 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@489 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@156 $generated@@593 ($generated@@488 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@286 $generated@@171)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@285 $generated@@597))) (< ($generated@@528 ($generated@@378 $generated@@162 ($generated@@489 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@528 ($generated@@378 $generated@@162 ($generated@@489 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@305 $generated@@171 $generated@@171)) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) $generated@@64)) ($generated@@156 $generated@@599 ($generated@@406 $generated@@600 $generated@@601))) (and (and ($generated@@156 ($generated@@303 $generated@@599) ($generated@@259 $generated@@600)) ($generated@@156 ($generated@@346 $generated@@599) ($generated@@259 $generated@@601))) ($generated@@156 ($generated@@377 $generated@@599) ($generated@@259 ($generated@@161 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@156 $generated@@599 ($generated@@406 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@323 $generated@@171 $generated@@171)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@156 $generated@@602 ($generated@@414 $generated@@603 $generated@@604))) (and (and ($generated@@156 ($generated@@321 $generated@@602) ($generated@@264 $generated@@603)) ($generated@@156 ($generated@@357 $generated@@602) ($generated@@264 $generated@@604))) ($generated@@156 ($generated@@388 $generated@@602) ($generated@@264 ($generated@@161 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@156 $generated@@602 ($generated@@414 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@156 $generated@@605 $generated@@46))
 :pattern ( ($generated@@156 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@156 $generated@@606 $generated@@47))
 :pattern ( ($generated@@156 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@156 $generated@@607 $generated@@44))
 :pattern ( ($generated@@156 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@446) ($generated@@156 $generated@@608 $generated@@45))
 :pattern ( ($generated@@156 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@171) ($generated@@156 $generated@@609 $generated@@48))
 :pattern ( ($generated@@156 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@610) ($generated@@183 $generated@@85 $generated@@4)) (= (type $generated@@611) $generated@@85)) (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@615) ($generated@@183 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@618  (=> (and (= $generated@@610 ($generated@@237 $generated@@611 $generated@@612 $generated@@60 false)) (= $generated@@613 ($generated@@74 1))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (and (<= 0 $generated@@613) (< $generated@@613 18446744073709551616))) (=> (and (<= 0 $generated@@613) (< $generated@@613 18446744073709551616)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 $generated@@614) (< $generated@@614 128))) (=> (and (<= 0 $generated@@614) (< $generated@@614 128)) (=> (= (ControlFlow 0 3) (- 0 2)) (bvule ((_ int2bv 7) $generated@@614) #b1000000)))))))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (and (= $generated@@615 ($generated@@182 $generated@@611 $generated@@612 $generated@@60 false)) (= $generated@@616 ($generated@@74 64))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= ($generated@@74 0) $generated@@616) (< $generated@@616 18446744073709551616))) (=> (and (<= ($generated@@74 0) $generated@@616) (< $generated@@616 18446744073709551616)) (=> (< $generated@@614 64) (and (=> (= (ControlFlow 0 6) 1) $generated@@619) (=> (= (ControlFlow 0 6) 3) $generated@@618))))))))
(let (($generated@@621  (=> (and ($generated@@271 $generated@@612) ($generated@@617 $generated@@612)) (=> (and (and (<= ($generated@@74 0) $generated@@614) (< $generated@@614 18446744073709551616)) (and (= 1 $generated@@72) (= (ControlFlow 0 8) 6))) $generated@@620))))
$generated@@621)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () (_ BitVec 64))
(declare-fun $generated@@178 () (_ BitVec 64))
(declare-fun $generated@@179 () (_ BitVec 64))
(declare-fun $generated@@180 () (_ BitVec 64))
(declare-fun $generated@@181 () (_ BitVec 64))
(declare-fun $generated@@182 () (_ BitVec 64))
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@187  (=> (and (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (= $generated@@177 (bvand $generated@@178 $generated@@179))) (=> (and (and (= $generated@@180 (bvor $generated@@178 $generated@@179)) (= $generated@@181 (bvxor $generated@@178 $generated@@179))) (and (= $generated@@182 (bvxor $generated@@178 #xffffffffffffffff)) (= $generated@@183 ($generated@@157 4)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@183) (< $generated@@183 128))) (=> (and (<= 0 $generated@@183) (< $generated@@183 128)) (=> (= (ControlFlow 0 2) (- 0 1)) (bvule #b0000100 #b1000000))))))))
(let (($generated@@188  (=> (and (and ($generated@@184 $generated@@175) ($generated@@185 $generated@@175)) (and (= 0 $generated@@186) (= (ControlFlow 0 4) 2))) $generated@@187)))
$generated@@188)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 ((_ BitVec 64)) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 (_ BitVec 64)) ) (!  (and (and (<= 0 ($generated@@157 $generated@@158)) (< ($generated@@157 $generated@@158) 18446744073709551616)) (= ($generated@@157 $generated@@158) (bv2int $generated@@158)))
 :pattern ( ($generated@@157 $generated@@158))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () (_ BitVec 64))
(declare-fun $generated@@168 () Int)
(assert  (and (and (and (and (= (type $generated@@159) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@160) $generated@@47)) (= (type $generated@@161) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@162) ($generated@@50 $generated@@4))) (= (type $generated@@164) ($generated@@48 $generated@@47 $generated@@49))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@169  (=> (= $generated@@159 ($generated@@45 $generated@@160 $generated@@161 $generated@@162 false)) (=> (and (and (and ($generated@@163 $generated@@164) ($generated@@165 $generated@@164)) (= $generated@@161 $generated@@164)) (and (= $generated@@166 ($generated@@157 $generated@@167)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= 0 $generated@@166) (< $generated@@166 18446744073709551616))))))
(let (($generated@@170  (=> (and (and ($generated@@163 $generated@@161) ($generated@@165 $generated@@161)) (and (= 0 $generated@@168) (= (ControlFlow 0 3) 2))) $generated@@169)))
$generated@@170)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 ((_ BitVec 64)) Int)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@T T@U) T@U)
(declare-fun $generated@@167 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 (_ BitVec 64)) ) (!  (and (and (<= 0 ($generated@@163 $generated@@164)) (< ($generated@@163 $generated@@164) 18446744073709551616)) (= ($generated@@163 $generated@@164) (bv2int $generated@@164)))
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert  (and (and (= ($generated@@1 $generated@@167) 11) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@U) ) (! (= (type ($generated@@166 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@166 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(= ($generated@@166 $generated@@172 ($generated@@165 $generated@@171)) $generated@@171))
 :pattern ( ($generated@@165 $generated@@171))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@165 ($generated@@8 ($generated@@157 $generated@@173))) ($generated@@159 ($generated@@165 ($generated@@8 $generated@@173))))
 :pattern ( ($generated@@165 ($generated@@8 ($generated@@157 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@165 ($generated@@159 $generated@@174)) ($generated@@159 ($generated@@165 $generated@@174)))
 :pattern ( ($generated@@165 ($generated@@159 $generated@@174)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () (_ BitVec 64))
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () (_ BitVec 64))
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () (_ BitVec 64))
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(assert  (and (and (and (and (= (type $generated@@175) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@176) $generated@@47)) (= (type $generated@@177) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@178) ($generated@@50 $generated@@4))) (= (type $generated@@185) ($generated@@48 $generated@@47 $generated@@49))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@191  (=> (= $generated@@175 ($generated@@45 $generated@@176 $generated@@177 $generated@@178 false)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= 0 $generated@@179) (< $generated@@179 18446744073709551616))) (=> (and (<= 0 $generated@@179) (< $generated@@179 18446744073709551616)) (=> (= $generated@@180 ($generated@@157 1)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= 0 $generated@@180) (< $generated@@180 128))) (=> (and (<= 0 $generated@@180) (< $generated@@180 128)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (bvule #b0000001 #b1000000)) (=> (bvule #b0000001 #b1000000) (=> (= $generated@@181 (bvshl ((_ int2bv 64) $generated@@179) (concat #b000000000000000000000000000000000000000000000000000000000 #b0000001))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= 0 $generated@@179) (< $generated@@179 18446744073709551616))) (=> (and (<= 0 $generated@@179) (< $generated@@179 18446744073709551616)) (=> (= $generated@@182 ($generated@@157 1)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 $generated@@182) (< $generated@@182 128))) (=> (and (<= 0 $generated@@182) (< $generated@@182 128)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (bvule #b0000001 #b1000000)) (=> (bvule #b0000001 #b1000000) (=> (= $generated@@183 (bvshl ((_ int2bv 64) $generated@@179) (concat #b000000000000000000000000000000000000000000000000000000000 #b0000001))) (=> (and (and (and ($generated@@184 $generated@@185) ($generated@@186 $generated@@185)) (= ((_ int2bv 64) ($generated@@163 $generated@@183)) $generated@@183)) (and (< ($generated@@163 $generated@@183) 18446744073709551616) (= $generated@@177 $generated@@185))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 $generated@@179) (< $generated@@179 18446744073709551616))) (=> (and (<= 0 $generated@@179) (< $generated@@179 18446744073709551616)) (=> (= $generated@@187 ($generated@@157 1)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@187) (< $generated@@187 128))) (=> (and (<= 0 $generated@@187) (< $generated@@187 128)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (bvule #b0000001 #b1000000)) (=> (bvule #b0000001 #b1000000) (=> (and (= $generated@@188 (bvshl ((_ int2bv 64) $generated@@179) (concat #b000000000000000000000000000000000000000000000000000000000 #b0000001))) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) ($generated@@163 $generated@@188)) (< ($generated@@163 $generated@@188) 18446744073709551616))))))))))))))))))))))))))))))
(let (($generated@@192  (=> (and (and ($generated@@184 $generated@@177) ($generated@@186 $generated@@177)) (and (<= ($generated@@157 0) $generated@@179) (< $generated@@179 18446744073709551616))) (=> (and (and (and (<= ($generated@@157 0) $generated@@189) (< $generated@@189 18446744073709551616)) true) (and (= 1 $generated@@190) (= (ControlFlow 0 12) 2))) $generated@@191))))
$generated@@192)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (Int) (_ BitVec 64))
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@77 (Int) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 ((_ BitVec 7)) T@U)
(declare-fun $generated@@144 (T@U) (_ BitVec 7))
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 ((_ BitVec 64)) T@U)
(declare-fun $generated@@152 (T@U) (_ BitVec 64))
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@79 T@U) ) (! (let (($generated@@80 (type $generated@@79)))
(= (type ($generated@@78 $generated@@79)) $generated@@80))
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@81 Int) ) (!  (=> (or ($generated@@77 ($generated@@76 $generated@@81)) (and (not (= 1 $generated@@74)) (and (and (<= ($generated@@76 0) $generated@@81) (< $generated@@81 18446744073709551616)) ($generated@@0 ($generated@@78 ($generated@@11 (< $generated@@81 64))))))) (= ($generated@@75 ($generated@@76 $generated@@81)) (bvshl #x0000000000000001 (concat #b000000000000000000000000000000000000000000000000000000000 ((_ int2bv 7) ($generated@@76 $generated@@81))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@81)))
))))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@67)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@95 $generated@@96)) 11)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@86 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@86 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 12)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@69 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@69 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@85 $generated@@139)) $generated@@66)
 :pattern ( ($generated@@85 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
 :pattern ( ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
)))
(assert  (and (and (and (forall (($generated@@145 (_ BitVec 7)) ) (! (= ($generated@@144 ($generated@@143 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@145))
)) (= ($generated@@1 $generated@@142) 14)) (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@142) (= ($generated@@143 ($generated@@144 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@144 $generated@@146))
))) (forall (($generated@@147 (_ BitVec 7)) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@142)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@142) (= (type $generated@@149) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@148 ($generated@@85 7) $generated@@149))
 :pattern ( ($generated@@84 $generated@@148 ($generated@@85 7) $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@153 (_ BitVec 64)) ) (! (= ($generated@@152 ($generated@@151 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@153))
)) (= ($generated@@1 $generated@@150) 15)) (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@150) (= ($generated@@151 ($generated@@152 $generated@@154)) $generated@@154))
 :pattern ( ($generated@@152 $generated@@154))
))) (forall (($generated@@155 (_ BitVec 64)) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@150)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@150) (= (type $generated@@157) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@156 ($generated@@85 64) $generated@@157))
 :pattern ( ($generated@@84 $generated@@156 ($generated@@85 64) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@160) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@158 $generated@@159 $generated@@160)) (forall (($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@87) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@159 $generated@@161) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@160 $generated@@161) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@160 $generated@@161) $generated@@60))
)))
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (= (type $generated@@162) $generated@@66))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@2) (= (type $generated@@164) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@163 $generated@@162 $generated@@164))
 :pattern ( ($generated@@84 $generated@@163 $generated@@162 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@85 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@85 0)))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@142) ($generated@@165 $generated@@167 ($generated@@85 7)))
 :pattern ( ($generated@@165 $generated@@167 ($generated@@85 7)))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@150) ($generated@@165 $generated@@168 ($generated@@85 64)))
 :pattern ( ($generated@@165 $generated@@168 ($generated@@85 64)))
)))
(assert  (and (= ($generated@@1 $generated@@171) 16) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@66)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@66) (= (type $generated@@175) $generated@@66)) (= (type $generated@@176) $generated@@171)) ($generated@@165 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@165 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (and (= ($generated@@1 $generated@@180) 17) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@178 $generated@@181))
))) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@182)) $generated@@180)
 :pattern ( ($generated@@179 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@171) (= (type $generated@@184) $generated@@171)) true) (= ($generated@@177 $generated@@183 $generated@@184)  (and (= ($generated@@178 $generated@@183) ($generated@@178 $generated@@184)) (= ($generated@@179 $generated@@183) ($generated@@179 $generated@@184)))))
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@66)
 :pattern ( ($generated@@185 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) ($generated@@86 $generated@@180 $generated@@2)) (= (type $generated@@189) $generated@@66)) ($generated@@165 $generated@@188 ($generated@@185 $generated@@189))) ($generated@@186 $generated@@188))
 :pattern ( ($generated@@165 $generated@@188 ($generated@@185 $generated@@189)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@196 $generated@@197)) 18)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@192 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@190 $generated@@202 $generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@190 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(let (($generated@@211 (type $generated@@207)))
(= (type ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@192 $generated@@211 $generated@@210))))
 :pattern ( ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@194 (type $generated@@212))))
 (=> (= (type $generated@@215) $generated@@216) (= ($generated@@190 ($generated@@195 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@213 $generated@@214) $generated@@215)))
 :weight 0
))) (and (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@190 ($generated@@195 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@190 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@190 ($generated@@195 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@190 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or true (= ($generated@@190 ($generated@@195 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@190 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@192 $generated@@87 $generated@@4))
 :pattern ( ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@69 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@87) (= (type $generated@@240) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@241) ($generated@@68 $generated@@4))) (= (type $generated@@243) $generated@@87)) (= (type $generated@@244) ($generated@@68 $generated@@245))) (= ($generated@@0 ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@171)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@66) (= (type $generated@@251) $generated@@66)) (= (type $generated@@252) $generated@@180)) (= (type $generated@@253) $generated@@180)) (= ($generated@@165 ($generated@@246 $generated@@252 $generated@@253) ($generated@@170 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@165 ($generated@@246 $generated@@252 $generated@@253) ($generated@@170 $generated@@250 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@171) (= (type $generated@@255) $generated@@171)) (= ($generated@@177 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@177 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@66)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@86 $generated@@180 $generated@@4)) (= (type $generated@@259) $generated@@66)) (= ($generated@@165 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@180) ($generated@@0 ($generated@@91 $generated@@258 $generated@@260))) ($generated@@247 $generated@@260 $generated@@259))
 :pattern ( ($generated@@91 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@165 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@66)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@86 $generated@@180 $generated@@4)) (= (type $generated@@264) $generated@@66)) (= ($generated@@165 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@180) ($generated@@0 ($generated@@91 $generated@@263 $generated@@265))) ($generated@@247 $generated@@265 $generated@@264))
 :pattern ( ($generated@@91 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@165 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@266 Int) ) (! (= ($generated@@76 $generated@@266) $generated@@266)
 :pattern ( ($generated@@76 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (! (= ($generated@@78 $generated@@267) $generated@@267)
 :pattern ( ($generated@@78 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) $generated@@66)) (= (type $generated@@272) $generated@@180)) (= (type $generated@@273) $generated@@180)) (= (type $generated@@274) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@268 $generated@@274)) (= ($generated@@84 ($generated@@246 $generated@@272 $generated@@273) ($generated@@170 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@84 ($generated@@246 $generated@@272 $generated@@273) ($generated@@170 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@70)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@171) (= ($generated@@169 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@169 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@171) ($generated@@169 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@180) (= (type $generated@@280) $generated@@180)) (= $generated@@278 ($generated@@246 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@169 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 19)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@180)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@66) (= (type $generated@@293) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@84 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@295) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@296) $generated@@180)) (= (type $generated@@297) $generated@@66)) ($generated@@158 $generated@@294 $generated@@295)) ($generated@@269 $generated@@296 $generated@@297 $generated@@294)) ($generated@@269 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@158 $generated@@294 $generated@@295) ($generated@@269 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@299) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@301) $generated@@66)) ($generated@@158 $generated@@298 $generated@@299)) ($generated@@84 $generated@@300 $generated@@301 $generated@@298)) ($generated@@84 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@158 $generated@@298 $generated@@299) ($generated@@84 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@86 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@89 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@86 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@91 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 20)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@86 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@91 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@91 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 21)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@86 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@91 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@91 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@89 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@86 $generated@@345 $generated@@2)) (= ($generated@@186 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@91 $generated@@344 $generated@@346))) (<= ($generated ($generated@@91 $generated@@344 $generated@@346)) ($generated@@302 $generated@@344))))
 :pattern ( ($generated@@91 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@186 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@180) ($generated@@247 $generated@@350 $generated@@162)) (and (= ($generated@@289 ($generated@@347 $generated@@2 $generated@@350)) $generated@@350) ($generated@@165 ($generated@@347 $generated@@2 $generated@@350) $generated@@162)))
 :pattern ( ($generated@@247 $generated@@350 $generated@@162))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@312 (type $generated@@351))))
(let (($generated@@353 ($generated@@311 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@310 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@309 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@91 ($generated@@308 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@308 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@312 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@86 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@312 (type $generated@@358))))
(let (($generated@@360 ($generated@@311 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@310 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@309 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@91 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@330 (type $generated@@362))))
(let (($generated@@364 ($generated@@329 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@328 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@327 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@91 ($generated@@326 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@326 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@330 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@86 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@330 (type $generated@@369))))
(let (($generated@@371 ($generated@@329 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@328 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@327 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@91 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@86 $generated@@180 $generated@@2)) (= (type $generated@@374) $generated@@66)) (= ($generated@@165 $generated@@373 ($generated@@185 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@180) (< 0 ($generated ($generated@@91 $generated@@373 $generated@@375)))) ($generated@@247 $generated@@375 $generated@@374))
 :pattern ( ($generated@@91 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@165 $generated@@373 ($generated@@185 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@86 $generated@@180 $generated@@4)) (= (type $generated@@377) $generated@@66)) (= (type $generated@@378) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@376 ($generated@@256 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@180) ($generated@@0 ($generated@@91 $generated@@376 $generated@@379))) ($generated@@269 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@91 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@84 $generated@@376 ($generated@@256 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@86 $generated@@180 $generated@@4)) (= (type $generated@@381) $generated@@66)) (= (type $generated@@382) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@380 ($generated@@261 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@180) ($generated@@0 ($generated@@91 $generated@@380 $generated@@383))) ($generated@@269 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@91 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@84 $generated@@380 ($generated@@261 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@91 ($generated@@303 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@91 ($generated@@303 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@86 $generated@@180 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@312 (type $generated@@389))))
(let (($generated@@391 ($generated@@311 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@86 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@310 $generated@@180 $generated@@180)) (= (type $generated@@393) $generated@@180)) (= ($generated@@0 ($generated@@91 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@91 ($generated@@308 $generated@@392) ($generated@@178 ($generated@@347 $generated@@171 $generated@@393)))) (= ($generated@@91 ($generated@@387 $generated@@392) ($generated@@178 ($generated@@347 $generated@@171 $generated@@393))) ($generated@@179 ($generated@@347 $generated@@171 $generated@@393))))))
 :pattern ( ($generated@@91 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@86 $generated@@180 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@330 (type $generated@@397))))
(let (($generated@@399 ($generated@@329 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@86 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@328 $generated@@180 $generated@@180)) (= (type $generated@@401) $generated@@180)) (= ($generated@@0 ($generated@@91 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@91 ($generated@@326 $generated@@400) ($generated@@178 ($generated@@347 $generated@@171 $generated@@401)))) (= ($generated@@91 ($generated@@395 $generated@@400) ($generated@@178 ($generated@@347 $generated@@171 $generated@@401))) ($generated@@179 ($generated@@347 $generated@@171 $generated@@401))))))
 :pattern ( ($generated@@91 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@311 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@310 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@91 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@91 ($generated@@308 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@91 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@91 ($generated@@308 $generated@@402) $generated@@406))
 :pattern ( ($generated@@91 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@91 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@329 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@328 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@91 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@91 ($generated@@326 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@91 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@91 ($generated@@326 $generated@@407) $generated@@411))
 :pattern ( ($generated@@91 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@91 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@66)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@310 $generated@@180 $generated@@180)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@180) ($generated@@0 ($generated@@91 ($generated@@308 $generated@@415) $generated@@419))) (and ($generated@@269 ($generated@@91 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@269 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@91 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@91 ($generated@@308 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@84 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@66)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@328 $generated@@180 $generated@@180)) (= (type $generated@@424) $generated@@66)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@180) ($generated@@0 ($generated@@91 ($generated@@326 $generated@@423) $generated@@427))) (and ($generated@@269 ($generated@@91 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@269 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@91 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@91 ($generated@@326 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@84 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@429) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@430) ($generated@@86 $generated@@87 $generated@@88))) (not (= $generated@@428 $generated@@430))) (and ($generated@@158 $generated@@428 $generated@@429) ($generated@@158 $generated@@429 $generated@@430))) ($generated@@158 $generated@@428 $generated@@430))
 :pattern ( ($generated@@158 $generated@@428 $generated@@429) ($generated@@158 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@86 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@330 (type $generated@@433))))
(let (($generated@@435 ($generated@@329 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@328 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@327 $generated@@435 $generated@@434)) (= ($generated@@326 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@326 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@330 (type $generated@@436))))
(let (($generated@@438 ($generated@@329 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@328 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@327 $generated@@438 $generated@@437)) (= ($generated@@366 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@366 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@330 (type $generated@@439))))
(let (($generated@@441 ($generated@@329 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@328 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@327 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@180))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@312 (type $generated@@442))))
(let (($generated@@444 ($generated@@311 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@310 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@309 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@180) (= (type $generated@@446) $generated@@180)) ($generated@@0 ($generated@@91 ($generated@@386 $generated@@442) ($generated@@289 ($generated@@246 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@386 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@330 (type $generated@@447))))
(let (($generated@@449 ($generated@@329 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@328 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@327 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@180) (= (type $generated@@451) $generated@@180)) ($generated@@0 ($generated@@91 ($generated@@394 $generated@@447) ($generated@@289 ($generated@@246 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@180) ($generated@@247 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@347 $generated@@2 $generated@@452)) $generated@@452) ($generated@@165 ($generated@@347 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@180) ($generated@@247 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@347 $generated@@3 $generated@@453)) $generated@@453) ($generated@@165 ($generated@@347 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@180) ($generated@@247 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@347 $generated@@4 $generated@@454)) $generated@@454) ($generated@@165 ($generated@@347 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 22))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@180) ($generated@@247 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@347 $generated@@455 $generated@@456)) $generated@@456) ($generated@@165 ($generated@@347 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@66) (= ($generated@@247 ($generated@@289 $generated@@457) $generated@@458) ($generated@@165 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@247 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@89 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@86 $generated@@460 $generated@@2)) (<= 0 ($generated@@302 $generated@@459))))
 :pattern ( ($generated@@302 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@412 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@412 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@412 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@412 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@82 ($generated@@412 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@420 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@420 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@420 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@82 ($generated@@420 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@180) (= (type $generated@@484) $generated@@180)) (= ($generated@@275 ($generated@@246 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@66) (= (type $generated@@488) $generated@@66)) (= ($generated@@485 ($generated@@170 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@170 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@66) (= (type $generated@@492) $generated@@66)) (= ($generated@@489 ($generated@@170 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@170 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@180) (= (type $generated@@494) $generated@@180)) (= ($generated@@178 ($generated@@246 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@246 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@180) (= (type $generated@@496) $generated@@180)) (= ($generated@@179 ($generated@@246 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@246 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@284 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@283 $generated@@180)) (= (type $generated@@504) $generated@@66)) (= (type $generated@@505) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@282 $generated@@503))) ($generated@@269 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@84 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@85 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@85 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@256 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@256 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@82 ($generated@@256 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@261 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@261 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@82 ($generated@@261 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@517 ($generated@@185 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@185 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@82 ($generated@@185 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@185 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@66)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@66) (= ($generated@@82 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@347 $generated@@526 ($generated@@289 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@289 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@310 $generated@@180 $generated@@180)) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@66)) (= ($generated@@165 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@180) ($generated@@0 ($generated@@91 ($generated@@308 $generated@@527) $generated@@530))) (and ($generated@@247 ($generated@@91 ($generated@@387 $generated@@527) $generated@@530) $generated@@529) ($generated@@247 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@91 ($generated@@387 $generated@@527) $generated@@530))
 :pattern ( ($generated@@91 ($generated@@308 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@165 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@328 $generated@@180 $generated@@180)) (= (type $generated@@532) $generated@@66)) (= (type $generated@@533) $generated@@66)) (= ($generated@@165 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@180) ($generated@@0 ($generated@@91 ($generated@@326 $generated@@531) $generated@@534))) (and ($generated@@247 ($generated@@91 ($generated@@395 $generated@@531) $generated@@534) $generated@@533) ($generated@@247 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@91 ($generated@@395 $generated@@531) $generated@@534))
 :pattern ( ($generated@@91 ($generated@@326 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@165 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@535 Int) ) (!  (=> (or ($generated@@77 $generated@@535) (and (not (= 1 $generated@@74)) (and (and (<= ($generated@@76 0) $generated@@535) (< $generated@@535 18446744073709551616)) (< $generated@@535 64)))) (= ($generated@@75 $generated@@535) (bvshl #x0000000000000001 (concat #b000000000000000000000000000000000000000000000000000000000 ((_ int2bv 7) $generated@@535)))))
 :pattern ( ($generated@@75 $generated@@535))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@180) (= (type $generated@@539) $generated@@180)) (< ($generated@@536 $generated@@538) ($generated@@537 ($generated@@246 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@246 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@180) (= (type $generated@@541) $generated@@180)) (< ($generated@@536 $generated@@541) ($generated@@537 ($generated@@246 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@246 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@180) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@66)) ($generated@@247 $generated@@542 ($generated@@412 $generated@@543 $generated@@544))) (and (= ($generated@@289 ($generated@@347 ($generated@@310 $generated@@180 $generated@@180) $generated@@542)) $generated@@542) ($generated@@165 ($generated@@347 ($generated@@310 $generated@@180 $generated@@180) $generated@@542) ($generated@@412 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@247 $generated@@542 ($generated@@412 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@180) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) $generated@@66)) ($generated@@247 $generated@@545 ($generated@@420 $generated@@546 $generated@@547))) (and (= ($generated@@289 ($generated@@347 ($generated@@328 $generated@@180 $generated@@180) $generated@@545)) $generated@@545) ($generated@@165 ($generated@@347 ($generated@@328 $generated@@180 $generated@@180) $generated@@545) ($generated@@420 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@247 $generated@@545 ($generated@@420 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@66) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) $generated@@180)) ($generated@@247 $generated@@550 ($generated@@170 $generated@@548 $generated@@549))) (and (= ($generated@@289 ($generated@@347 $generated@@171 $generated@@550)) $generated@@550) ($generated@@165 ($generated@@347 $generated@@171 $generated@@550) ($generated@@170 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@247 $generated@@550 ($generated@@170 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@91 ($generated@@431 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@91 ($generated@@431 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@66) (= (type $generated@@556) $generated@@66)) (and (= ($generated@@82 ($generated@@170 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@170 $generated@@555 $generated@@556)) $generated@@64)))
 :pattern ( ($generated@@170 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@171) (= ($generated@@536 ($generated@@289 $generated@@557)) ($generated@@537 $generated@@557)))
 :pattern ( ($generated@@536 ($generated@@289 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@180) ($generated@@247 $generated@@558 ($generated@@85 0))) (and (= ($generated@@289 ($generated@@347 $generated@@2 $generated@@558)) $generated@@558) ($generated@@165 ($generated@@347 ($generated@@86 $generated@@180 $generated@@4) $generated@@558) ($generated@@85 0))))
 :pattern ( ($generated@@247 $generated@@558 ($generated@@85 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@180) (= (type $generated@@560) $generated@@66)) ($generated@@247 $generated@@559 ($generated@@256 $generated@@560))) (and (= ($generated@@289 ($generated@@347 ($generated@@86 $generated@@180 $generated@@4) $generated@@559)) $generated@@559) ($generated@@165 ($generated@@347 ($generated@@86 $generated@@180 $generated@@4) $generated@@559) ($generated@@256 $generated@@560))))
 :pattern ( ($generated@@247 $generated@@559 ($generated@@256 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@180) (= (type $generated@@562) $generated@@66)) ($generated@@247 $generated@@561 ($generated@@261 $generated@@562))) (and (= ($generated@@289 ($generated@@347 ($generated@@86 $generated@@180 $generated@@4) $generated@@561)) $generated@@561) ($generated@@165 ($generated@@347 ($generated@@86 $generated@@180 $generated@@4) $generated@@561) ($generated@@261 $generated@@562))))
 :pattern ( ($generated@@247 $generated@@561 ($generated@@261 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@180) (= (type $generated@@564) $generated@@66)) ($generated@@247 $generated@@563 ($generated@@185 $generated@@564))) (and (= ($generated@@289 ($generated@@347 ($generated@@86 $generated@@180 $generated@@2) $generated@@563)) $generated@@563) ($generated@@165 ($generated@@347 ($generated@@86 $generated@@180 $generated@@2) $generated@@563) ($generated@@185 $generated@@564))))
 :pattern ( ($generated@@247 $generated@@563 ($generated@@185 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@180) (= (type $generated@@566) $generated@@66)) ($generated@@247 $generated@@565 ($generated@@497 $generated@@566))) (and (= ($generated@@289 ($generated@@347 ($generated@@283 $generated@@180) $generated@@565)) $generated@@565) ($generated@@165 ($generated@@347 ($generated@@283 $generated@@180) $generated@@565) ($generated@@497 $generated@@566))))
 :pattern ( ($generated@@247 $generated@@565 ($generated@@497 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@180) ($generated@@247 $generated@@567 ($generated@@85 7))) (and (= ($generated@@289 ($generated@@347 $generated@@142 $generated@@567)) $generated@@567) ($generated@@165 ($generated@@347 $generated@@142 $generated@@567) ($generated@@85 7))))
 :pattern ( ($generated@@247 $generated@@567 ($generated@@85 7)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@180) ($generated@@247 $generated@@568 ($generated@@85 64))) (and (= ($generated@@289 ($generated@@347 $generated@@150 $generated@@568)) $generated@@568) ($generated@@165 ($generated@@347 $generated@@150 $generated@@568) ($generated@@85 64))))
 :pattern ( ($generated@@247 $generated@@568 ($generated@@85 64)))
)))
(assert (= ($generated@@82 $generated@@162) $generated@@63))
(assert (= ($generated@@553 $generated@@162) $generated@@65))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@86 $generated@@180 $generated@@2)) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@569 ($generated@@185 $generated@@570) $generated@@571) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@180) (< 0 ($generated ($generated@@91 $generated@@569 $generated@@572)))) ($generated@@269 $generated@@572 $generated@@570 $generated@@571))
 :pattern ( ($generated@@91 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@84 $generated@@569 ($generated@@185 $generated@@570) $generated@@571))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@573 Int) ) (!  (=> (or ($generated@@77 $generated@@573) (and (not (= 1 $generated@@74)) (and (and (<= ($generated@@76 0) $generated@@573) (< $generated@@573 18446744073709551616)) (< $generated@@573 64)))) true)
 :pattern ( ($generated@@75 $generated@@573))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@171) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@268 $generated@@576) (and ($generated@@169 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@66) ($generated@@84 $generated@@574 ($generated@@170 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@84 $generated@@574 ($generated@@170 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@269 ($generated@@178 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@269 ($generated@@178 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@171) (= (type $generated@@579) $generated@@66)) (= (type $generated@@580) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@268 $generated@@580) (and ($generated@@169 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@66) ($generated@@84 $generated@@578 ($generated@@170 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@84 $generated@@578 ($generated@@170 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@269 ($generated@@179 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@269 ($generated@@179 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) (= ($generated@@165 $generated@@582 $generated@@162)  (and (<= ($generated@@76 0) ($generated $generated@@582)) (< ($generated $generated@@582) 18446744073709551616))))
 :pattern ( ($generated@@165 $generated@@582 $generated@@162))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@180) (= (type $generated@@584) $generated@@180)) (= ($generated@@246 ($generated@@78 $generated@@583) ($generated@@78 $generated@@584)) ($generated@@78 ($generated@@246 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@246 ($generated@@78 $generated@@583) ($generated@@78 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@76 $generated@@585))) ($generated@@78 ($generated@@289 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@76 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@289 ($generated@@78 $generated@@586)) ($generated@@78 ($generated@@289 $generated@@586)))
 :pattern ( ($generated@@289 ($generated@@78 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@284 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@283 $generated@@588)) (= ($generated@@282 $generated@@587) 0)) (= $generated@@587 ($generated@@281 $generated@@588))))
 :pattern ( ($generated@@282 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@86 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@302 ($generated@@92 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@302 $generated@@589) ($generated ($generated@@91 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@302 ($generated@@92 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@594) $generated@@2)) ($generated@@84 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@84 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@596) $generated@@3)) ($generated@@84 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@84 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@598) $generated@@4)) ($generated@@84 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@84 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@600) $generated@@455)) ($generated@@84 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@84 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@602) $generated@@180)) ($generated@@84 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@84 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@283 $generated@@180)) (= (type $generated@@604) $generated@@66)) (= ($generated@@165 $generated@@603 ($generated@@497 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@282 $generated@@603))) ($generated@@247 ($generated@@498 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@498 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@165 $generated@@603 ($generated@@497 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@283 $generated@@180)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@282 $generated@@607))) (< ($generated@@537 ($generated@@347 $generated@@171 ($generated@@498 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@537 ($generated@@347 $generated@@171 ($generated@@498 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@310 $generated@@180 $generated@@180)) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) $generated@@66)) ($generated@@165 $generated@@609 ($generated@@412 $generated@@610 $generated@@611))) (and (and ($generated@@165 ($generated@@308 $generated@@609) ($generated@@256 $generated@@610)) ($generated@@165 ($generated@@355 $generated@@609) ($generated@@256 $generated@@611))) ($generated@@165 ($generated@@386 $generated@@609) ($generated@@256 ($generated@@170 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@165 $generated@@609 ($generated@@412 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@328 $generated@@180 $generated@@180)) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) $generated@@66)) ($generated@@165 $generated@@612 ($generated@@420 $generated@@613 $generated@@614))) (and (and ($generated@@165 ($generated@@326 $generated@@612) ($generated@@261 $generated@@613)) ($generated@@165 ($generated@@366 $generated@@612) ($generated@@261 $generated@@614))) ($generated@@165 ($generated@@394 $generated@@612) ($generated@@261 ($generated@@170 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@165 $generated@@612 ($generated@@420 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@165 $generated@@615 $generated@@46))
 :pattern ( ($generated@@165 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@165 $generated@@616 $generated@@47))
 :pattern ( ($generated@@165 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@165 $generated@@617 $generated@@44))
 :pattern ( ($generated@@165 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@455) ($generated@@165 $generated@@618 $generated@@45))
 :pattern ( ($generated@@165 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@180) ($generated@@165 $generated@@619 $generated@@48))
 :pattern ( ($generated@@165 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () (_ BitVec 64))
(declare-fun $generated@@624 () (_ BitVec 64))
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(assert  (and (and (and (and (= (type $generated@@620) ($generated@@192 $generated@@87 $generated@@4)) (= (type $generated@@621) $generated@@87)) (= (type $generated@@622) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@625) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@629) ($generated@@86 $generated@@87 $generated@@88))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@632  (=> (= $generated@@620 ($generated@@191 $generated@@621 $generated@@622 $generated@@60 false)) (=> (and (= $generated@@623 ($generated@@152 ($generated@@78 ($generated@@151 #x0000000000000048)))) (= $generated@@624 ($generated@@152 ($generated@@78 ($generated@@151 #x000000000000000f))))) (=> (and (and (and ($generated@@268 $generated@@625) ($generated@@626 $generated@@625)) (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@87) (=> (and (not (= $generated@@633 $generated@@621)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@622 $generated@@633) $generated@@60))) (= ($generated@@91 $generated@@625 $generated@@633) ($generated@@91 $generated@@622 $generated@@633))))
 :pattern ( ($generated@@91 $generated@@625 $generated@@633))
))) (and ($generated@@158 $generated@@622 $generated@@625) (= $generated@@627 ($generated@@76 42)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@76 0) $generated@@627) (< $generated@@627 18446744073709551616))) (=> (and (<= ($generated@@76 0) $generated@@627) (< $generated@@627 18446744073709551616)) (=> (= $generated@@628 ($generated@@76 42)) (=> (and (and (and ($generated@@268 $generated@@629) ($generated@@626 $generated@@629)) (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@87) (=> (and (not (= $generated@@634 $generated@@621)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@625 $generated@@634) $generated@@60))) (= ($generated@@91 $generated@@629 $generated@@634) ($generated@@91 $generated@@625 $generated@@634))))
 :pattern ( ($generated@@91 $generated@@629 $generated@@634))
))) (and ($generated@@158 $generated@@625 $generated@@629) (= $generated@@630 ($generated@@76 10)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@76 0) $generated@@630) (< $generated@@630 18446744073709551616))) (=> (and (<= ($generated@@76 0) $generated@@630) (< $generated@@630 18446744073709551616)) (=> (= $generated@@631 ($generated@@76 10)) (=> (and ($generated@@84 ($generated@@8 $generated@@631) $generated@@162 $generated@@629) (= (ControlFlow 0 2) (- 0 1))) (< $generated@@631 64))))))))))))))
(let (($generated@@635  (=> (and (and ($generated@@268 $generated@@622) ($generated@@626 $generated@@622)) (and (= 2 $generated@@74) (= (ControlFlow 0 5) 2))) $generated@@632)))
$generated@@635)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
