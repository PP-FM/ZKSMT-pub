(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (forall (($generated@@138 T@U) ) (! (= (type ($generated@@136 $generated@@138)) $generated@@68)
 :pattern ( ($generated@@136 $generated@@138))
)) (= (type $generated@@137) $generated@@81)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@68) (= (type $generated@@140) $generated@@81)) (= (type $generated@@141) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@140 ($generated@@136 $generated@@139) $generated@@141)  (or (= $generated@@140 $generated@@137) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@140 ($generated@@136 $generated@@139) $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@68))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@79 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@68) (= (type $generated@@153) $generated@@68)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@68)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@80 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@68)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@81 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@71 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@81) (= (type $generated@@218) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@219) ($generated@@70 $generated@@4))) (= (type $generated@@221) $generated@@81)) (= (type $generated@@222) ($generated@@70 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@149)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@68) (= (type $generated@@229) $generated@@68)) (= (type $generated@@230) $generated@@158)) (= (type $generated@@231) $generated@@158)) (= ($generated@@145 ($generated@@224 $generated@@230 $generated@@231) ($generated@@148 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@145 ($generated@@224 $generated@@230 $generated@@231) ($generated@@148 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@149) (= (type $generated@@233) $generated@@149)) (= ($generated@@155 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@155 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@68)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@80 $generated@@158 $generated@@4)) (= (type $generated@@237) $generated@@68)) (= ($generated@@145 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@158) ($generated@@0 ($generated@@85 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@85 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@145 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@68)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@80 $generated@@158 $generated@@4)) (= (type $generated@@242) $generated@@68)) (= ($generated@@145 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@158) ($generated@@0 ($generated@@85 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@85 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@145 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@68) (= (type $generated@@253) $generated@@68)) (= (type $generated@@254) $generated@@158)) (= (type $generated@@255) $generated@@158)) (= (type $generated@@256) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@250 $generated@@256)) (= ($generated@@78 ($generated@@224 $generated@@254 $generated@@255) ($generated@@148 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@78 ($generated@@224 $generated@@254 $generated@@255) ($generated@@148 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@72)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@149) (= ($generated@@147 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@149) ($generated@@147 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@158) (= (type $generated@@262) $generated@@158)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@147 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@158)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@68) (= (type $generated@@275) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@78 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@80 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@83 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@80 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@85 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@73)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@68) (and (= ($generated@@76 ($generated@@136 $generated@@284)) $generated@@61) (= ($generated@@282 ($generated@@136 $generated@@284)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@80 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@85 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@85 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@80 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@85 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@85 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@83 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@80 $generated@@322 $generated@@2)) (= ($generated@@164 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@85 $generated@@321 $generated@@323))) (<= ($generated ($generated@@85 $generated@@321 $generated@@323)) ($generated@@276 $generated@@321))))
 :pattern ( ($generated@@85 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@164 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@158) ($generated@@225 $generated@@327 $generated@@142)) (and (= ($generated@@271 ($generated@@324 $generated@@2 $generated@@327)) $generated@@327) ($generated@@145 ($generated@@324 $generated@@2 $generated@@327) $generated@@142)))
 :pattern ( ($generated@@225 $generated@@327 $generated@@142))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@68)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@68) (= (type $generated@@331) $generated@@81)) (= ($generated@@145 $generated@@331 ($generated@@136 $generated@@330))  (or (= $generated@@331 $generated@@137) (= ($generated@@328 $generated@@331) ($generated@@136 $generated@@330)))))
 :pattern ( ($generated@@145 $generated@@331 ($generated@@136 $generated@@330)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@289 (type $generated@@332))))
(let (($generated@@334 ($generated@@288 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@287 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@286 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@85 ($generated@@285 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@285 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@289 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@80 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@289 (type $generated@@339))))
(let (($generated@@341 ($generated@@288 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@287 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@286 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@85 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@307 (type $generated@@343))))
(let (($generated@@345 ($generated@@306 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@305 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@304 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@85 ($generated@@303 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@303 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@307 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@80 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@307 (type $generated@@350))))
(let (($generated@@352 ($generated@@306 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@305 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@304 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@85 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@80 $generated@@158 $generated@@2)) (= (type $generated@@355) $generated@@68)) (= ($generated@@145 $generated@@354 ($generated@@163 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@158) (< 0 ($generated ($generated@@85 $generated@@354 $generated@@356)))) ($generated@@225 $generated@@356 $generated@@355))
 :pattern ( ($generated@@85 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@145 $generated@@354 ($generated@@163 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@80 $generated@@158 $generated@@4)) (= (type $generated@@358) $generated@@68)) (= (type $generated@@359) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@357 ($generated@@234 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@158) ($generated@@0 ($generated@@85 $generated@@357 $generated@@360))) ($generated@@251 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@85 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@78 $generated@@357 ($generated@@234 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@80 $generated@@158 $generated@@4)) (= (type $generated@@362) $generated@@68)) (= (type $generated@@363) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@361 ($generated@@239 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@158) ($generated@@0 ($generated@@85 $generated@@361 $generated@@364))) ($generated@@251 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@85 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@78 $generated@@361 ($generated@@239 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@85 ($generated@@277 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@85 ($generated@@277 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@80 $generated@@158 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@289 (type $generated@@370))))
(let (($generated@@372 ($generated@@288 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@80 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@287 $generated@@158 $generated@@158)) (= (type $generated@@374) $generated@@158)) (= ($generated@@0 ($generated@@85 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@85 ($generated@@285 $generated@@373) ($generated@@156 ($generated@@324 $generated@@149 $generated@@374)))) (= ($generated@@85 ($generated@@368 $generated@@373) ($generated@@156 ($generated@@324 $generated@@149 $generated@@374))) ($generated@@157 ($generated@@324 $generated@@149 $generated@@374))))))
 :pattern ( ($generated@@85 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@80 $generated@@158 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@307 (type $generated@@378))))
(let (($generated@@380 ($generated@@306 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@80 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@305 $generated@@158 $generated@@158)) (= (type $generated@@382) $generated@@158)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@85 ($generated@@303 $generated@@381) ($generated@@156 ($generated@@324 $generated@@149 $generated@@382)))) (= ($generated@@85 ($generated@@376 $generated@@381) ($generated@@156 ($generated@@324 $generated@@149 $generated@@382))) ($generated@@157 ($generated@@324 $generated@@149 $generated@@382))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@288 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@287 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@85 ($generated@@336 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@85 ($generated@@285 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@85 ($generated@@368 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@85 ($generated@@285 $generated@@383) $generated@@387))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@85 ($generated@@336 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@306 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@305 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@85 ($generated@@347 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@85 ($generated@@303 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@85 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@85 ($generated@@303 $generated@@388) $generated@@392))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@85 ($generated@@347 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@68)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@287 $generated@@158 $generated@@158)) (= (type $generated@@397) $generated@@68)) (= (type $generated@@398) $generated@@68)) (= (type $generated@@399) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@158) ($generated@@0 ($generated@@85 ($generated@@285 $generated@@396) $generated@@400))) (and ($generated@@251 ($generated@@85 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@251 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@85 ($generated@@285 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@78 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@68)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@305 $generated@@158 $generated@@158)) (= (type $generated@@405) $generated@@68)) (= (type $generated@@406) $generated@@68)) (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@158) ($generated@@0 ($generated@@85 ($generated@@303 $generated@@404) $generated@@408))) (and ($generated@@251 ($generated@@85 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@251 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@85 ($generated@@303 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@78 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@80 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@307 (type $generated@@411))))
(let (($generated@@413 ($generated@@306 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@305 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@304 $generated@@413 $generated@@412)) (= ($generated@@303 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@303 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@307 (type $generated@@414))))
(let (($generated@@416 ($generated@@306 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@305 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@304 $generated@@416 $generated@@415)) (= ($generated@@347 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@347 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@307 (type $generated@@417))))
(let (($generated@@419 ($generated@@306 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@305 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@304 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@158))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@289 (type $generated@@420))))
(let (($generated@@422 ($generated@@288 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@287 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@286 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@158) (= (type $generated@@424) $generated@@158)) ($generated@@0 ($generated@@85 ($generated@@367 $generated@@420) ($generated@@271 ($generated@@224 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@307 (type $generated@@425))))
(let (($generated@@427 ($generated@@306 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@305 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@304 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@158) (= (type $generated@@429) $generated@@158)) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@425) ($generated@@271 ($generated@@224 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@158) ($generated@@225 $generated@@430 $generated@@46)) (and (= ($generated@@271 ($generated@@324 $generated@@2 $generated@@430)) $generated@@430) ($generated@@145 ($generated@@324 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@158) ($generated@@225 $generated@@431 $generated@@47)) (and (= ($generated@@271 ($generated@@324 $generated@@3 $generated@@431)) $generated@@431) ($generated@@145 ($generated@@324 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@158) ($generated@@225 $generated@@432 $generated@@44)) (and (= ($generated@@271 ($generated@@324 $generated@@4 $generated@@432)) $generated@@432) ($generated@@145 ($generated@@324 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@158) ($generated@@225 $generated@@434 $generated@@45)) (and (= ($generated@@271 ($generated@@324 $generated@@433 $generated@@434)) $generated@@434) ($generated@@145 ($generated@@324 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@68) (= ($generated@@225 ($generated@@271 $generated@@435) $generated@@436) ($generated@@145 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@83 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@80 $generated@@438 $generated@@2)) (<= 0 ($generated@@276 $generated@@437))))
 :pattern ( ($generated@@276 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@266 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@265 $generated@@440)) (<= 0 ($generated@@264 $generated@@439))))
 :pattern ( ($generated@@264 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@68)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@68) (= (type $generated@@444) $generated@@68)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@68)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@68) (= (type $generated@@448) $generated@@68)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@68) (= (type $generated@@450) $generated@@68)) (= ($generated@@76 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@68)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@68) (= (type $generated@@454) $generated@@68)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@68) (= (type $generated@@458) $generated@@68)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@68) (= (type $generated@@460) $generated@@68)) (= ($generated@@76 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@158) (= (type $generated@@462) $generated@@158)) (= ($generated@@257 ($generated@@224 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@224 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@68) (= (type $generated@@466) $generated@@68)) (= ($generated@@463 ($generated@@148 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@148 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@68) (= (type $generated@@470) $generated@@68)) (= ($generated@@467 ($generated@@148 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@148 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@156 ($generated@@224 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@224 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@158) (= (type $generated@@474) $generated@@158)) (= ($generated@@157 ($generated@@224 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@224 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@266 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@265 $generated@@158)) (= (type $generated@@482) $generated@@68)) (= (type $generated@@483) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@264 $generated@@481))) ($generated@@251 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@78 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@79 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@79 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@68) (= ($generated@@487 ($generated@@234 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@234 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@68) (= ($generated@@76 ($generated@@234 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@68) (= ($generated@@491 ($generated@@239 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@239 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@68) (= ($generated@@76 ($generated@@239 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@495 ($generated@@163 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@163 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@68) (= ($generated@@76 ($generated@@163 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@68) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@76 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@503 ($generated@@136 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@136 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@324 $generated@@507 ($generated@@271 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@271 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@287 $generated@@158 $generated@@158)) (= (type $generated@@509) $generated@@68)) (= (type $generated@@510) $generated@@68)) (= ($generated@@145 $generated@@508 ($generated@@393 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@158) ($generated@@0 ($generated@@85 ($generated@@285 $generated@@508) $generated@@511))) (and ($generated@@225 ($generated@@85 ($generated@@368 $generated@@508) $generated@@511) $generated@@510) ($generated@@225 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@508) $generated@@511))
 :pattern ( ($generated@@85 ($generated@@285 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@145 $generated@@508 ($generated@@393 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@305 $generated@@158 $generated@@158)) (= (type $generated@@513) $generated@@68)) (= (type $generated@@514) $generated@@68)) (= ($generated@@145 $generated@@512 ($generated@@401 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@158) ($generated@@0 ($generated@@85 ($generated@@303 $generated@@512) $generated@@515))) (and ($generated@@225 ($generated@@85 ($generated@@376 $generated@@512) $generated@@515) $generated@@514) ($generated@@225 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@512) $generated@@515))
 :pattern ( ($generated@@85 ($generated@@303 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@145 $generated@@512 ($generated@@401 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@158) (= (type $generated@@519) $generated@@158)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@224 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@224 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@158) (= (type $generated@@521) $generated@@158)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@224 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@158) (= (type $generated@@523) $generated@@68)) (= (type $generated@@524) $generated@@68)) ($generated@@225 $generated@@522 ($generated@@393 $generated@@523 $generated@@524))) (and (= ($generated@@271 ($generated@@324 ($generated@@287 $generated@@158 $generated@@158) $generated@@522)) $generated@@522) ($generated@@145 ($generated@@324 ($generated@@287 $generated@@158 $generated@@158) $generated@@522) ($generated@@393 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@225 $generated@@522 ($generated@@393 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@158) (= (type $generated@@526) $generated@@68)) (= (type $generated@@527) $generated@@68)) ($generated@@225 $generated@@525 ($generated@@401 $generated@@526 $generated@@527))) (and (= ($generated@@271 ($generated@@324 ($generated@@305 $generated@@158 $generated@@158) $generated@@525)) $generated@@525) ($generated@@145 ($generated@@324 ($generated@@305 $generated@@158 $generated@@158) $generated@@525) ($generated@@401 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@225 $generated@@525 ($generated@@401 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= (type $generated@@530) $generated@@158)) ($generated@@225 $generated@@530 ($generated@@148 $generated@@528 $generated@@529))) (and (= ($generated@@271 ($generated@@324 $generated@@149 $generated@@530)) $generated@@530) ($generated@@145 ($generated@@324 $generated@@149 $generated@@530) ($generated@@148 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@225 $generated@@530 ($generated@@148 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@85 ($generated@@409 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@85 ($generated@@409 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@282 ($generated@@148 $generated@@533 $generated@@534)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@149) (= ($generated@@516 ($generated@@271 $generated@@535)) ($generated@@517 $generated@@535)))
 :pattern ( ($generated@@516 ($generated@@271 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@158) ($generated@@225 $generated@@536 ($generated@@79 0))) (and (= ($generated@@271 ($generated@@324 $generated@@2 $generated@@536)) $generated@@536) ($generated@@145 ($generated@@324 ($generated@@80 $generated@@158 $generated@@4) $generated@@536) ($generated@@79 0))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@79 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@158) (= (type $generated@@538) $generated@@68)) ($generated@@225 $generated@@537 ($generated@@234 $generated@@538))) (and (= ($generated@@271 ($generated@@324 ($generated@@80 $generated@@158 $generated@@4) $generated@@537)) $generated@@537) ($generated@@145 ($generated@@324 ($generated@@80 $generated@@158 $generated@@4) $generated@@537) ($generated@@234 $generated@@538))))
 :pattern ( ($generated@@225 $generated@@537 ($generated@@234 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@158) (= (type $generated@@540) $generated@@68)) ($generated@@225 $generated@@539 ($generated@@239 $generated@@540))) (and (= ($generated@@271 ($generated@@324 ($generated@@80 $generated@@158 $generated@@4) $generated@@539)) $generated@@539) ($generated@@145 ($generated@@324 ($generated@@80 $generated@@158 $generated@@4) $generated@@539) ($generated@@239 $generated@@540))))
 :pattern ( ($generated@@225 $generated@@539 ($generated@@239 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@158) (= (type $generated@@542) $generated@@68)) ($generated@@225 $generated@@541 ($generated@@163 $generated@@542))) (and (= ($generated@@271 ($generated@@324 ($generated@@80 $generated@@158 $generated@@2) $generated@@541)) $generated@@541) ($generated@@145 ($generated@@324 ($generated@@80 $generated@@158 $generated@@2) $generated@@541) ($generated@@163 $generated@@542))))
 :pattern ( ($generated@@225 $generated@@541 ($generated@@163 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@158) (= (type $generated@@544) $generated@@68)) ($generated@@225 $generated@@543 ($generated@@475 $generated@@544))) (and (= ($generated@@271 ($generated@@324 ($generated@@265 $generated@@158) $generated@@543)) $generated@@543) ($generated@@145 ($generated@@324 ($generated@@265 $generated@@158) $generated@@543) ($generated@@475 $generated@@544))))
 :pattern ( ($generated@@225 $generated@@543 ($generated@@475 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@68) (= (type $generated@@546) $generated@@158)) ($generated@@225 $generated@@546 ($generated@@136 $generated@@545))) (and (= ($generated@@271 ($generated@@324 $generated@@81 $generated@@546)) $generated@@546) ($generated@@145 ($generated@@324 $generated@@81 $generated@@546) ($generated@@136 $generated@@545))))
 :pattern ( ($generated@@225 $generated@@546 ($generated@@136 $generated@@545)))
)))
(assert (= ($generated@@76 $generated@@142) $generated@@64))
(assert (= ($generated@@282 $generated@@142) $generated@@67))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@80 $generated@@158 $generated@@2)) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@547 ($generated@@163 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@158) (< 0 ($generated ($generated@@85 $generated@@547 $generated@@550)))) ($generated@@251 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@85 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@78 $generated@@547 ($generated@@163 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@250 $generated@@553) (and ($generated@@147 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@68) ($generated@@78 $generated@@551 ($generated@@148 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@78 $generated@@551 ($generated@@148 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@251 ($generated@@156 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@251 ($generated@@156 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@250 $generated@@557) (and ($generated@@147 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@68) ($generated@@78 $generated@@555 ($generated@@148 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@78 $generated@@555 ($generated@@148 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@251 ($generated@@157 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@251 ($generated@@157 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@2) (= ($generated@@145 $generated@@559 $generated@@142)  (and (<= ($generated@@244 0) ($generated $generated@@559)) (< ($generated $generated@@559) 4294967296))))
 :pattern ( ($generated@@145 $generated@@559 $generated@@142))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (= (type $generated@@561) $generated@@158)) (= ($generated@@224 ($generated@@246 $generated@@560) ($generated@@246 $generated@@561)) ($generated@@246 ($generated@@224 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@560) ($generated@@246 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@562))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@563)) ($generated@@246 ($generated@@271 $generated@@563)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@266 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@265 $generated@@565)) (= ($generated@@264 $generated@@564) 0)) (= $generated@@564 ($generated@@263 $generated@@565))))
 :pattern ( ($generated@@264 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@80 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@276 ($generated@@86 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@276 $generated@@566) ($generated ($generated@@85 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@276 ($generated@@86 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@571) $generated@@2)) ($generated@@78 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@78 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@573) $generated@@3)) ($generated@@78 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@78 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@575) $generated@@4)) ($generated@@78 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@78 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@577) $generated@@433)) ($generated@@78 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@78 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@579) $generated@@158)) ($generated@@78 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@78 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@265 $generated@@158)) (= (type $generated@@581) $generated@@68)) (= ($generated@@145 $generated@@580 ($generated@@475 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@264 $generated@@580))) ($generated@@225 ($generated@@476 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@476 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@145 $generated@@580 ($generated@@475 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@265 $generated@@158)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@264 $generated@@584))) (< ($generated@@517 ($generated@@324 $generated@@149 ($generated@@476 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@517 ($generated@@324 $generated@@149 ($generated@@476 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@287 $generated@@158 $generated@@158)) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) $generated@@68)) ($generated@@145 $generated@@586 ($generated@@393 $generated@@587 $generated@@588))) (and (and ($generated@@145 ($generated@@285 $generated@@586) ($generated@@234 $generated@@587)) ($generated@@145 ($generated@@336 $generated@@586) ($generated@@234 $generated@@588))) ($generated@@145 ($generated@@367 $generated@@586) ($generated@@234 ($generated@@148 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@145 $generated@@586 ($generated@@393 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@305 $generated@@158 $generated@@158)) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) ($generated@@145 $generated@@589 ($generated@@401 $generated@@590 $generated@@591))) (and (and ($generated@@145 ($generated@@303 $generated@@589) ($generated@@239 $generated@@590)) ($generated@@145 ($generated@@347 $generated@@589) ($generated@@239 $generated@@591))) ($generated@@145 ($generated@@375 $generated@@589) ($generated@@239 ($generated@@148 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@401 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@145 $generated@@592 $generated@@46))
 :pattern ( ($generated@@145 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@145 $generated@@593 $generated@@47))
 :pattern ( ($generated@@145 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@145 $generated@@594 $generated@@44))
 :pattern ( ($generated@@145 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@433) ($generated@@145 $generated@@595 $generated@@45))
 :pattern ( ($generated@@145 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@158) ($generated@@145 $generated@@596 $generated@@48))
 :pattern ( ($generated@@145 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 (T@U) Bool)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () Int)
(assert  (and (and (= (type $generated@@597) ($generated@@170 $generated@@81 $generated@@4)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@600) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@602  (=> (and (= $generated@@597 ($generated@@169 $generated@@137 $generated@@598 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@137 $generated@@137))))
(let (($generated@@603  (=> (and ($generated@@250 $generated@@598) ($generated@@599 $generated@@598)) (=> (and (and ($generated@@145 $generated@@600 ($generated@@136 $generated@@142)) ($generated@@78 $generated@@600 ($generated@@136 $generated@@142) $generated@@598)) (and (= 1 $generated@@601) (= (ControlFlow 0 3) 2))) $generated@@602))))
$generated@@603)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@605 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@68)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (= (type $generated@@152) $generated@@68))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@2) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@153 $generated@@152 $generated@@154))
 :pattern ( ($generated@@78 $generated@@153 $generated@@152 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@68) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@158) $generated@@81)) (and (and ($generated@@155 $generated@@157) (and (not (= $generated@@158 $generated@@138)) (= ($generated@@139 $generated@@158) ($generated@@137 $generated@@156)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@157 $generated@@158) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@158)) $generated@@46 $generated@@157))
 :pattern ( ($generated@@136 $generated@@158) ($generated@@87 ($generated@@85 $generated@@157 $generated@@158) $generated@@60) ($generated@@137 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@140 $generated@@159 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@159 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@68) (= (type $generated@@166) $generated@@68)) (= (type $generated@@167) $generated@@162)) ($generated@@140 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@140 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@68)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@80 $generated@@171 $generated@@2)) (= (type $generated@@180) $generated@@68)) ($generated@@140 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@140 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@81 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@81) (= (type $generated@@231) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@81)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@162)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@171)) (= (type $generated@@244) $generated@@171)) (= ($generated@@140 ($generated@@237 $generated@@243 $generated@@244) ($generated@@161 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@140 ($generated@@237 $generated@@243 $generated@@244) ($generated@@161 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@162) (= (type $generated@@246) $generated@@162)) (= ($generated@@168 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@168 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@68)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@250) $generated@@68)) (= ($generated@@140 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@171) ($generated@@0 ($generated@@85 $generated@@249 $generated@@251))) ($generated@@238 $generated@@251 $generated@@250))
 :pattern ( ($generated@@85 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@140 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@68)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@255) $generated@@68)) (= ($generated@@140 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@171) ($generated@@0 ($generated@@85 $generated@@254 $generated@@256))) ($generated@@238 $generated@@256 $generated@@255))
 :pattern ( ($generated@@85 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@140 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@257 $generated@@258) $generated@@258)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@68) (= (type $generated@@265) $generated@@68)) (= (type $generated@@266) $generated@@171)) (= (type $generated@@267) $generated@@171)) (= (type $generated@@268) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@155 $generated@@268)) (= ($generated@@78 ($generated@@237 $generated@@266 $generated@@267) ($generated@@161 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@266 $generated@@267) ($generated@@161 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@72)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@162) (= ($generated@@160 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@162) ($generated@@160 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@171) (= (type $generated@@274) $generated@@171)) (= $generated@@272 ($generated@@237 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@160 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 17)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@171)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@78 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@289) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@290) $generated@@171)) (= (type $generated@@291) $generated@@68)) ($generated@@145 $generated@@288 $generated@@289)) ($generated@@263 $generated@@290 $generated@@291 $generated@@288)) ($generated@@263 $generated@@290 $generated@@291 $generated@@289))
 :pattern ( ($generated@@145 $generated@@288 $generated@@289) ($generated@@263 $generated@@290 $generated@@291 $generated@@288))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@295) $generated@@68)) ($generated@@145 $generated@@292 $generated@@293)) ($generated@@78 $generated@@294 $generated@@295 $generated@@292)) ($generated@@78 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@145 $generated@@292 $generated@@293) ($generated@@78 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@80 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@83 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@80 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@85 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@73)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@68) (and (= ($generated@@76 ($generated@@137 $generated@@304)) $generated@@61) (= ($generated@@302 ($generated@@137 $generated@@304)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@80 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@80 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@83 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@80 $generated@@342 $generated@@2)) (= ($generated@@177 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@85 $generated@@341 $generated@@343))) (<= ($generated ($generated@@85 $generated@@341 $generated@@343)) ($generated@@296 $generated@@341))))
 :pattern ( ($generated@@85 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@177 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@171) ($generated@@238 $generated@@347 $generated@@152)) (and (= ($generated@@283 ($generated@@344 $generated@@2 $generated@@347)) $generated@@347) ($generated@@140 ($generated@@344 $generated@@2 $generated@@347) $generated@@152)))
 :pattern ( ($generated@@238 $generated@@347 $generated@@152))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@68) (= (type $generated@@349) $generated@@81)) (= ($generated@@140 $generated@@349 ($generated@@137 $generated@@348))  (or (= $generated@@349 $generated@@138) (= ($generated@@139 $generated@@349) ($generated@@137 $generated@@348)))))
 :pattern ( ($generated@@140 $generated@@349 ($generated@@137 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@309 (type $generated@@350))))
(let (($generated@@352 ($generated@@308 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@307 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@306 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@305 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@80 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@309 (type $generated@@357))))
(let (($generated@@359 ($generated@@308 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@307 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@306 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@85 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@327 (type $generated@@361))))
(let (($generated@@363 ($generated@@326 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@325 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@324 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@323 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@80 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@327 (type $generated@@368))))
(let (($generated@@370 ($generated@@326 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@325 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@324 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@85 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@80 $generated@@171 $generated@@2)) (= (type $generated@@373) $generated@@68)) (= ($generated@@140 $generated@@372 ($generated@@176 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@171) (< 0 ($generated ($generated@@85 $generated@@372 $generated@@374)))) ($generated@@238 $generated@@374 $generated@@373))
 :pattern ( ($generated@@85 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@140 $generated@@372 ($generated@@176 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@376) $generated@@68)) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@375 ($generated@@247 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@171) ($generated@@0 ($generated@@85 $generated@@375 $generated@@378))) ($generated@@263 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@85 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@78 $generated@@375 ($generated@@247 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@80 $generated@@171 $generated@@4)) (= (type $generated@@380) $generated@@68)) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@379 ($generated@@252 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@171) ($generated@@0 ($generated@@85 $generated@@379 $generated@@382))) ($generated@@263 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@85 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@78 $generated@@379 ($generated@@252 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@85 ($generated@@297 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@85 ($generated@@297 $generated@@384) $generated@@383)))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@80 $generated@@171 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@309 (type $generated@@388))))
(let (($generated@@390 ($generated@@308 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@80 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@307 $generated@@171 $generated@@171)) (= (type $generated@@392) $generated@@171)) (= ($generated@@0 ($generated@@85 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@391) ($generated@@169 ($generated@@344 $generated@@162 $generated@@392)))) (= ($generated@@85 ($generated@@386 $generated@@391) ($generated@@169 ($generated@@344 $generated@@162 $generated@@392))) ($generated@@170 ($generated@@344 $generated@@162 $generated@@392))))))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@80 $generated@@171 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@327 (type $generated@@396))))
(let (($generated@@398 ($generated@@326 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@325 $generated@@171 $generated@@171)) (= (type $generated@@400) $generated@@171)) (= ($generated@@0 ($generated@@85 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@399) ($generated@@169 ($generated@@344 $generated@@162 $generated@@400)))) (= ($generated@@85 ($generated@@394 $generated@@399) ($generated@@169 ($generated@@344 $generated@@162 $generated@@400))) ($generated@@170 ($generated@@344 $generated@@162 $generated@@400))))))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@308 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@307 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@85 ($generated@@354 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@85 ($generated@@386 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@401) $generated@@405))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@85 ($generated@@354 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@326 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@325 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@85 ($generated@@365 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@85 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@406) $generated@@410))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@85 ($generated@@365 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@68)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@307 $generated@@171 $generated@@171)) (= (type $generated@@415) $generated@@68)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@414) $generated@@418))) (and ($generated@@263 ($generated@@85 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@263 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@78 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@68)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@325 $generated@@171 $generated@@171)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@422) $generated@@426))) (and ($generated@@263 ($generated@@85 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@263 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@427) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@427 $generated@@429))) (and ($generated@@145 $generated@@427 $generated@@428) ($generated@@145 $generated@@428 $generated@@429))) ($generated@@145 $generated@@427 $generated@@429))
 :pattern ( ($generated@@145 $generated@@427 $generated@@428) ($generated@@145 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@80 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@327 (type $generated@@432))))
(let (($generated@@434 ($generated@@326 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@325 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@324 $generated@@434 $generated@@433)) (= ($generated@@323 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@323 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@327 (type $generated@@435))))
(let (($generated@@437 ($generated@@326 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@325 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@324 $generated@@437 $generated@@436)) (= ($generated@@365 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@365 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@393 $generated@@438) ($generated@@430 $generated@@171))))))
 :pattern ( ($generated@@393 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@309 (type $generated@@441))))
(let (($generated@@443 ($generated@@308 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@307 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@306 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@171) (= (type $generated@@445) $generated@@171)) ($generated@@0 ($generated@@85 ($generated@@385 $generated@@441) ($generated@@283 ($generated@@237 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@385 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@327 (type $generated@@446))))
(let (($generated@@448 ($generated@@326 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@325 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@324 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@171) (= (type $generated@@450) $generated@@171)) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@446) ($generated@@283 ($generated@@237 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@393 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@171) ($generated@@238 $generated@@451 $generated@@46)) (and (= ($generated@@283 ($generated@@344 $generated@@2 $generated@@451)) $generated@@451) ($generated@@140 ($generated@@344 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@171) ($generated@@238 $generated@@452 $generated@@47)) (and (= ($generated@@283 ($generated@@344 $generated@@3 $generated@@452)) $generated@@452) ($generated@@140 ($generated@@344 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@171) ($generated@@238 $generated@@453 $generated@@44)) (and (= ($generated@@283 ($generated@@344 $generated@@4 $generated@@453)) $generated@@453) ($generated@@140 ($generated@@344 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@171) ($generated@@238 $generated@@455 $generated@@45)) (and (= ($generated@@283 ($generated@@344 $generated@@454 $generated@@455)) $generated@@455) ($generated@@140 ($generated@@344 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@68) (= ($generated@@238 ($generated@@283 $generated@@456) $generated@@457) ($generated@@140 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@238 ($generated@@283 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@81) (<= 0 ($generated@@136 $generated@@458)))
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@83 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@80 $generated@@460 $generated@@2)) (<= 0 ($generated@@296 $generated@@459))))
 :pattern ( ($generated@@296 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@278 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@277 $generated@@462)) (<= 0 ($generated@@276 $generated@@461))))
 :pattern ( ($generated@@276 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@68) (= (type $generated@@466) $generated@@68)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@68) (= (type $generated@@470) $generated@@68)) (= ($generated@@467 ($generated@@411 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@76 ($generated@@411 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@68)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@477 ($generated@@419 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@419 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@76 ($generated@@419 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@171) (= (type $generated@@484) $generated@@171)) (= ($generated@@269 ($generated@@237 $generated@@483 $generated@@484)) $generated@@62))
 :pattern ( ($generated@@237 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@161 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@161 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@161 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@161 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@171) (= (type $generated@@494) $generated@@171)) (= ($generated@@169 ($generated@@237 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@237 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@171) (= (type $generated@@496) $generated@@171)) (= ($generated@@170 ($generated@@237 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@237 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@278 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@277 $generated@@171)) (= (type $generated@@504) $generated@@68)) (= (type $generated@@505) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@276 $generated@@503))) ($generated@@263 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@78 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@79 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@79 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@509 ($generated@@247 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@247 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@76 ($generated@@247 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@513 ($generated@@252 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@252 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@76 ($generated@@252 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@517 ($generated@@176 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@176 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@76 ($generated@@176 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@76 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@137 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@137 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@344 $generated@@529 ($generated@@283 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@283 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@307 $generated@@171 $generated@@171)) (= (type $generated@@531) $generated@@68)) (= (type $generated@@532) $generated@@68)) (= ($generated@@140 $generated@@530 ($generated@@411 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@530) $generated@@533))) (and ($generated@@238 ($generated@@85 ($generated@@386 $generated@@530) $generated@@533) $generated@@532) ($generated@@238 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@530) $generated@@533))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@140 $generated@@530 ($generated@@411 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@325 $generated@@171 $generated@@171)) (= (type $generated@@535) $generated@@68)) (= (type $generated@@536) $generated@@68)) (= ($generated@@140 $generated@@534 ($generated@@419 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@171) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@534) $generated@@537))) (and ($generated@@238 ($generated@@85 ($generated@@394 $generated@@534) $generated@@537) $generated@@536) ($generated@@238 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@534) $generated@@537))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@140 $generated@@534 ($generated@@419 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@171) (= (type $generated@@541) $generated@@171)) (< ($generated@@538 $generated@@540) ($generated@@539 ($generated@@237 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@237 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@171) (= (type $generated@@543) $generated@@171)) (< ($generated@@538 $generated@@543) ($generated@@539 ($generated@@237 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@237 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@171) (= (type $generated@@545) $generated@@68)) (= (type $generated@@546) $generated@@68)) ($generated@@238 $generated@@544 ($generated@@411 $generated@@545 $generated@@546))) (and (= ($generated@@283 ($generated@@344 ($generated@@307 $generated@@171 $generated@@171) $generated@@544)) $generated@@544) ($generated@@140 ($generated@@344 ($generated@@307 $generated@@171 $generated@@171) $generated@@544) ($generated@@411 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@238 $generated@@544 ($generated@@411 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@171) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) $generated@@68)) ($generated@@238 $generated@@547 ($generated@@419 $generated@@548 $generated@@549))) (and (= ($generated@@283 ($generated@@344 ($generated@@325 $generated@@171 $generated@@171) $generated@@547)) $generated@@547) ($generated@@140 ($generated@@344 ($generated@@325 $generated@@171 $generated@@171) $generated@@547) ($generated@@419 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@238 $generated@@547 ($generated@@419 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@171)) ($generated@@238 $generated@@552 ($generated@@161 $generated@@550 $generated@@551))) (and (= ($generated@@283 ($generated@@344 $generated@@162 $generated@@552)) $generated@@552) ($generated@@140 ($generated@@344 $generated@@162 $generated@@552) ($generated@@161 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@238 $generated@@552 ($generated@@161 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (not ($generated@@0 ($generated@@85 ($generated@@430 $generated@@554) $generated@@553))))
 :pattern ( (let (($generated@@554 (type $generated@@553)))
($generated@@85 ($generated@@430 $generated@@554) $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (and (= ($generated@@76 ($generated@@161 $generated@@555 $generated@@556)) $generated@@63) (= ($generated@@302 ($generated@@161 $generated@@555 $generated@@556)) $generated@@66)))
 :pattern ( ($generated@@161 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@162) (= ($generated@@538 ($generated@@283 $generated@@557)) ($generated@@539 $generated@@557)))
 :pattern ( ($generated@@538 ($generated@@283 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@171) ($generated@@238 $generated@@558 ($generated@@79 0))) (and (= ($generated@@283 ($generated@@344 $generated@@2 $generated@@558)) $generated@@558) ($generated@@140 ($generated@@344 ($generated@@80 $generated@@171 $generated@@4) $generated@@558) ($generated@@79 0))))
 :pattern ( ($generated@@238 $generated@@558 ($generated@@79 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@68)) ($generated@@238 $generated@@559 ($generated@@247 $generated@@560))) (and (= ($generated@@283 ($generated@@344 ($generated@@80 $generated@@171 $generated@@4) $generated@@559)) $generated@@559) ($generated@@140 ($generated@@344 ($generated@@80 $generated@@171 $generated@@4) $generated@@559) ($generated@@247 $generated@@560))))
 :pattern ( ($generated@@238 $generated@@559 ($generated@@247 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@171) (= (type $generated@@562) $generated@@68)) ($generated@@238 $generated@@561 ($generated@@252 $generated@@562))) (and (= ($generated@@283 ($generated@@344 ($generated@@80 $generated@@171 $generated@@4) $generated@@561)) $generated@@561) ($generated@@140 ($generated@@344 ($generated@@80 $generated@@171 $generated@@4) $generated@@561) ($generated@@252 $generated@@562))))
 :pattern ( ($generated@@238 $generated@@561 ($generated@@252 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@171) (= (type $generated@@564) $generated@@68)) ($generated@@238 $generated@@563 ($generated@@176 $generated@@564))) (and (= ($generated@@283 ($generated@@344 ($generated@@80 $generated@@171 $generated@@2) $generated@@563)) $generated@@563) ($generated@@140 ($generated@@344 ($generated@@80 $generated@@171 $generated@@2) $generated@@563) ($generated@@176 $generated@@564))))
 :pattern ( ($generated@@238 $generated@@563 ($generated@@176 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@171) (= (type $generated@@566) $generated@@68)) ($generated@@238 $generated@@565 ($generated@@497 $generated@@566))) (and (= ($generated@@283 ($generated@@344 ($generated@@277 $generated@@171) $generated@@565)) $generated@@565) ($generated@@140 ($generated@@344 ($generated@@277 $generated@@171) $generated@@565) ($generated@@497 $generated@@566))))
 :pattern ( ($generated@@238 $generated@@565 ($generated@@497 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@171)) ($generated@@238 $generated@@568 ($generated@@137 $generated@@567))) (and (= ($generated@@283 ($generated@@344 $generated@@81 $generated@@568)) $generated@@568) ($generated@@140 ($generated@@344 $generated@@81 $generated@@568) ($generated@@137 $generated@@567))))
 :pattern ( ($generated@@238 $generated@@568 ($generated@@137 $generated@@567)))
)))
(assert (= ($generated@@76 $generated@@152) $generated@@64))
(assert (= ($generated@@302 $generated@@152) $generated@@67))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@80 $generated@@171 $generated@@2)) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@569 ($generated@@176 $generated@@570) $generated@@571) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@171) (< 0 ($generated ($generated@@85 $generated@@569 $generated@@572)))) ($generated@@263 $generated@@572 $generated@@570 $generated@@571))
 :pattern ( ($generated@@85 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@78 $generated@@569 ($generated@@176 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@162) (= (type $generated@@574) $generated@@68)) (= (type $generated@@575) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@155 $generated@@575) (and ($generated@@160 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@68) ($generated@@78 $generated@@573 ($generated@@161 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@78 $generated@@573 ($generated@@161 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@263 ($generated@@169 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@263 ($generated@@169 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@162) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@155 $generated@@579) (and ($generated@@160 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@68) ($generated@@78 $generated@@577 ($generated@@161 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@78 $generated@@577 ($generated@@161 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@263 ($generated@@170 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@263 ($generated@@170 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) (= ($generated@@140 $generated@@581 $generated@@152)  (and (<= ($generated@@257 0) ($generated $generated@@581)) (< ($generated $generated@@581) 4294967296))))
 :pattern ( ($generated@@140 $generated@@581 $generated@@152))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@171) (= (type $generated@@583) $generated@@171)) (= ($generated@@237 ($generated@@259 $generated@@582) ($generated@@259 $generated@@583)) ($generated@@259 ($generated@@237 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@237 ($generated@@259 $generated@@582) ($generated@@259 $generated@@583)))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@257 $generated@@584))) ($generated@@259 ($generated@@283 ($generated@@8 $generated@@584))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@257 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ) (! (= ($generated@@283 ($generated@@259 $generated@@585)) ($generated@@259 ($generated@@283 $generated@@585)))
 :pattern ( ($generated@@283 ($generated@@259 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@278 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@277 $generated@@587)) (= ($generated@@276 $generated@@586) 0)) (= $generated@@586 ($generated@@275 $generated@@587))))
 :pattern ( ($generated@@276 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@589)))
 (=> (and (and (= (type $generated@@588) ($generated@@80 $generated@@591 $generated@@2)) (= (type $generated@@590) $generated@@2)) (<= 0 ($generated $generated@@590))) (= ($generated@@296 ($generated@@86 $generated@@588 $generated@@589 $generated@@590)) (+ (- ($generated@@296 $generated@@588) ($generated ($generated@@85 $generated@@588 $generated@@589))) ($generated $generated@@590)))))
 :pattern ( ($generated@@296 ($generated@@86 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@2)) ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@3)) ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@597) $generated@@4)) ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@599) $generated@@454)) ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@601) $generated@@171)) ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@277 $generated@@171)) (= (type $generated@@603) $generated@@68)) (= ($generated@@140 $generated@@602 ($generated@@497 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@276 $generated@@602))) ($generated@@238 ($generated@@498 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@498 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@140 $generated@@602 ($generated@@497 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (= (type $generated@@606) ($generated@@277 $generated@@171)) (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@276 $generated@@606))) (< ($generated@@539 ($generated@@344 $generated@@162 ($generated@@498 $generated@@606 $generated@@607))) ($generated@@605 $generated@@606))))
 :pattern ( ($generated@@539 ($generated@@344 $generated@@162 ($generated@@498 $generated@@606 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@307 $generated@@171 $generated@@171)) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) $generated@@68)) ($generated@@140 $generated@@608 ($generated@@411 $generated@@609 $generated@@610))) (and (and ($generated@@140 ($generated@@305 $generated@@608) ($generated@@247 $generated@@609)) ($generated@@140 ($generated@@354 $generated@@608) ($generated@@247 $generated@@610))) ($generated@@140 ($generated@@385 $generated@@608) ($generated@@247 ($generated@@161 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@140 $generated@@608 ($generated@@411 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@325 $generated@@171 $generated@@171)) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) $generated@@68)) ($generated@@140 $generated@@611 ($generated@@419 $generated@@612 $generated@@613))) (and (and ($generated@@140 ($generated@@323 $generated@@611) ($generated@@252 $generated@@612)) ($generated@@140 ($generated@@365 $generated@@611) ($generated@@252 $generated@@613))) ($generated@@140 ($generated@@393 $generated@@611) ($generated@@252 ($generated@@161 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@140 $generated@@611 ($generated@@419 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) ($generated@@140 $generated@@614 $generated@@46))
 :pattern ( ($generated@@140 $generated@@614 $generated@@46))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@3) ($generated@@140 $generated@@615 $generated@@47))
 :pattern ( ($generated@@140 $generated@@615 $generated@@47))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@4) ($generated@@140 $generated@@616 $generated@@44))
 :pattern ( ($generated@@140 $generated@@616 $generated@@44))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@454) ($generated@@140 $generated@@617 $generated@@45))
 :pattern ( ($generated@@140 $generated@@617 $generated@@45))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@171) ($generated@@140 $generated@@618 $generated@@48))
 :pattern ( ($generated@@140 $generated@@618 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(assert  (and (and (and (and (= (type $generated@@619) ($generated@@183 $generated@@81 $generated@@4)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@623) $generated@@81)) (= (type $generated@@624) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@626  (=> (= $generated@@619 ($generated@@182 $generated@@138 $generated@@620 $generated@@60 false)) (=> (and (and (and ($generated@@155 $generated@@621) ($generated@@622 $generated@@621)) (and (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@81) (=> (and (not (= $generated@@627 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@620 $generated@@627) $generated@@60))) (= ($generated@@85 $generated@@621 $generated@@627) ($generated@@85 $generated@@620 $generated@@627))))
 :pattern ( ($generated@@85 $generated@@621 $generated@@627))
)) ($generated@@145 $generated@@620 $generated@@621))) (and (and ($generated@@140 $generated@@623 ($generated@@137 $generated@@152)) ($generated@@78 $generated@@623 ($generated@@137 $generated@@152) $generated@@621)) (and (not (= $generated@@623 $generated@@138)) (= (ControlFlow 0 2) (- 0 1))))) (not (= $generated@@623 $generated@@138))))))
(let (($generated@@628  (=> (and ($generated@@155 $generated@@620) ($generated@@622 $generated@@620)) (=> (and (and ($generated@@140 $generated@@624 ($generated@@137 $generated@@152)) ($generated@@78 $generated@@624 ($generated@@137 $generated@@152) $generated@@620)) (and (= 1 $generated@@625) (= (ControlFlow 0 3) 2))) $generated@@626))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) Int)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (Int) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@69)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@71 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@71 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@68)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@138 $generated@@142))
)) (= (type $generated@@139) $generated@@82)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@140 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@68) (= (type $generated@@145) $generated@@82)) (and (not (= $generated@@145 $generated@@139)) (= ($generated@@140 $generated@@145) ($generated@@138 $generated@@144)))) ($generated@@141 ($generated@@8 ($generated@@137 $generated@@145)) $generated@@46))
 :pattern ( ($generated@@137 $generated@@145) ($generated@@138 $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@148) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@68) (= (type $generated@@151) $generated@@82)) (= (type $generated@@152) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@151 ($generated@@138 $generated@@150) $generated@@152)  (or (= $generated@@151 $generated@@139) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@151 ($generated@@138 $generated@@150) $generated@@152))
)))
(assert (= (type $generated@@153) $generated@@68))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@154 $generated@@153 $generated@@155))
 :pattern ( ($generated@@79 $generated@@154 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@159) $generated@@82)) (and (and ($generated@@156 $generated@@158) (and (not (= $generated@@159 $generated@@139)) (= ($generated@@140 $generated@@159) ($generated@@138 $generated@@157)))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@158 $generated@@159) $generated@@60)))) ($generated@@79 ($generated@@8 ($generated@@137 $generated@@159)) $generated@@46 $generated@@158))
 :pattern ( ($generated@@137 $generated@@159) ($generated@@88 ($generated@@86 $generated@@158 $generated@@159) $generated@@60) ($generated@@138 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@141 $generated@@160 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@68)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@68) (= (type $generated@@167) $generated@@68)) (= (type $generated@@168) $generated@@163)) ($generated@@141 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@141 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@68)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@81 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@68)) ($generated@@141 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@141 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@82 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@71 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@82) (= (type $generated@@232) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@233) ($generated@@70 $generated@@4))) (= (type $generated@@235) $generated@@82)) (= (type $generated@@236) ($generated@@70 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@68) (= (type $generated@@243) $generated@@68)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@141 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@141 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@81 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@68)) (= ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@86 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@86 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@141 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@81 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@68)) (= ($generated@@141 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@86 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@86 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@141 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@68) (= (type $generated@@266) $generated@@68)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@156 $generated@@269)) (= ($generated@@79 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@79 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@72)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@62)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@238 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@172)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@68) (= (type $generated@@288) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@79 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@290) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@291) $generated@@172)) (= (type $generated@@292) $generated@@68)) ($generated@@146 $generated@@289 $generated@@290)) ($generated@@264 $generated@@291 $generated@@292 $generated@@289)) ($generated@@264 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@146 $generated@@289 $generated@@290) ($generated@@264 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@293) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@294) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@296) $generated@@68)) ($generated@@146 $generated@@293 $generated@@294)) ($generated@@79 $generated@@295 $generated@@296 $generated@@293)) ($generated@@79 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@146 $generated@@293 $generated@@294) ($generated@@79 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@81 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@84 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@81 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@86 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@73)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@68) (and (= ($generated@@77 ($generated@@138 $generated@@305)) $generated@@61) (= ($generated@@303 ($generated@@138 $generated@@305)) $generated@@65)))
 :pattern ( ($generated@@138 $generated@@305))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@81 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@86 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@86 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@81 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@86 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@86 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@84 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@81 $generated@@343 $generated@@2)) (= ($generated@@178 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (and (<= 0 ($generated ($generated@@86 $generated@@342 $generated@@344))) (<= ($generated ($generated@@86 $generated@@342 $generated@@344)) ($generated@@297 $generated@@342))))
 :pattern ( ($generated@@86 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@178 $generated@@342))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@172) ($generated@@239 $generated@@348 $generated@@153)) (and (= ($generated@@284 ($generated@@345 $generated@@2 $generated@@348)) $generated@@348) ($generated@@141 ($generated@@345 $generated@@2 $generated@@348) $generated@@153)))
 :pattern ( ($generated@@239 $generated@@348 $generated@@153))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@68) (= (type $generated@@350) $generated@@82)) (= ($generated@@141 $generated@@350 ($generated@@138 $generated@@349))  (or (= $generated@@350 $generated@@139) (= ($generated@@140 $generated@@350) ($generated@@138 $generated@@349)))))
 :pattern ( ($generated@@141 $generated@@350 ($generated@@138 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(let (($generated@@353 ($generated@@309 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@308 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@307 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@306 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@310 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@81 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@310 (type $generated@@358))))
(let (($generated@@360 ($generated@@309 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@308 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@307 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@86 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@328 (type $generated@@362))))
(let (($generated@@364 ($generated@@327 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@326 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@325 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@324 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@328 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@81 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@328 (type $generated@@369))))
(let (($generated@@371 ($generated@@327 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@326 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@325 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@86 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@81 $generated@@172 $generated@@2)) (= (type $generated@@374) $generated@@68)) (= ($generated@@141 $generated@@373 ($generated@@177 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@172) (< 0 ($generated ($generated@@86 $generated@@373 $generated@@375)))) ($generated@@239 $generated@@375 $generated@@374))
 :pattern ( ($generated@@86 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@141 $generated@@373 ($generated@@177 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@81 $generated@@172 $generated@@4)) (= (type $generated@@377) $generated@@68)) (= (type $generated@@378) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@376 ($generated@@248 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@172) ($generated@@0 ($generated@@86 $generated@@376 $generated@@379))) ($generated@@264 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@86 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@79 $generated@@376 ($generated@@248 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@81 $generated@@172 $generated@@4)) (= (type $generated@@381) $generated@@68)) (= (type $generated@@382) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@380 ($generated@@253 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@172) ($generated@@0 ($generated@@86 $generated@@380 $generated@@383))) ($generated@@264 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@86 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@79 $generated@@380 ($generated@@253 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@86 ($generated@@298 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@86 ($generated@@298 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@81 $generated@@172 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@310 (type $generated@@389))))
(let (($generated@@391 ($generated@@309 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@81 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@308 $generated@@172 $generated@@172)) (= (type $generated@@393) $generated@@172)) (= ($generated@@0 ($generated@@86 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@86 ($generated@@306 $generated@@392) ($generated@@170 ($generated@@345 $generated@@163 $generated@@393)))) (= ($generated@@86 ($generated@@387 $generated@@392) ($generated@@170 ($generated@@345 $generated@@163 $generated@@393))) ($generated@@171 ($generated@@345 $generated@@163 $generated@@393))))))
 :pattern ( ($generated@@86 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@81 $generated@@172 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@328 (type $generated@@397))))
(let (($generated@@399 ($generated@@327 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@81 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@326 $generated@@172 $generated@@172)) (= (type $generated@@401) $generated@@172)) (= ($generated@@0 ($generated@@86 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@86 ($generated@@324 $generated@@400) ($generated@@170 ($generated@@345 $generated@@163 $generated@@401)))) (= ($generated@@86 ($generated@@395 $generated@@400) ($generated@@170 ($generated@@345 $generated@@163 $generated@@401))) ($generated@@171 ($generated@@345 $generated@@163 $generated@@401))))))
 :pattern ( ($generated@@86 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@309 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@308 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@86 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@86 ($generated@@306 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@86 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@402) $generated@@406))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@86 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@327 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@326 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@86 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@86 ($generated@@324 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@86 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@407) $generated@@411))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@86 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@308 $generated@@172 $generated@@172)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@172) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@86 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@326 $generated@@172 $generated@@172)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@172) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@423) $generated@@427))) (and ($generated@@264 ($generated@@86 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@264 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@429) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@430) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@428 $generated@@430))) (and ($generated@@146 $generated@@428 $generated@@429) ($generated@@146 $generated@@429 $generated@@430))) ($generated@@146 $generated@@428 $generated@@430))
 :pattern ( ($generated@@146 $generated@@428 $generated@@429) ($generated@@146 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 Int) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@70 $generated@@172))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 Int) ) (!  (=> (and (and (= (type $generated@@433) $generated@@68) (= (type $generated@@434) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@435) $generated@@82)) (=> (and (and (and ($generated@@156 $generated@@434) (and (not (= $generated@@435 $generated@@139)) (= ($generated@@140 $generated@@435) ($generated@@138 $generated@@433)))) (and (<= 0 $generated@@436) (< $generated@@436 ($generated@@137 $generated@@435)))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@434 $generated@@435) $generated@@60))) ($generated@@264 ($generated@@88 ($generated@@86 $generated@@434 $generated@@435) ($generated@@431 $generated@@436)) $generated@@433 $generated@@434)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@434 $generated@@435) ($generated@@431 $generated@@436)) ($generated@@138 $generated@@433))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@81 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@328 (type $generated@@439))))
(let (($generated@@441 ($generated@@327 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@326 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@325 $generated@@441 $generated@@440)) (= ($generated@@324 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@324 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@328 (type $generated@@442))))
(let (($generated@@444 ($generated@@327 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@326 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@325 $generated@@444 $generated@@443)) (= ($generated@@366 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@366 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@328 (type $generated@@445))))
(let (($generated@@447 ($generated@@327 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@326 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@325 $generated@@447 $generated@@446)) (= ($generated@@394 $generated@@445) ($generated@@437 $generated@@172))))))
 :pattern ( ($generated@@394 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@310 (type $generated@@448))))
(let (($generated@@450 ($generated@@309 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@308 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@307 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@172) (= (type $generated@@452) $generated@@172)) ($generated@@0 ($generated@@86 ($generated@@386 $generated@@448) ($generated@@284 ($generated@@238 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@386 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@328 (type $generated@@453))))
(let (($generated@@455 ($generated@@327 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@326 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@325 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@172) (= (type $generated@@457) $generated@@172)) ($generated@@0 ($generated@@86 ($generated@@394 $generated@@453) ($generated@@284 ($generated@@238 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@394 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@239 $generated@@458 $generated@@46)) (and (= ($generated@@284 ($generated@@345 $generated@@2 $generated@@458)) $generated@@458) ($generated@@141 ($generated@@345 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@172) ($generated@@239 $generated@@459 $generated@@47)) (and (= ($generated@@284 ($generated@@345 $generated@@3 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@345 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@172) ($generated@@239 $generated@@460 $generated@@44)) (and (= ($generated@@284 ($generated@@345 $generated@@4 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@345 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@172) ($generated@@239 $generated@@462 $generated@@45)) (and (= ($generated@@284 ($generated@@345 $generated@@461 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@345 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@68) (= ($generated@@239 ($generated@@284 $generated@@463) $generated@@464) ($generated@@141 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@239 ($generated@@284 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@82) (<= 0 ($generated@@137 $generated@@465)))
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@84 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@81 $generated@@467 $generated@@2)) (<= 0 ($generated@@297 $generated@@466))))
 :pattern ( ($generated@@297 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@279 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@278 $generated@@469)) (<= 0 ($generated@@277 $generated@@468))))
 :pattern ( ($generated@@277 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@412 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@412 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@412 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@77 ($generated@@412 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@420 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@420 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@420 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@77 ($generated@@420 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) (= (type $generated@@491) $generated@@172)) (= ($generated@@270 ($generated@@238 $generated@@490 $generated@@491)) $generated@@62))
 :pattern ( ($generated@@238 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@162 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@162 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@172) (= (type $generated@@501) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@238 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@172) (= (type $generated@@503) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@238 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@279 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@278 $generated@@172)) (= (type $generated@@511) $generated@@68)) (= (type $generated@@512) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@277 $generated@@510))) ($generated@@264 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@79 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@80 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@80 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@516 ($generated@@248 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@248 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@77 ($generated@@248 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@520 ($generated@@253 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@253 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@77 ($generated@@253 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@524 ($generated@@177 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@177 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@77 ($generated@@177 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@528 ($generated@@504 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@504 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@77 ($generated@@504 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@531))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@76 ($generated@@431 $generated@@532)) 1)
 :pattern ( ($generated@@431 $generated@@532))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@431 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@431 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@138 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@138 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(= ($generated@@345 $generated@@539 ($generated@@284 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@284 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@308 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@68)) (= ($generated@@141 $generated@@540 ($generated@@412 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@540) $generated@@543))) (and ($generated@@239 ($generated@@86 ($generated@@387 $generated@@540) $generated@@543) $generated@@542) ($generated@@239 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@540) $generated@@543))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@141 $generated@@540 ($generated@@412 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@326 $generated@@172 $generated@@172)) (= (type $generated@@545) $generated@@68)) (= (type $generated@@546) $generated@@68)) (= ($generated@@141 $generated@@544 ($generated@@420 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@172) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@544) $generated@@547))) (and ($generated@@239 ($generated@@86 ($generated@@395 $generated@@544) $generated@@547) $generated@@546) ($generated@@239 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@544) $generated@@547))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@141 $generated@@544 ($generated@@420 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 Int) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@68) (= (type $generated@@549) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@550) $generated@@82)) (and (and ($generated@@156 $generated@@549) (and (not (= $generated@@550 $generated@@139)) (= ($generated@@140 $generated@@550) ($generated@@138 $generated@@548)))) (and (<= 0 $generated@@551) (< $generated@@551 ($generated@@137 $generated@@550))))) ($generated@@239 ($generated@@88 ($generated@@86 $generated@@549 $generated@@550) ($generated@@431 $generated@@551)) $generated@@548))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@549 $generated@@550) ($generated@@431 $generated@@551)) ($generated@@138 $generated@@548))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@172) (= (type $generated@@555) $generated@@172)) (< ($generated@@552 $generated@@554) ($generated@@553 ($generated@@238 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@238 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@172) (= (type $generated@@557) $generated@@172)) (< ($generated@@552 $generated@@557) ($generated@@553 ($generated@@238 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@238 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@172) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@239 $generated@@558 ($generated@@412 $generated@@559 $generated@@560))) (and (= ($generated@@284 ($generated@@345 ($generated@@308 $generated@@172 $generated@@172) $generated@@558)) $generated@@558) ($generated@@141 ($generated@@345 ($generated@@308 $generated@@172 $generated@@172) $generated@@558) ($generated@@412 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@412 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@172) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@68)) ($generated@@239 $generated@@561 ($generated@@420 $generated@@562 $generated@@563))) (and (= ($generated@@284 ($generated@@345 ($generated@@326 $generated@@172 $generated@@172) $generated@@561)) $generated@@561) ($generated@@141 ($generated@@345 ($generated@@326 $generated@@172 $generated@@172) $generated@@561) ($generated@@420 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@561 ($generated@@420 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@172)) ($generated@@239 $generated@@566 ($generated@@162 $generated@@564 $generated@@565))) (and (= ($generated@@284 ($generated@@345 $generated@@163 $generated@@566)) $generated@@566) ($generated@@141 ($generated@@345 $generated@@163 $generated@@566) ($generated@@162 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@239 $generated@@566 ($generated@@162 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@86 ($generated@@437 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@86 ($generated@@437 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@68) (= (type $generated@@570) $generated@@68)) (and (= ($generated@@77 ($generated@@162 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@303 ($generated@@162 $generated@@569 $generated@@570)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@163) (= ($generated@@552 ($generated@@284 $generated@@571)) ($generated@@553 $generated@@571)))
 :pattern ( ($generated@@552 ($generated@@284 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@172) ($generated@@239 $generated@@572 ($generated@@80 0))) (and (= ($generated@@284 ($generated@@345 $generated@@2 $generated@@572)) $generated@@572) ($generated@@141 ($generated@@345 ($generated@@81 $generated@@172 $generated@@4) $generated@@572) ($generated@@80 0))))
 :pattern ( ($generated@@239 $generated@@572 ($generated@@80 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@172) (= (type $generated@@574) $generated@@68)) ($generated@@239 $generated@@573 ($generated@@248 $generated@@574))) (and (= ($generated@@284 ($generated@@345 ($generated@@81 $generated@@172 $generated@@4) $generated@@573)) $generated@@573) ($generated@@141 ($generated@@345 ($generated@@81 $generated@@172 $generated@@4) $generated@@573) ($generated@@248 $generated@@574))))
 :pattern ( ($generated@@239 $generated@@573 ($generated@@248 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@172) (= (type $generated@@576) $generated@@68)) ($generated@@239 $generated@@575 ($generated@@253 $generated@@576))) (and (= ($generated@@284 ($generated@@345 ($generated@@81 $generated@@172 $generated@@4) $generated@@575)) $generated@@575) ($generated@@141 ($generated@@345 ($generated@@81 $generated@@172 $generated@@4) $generated@@575) ($generated@@253 $generated@@576))))
 :pattern ( ($generated@@239 $generated@@575 ($generated@@253 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@172) (= (type $generated@@578) $generated@@68)) ($generated@@239 $generated@@577 ($generated@@177 $generated@@578))) (and (= ($generated@@284 ($generated@@345 ($generated@@81 $generated@@172 $generated@@2) $generated@@577)) $generated@@577) ($generated@@141 ($generated@@345 ($generated@@81 $generated@@172 $generated@@2) $generated@@577) ($generated@@177 $generated@@578))))
 :pattern ( ($generated@@239 $generated@@577 ($generated@@177 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@172) (= (type $generated@@580) $generated@@68)) ($generated@@239 $generated@@579 ($generated@@504 $generated@@580))) (and (= ($generated@@284 ($generated@@345 ($generated@@278 $generated@@172) $generated@@579)) $generated@@579) ($generated@@141 ($generated@@345 ($generated@@278 $generated@@172) $generated@@579) ($generated@@504 $generated@@580))))
 :pattern ( ($generated@@239 $generated@@579 ($generated@@504 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@68) (= (type $generated@@582) $generated@@172)) ($generated@@239 $generated@@582 ($generated@@138 $generated@@581))) (and (= ($generated@@284 ($generated@@345 $generated@@82 $generated@@582)) $generated@@582) ($generated@@141 ($generated@@345 $generated@@82 $generated@@582) ($generated@@138 $generated@@581))))
 :pattern ( ($generated@@239 $generated@@582 ($generated@@138 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (=> (and (and (and (= (type $generated@@583) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@584) $generated@@82)) (= (type $generated@@585) ($generated@@70 $generated@@587))) ($generated@@156 ($generated@@87 $generated@@583 $generated@@584 ($generated@@89 ($generated@@86 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))) ($generated@@146 $generated@@583 ($generated@@87 $generated@@583 $generated@@584 ($generated@@89 ($generated@@86 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@87 $generated@@583 $generated@@584 ($generated@@89 ($generated@@86 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))
)))
(assert (= ($generated@@77 $generated@@153) $generated@@64))
(assert (= ($generated@@303 $generated@@153) $generated@@67))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@81 $generated@@172 $generated@@2)) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@588 ($generated@@177 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@172) (< 0 ($generated ($generated@@86 $generated@@588 $generated@@591)))) ($generated@@264 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@86 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@79 $generated@@588 ($generated@@177 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@163) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@156 $generated@@594) (and ($generated@@161 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@68) ($generated@@79 $generated@@592 ($generated@@162 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@79 $generated@@592 ($generated@@162 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@264 ($generated@@170 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@163) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@156 $generated@@598) (and ($generated@@161 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@68) ($generated@@79 $generated@@596 ($generated@@162 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@79 $generated@@596 ($generated@@162 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@264 ($generated@@171 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) (= ($generated@@141 $generated@@600 $generated@@153)  (and (<= ($generated@@258 0) ($generated $generated@@600)) (< ($generated $generated@@600) 4294967296))))
 :pattern ( ($generated@@141 $generated@@600 $generated@@153))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@172) (= (type $generated@@602) $generated@@172)) (= ($generated@@238 ($generated@@260 $generated@@601) ($generated@@260 $generated@@602)) ($generated@@260 ($generated@@238 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@601) ($generated@@260 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@284 ($generated@@8 ($generated@@258 $generated@@603))) ($generated@@260 ($generated@@284 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@284 ($generated@@8 ($generated@@258 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@284 ($generated@@260 $generated@@604)) ($generated@@260 ($generated@@284 $generated@@604)))
 :pattern ( ($generated@@284 ($generated@@260 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@279 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@278 $generated@@606)) (= ($generated@@277 $generated@@605) 0)) (= $generated@@605 ($generated@@276 $generated@@606))))
 :pattern ( ($generated@@277 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@607) ($generated@@81 $generated@@610 $generated@@2)) (= (type $generated@@609) $generated@@2)) (<= 0 ($generated $generated@@609))) (= ($generated@@297 ($generated@@87 $generated@@607 $generated@@608 $generated@@609)) (+ (- ($generated@@297 $generated@@607) ($generated ($generated@@86 $generated@@607 $generated@@608))) ($generated $generated@@609)))))
 :pattern ( ($generated@@297 ($generated@@87 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@612) $generated@@2)) ($generated@@79 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@79 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@614) $generated@@3)) ($generated@@79 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@79 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@616) $generated@@4)) ($generated@@79 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@79 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@618) $generated@@461)) ($generated@@79 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@79 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@620) $generated@@172)) ($generated@@79 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@79 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@278 $generated@@172)) (= (type $generated@@622) $generated@@68)) (= ($generated@@141 $generated@@621 ($generated@@504 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@277 $generated@@621))) ($generated@@239 ($generated@@505 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@505 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@141 $generated@@621 ($generated@@504 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@277 $generated@@625))) (< ($generated@@553 ($generated@@345 $generated@@163 ($generated@@505 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@553 ($generated@@345 $generated@@163 ($generated@@505 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@308 $generated@@172 $generated@@172)) (= (type $generated@@628) $generated@@68)) (= (type $generated@@629) $generated@@68)) ($generated@@141 $generated@@627 ($generated@@412 $generated@@628 $generated@@629))) (and (and ($generated@@141 ($generated@@306 $generated@@627) ($generated@@248 $generated@@628)) ($generated@@141 ($generated@@355 $generated@@627) ($generated@@248 $generated@@629))) ($generated@@141 ($generated@@386 $generated@@627) ($generated@@248 ($generated@@162 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@141 $generated@@627 ($generated@@412 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@326 $generated@@172 $generated@@172)) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) $generated@@68)) ($generated@@141 $generated@@630 ($generated@@420 $generated@@631 $generated@@632))) (and (and ($generated@@141 ($generated@@324 $generated@@630) ($generated@@253 $generated@@631)) ($generated@@141 ($generated@@366 $generated@@630) ($generated@@253 $generated@@632))) ($generated@@141 ($generated@@394 $generated@@630) ($generated@@253 ($generated@@162 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@141 $generated@@630 ($generated@@420 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@141 $generated@@633 $generated@@46))
 :pattern ( ($generated@@141 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@141 $generated@@634 $generated@@47))
 :pattern ( ($generated@@141 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@141 $generated@@635 $generated@@44))
 :pattern ( ($generated@@141 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@461) ($generated@@141 $generated@@636 $generated@@45))
 :pattern ( ($generated@@141 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@172) ($generated@@141 $generated@@637 $generated@@48))
 :pattern ( ($generated@@141 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@638) ($generated@@184 $generated@@82 $generated@@4)) (= (type $generated@@639) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@640) $generated@@82)) (= (type $generated@@641) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@645) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@648) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@651) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@654) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@657) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@658) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@660  (=> (= $generated@@638 ($generated@@183 $generated@@139 $generated@@639 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 24)) (<= 0 ($generated@@258 5))) (=> (<= 0 ($generated@@258 5)) (=> (and (and (and (not (= $generated@@640 $generated@@139)) (= ($generated@@140 $generated@@640) ($generated@@138 $generated@@153))) (not ($generated@@0 ($generated@@88 ($generated@@86 $generated@@639 $generated@@640) $generated@@60)))) (and (and (= ($generated@@137 $generated@@640) ($generated@@258 5)) (= $generated@@641 ($generated@@87 $generated@@639 $generated@@640 ($generated@@89 ($generated@@86 $generated@@639 $generated@@640) $generated@@60 ($generated@@11 true))))) (and ($generated@@156 $generated@@641) ($generated@@642 $generated@@641)))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (not (= $generated@@640 $generated@@139))) (=> (not (= $generated@@640 $generated@@139)) (and (=> (= (ControlFlow 0 2) (- 0 22)) (and (<= 0 ($generated@@258 0)) (< ($generated@@258 0) ($generated@@137 $generated@@640)))) (=> (and (<= 0 ($generated@@258 0)) (< ($generated@@258 0) ($generated@@137 $generated@@640))) (and (=> (= (ControlFlow 0 2) (- 0 21)) ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 0))))) (=> ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 0)))) (=> (= $generated@@643 ($generated@@258 1)) (and (=> (= (ControlFlow 0 2) (- 0 20)) (and (<= ($generated@@258 0) $generated@@643) (< $generated@@643 4294967296))) (=> (and (<= ($generated@@258 0) $generated@@643) (< $generated@@643 4294967296)) (=> (= $generated@@644 ($generated@@258 1)) (=> (and (= $generated@@645 ($generated@@87 $generated@@641 $generated@@640 ($generated@@89 ($generated@@86 $generated@@641 $generated@@640) ($generated@@431 ($generated@@258 0)) ($generated@@284 ($generated@@8 $generated@@644))))) ($generated@@156 $generated@@645)) (and (=> (= (ControlFlow 0 2) (- 0 19)) (not (= $generated@@640 $generated@@139))) (=> (not (= $generated@@640 $generated@@139)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= 0 ($generated@@258 1)) (< ($generated@@258 1) ($generated@@137 $generated@@640)))) (=> (and (<= 0 ($generated@@258 1)) (< ($generated@@258 1) ($generated@@137 $generated@@640))) (and (=> (= (ControlFlow 0 2) (- 0 17)) ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 1))))) (=> ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 1)))) (=> (= $generated@@646 ($generated@@258 2)) (and (=> (= (ControlFlow 0 2) (- 0 16)) (and (<= ($generated@@258 0) $generated@@646) (< $generated@@646 4294967296))) (=> (and (<= ($generated@@258 0) $generated@@646) (< $generated@@646 4294967296)) (=> (= $generated@@647 ($generated@@258 2)) (=> (and (= $generated@@648 ($generated@@87 $generated@@645 $generated@@640 ($generated@@89 ($generated@@86 $generated@@645 $generated@@640) ($generated@@431 ($generated@@258 1)) ($generated@@284 ($generated@@8 $generated@@647))))) ($generated@@156 $generated@@648)) (and (=> (= (ControlFlow 0 2) (- 0 15)) (not (= $generated@@640 $generated@@139))) (=> (not (= $generated@@640 $generated@@139)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= 0 ($generated@@258 2)) (< ($generated@@258 2) ($generated@@137 $generated@@640)))) (=> (and (<= 0 ($generated@@258 2)) (< ($generated@@258 2) ($generated@@137 $generated@@640))) (and (=> (= (ControlFlow 0 2) (- 0 13)) ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 2))))) (=> ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 2)))) (=> (= $generated@@649 ($generated@@258 3)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@258 0) $generated@@649) (< $generated@@649 4294967296))) (=> (and (<= ($generated@@258 0) $generated@@649) (< $generated@@649 4294967296)) (=> (= $generated@@650 ($generated@@258 3)) (=> (and (= $generated@@651 ($generated@@87 $generated@@648 $generated@@640 ($generated@@89 ($generated@@86 $generated@@648 $generated@@640) ($generated@@431 ($generated@@258 2)) ($generated@@284 ($generated@@8 $generated@@650))))) ($generated@@156 $generated@@651)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= $generated@@640 $generated@@139))) (=> (not (= $generated@@640 $generated@@139)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= 0 ($generated@@258 3)) (< ($generated@@258 3) ($generated@@137 $generated@@640)))) (=> (and (<= 0 ($generated@@258 3)) (< ($generated@@258 3) ($generated@@137 $generated@@640))) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 3))))) (=> ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 3)))) (=> (= $generated@@652 ($generated@@258 4)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@258 0) $generated@@652) (< $generated@@652 4294967296))) (=> (and (<= ($generated@@258 0) $generated@@652) (< $generated@@652 4294967296)) (=> (= $generated@@653 ($generated@@258 4)) (=> (and (= $generated@@654 ($generated@@87 $generated@@651 $generated@@640 ($generated@@89 ($generated@@86 $generated@@651 $generated@@640) ($generated@@431 ($generated@@258 3)) ($generated@@284 ($generated@@8 $generated@@653))))) ($generated@@156 $generated@@654)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@640 $generated@@139))) (=> (not (= $generated@@640 $generated@@139)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@258 4)) (< ($generated@@258 4) ($generated@@137 $generated@@640)))) (=> (and (<= 0 ($generated@@258 4)) (< ($generated@@258 4) ($generated@@137 $generated@@640))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 4))))) (=> ($generated@@0 ($generated@@182 $generated@@638 $generated@@640 ($generated@@431 ($generated@@258 4)))) (=> (= $generated@@655 ($generated@@258 5)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@258 0) $generated@@655) (< $generated@@655 4294967296))) (=> (and (<= ($generated@@258 0) $generated@@655) (< $generated@@655 4294967296)) (=> (= $generated@@656 ($generated@@258 5)) (=> (and (= $generated@@657 ($generated@@87 $generated@@654 $generated@@640 ($generated@@89 ($generated@@86 $generated@@654 $generated@@640) ($generated@@431 ($generated@@258 4)) ($generated@@284 ($generated@@8 $generated@@656))))) ($generated@@156 $generated@@657)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@640 $generated@@139))) (=> (not (= $generated@@640 $generated@@139)) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@137 $generated@@640) ($generated@@258 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@661  (=> (and ($generated@@156 $generated@@639) ($generated@@642 $generated@@639)) (=> (and (and ($generated@@141 $generated@@658 ($generated@@138 $generated@@153)) ($generated@@79 $generated@@658 ($generated@@138 $generated@@153) $generated@@639)) (and (= 1 $generated@@659) (= (ControlFlow 0 25) 2))) $generated@@660))))
$generated@@661)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@440 (Int) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@633 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (= ($generated@@77 $generated@@60) 0))
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@70)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@72 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@72 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@69)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (forall (($generated@@143 T@U) ) (! (= (type ($generated@@139 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@139 $generated@@143))
)) (= (type $generated@@140) $generated@@83)) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@144)) $generated@@69)
 :pattern ( ($generated@@141 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@69) (= (type $generated@@146) $generated@@83)) (and (not (= $generated@@146 $generated@@140)) (= ($generated@@141 $generated@@146) ($generated@@139 $generated@@145)))) ($generated@@142 ($generated@@8 ($generated@@138 $generated@@146)) $generated@@46))
 :pattern ( ($generated@@138 $generated@@146) ($generated@@139 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@149) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@69) (= (type $generated@@152) $generated@@83)) (= (type $generated@@153) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@152 ($generated@@139 $generated@@151) $generated@@153)  (or (= $generated@@152 $generated@@140) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@152 ($generated@@139 $generated@@151) $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@69))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@2) (= (type $generated@@156) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
 :pattern ( ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@69) (= (type $generated@@159) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@160) $generated@@83)) (and (and ($generated@@157 $generated@@159) (and (not (= $generated@@160 $generated@@140)) (= ($generated@@141 $generated@@160) ($generated@@139 $generated@@158)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@159 $generated@@160) $generated@@60)))) ($generated@@80 ($generated@@8 ($generated@@138 $generated@@160)) $generated@@46 $generated@@159))
 :pattern ( ($generated@@138 $generated@@160) ($generated@@89 ($generated@@87 $generated@@159 $generated@@160) $generated@@60) ($generated@@139 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@142 $generated@@161 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@161 ($generated@@81 0)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@69)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@69) (= (type $generated@@165) $generated@@83)) (= (type $generated@@166) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@165 ($generated@@162 $generated@@164) $generated@@166) ($generated@@80 $generated@@165 ($generated@@139 $generated@@164) $generated@@166)))
 :pattern ( ($generated@@80 $generated@@165 ($generated@@162 $generated@@164) $generated@@166))
)))
(assert  (and (= ($generated@@1 $generated@@169) 14) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@170 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@168 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@69) (= (type $generated@@173) $generated@@69)) (= (type $generated@@174) $generated@@169)) ($generated@@142 $generated@@174 ($generated@@168 $generated@@172 $generated@@173))) ($generated@@167 $generated@@174))
 :pattern ( ($generated@@167 $generated@@174) ($generated@@142 $generated@@174 ($generated@@168 $generated@@172 $generated@@173)))
)))
(assert  (and (and (= ($generated@@1 $generated@@178) 15) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@176 $generated@@179))
))) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@178)
 :pattern ( ($generated@@177 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@169) (= (type $generated@@182) $generated@@169)) true) (= ($generated@@175 $generated@@181 $generated@@182)  (and (= ($generated@@176 $generated@@181) ($generated@@176 $generated@@182)) (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)))))
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@69)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@82 $generated@@178 $generated@@2)) (= (type $generated@@187) $generated@@69)) ($generated@@142 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@142 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 16)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@83 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@72 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@239) ($generated@@71 $generated@@4))) (= (type $generated@@241) $generated@@83)) (= (type $generated@@242) ($generated@@71 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@169)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@69) (= (type $generated@@249) $generated@@69)) (= (type $generated@@250) $generated@@178)) (= (type $generated@@251) $generated@@178)) (= ($generated@@142 ($generated@@244 $generated@@250 $generated@@251) ($generated@@168 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@142 ($generated@@244 $generated@@250 $generated@@251) ($generated@@168 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@169) (= (type $generated@@253) $generated@@169)) (= ($generated@@175 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@175 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@142 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@178) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@245 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@142 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@69)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@262) $generated@@69)) (= ($generated@@142 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@178) ($generated@@0 ($generated@@87 $generated@@261 $generated@@263))) ($generated@@245 $generated@@263 $generated@@262))
 :pattern ( ($generated@@87 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@142 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@69) (= (type $generated@@272) $generated@@69)) (= (type $generated@@273) $generated@@178)) (= (type $generated@@274) $generated@@178)) (= (type $generated@@275) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@157 $generated@@275)) (= ($generated@@80 ($generated@@244 $generated@@273 $generated@@274) ($generated@@168 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@273 $generated@@274) ($generated@@168 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@73)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@169) (= ($generated@@167 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@63)))
 :pattern ( ($generated@@167 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@169) ($generated@@167 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@178) (= (type $generated@@281) $generated@@178)) (= $generated@@279 ($generated@@244 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@167 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@69) (= (type $generated@@291) $generated@@83)) (= ($generated@@142 $generated@@291 ($generated@@162 $generated@@290))  (and ($generated@@142 $generated@@291 ($generated@@139 $generated@@290)) (not (= $generated@@291 $generated@@140)))))
 :pattern ( ($generated@@142 $generated@@291 ($generated@@162 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@178)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@69) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@270 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@80 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@270 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@299) $generated@@178)) (= (type $generated@@300) $generated@@69)) ($generated@@147 $generated@@297 $generated@@298)) ($generated@@270 $generated@@299 $generated@@300 $generated@@297)) ($generated@@270 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@147 $generated@@297 $generated@@298) ($generated@@270 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@302) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@304) $generated@@69)) ($generated@@147 $generated@@301 $generated@@302)) ($generated@@80 $generated@@303 $generated@@304 $generated@@301)) ($generated@@80 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@147 $generated@@301 $generated@@302) ($generated@@80 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@82 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@85 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@82 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@87 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@74)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@69) (and (= ($generated@@78 ($generated@@139 $generated@@313)) $generated@@61) (= ($generated@@311 ($generated@@139 $generated@@313)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@69) (and (= ($generated@@78 ($generated@@162 $generated@@314)) $generated@@62) (= ($generated@@311 ($generated@@162 $generated@@314)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@82 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@82 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@85 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@82 $generated@@352 $generated@@2)) (= ($generated@@184 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@87 $generated@@351 $generated@@353))) (<= ($generated ($generated@@87 $generated@@351 $generated@@353)) ($generated@@305 $generated@@351))))
 :pattern ( ($generated@@87 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@184 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@178) ($generated@@245 $generated@@357 $generated@@154)) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@357)) $generated@@357) ($generated@@142 ($generated@@354 $generated@@2 $generated@@357) $generated@@154)))
 :pattern ( ($generated@@245 $generated@@357 $generated@@154))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@69) (= (type $generated@@359) $generated@@83)) (= ($generated@@142 $generated@@359 ($generated@@139 $generated@@358))  (or (= $generated@@359 $generated@@140) (= ($generated@@141 $generated@@359) ($generated@@139 $generated@@358)))))
 :pattern ( ($generated@@142 $generated@@359 ($generated@@139 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@319 (type $generated@@360))))
(let (($generated@@362 ($generated@@318 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@317 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@316 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@315 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@319 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@319 (type $generated@@367))))
(let (($generated@@369 ($generated@@318 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@317 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@316 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@87 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@337 (type $generated@@371))))
(let (($generated@@373 ($generated@@336 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@335 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@334 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@333 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@337 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@82 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@337 (type $generated@@378))))
(let (($generated@@380 ($generated@@336 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@335 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@334 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@87 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@82 $generated@@178 $generated@@2)) (= (type $generated@@383) $generated@@69)) (= ($generated@@142 $generated@@382 ($generated@@183 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@178) (< 0 ($generated ($generated@@87 $generated@@382 $generated@@384)))) ($generated@@245 $generated@@384 $generated@@383))
 :pattern ( ($generated@@87 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@142 $generated@@382 ($generated@@183 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@386) $generated@@69)) (= (type $generated@@387) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@385 ($generated@@254 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@178) ($generated@@0 ($generated@@87 $generated@@385 $generated@@388))) ($generated@@270 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@87 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@80 $generated@@385 ($generated@@254 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@390) $generated@@69)) (= (type $generated@@391) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@389 ($generated@@259 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@178) ($generated@@0 ($generated@@87 $generated@@389 $generated@@392))) ($generated@@270 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@87 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@80 $generated@@389 ($generated@@259 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@87 ($generated@@306 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@87 ($generated@@306 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@178 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@319 (type $generated@@398))))
(let (($generated@@400 ($generated@@318 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@317 $generated@@178 $generated@@178)) (= (type $generated@@402) $generated@@178)) (= ($generated@@0 ($generated@@87 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@401) ($generated@@176 ($generated@@354 $generated@@169 $generated@@402)))) (= ($generated@@87 ($generated@@396 $generated@@401) ($generated@@176 ($generated@@354 $generated@@169 $generated@@402))) ($generated@@177 ($generated@@354 $generated@@169 $generated@@402))))))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@82 $generated@@178 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@337 (type $generated@@406))))
(let (($generated@@408 ($generated@@336 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@335 $generated@@178 $generated@@178)) (= (type $generated@@410) $generated@@178)) (= ($generated@@0 ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@409) ($generated@@176 ($generated@@354 $generated@@169 $generated@@410)))) (= ($generated@@87 ($generated@@404 $generated@@409) ($generated@@176 ($generated@@354 $generated@@169 $generated@@410))) ($generated@@177 ($generated@@354 $generated@@169 $generated@@410))))))
 :pattern ( ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@318 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@317 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@87 ($generated@@364 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@87 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@411) $generated@@415))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@87 ($generated@@364 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@336 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@335 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@87 ($generated@@375 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@87 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@416) $generated@@420))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@87 ($generated@@375 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@69)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@317 $generated@@178 $generated@@178)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) $generated@@69)) (= (type $generated@@427) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@424) $generated@@428))) (and ($generated@@270 ($generated@@87 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@270 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@80 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@69)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@335 $generated@@178 $generated@@178)) (= (type $generated@@433) $generated@@69)) (= (type $generated@@434) $generated@@69)) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@432) $generated@@436))) (and ($generated@@270 ($generated@@87 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@270 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@438) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@437 $generated@@439))) (and ($generated@@147 $generated@@437 $generated@@438) ($generated@@147 $generated@@438 $generated@@439))) ($generated@@147 $generated@@437 $generated@@439))
 :pattern ( ($generated@@147 $generated@@437 $generated@@438) ($generated@@147 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 Int) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@71 $generated@@178))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 Int) ) (!  (=> (and (and (= (type $generated@@442) $generated@@69) (= (type $generated@@443) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@444) $generated@@83)) (=> (and (and (and ($generated@@157 $generated@@443) (and (not (= $generated@@444 $generated@@140)) (= ($generated@@141 $generated@@444) ($generated@@139 $generated@@442)))) (and (<= 0 $generated@@445) (< $generated@@445 ($generated@@138 $generated@@444)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@443 $generated@@444) $generated@@60))) ($generated@@270 ($generated@@89 ($generated@@87 $generated@@443 $generated@@444) ($generated@@440 $generated@@445)) $generated@@442 $generated@@443)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@443 $generated@@444) ($generated@@440 $generated@@445)) ($generated@@139 $generated@@442))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@82 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@337 (type $generated@@448))))
(let (($generated@@450 ($generated@@336 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@335 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@334 $generated@@450 $generated@@449)) (= ($generated@@333 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@333 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@337 (type $generated@@451))))
(let (($generated@@453 ($generated@@336 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@335 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@334 $generated@@453 $generated@@452)) (= ($generated@@375 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@375 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@337 (type $generated@@454))))
(let (($generated@@456 ($generated@@336 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@335 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@334 $generated@@456 $generated@@455)) (= ($generated@@403 $generated@@454) ($generated@@446 $generated@@178))))))
 :pattern ( ($generated@@403 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@319 (type $generated@@457))))
(let (($generated@@459 ($generated@@318 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@317 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@316 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@178) (= (type $generated@@461) $generated@@178)) ($generated@@0 ($generated@@87 ($generated@@395 $generated@@457) ($generated@@292 ($generated@@244 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@395 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@337 (type $generated@@462))))
(let (($generated@@464 ($generated@@336 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@335 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@334 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@178) (= (type $generated@@466) $generated@@178)) ($generated@@0 ($generated@@87 ($generated@@403 $generated@@462) ($generated@@292 ($generated@@244 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@403 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@178) ($generated@@245 $generated@@467 $generated@@46)) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@467)) $generated@@467) ($generated@@142 ($generated@@354 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@178) ($generated@@245 $generated@@468 $generated@@47)) (and (= ($generated@@292 ($generated@@354 $generated@@3 $generated@@468)) $generated@@468) ($generated@@142 ($generated@@354 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@178) ($generated@@245 $generated@@469 $generated@@44)) (and (= ($generated@@292 ($generated@@354 $generated@@4 $generated@@469)) $generated@@469) ($generated@@142 ($generated@@354 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@178) ($generated@@245 $generated@@471 $generated@@45)) (and (= ($generated@@292 ($generated@@354 $generated@@470 $generated@@471)) $generated@@471) ($generated@@142 ($generated@@354 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@69) (= ($generated@@245 ($generated@@292 $generated@@472) $generated@@473) ($generated@@142 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@245 ($generated@@292 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@83) (<= 0 ($generated@@138 $generated@@474)))
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@85 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@82 $generated@@476 $generated@@2)) (<= 0 ($generated@@305 $generated@@475))))
 :pattern ( ($generated@@305 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@285 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@284 $generated@@478)) (<= 0 ($generated@@283 $generated@@477))))
 :pattern ( ($generated@@283 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@421 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@421 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@421 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@421 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@69) (= (type $generated@@488) $generated@@69)) (= ($generated@@78 ($generated@@421 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@69)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@69) (= (type $generated@@492) $generated@@69)) (= ($generated@@489 ($generated@@429 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@429 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@69)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@69) (= (type $generated@@496) $generated@@69)) (= ($generated@@493 ($generated@@429 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@429 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@69) (= (type $generated@@498) $generated@@69)) (= ($generated@@78 ($generated@@429 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@178) (= (type $generated@@500) $generated@@178)) (= ($generated@@276 ($generated@@244 $generated@@499 $generated@@500)) $generated@@63))
 :pattern ( ($generated@@244 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@69) (= (type $generated@@504) $generated@@69)) (= ($generated@@501 ($generated@@168 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@168 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@69) (= (type $generated@@508) $generated@@69)) (= ($generated@@505 ($generated@@168 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@168 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@178) (= (type $generated@@510) $generated@@178)) (= ($generated@@176 ($generated@@244 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@244 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@178) (= (type $generated@@512) $generated@@178)) (= ($generated@@177 ($generated@@244 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@244 $generated@@511 $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@285 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@284 $generated@@178)) (= (type $generated@@520) $generated@@69)) (= (type $generated@@521) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@283 $generated@@519))) ($generated@@270 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@80 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@81 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@81 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@525 ($generated@@254 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@254 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@78 ($generated@@254 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@69) (= ($generated@@529 ($generated@@259 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@259 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@69) (= ($generated@@78 ($generated@@259 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@69) (= ($generated@@533 ($generated@@183 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@183 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@69) (= ($generated@@78 ($generated@@183 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@69)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@69) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@69) (= ($generated@@78 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 Int) ) (! (= ($generated@@77 ($generated@@440 $generated@@541)) 1)
 :pattern ( ($generated@@440 $generated@@541))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@440 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@440 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@69)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@69) (= ($generated@@544 ($generated@@139 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@139 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@69)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@69) (= ($generated@@547 ($generated@@162 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@162 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
(= ($generated@@354 $generated@@551 ($generated@@292 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@292 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@317 $generated@@178 $generated@@178)) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@69)) (= ($generated@@142 $generated@@552 ($generated@@421 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@552) $generated@@555))) (and ($generated@@245 ($generated@@87 ($generated@@396 $generated@@552) $generated@@555) $generated@@554) ($generated@@245 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@552) $generated@@555))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@142 $generated@@552 ($generated@@421 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@335 $generated@@178 $generated@@178)) (= (type $generated@@557) $generated@@69)) (= (type $generated@@558) $generated@@69)) (= ($generated@@142 $generated@@556 ($generated@@429 $generated@@557 $generated@@558)) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@556) $generated@@559))) (and ($generated@@245 ($generated@@87 ($generated@@404 $generated@@556) $generated@@559) $generated@@558) ($generated@@245 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@556) $generated@@559))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@556) $generated@@559))
))))
 :pattern ( ($generated@@142 $generated@@556 ($generated@@429 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 Int) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@69) (= (type $generated@@561) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@562) $generated@@83)) (and (and ($generated@@157 $generated@@561) (and (not (= $generated@@562 $generated@@140)) (= ($generated@@141 $generated@@562) ($generated@@139 $generated@@560)))) (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@138 $generated@@562))))) ($generated@@245 ($generated@@89 ($generated@@87 $generated@@561 $generated@@562) ($generated@@440 $generated@@563)) $generated@@560))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@561 $generated@@562) ($generated@@440 $generated@@563)) ($generated@@139 $generated@@560))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@178) (= (type $generated@@567) $generated@@178)) (< ($generated@@564 $generated@@566) ($generated@@565 ($generated@@244 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@244 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@178) (= (type $generated@@569) $generated@@178)) (< ($generated@@564 $generated@@569) ($generated@@565 ($generated@@244 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@244 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@178) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) $generated@@69)) ($generated@@245 $generated@@570 ($generated@@421 $generated@@571 $generated@@572))) (and (= ($generated@@292 ($generated@@354 ($generated@@317 $generated@@178 $generated@@178) $generated@@570)) $generated@@570) ($generated@@142 ($generated@@354 ($generated@@317 $generated@@178 $generated@@178) $generated@@570) ($generated@@421 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@245 $generated@@570 ($generated@@421 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@178) (= (type $generated@@574) $generated@@69)) (= (type $generated@@575) $generated@@69)) ($generated@@245 $generated@@573 ($generated@@429 $generated@@574 $generated@@575))) (and (= ($generated@@292 ($generated@@354 ($generated@@335 $generated@@178 $generated@@178) $generated@@573)) $generated@@573) ($generated@@142 ($generated@@354 ($generated@@335 $generated@@178 $generated@@178) $generated@@573) ($generated@@429 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@245 $generated@@573 ($generated@@429 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@69) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) $generated@@178)) ($generated@@245 $generated@@578 ($generated@@168 $generated@@576 $generated@@577))) (and (= ($generated@@292 ($generated@@354 $generated@@169 $generated@@578)) $generated@@578) ($generated@@142 ($generated@@354 $generated@@169 $generated@@578) ($generated@@168 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@245 $generated@@578 ($generated@@168 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (not ($generated@@0 ($generated@@87 ($generated@@446 $generated@@580) $generated@@579))))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@87 ($generated@@446 $generated@@580) $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@69) (= (type $generated@@582) $generated@@69)) (and (= ($generated@@78 ($generated@@168 $generated@@581 $generated@@582)) $generated@@64) (= ($generated@@311 ($generated@@168 $generated@@581 $generated@@582)) $generated@@67)))
 :pattern ( ($generated@@168 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@169) (= ($generated@@564 ($generated@@292 $generated@@583)) ($generated@@565 $generated@@583)))
 :pattern ( ($generated@@564 ($generated@@292 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@178) ($generated@@245 $generated@@584 ($generated@@81 0))) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@584)) $generated@@584) ($generated@@142 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@584) ($generated@@81 0))))
 :pattern ( ($generated@@245 $generated@@584 ($generated@@81 0)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@178) (= (type $generated@@586) $generated@@69)) ($generated@@245 $generated@@585 ($generated@@254 $generated@@586))) (and (= ($generated@@292 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@585)) $generated@@585) ($generated@@142 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@585) ($generated@@254 $generated@@586))))
 :pattern ( ($generated@@245 $generated@@585 ($generated@@254 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@178) (= (type $generated@@588) $generated@@69)) ($generated@@245 $generated@@587 ($generated@@259 $generated@@588))) (and (= ($generated@@292 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@587)) $generated@@587) ($generated@@142 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@587) ($generated@@259 $generated@@588))))
 :pattern ( ($generated@@245 $generated@@587 ($generated@@259 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@178) (= (type $generated@@590) $generated@@69)) ($generated@@245 $generated@@589 ($generated@@183 $generated@@590))) (and (= ($generated@@292 ($generated@@354 ($generated@@82 $generated@@178 $generated@@2) $generated@@589)) $generated@@589) ($generated@@142 ($generated@@354 ($generated@@82 $generated@@178 $generated@@2) $generated@@589) ($generated@@183 $generated@@590))))
 :pattern ( ($generated@@245 $generated@@589 ($generated@@183 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@178) (= (type $generated@@592) $generated@@69)) ($generated@@245 $generated@@591 ($generated@@513 $generated@@592))) (and (= ($generated@@292 ($generated@@354 ($generated@@284 $generated@@178) $generated@@591)) $generated@@591) ($generated@@142 ($generated@@354 ($generated@@284 $generated@@178) $generated@@591) ($generated@@513 $generated@@592))))
 :pattern ( ($generated@@245 $generated@@591 ($generated@@513 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@69) (= (type $generated@@594) $generated@@178)) ($generated@@245 $generated@@594 ($generated@@139 $generated@@593))) (and (= ($generated@@292 ($generated@@354 $generated@@83 $generated@@594)) $generated@@594) ($generated@@142 ($generated@@354 $generated@@83 $generated@@594) ($generated@@139 $generated@@593))))
 :pattern ( ($generated@@245 $generated@@594 ($generated@@139 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@69) (= (type $generated@@596) $generated@@178)) ($generated@@245 $generated@@596 ($generated@@162 $generated@@595))) (and (= ($generated@@292 ($generated@@354 $generated@@83 $generated@@596)) $generated@@596) ($generated@@142 ($generated@@354 $generated@@83 $generated@@596) ($generated@@162 $generated@@595))))
 :pattern ( ($generated@@245 $generated@@596 ($generated@@162 $generated@@595)))
)))
(assert (= ($generated@@78 $generated@@154) $generated@@65))
(assert (= ($generated@@311 $generated@@154) $generated@@68))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@82 $generated@@178 $generated@@2)) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@597 ($generated@@183 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@178) (< 0 ($generated ($generated@@87 $generated@@597 $generated@@600)))) ($generated@@270 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@87 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@80 $generated@@597 ($generated@@183 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@169) (= (type $generated@@602) $generated@@69)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@157 $generated@@603) (and ($generated@@167 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@69) ($generated@@80 $generated@@601 ($generated@@168 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@80 $generated@@601 ($generated@@168 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@270 ($generated@@176 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@270 ($generated@@176 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@169) (= (type $generated@@606) $generated@@69)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@157 $generated@@607) (and ($generated@@167 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@69) ($generated@@80 $generated@@605 ($generated@@168 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@80 $generated@@605 ($generated@@168 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@270 ($generated@@177 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@270 ($generated@@177 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) (= ($generated@@142 $generated@@609 $generated@@154)  (and (<= ($generated@@264 0) ($generated $generated@@609)) (< ($generated $generated@@609) 4294967296))))
 :pattern ( ($generated@@142 $generated@@609 $generated@@154))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@178) (= (type $generated@@611) $generated@@178)) (= ($generated@@244 ($generated@@266 $generated@@610) ($generated@@266 $generated@@611)) ($generated@@266 ($generated@@244 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@244 ($generated@@266 $generated@@610) ($generated@@266 $generated@@611)))
)))
(assert (forall (($generated@@612 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@264 $generated@@612))) ($generated@@266 ($generated@@292 ($generated@@8 $generated@@612))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@264 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ) (! (= ($generated@@292 ($generated@@266 $generated@@613)) ($generated@@266 ($generated@@292 $generated@@613)))
 :pattern ( ($generated@@292 ($generated@@266 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@285 (type $generated@@614))))
 (=> (and (= (type $generated@@614) ($generated@@284 $generated@@615)) (= ($generated@@283 $generated@@614) 0)) (= $generated@@614 ($generated@@282 $generated@@615))))
 :pattern ( ($generated@@283 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@617)))
 (=> (and (and (= (type $generated@@616) ($generated@@82 $generated@@619 $generated@@2)) (= (type $generated@@618) $generated@@2)) (<= 0 ($generated $generated@@618))) (= ($generated@@305 ($generated@@88 $generated@@616 $generated@@617 $generated@@618)) (+ (- ($generated@@305 $generated@@616) ($generated ($generated@@87 $generated@@616 $generated@@617))) ($generated $generated@@618)))))
 :pattern ( ($generated@@305 ($generated@@88 $generated@@616 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@621) $generated@@2)) ($generated@@80 $generated@@621 $generated@@46 $generated@@620))
 :pattern ( ($generated@@80 $generated@@621 $generated@@46 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@623) $generated@@3)) ($generated@@80 $generated@@623 $generated@@47 $generated@@622))
 :pattern ( ($generated@@80 $generated@@623 $generated@@47 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@625) $generated@@4)) ($generated@@80 $generated@@625 $generated@@44 $generated@@624))
 :pattern ( ($generated@@80 $generated@@625 $generated@@44 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@627) $generated@@470)) ($generated@@80 $generated@@627 $generated@@45 $generated@@626))
 :pattern ( ($generated@@80 $generated@@627 $generated@@45 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@629) $generated@@178)) ($generated@@80 $generated@@629 $generated@@48 $generated@@628))
 :pattern ( ($generated@@80 $generated@@629 $generated@@48 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@284 $generated@@178)) (= (type $generated@@631) $generated@@69)) (= ($generated@@142 $generated@@630 ($generated@@513 $generated@@631)) (forall (($generated@@632 Int) ) (!  (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@283 $generated@@630))) ($generated@@245 ($generated@@514 $generated@@630 $generated@@632) $generated@@631))
 :pattern ( ($generated@@514 $generated@@630 $generated@@632))
))))
 :pattern ( ($generated@@142 $generated@@630 ($generated@@513 $generated@@631)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 Int) ) (!  (=> (= (type $generated@@634) ($generated@@284 $generated@@178)) (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@283 $generated@@634))) (< ($generated@@565 ($generated@@354 $generated@@169 ($generated@@514 $generated@@634 $generated@@635))) ($generated@@633 $generated@@634))))
 :pattern ( ($generated@@565 ($generated@@354 $generated@@169 ($generated@@514 $generated@@634 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@317 $generated@@178 $generated@@178)) (= (type $generated@@637) $generated@@69)) (= (type $generated@@638) $generated@@69)) ($generated@@142 $generated@@636 ($generated@@421 $generated@@637 $generated@@638))) (and (and ($generated@@142 ($generated@@315 $generated@@636) ($generated@@254 $generated@@637)) ($generated@@142 ($generated@@364 $generated@@636) ($generated@@254 $generated@@638))) ($generated@@142 ($generated@@395 $generated@@636) ($generated@@254 ($generated@@168 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@142 $generated@@636 ($generated@@421 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@335 $generated@@178 $generated@@178)) (= (type $generated@@640) $generated@@69)) (= (type $generated@@641) $generated@@69)) ($generated@@142 $generated@@639 ($generated@@429 $generated@@640 $generated@@641))) (and (and ($generated@@142 ($generated@@333 $generated@@639) ($generated@@259 $generated@@640)) ($generated@@142 ($generated@@375 $generated@@639) ($generated@@259 $generated@@641))) ($generated@@142 ($generated@@403 $generated@@639) ($generated@@259 ($generated@@168 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@142 $generated@@639 ($generated@@429 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@2) ($generated@@142 $generated@@642 $generated@@46))
 :pattern ( ($generated@@142 $generated@@642 $generated@@46))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@3) ($generated@@142 $generated@@643 $generated@@47))
 :pattern ( ($generated@@142 $generated@@643 $generated@@47))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@4) ($generated@@142 $generated@@644 $generated@@44))
 :pattern ( ($generated@@142 $generated@@644 $generated@@44))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@470) ($generated@@142 $generated@@645 $generated@@45))
 :pattern ( ($generated@@142 $generated@@645 $generated@@45))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@178) ($generated@@142 $generated@@646 $generated@@48))
 :pattern ( ($generated@@142 $generated@@646 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(assert  (and (and (and (= (type $generated@@649) $generated@@83) (= (type $generated@@650) ($generated@@190 $generated@@83 $generated@@4))) (= (type $generated@@651) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@652) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@658  (=> (not (= $generated@@647 $generated@@648)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= $generated@@649 $generated@@140))) (=> (not (= $generated@@649 $generated@@140)) (=> (= (ControlFlow 0 3) (- 0 2)) (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@138 $generated@@649)))))))))
(let (($generated@@659 true))
(let (($generated@@660  (=> (and (<= ($generated@@264 0) $generated@@647) (<= $generated@@647 $generated@@648)) (and (=> (= (ControlFlow 0 5) 1) $generated@@659) (=> (= (ControlFlow 0 5) 3) $generated@@658)))))
(let (($generated@@661  (=> (and (< $generated@@647 ($generated@@264 0)) (= (ControlFlow 0 7) 5)) $generated@@660)))
(let (($generated@@662  (=> (and (<= ($generated@@264 0) $generated@@647) (= (ControlFlow 0 6) 5)) $generated@@660)))
(let (($generated@@663  (=> (= $generated@@650 ($generated@@189 $generated@@140 $generated@@651 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (not (= $generated@@649 $generated@@140))) (=> (not (= $generated@@649 $generated@@140)) (=> (= ($generated@@138 $generated@@649) $generated@@648) (=> (and (and (and ($generated@@157 $generated@@652) ($generated@@653 $generated@@652)) (and (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@83) (=> (and (not (= $generated@@664 $generated@@140)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@651 $generated@@664) $generated@@60))) (= ($generated@@87 $generated@@652 $generated@@664) ($generated@@87 $generated@@651 $generated@@664))))
 :pattern ( ($generated@@87 $generated@@652 $generated@@664))
)) ($generated@@147 $generated@@651 $generated@@652))) (and (and (<= ($generated@@264 0) $generated@@647) (< $generated@@647 4294967296)) (= $generated@@654 ($generated@@264 0)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= ($generated@@264 0) $generated@@654) (< $generated@@654 4294967296))) (=> (and (<= ($generated@@264 0) $generated@@654) (< $generated@@654 4294967296)) (and (=> (= (ControlFlow 0 8) 6) $generated@@662) (=> (= (ControlFlow 0 8) 7) $generated@@661)))))))))))
(let (($generated@@665  (=> (and (and ($generated@@157 $generated@@651) ($generated@@653 $generated@@651)) (and ($generated@@142 $generated@@649 ($generated@@162 $generated@@154)) ($generated@@80 $generated@@649 ($generated@@162 $generated@@154) $generated@@651))) (=> (and (and (and (<= ($generated@@264 0) $generated@@648) (< $generated@@648 4294967296)) (and (<= ($generated@@264 0) $generated@@655) (< $generated@@655 4294967296))) (and (and (<= ($generated@@264 0) $generated@@656) (< $generated@@656 4294967296)) (and (= 1 $generated@@657) (= (ControlFlow 0 11) 8)))) $generated@@663))))
$generated@@665))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@440 (Int) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@633 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (= ($generated@@77 $generated@@60) 0))
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@70)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@72 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@72 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@69)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (forall (($generated@@143 T@U) ) (! (= (type ($generated@@139 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@139 $generated@@143))
)) (= (type $generated@@140) $generated@@83)) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@144)) $generated@@69)
 :pattern ( ($generated@@141 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@69) (= (type $generated@@146) $generated@@83)) (and (not (= $generated@@146 $generated@@140)) (= ($generated@@141 $generated@@146) ($generated@@139 $generated@@145)))) ($generated@@142 ($generated@@8 ($generated@@138 $generated@@146)) $generated@@46))
 :pattern ( ($generated@@138 $generated@@146) ($generated@@139 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@149) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@69) (= (type $generated@@152) $generated@@83)) (= (type $generated@@153) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@152 ($generated@@139 $generated@@151) $generated@@153)  (or (= $generated@@152 $generated@@140) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@152 ($generated@@139 $generated@@151) $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@69))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@2) (= (type $generated@@156) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
 :pattern ( ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@69) (= (type $generated@@159) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@160) $generated@@83)) (and (and ($generated@@157 $generated@@159) (and (not (= $generated@@160 $generated@@140)) (= ($generated@@141 $generated@@160) ($generated@@139 $generated@@158)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@159 $generated@@160) $generated@@60)))) ($generated@@80 ($generated@@8 ($generated@@138 $generated@@160)) $generated@@46 $generated@@159))
 :pattern ( ($generated@@138 $generated@@160) ($generated@@89 ($generated@@87 $generated@@159 $generated@@160) $generated@@60) ($generated@@139 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@142 $generated@@161 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@161 ($generated@@81 0)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@69)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@69) (= (type $generated@@165) $generated@@83)) (= (type $generated@@166) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@165 ($generated@@162 $generated@@164) $generated@@166) ($generated@@80 $generated@@165 ($generated@@139 $generated@@164) $generated@@166)))
 :pattern ( ($generated@@80 $generated@@165 ($generated@@162 $generated@@164) $generated@@166))
)))
(assert  (and (= ($generated@@1 $generated@@169) 14) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@170 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@168 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@69) (= (type $generated@@173) $generated@@69)) (= (type $generated@@174) $generated@@169)) ($generated@@142 $generated@@174 ($generated@@168 $generated@@172 $generated@@173))) ($generated@@167 $generated@@174))
 :pattern ( ($generated@@167 $generated@@174) ($generated@@142 $generated@@174 ($generated@@168 $generated@@172 $generated@@173)))
)))
(assert  (and (and (= ($generated@@1 $generated@@178) 15) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@176 $generated@@179))
))) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@178)
 :pattern ( ($generated@@177 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@169) (= (type $generated@@182) $generated@@169)) true) (= ($generated@@175 $generated@@181 $generated@@182)  (and (= ($generated@@176 $generated@@181) ($generated@@176 $generated@@182)) (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)))))
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@69)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@82 $generated@@178 $generated@@2)) (= (type $generated@@187) $generated@@69)) ($generated@@142 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@142 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 16)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@83 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@72 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@239) ($generated@@71 $generated@@4))) (= (type $generated@@241) $generated@@83)) (= (type $generated@@242) ($generated@@71 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@169)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@69) (= (type $generated@@249) $generated@@69)) (= (type $generated@@250) $generated@@178)) (= (type $generated@@251) $generated@@178)) (= ($generated@@142 ($generated@@244 $generated@@250 $generated@@251) ($generated@@168 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@142 ($generated@@244 $generated@@250 $generated@@251) ($generated@@168 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@169) (= (type $generated@@253) $generated@@169)) (= ($generated@@175 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@175 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@142 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@178) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@245 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@142 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@69)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@262) $generated@@69)) (= ($generated@@142 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@178) ($generated@@0 ($generated@@87 $generated@@261 $generated@@263))) ($generated@@245 $generated@@263 $generated@@262))
 :pattern ( ($generated@@87 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@142 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@69) (= (type $generated@@272) $generated@@69)) (= (type $generated@@273) $generated@@178)) (= (type $generated@@274) $generated@@178)) (= (type $generated@@275) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@157 $generated@@275)) (= ($generated@@80 ($generated@@244 $generated@@273 $generated@@274) ($generated@@168 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@273 $generated@@274) ($generated@@168 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@73)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@169) (= ($generated@@167 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@63)))
 :pattern ( ($generated@@167 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@169) ($generated@@167 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@178) (= (type $generated@@281) $generated@@178)) (= $generated@@279 ($generated@@244 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@167 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@69) (= (type $generated@@291) $generated@@83)) (= ($generated@@142 $generated@@291 ($generated@@162 $generated@@290))  (and ($generated@@142 $generated@@291 ($generated@@139 $generated@@290)) (not (= $generated@@291 $generated@@140)))))
 :pattern ( ($generated@@142 $generated@@291 ($generated@@162 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@178)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@69) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@270 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@80 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@270 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@299) $generated@@178)) (= (type $generated@@300) $generated@@69)) ($generated@@147 $generated@@297 $generated@@298)) ($generated@@270 $generated@@299 $generated@@300 $generated@@297)) ($generated@@270 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@147 $generated@@297 $generated@@298) ($generated@@270 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@302) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@304) $generated@@69)) ($generated@@147 $generated@@301 $generated@@302)) ($generated@@80 $generated@@303 $generated@@304 $generated@@301)) ($generated@@80 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@147 $generated@@301 $generated@@302) ($generated@@80 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@82 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@85 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@82 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@87 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@74)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@69) (and (= ($generated@@78 ($generated@@139 $generated@@313)) $generated@@61) (= ($generated@@311 ($generated@@139 $generated@@313)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@69) (and (= ($generated@@78 ($generated@@162 $generated@@314)) $generated@@62) (= ($generated@@311 ($generated@@162 $generated@@314)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@82 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@82 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@85 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@82 $generated@@352 $generated@@2)) (= ($generated@@184 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@87 $generated@@351 $generated@@353))) (<= ($generated ($generated@@87 $generated@@351 $generated@@353)) ($generated@@305 $generated@@351))))
 :pattern ( ($generated@@87 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@184 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@178) ($generated@@245 $generated@@357 $generated@@154)) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@357)) $generated@@357) ($generated@@142 ($generated@@354 $generated@@2 $generated@@357) $generated@@154)))
 :pattern ( ($generated@@245 $generated@@357 $generated@@154))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@69) (= (type $generated@@359) $generated@@83)) (= ($generated@@142 $generated@@359 ($generated@@139 $generated@@358))  (or (= $generated@@359 $generated@@140) (= ($generated@@141 $generated@@359) ($generated@@139 $generated@@358)))))
 :pattern ( ($generated@@142 $generated@@359 ($generated@@139 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@319 (type $generated@@360))))
(let (($generated@@362 ($generated@@318 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@317 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@316 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@315 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@319 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@319 (type $generated@@367))))
(let (($generated@@369 ($generated@@318 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@317 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@316 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@87 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@337 (type $generated@@371))))
(let (($generated@@373 ($generated@@336 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@335 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@334 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@333 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@337 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@82 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@337 (type $generated@@378))))
(let (($generated@@380 ($generated@@336 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@335 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@334 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@87 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@82 $generated@@178 $generated@@2)) (= (type $generated@@383) $generated@@69)) (= ($generated@@142 $generated@@382 ($generated@@183 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@178) (< 0 ($generated ($generated@@87 $generated@@382 $generated@@384)))) ($generated@@245 $generated@@384 $generated@@383))
 :pattern ( ($generated@@87 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@142 $generated@@382 ($generated@@183 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@386) $generated@@69)) (= (type $generated@@387) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@385 ($generated@@254 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@178) ($generated@@0 ($generated@@87 $generated@@385 $generated@@388))) ($generated@@270 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@87 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@80 $generated@@385 ($generated@@254 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@390) $generated@@69)) (= (type $generated@@391) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@389 ($generated@@259 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@178) ($generated@@0 ($generated@@87 $generated@@389 $generated@@392))) ($generated@@270 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@87 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@80 $generated@@389 ($generated@@259 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@87 ($generated@@306 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@87 ($generated@@306 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@178 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@319 (type $generated@@398))))
(let (($generated@@400 ($generated@@318 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@317 $generated@@178 $generated@@178)) (= (type $generated@@402) $generated@@178)) (= ($generated@@0 ($generated@@87 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@401) ($generated@@176 ($generated@@354 $generated@@169 $generated@@402)))) (= ($generated@@87 ($generated@@396 $generated@@401) ($generated@@176 ($generated@@354 $generated@@169 $generated@@402))) ($generated@@177 ($generated@@354 $generated@@169 $generated@@402))))))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@82 $generated@@178 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@337 (type $generated@@406))))
(let (($generated@@408 ($generated@@336 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@335 $generated@@178 $generated@@178)) (= (type $generated@@410) $generated@@178)) (= ($generated@@0 ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@409) ($generated@@176 ($generated@@354 $generated@@169 $generated@@410)))) (= ($generated@@87 ($generated@@404 $generated@@409) ($generated@@176 ($generated@@354 $generated@@169 $generated@@410))) ($generated@@177 ($generated@@354 $generated@@169 $generated@@410))))))
 :pattern ( ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@318 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@317 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@87 ($generated@@364 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@87 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@411) $generated@@415))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@87 ($generated@@364 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@336 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@335 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@87 ($generated@@375 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@87 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@416) $generated@@420))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@87 ($generated@@375 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@69)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@317 $generated@@178 $generated@@178)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) $generated@@69)) (= (type $generated@@427) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@424) $generated@@428))) (and ($generated@@270 ($generated@@87 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@270 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@80 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@69)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@335 $generated@@178 $generated@@178)) (= (type $generated@@433) $generated@@69)) (= (type $generated@@434) $generated@@69)) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@432) $generated@@436))) (and ($generated@@270 ($generated@@87 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@270 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@438) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@437 $generated@@439))) (and ($generated@@147 $generated@@437 $generated@@438) ($generated@@147 $generated@@438 $generated@@439))) ($generated@@147 $generated@@437 $generated@@439))
 :pattern ( ($generated@@147 $generated@@437 $generated@@438) ($generated@@147 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 Int) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@71 $generated@@178))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 Int) ) (!  (=> (and (and (= (type $generated@@442) $generated@@69) (= (type $generated@@443) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@444) $generated@@83)) (=> (and (and (and ($generated@@157 $generated@@443) (and (not (= $generated@@444 $generated@@140)) (= ($generated@@141 $generated@@444) ($generated@@139 $generated@@442)))) (and (<= 0 $generated@@445) (< $generated@@445 ($generated@@138 $generated@@444)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@443 $generated@@444) $generated@@60))) ($generated@@270 ($generated@@89 ($generated@@87 $generated@@443 $generated@@444) ($generated@@440 $generated@@445)) $generated@@442 $generated@@443)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@443 $generated@@444) ($generated@@440 $generated@@445)) ($generated@@139 $generated@@442))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@82 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@337 (type $generated@@448))))
(let (($generated@@450 ($generated@@336 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@335 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@334 $generated@@450 $generated@@449)) (= ($generated@@333 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@333 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@337 (type $generated@@451))))
(let (($generated@@453 ($generated@@336 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@335 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@334 $generated@@453 $generated@@452)) (= ($generated@@375 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@375 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@337 (type $generated@@454))))
(let (($generated@@456 ($generated@@336 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@335 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@334 $generated@@456 $generated@@455)) (= ($generated@@403 $generated@@454) ($generated@@446 $generated@@178))))))
 :pattern ( ($generated@@403 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@319 (type $generated@@457))))
(let (($generated@@459 ($generated@@318 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@317 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@316 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@178) (= (type $generated@@461) $generated@@178)) ($generated@@0 ($generated@@87 ($generated@@395 $generated@@457) ($generated@@292 ($generated@@244 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@395 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@337 (type $generated@@462))))
(let (($generated@@464 ($generated@@336 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@335 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@334 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@178) (= (type $generated@@466) $generated@@178)) ($generated@@0 ($generated@@87 ($generated@@403 $generated@@462) ($generated@@292 ($generated@@244 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@403 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@178) ($generated@@245 $generated@@467 $generated@@46)) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@467)) $generated@@467) ($generated@@142 ($generated@@354 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@178) ($generated@@245 $generated@@468 $generated@@47)) (and (= ($generated@@292 ($generated@@354 $generated@@3 $generated@@468)) $generated@@468) ($generated@@142 ($generated@@354 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@178) ($generated@@245 $generated@@469 $generated@@44)) (and (= ($generated@@292 ($generated@@354 $generated@@4 $generated@@469)) $generated@@469) ($generated@@142 ($generated@@354 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@178) ($generated@@245 $generated@@471 $generated@@45)) (and (= ($generated@@292 ($generated@@354 $generated@@470 $generated@@471)) $generated@@471) ($generated@@142 ($generated@@354 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@69) (= ($generated@@245 ($generated@@292 $generated@@472) $generated@@473) ($generated@@142 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@245 ($generated@@292 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@83) (<= 0 ($generated@@138 $generated@@474)))
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@85 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@82 $generated@@476 $generated@@2)) (<= 0 ($generated@@305 $generated@@475))))
 :pattern ( ($generated@@305 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@285 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@284 $generated@@478)) (<= 0 ($generated@@283 $generated@@477))))
 :pattern ( ($generated@@283 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@421 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@421 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@421 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@421 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@69) (= (type $generated@@488) $generated@@69)) (= ($generated@@78 ($generated@@421 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@69)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@69) (= (type $generated@@492) $generated@@69)) (= ($generated@@489 ($generated@@429 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@429 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@69)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@69) (= (type $generated@@496) $generated@@69)) (= ($generated@@493 ($generated@@429 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@429 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@69) (= (type $generated@@498) $generated@@69)) (= ($generated@@78 ($generated@@429 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@178) (= (type $generated@@500) $generated@@178)) (= ($generated@@276 ($generated@@244 $generated@@499 $generated@@500)) $generated@@63))
 :pattern ( ($generated@@244 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@69) (= (type $generated@@504) $generated@@69)) (= ($generated@@501 ($generated@@168 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@168 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@69) (= (type $generated@@508) $generated@@69)) (= ($generated@@505 ($generated@@168 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@168 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@178) (= (type $generated@@510) $generated@@178)) (= ($generated@@176 ($generated@@244 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@244 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@178) (= (type $generated@@512) $generated@@178)) (= ($generated@@177 ($generated@@244 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@244 $generated@@511 $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@285 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@284 $generated@@178)) (= (type $generated@@520) $generated@@69)) (= (type $generated@@521) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@283 $generated@@519))) ($generated@@270 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@80 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@81 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@81 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@525 ($generated@@254 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@254 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@78 ($generated@@254 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@69) (= ($generated@@529 ($generated@@259 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@259 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@69) (= ($generated@@78 ($generated@@259 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@69) (= ($generated@@533 ($generated@@183 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@183 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@69) (= ($generated@@78 ($generated@@183 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@69)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@69) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@69) (= ($generated@@78 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 Int) ) (! (= ($generated@@77 ($generated@@440 $generated@@541)) 1)
 :pattern ( ($generated@@440 $generated@@541))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@440 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@440 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@69)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@69) (= ($generated@@544 ($generated@@139 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@139 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@69)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@69) (= ($generated@@547 ($generated@@162 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@162 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
(= ($generated@@354 $generated@@551 ($generated@@292 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@292 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@317 $generated@@178 $generated@@178)) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@69)) (= ($generated@@142 $generated@@552 ($generated@@421 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@552) $generated@@555))) (and ($generated@@245 ($generated@@87 ($generated@@396 $generated@@552) $generated@@555) $generated@@554) ($generated@@245 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@552) $generated@@555))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@142 $generated@@552 ($generated@@421 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@335 $generated@@178 $generated@@178)) (= (type $generated@@557) $generated@@69)) (= (type $generated@@558) $generated@@69)) (= ($generated@@142 $generated@@556 ($generated@@429 $generated@@557 $generated@@558)) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@556) $generated@@559))) (and ($generated@@245 ($generated@@87 ($generated@@404 $generated@@556) $generated@@559) $generated@@558) ($generated@@245 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@556) $generated@@559))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@556) $generated@@559))
))))
 :pattern ( ($generated@@142 $generated@@556 ($generated@@429 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 Int) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@69) (= (type $generated@@561) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@562) $generated@@83)) (and (and ($generated@@157 $generated@@561) (and (not (= $generated@@562 $generated@@140)) (= ($generated@@141 $generated@@562) ($generated@@139 $generated@@560)))) (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@138 $generated@@562))))) ($generated@@245 ($generated@@89 ($generated@@87 $generated@@561 $generated@@562) ($generated@@440 $generated@@563)) $generated@@560))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@561 $generated@@562) ($generated@@440 $generated@@563)) ($generated@@139 $generated@@560))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@178) (= (type $generated@@567) $generated@@178)) (< ($generated@@564 $generated@@566) ($generated@@565 ($generated@@244 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@244 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@178) (= (type $generated@@569) $generated@@178)) (< ($generated@@564 $generated@@569) ($generated@@565 ($generated@@244 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@244 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@178) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) $generated@@69)) ($generated@@245 $generated@@570 ($generated@@421 $generated@@571 $generated@@572))) (and (= ($generated@@292 ($generated@@354 ($generated@@317 $generated@@178 $generated@@178) $generated@@570)) $generated@@570) ($generated@@142 ($generated@@354 ($generated@@317 $generated@@178 $generated@@178) $generated@@570) ($generated@@421 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@245 $generated@@570 ($generated@@421 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@178) (= (type $generated@@574) $generated@@69)) (= (type $generated@@575) $generated@@69)) ($generated@@245 $generated@@573 ($generated@@429 $generated@@574 $generated@@575))) (and (= ($generated@@292 ($generated@@354 ($generated@@335 $generated@@178 $generated@@178) $generated@@573)) $generated@@573) ($generated@@142 ($generated@@354 ($generated@@335 $generated@@178 $generated@@178) $generated@@573) ($generated@@429 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@245 $generated@@573 ($generated@@429 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@69) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) $generated@@178)) ($generated@@245 $generated@@578 ($generated@@168 $generated@@576 $generated@@577))) (and (= ($generated@@292 ($generated@@354 $generated@@169 $generated@@578)) $generated@@578) ($generated@@142 ($generated@@354 $generated@@169 $generated@@578) ($generated@@168 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@245 $generated@@578 ($generated@@168 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (not ($generated@@0 ($generated@@87 ($generated@@446 $generated@@580) $generated@@579))))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@87 ($generated@@446 $generated@@580) $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@69) (= (type $generated@@582) $generated@@69)) (and (= ($generated@@78 ($generated@@168 $generated@@581 $generated@@582)) $generated@@64) (= ($generated@@311 ($generated@@168 $generated@@581 $generated@@582)) $generated@@67)))
 :pattern ( ($generated@@168 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@169) (= ($generated@@564 ($generated@@292 $generated@@583)) ($generated@@565 $generated@@583)))
 :pattern ( ($generated@@564 ($generated@@292 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@178) ($generated@@245 $generated@@584 ($generated@@81 0))) (and (= ($generated@@292 ($generated@@354 $generated@@2 $generated@@584)) $generated@@584) ($generated@@142 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@584) ($generated@@81 0))))
 :pattern ( ($generated@@245 $generated@@584 ($generated@@81 0)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@178) (= (type $generated@@586) $generated@@69)) ($generated@@245 $generated@@585 ($generated@@254 $generated@@586))) (and (= ($generated@@292 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@585)) $generated@@585) ($generated@@142 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@585) ($generated@@254 $generated@@586))))
 :pattern ( ($generated@@245 $generated@@585 ($generated@@254 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@178) (= (type $generated@@588) $generated@@69)) ($generated@@245 $generated@@587 ($generated@@259 $generated@@588))) (and (= ($generated@@292 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@587)) $generated@@587) ($generated@@142 ($generated@@354 ($generated@@82 $generated@@178 $generated@@4) $generated@@587) ($generated@@259 $generated@@588))))
 :pattern ( ($generated@@245 $generated@@587 ($generated@@259 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@178) (= (type $generated@@590) $generated@@69)) ($generated@@245 $generated@@589 ($generated@@183 $generated@@590))) (and (= ($generated@@292 ($generated@@354 ($generated@@82 $generated@@178 $generated@@2) $generated@@589)) $generated@@589) ($generated@@142 ($generated@@354 ($generated@@82 $generated@@178 $generated@@2) $generated@@589) ($generated@@183 $generated@@590))))
 :pattern ( ($generated@@245 $generated@@589 ($generated@@183 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@178) (= (type $generated@@592) $generated@@69)) ($generated@@245 $generated@@591 ($generated@@513 $generated@@592))) (and (= ($generated@@292 ($generated@@354 ($generated@@284 $generated@@178) $generated@@591)) $generated@@591) ($generated@@142 ($generated@@354 ($generated@@284 $generated@@178) $generated@@591) ($generated@@513 $generated@@592))))
 :pattern ( ($generated@@245 $generated@@591 ($generated@@513 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@69) (= (type $generated@@594) $generated@@178)) ($generated@@245 $generated@@594 ($generated@@139 $generated@@593))) (and (= ($generated@@292 ($generated@@354 $generated@@83 $generated@@594)) $generated@@594) ($generated@@142 ($generated@@354 $generated@@83 $generated@@594) ($generated@@139 $generated@@593))))
 :pattern ( ($generated@@245 $generated@@594 ($generated@@139 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@69) (= (type $generated@@596) $generated@@178)) ($generated@@245 $generated@@596 ($generated@@162 $generated@@595))) (and (= ($generated@@292 ($generated@@354 $generated@@83 $generated@@596)) $generated@@596) ($generated@@142 ($generated@@354 $generated@@83 $generated@@596) ($generated@@162 $generated@@595))))
 :pattern ( ($generated@@245 $generated@@596 ($generated@@162 $generated@@595)))
)))
(assert (= ($generated@@78 $generated@@154) $generated@@65))
(assert (= ($generated@@311 $generated@@154) $generated@@68))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@82 $generated@@178 $generated@@2)) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@597 ($generated@@183 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@178) (< 0 ($generated ($generated@@87 $generated@@597 $generated@@600)))) ($generated@@270 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@87 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@80 $generated@@597 ($generated@@183 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@169) (= (type $generated@@602) $generated@@69)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@157 $generated@@603) (and ($generated@@167 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@69) ($generated@@80 $generated@@601 ($generated@@168 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@80 $generated@@601 ($generated@@168 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@270 ($generated@@176 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@270 ($generated@@176 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@169) (= (type $generated@@606) $generated@@69)) (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@157 $generated@@607) (and ($generated@@167 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@69) ($generated@@80 $generated@@605 ($generated@@168 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@80 $generated@@605 ($generated@@168 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@270 ($generated@@177 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@270 ($generated@@177 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) (= ($generated@@142 $generated@@609 $generated@@154)  (and (<= ($generated@@264 0) ($generated $generated@@609)) (< ($generated $generated@@609) 4294967296))))
 :pattern ( ($generated@@142 $generated@@609 $generated@@154))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@178) (= (type $generated@@611) $generated@@178)) (= ($generated@@244 ($generated@@266 $generated@@610) ($generated@@266 $generated@@611)) ($generated@@266 ($generated@@244 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@244 ($generated@@266 $generated@@610) ($generated@@266 $generated@@611)))
)))
(assert (forall (($generated@@612 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@264 $generated@@612))) ($generated@@266 ($generated@@292 ($generated@@8 $generated@@612))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@264 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ) (! (= ($generated@@292 ($generated@@266 $generated@@613)) ($generated@@266 ($generated@@292 $generated@@613)))
 :pattern ( ($generated@@292 ($generated@@266 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@285 (type $generated@@614))))
 (=> (and (= (type $generated@@614) ($generated@@284 $generated@@615)) (= ($generated@@283 $generated@@614) 0)) (= $generated@@614 ($generated@@282 $generated@@615))))
 :pattern ( ($generated@@283 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@617)))
 (=> (and (and (= (type $generated@@616) ($generated@@82 $generated@@619 $generated@@2)) (= (type $generated@@618) $generated@@2)) (<= 0 ($generated $generated@@618))) (= ($generated@@305 ($generated@@88 $generated@@616 $generated@@617 $generated@@618)) (+ (- ($generated@@305 $generated@@616) ($generated ($generated@@87 $generated@@616 $generated@@617))) ($generated $generated@@618)))))
 :pattern ( ($generated@@305 ($generated@@88 $generated@@616 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@621) $generated@@2)) ($generated@@80 $generated@@621 $generated@@46 $generated@@620))
 :pattern ( ($generated@@80 $generated@@621 $generated@@46 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@623) $generated@@3)) ($generated@@80 $generated@@623 $generated@@47 $generated@@622))
 :pattern ( ($generated@@80 $generated@@623 $generated@@47 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@625) $generated@@4)) ($generated@@80 $generated@@625 $generated@@44 $generated@@624))
 :pattern ( ($generated@@80 $generated@@625 $generated@@44 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@627) $generated@@470)) ($generated@@80 $generated@@627 $generated@@45 $generated@@626))
 :pattern ( ($generated@@80 $generated@@627 $generated@@45 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@629) $generated@@178)) ($generated@@80 $generated@@629 $generated@@48 $generated@@628))
 :pattern ( ($generated@@80 $generated@@629 $generated@@48 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@284 $generated@@178)) (= (type $generated@@631) $generated@@69)) (= ($generated@@142 $generated@@630 ($generated@@513 $generated@@631)) (forall (($generated@@632 Int) ) (!  (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@283 $generated@@630))) ($generated@@245 ($generated@@514 $generated@@630 $generated@@632) $generated@@631))
 :pattern ( ($generated@@514 $generated@@630 $generated@@632))
))))
 :pattern ( ($generated@@142 $generated@@630 ($generated@@513 $generated@@631)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 Int) ) (!  (=> (= (type $generated@@634) ($generated@@284 $generated@@178)) (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@283 $generated@@634))) (< ($generated@@565 ($generated@@354 $generated@@169 ($generated@@514 $generated@@634 $generated@@635))) ($generated@@633 $generated@@634))))
 :pattern ( ($generated@@565 ($generated@@354 $generated@@169 ($generated@@514 $generated@@634 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@317 $generated@@178 $generated@@178)) (= (type $generated@@637) $generated@@69)) (= (type $generated@@638) $generated@@69)) ($generated@@142 $generated@@636 ($generated@@421 $generated@@637 $generated@@638))) (and (and ($generated@@142 ($generated@@315 $generated@@636) ($generated@@254 $generated@@637)) ($generated@@142 ($generated@@364 $generated@@636) ($generated@@254 $generated@@638))) ($generated@@142 ($generated@@395 $generated@@636) ($generated@@254 ($generated@@168 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@142 $generated@@636 ($generated@@421 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@335 $generated@@178 $generated@@178)) (= (type $generated@@640) $generated@@69)) (= (type $generated@@641) $generated@@69)) ($generated@@142 $generated@@639 ($generated@@429 $generated@@640 $generated@@641))) (and (and ($generated@@142 ($generated@@333 $generated@@639) ($generated@@259 $generated@@640)) ($generated@@142 ($generated@@375 $generated@@639) ($generated@@259 $generated@@641))) ($generated@@142 ($generated@@403 $generated@@639) ($generated@@259 ($generated@@168 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@142 $generated@@639 ($generated@@429 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@2) ($generated@@142 $generated@@642 $generated@@46))
 :pattern ( ($generated@@142 $generated@@642 $generated@@46))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@3) ($generated@@142 $generated@@643 $generated@@47))
 :pattern ( ($generated@@142 $generated@@643 $generated@@47))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@4) ($generated@@142 $generated@@644 $generated@@44))
 :pattern ( ($generated@@142 $generated@@644 $generated@@44))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@470) ($generated@@142 $generated@@645 $generated@@45))
 :pattern ( ($generated@@142 $generated@@645 $generated@@45))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@178) ($generated@@142 $generated@@646 $generated@@48))
 :pattern ( ($generated@@142 $generated@@646 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Bool)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 (T@U) Bool)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(assert  (and (and (= (type $generated@@649) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@650) $generated@@83)) (= (type $generated@@659) ($generated@@190 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@665  (and (=> (= (ControlFlow 0 10) (- 0 12)) (<= ($generated@@264 0) $generated@@647)) (=> (<= ($generated@@264 0) $generated@@647) (and (=> (= (ControlFlow 0 10) (- 0 11)) (<= $generated@@647 $generated@@648)) (=> (<= $generated@@647 $generated@@648) (=> (= (ControlFlow 0 10) (- 0 9)) (or (= $generated@@647 $generated@@648) (= ($generated ($generated@@354 $generated@@2 ($generated@@89 ($generated@@87 $generated@@649 $generated@@650) ($generated@@440 $generated@@647)))) $generated@@651)))))))))
(let (($generated@@666  (=> (= ($generated ($generated@@354 $generated@@2 ($generated@@89 ($generated@@87 $generated@@649 $generated@@650) ($generated@@440 $generated@@652)))) $generated@@651) (=> (and (= $generated@@647 $generated@@652) (= (ControlFlow 0 14) 10)) $generated@@665))))
(let (($generated@@667  (=> (<= $generated@@648 $generated@@652) (=> (and (= $generated@@647 $generated@@652) (= (ControlFlow 0 13) 10)) $generated@@665))))
(let (($generated@@668  (=> (and (not (= ($generated ($generated@@354 $generated@@2 ($generated@@89 ($generated@@87 $generated@@649 $generated@@650) ($generated@@440 $generated@@652)))) $generated@@651)) (= $generated@@653 ($generated@@264 1))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (and (<= ($generated@@264 0) $generated@@653) (< $generated@@653 4294967296))) (=> (and (<= ($generated@@264 0) $generated@@653) (< $generated@@653 4294967296)) (=> (= $generated@@654 (+ $generated@@652 1)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (and (<= ($generated@@264 0) $generated@@654) (< $generated@@654 4294967296))) (=> (and (<= ($generated@@264 0) $generated@@654) (< $generated@@654 4294967296)) (=> (= $generated@@655 (+ $generated@@652 1)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@656) (= (- $generated@@648 $generated@@655) $generated@@656))) (=> (or (<= 0 $generated@@656) (= (- $generated@@648 $generated@@655) $generated@@656)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< (- $generated@@648 $generated@@655) $generated@@656)) (=> (< (- $generated@@648 $generated@@655) $generated@@656) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@657 (<= $generated@@655 $generated@@648))))))))))))))))
(let (($generated@@669  (=> (and (< $generated@@652 $generated@@648) (= $generated@@656 (- $generated@@648 $generated@@652))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (not (= $generated@@650 $generated@@140))) (=> (not (= $generated@@650 $generated@@140)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@138 $generated@@650)))) (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@138 $generated@@650))) (and (=> (= (ControlFlow 0 15) 14) $generated@@666) (=> (= (ControlFlow 0 15) 4) $generated@@668)))))))))
(let (($generated@@670  (=> $generated@@657 (and (=> (= (ControlFlow 0 18) 13) $generated@@667) (=> (= (ControlFlow 0 18) 15) $generated@@669)))))
(let (($generated@@671 true))
(let (($generated@@672  (and (=> (= (ControlFlow 0 19) 2) $generated@@671) (=> (= (ControlFlow 0 19) 18) $generated@@670))))
(let (($generated@@673 true))
(let (($generated@@674  (=> (and (<= ($generated@@264 0) $generated@@652) (< $generated@@652 4294967296)) (=> (and (and (and (and (and (<= 0 $generated@@652) (not false)) (= $generated@@658 0)) (=> $generated@@657 true)) (and (=> $generated@@657 (<= $generated@@652 $generated@@648)) (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@83) (=> (and (not (= $generated@@675 $generated@@140)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@649 $generated@@675) $generated@@60))) (= ($generated@@87 $generated@@649 $generated@@675) ($generated@@87 $generated@@649 $generated@@675))))
 :pattern ( ($generated@@87 $generated@@649 $generated@@675))
)))) (and (and ($generated@@147 $generated@@649 $generated@@649) (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (! (let (($generated@@678 ($generated@@72 (type $generated@@677))))
 (=> (and (and (= (type $generated@@676) $generated@@83) (= (type $generated@@677) ($generated@@71 $generated@@678))) (and (not (= $generated@@676 $generated@@140)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@649 $generated@@676) $generated@@60)))) (or (= ($generated@@89 ($generated@@87 $generated@@649 $generated@@676) $generated@@677) ($generated@@89 ($generated@@87 $generated@@649 $generated@@676) $generated@@677)) ($generated@@0 ($generated@@188 $generated@@659 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@649 $generated@@676) $generated@@677))
))) (and (<= (- $generated@@648 $generated@@652) $generated@@660) (=> (= (- $generated@@648 $generated@@652) $generated@@660) true)))) (and (=> (= (ControlFlow 0 20) 1) $generated@@673) (=> (= (ControlFlow 0 20) 19) $generated@@672))))))
(let (($generated@@679  (=> (and (= $generated@@659 ($generated@@189 $generated@@140 $generated@@649 $generated@@60 false)) (= $generated@@658 ($generated@@264 0))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (and (<= ($generated@@264 0) $generated@@658) (< $generated@@658 4294967296))) (=> (and (<= ($generated@@264 0) $generated@@658) (< $generated@@658 4294967296)) (=> (and (= $generated@@661 ($generated@@264 0)) (= $generated@@660 (- $generated@@648 $generated@@661))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> $generated@@657 (<= $generated@@661 $generated@@648))) (=> (=> $generated@@657 (<= $generated@@661 $generated@@648)) (=> (= (ControlFlow 0 21) 20) $generated@@674)))))))))
(let (($generated@@680  (=> (and (and (and (and ($generated@@157 $generated@@649) ($generated@@662 $generated@@649)) (and ($generated@@142 $generated@@650 ($generated@@162 $generated@@154)) ($generated@@80 $generated@@650 ($generated@@162 $generated@@154) $generated@@649))) (and (and (<= ($generated@@264 0) $generated@@648) (< $generated@@648 4294967296)) (and (<= ($generated@@264 0) $generated@@651) (< $generated@@651 4294967296)))) (and (and (and (<= ($generated@@264 0) $generated@@663) (< $generated@@663 4294967296)) (= 1 $generated@@664)) (and (= ($generated@@138 $generated@@650) $generated@@648) (= (ControlFlow 0 24) 21)))) $generated@@679)))
$generated@@680)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (Int) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (forall (($generated@@139 T@U) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@66)
 :pattern ( ($generated@@135 $generated@@139))
)) (= (type $generated@@136) $generated@@79)) (forall (($generated@@140 T@U) ) (! (= (type ($generated@@137 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@137 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) $generated@@79)) (and (not (= $generated@@142 $generated@@136)) (= ($generated@@137 $generated@@142) ($generated@@135 $generated@@141)))) ($generated@@138 ($generated@@8 ($generated@@134 $generated@@142)) $generated@@46))
 :pattern ( ($generated@@134 $generated@@142) ($generated@@135 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@66) (= (type $generated@@148) $generated@@79)) (= (type $generated@@149) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@148 ($generated@@135 $generated@@147) $generated@@149)  (or (= $generated@@148 $generated@@136) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@76 $generated@@148 ($generated@@135 $generated@@147) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@66) (= (type $generated@@152) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@153) $generated@@79)) (and (and ($generated@@150 $generated@@152) (and (not (= $generated@@153 $generated@@136)) (= ($generated@@137 $generated@@153) ($generated@@135 $generated@@151)))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@152 $generated@@153) $generated@@60)))) ($generated@@76 ($generated@@8 ($generated@@134 $generated@@153)) $generated@@46 $generated@@152))
 :pattern ( ($generated@@134 $generated@@153) ($generated@@85 ($generated@@83 $generated@@152 $generated@@153) $generated@@60) ($generated@@135 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@138 $generated@@154 ($generated@@77 0)))
 :pattern ( ($generated@@138 $generated@@154 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@66) (= (type $generated@@161) $generated@@66)) (= (type $generated@@162) $generated@@157)) ($generated@@138 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@138 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@66)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@78 $generated@@166 $generated@@2)) (= (type $generated@@175) $generated@@66)) ($generated@@138 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@138 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@79 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@69 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@79) (= (type $generated@@226) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@227) ($generated@@68 $generated@@4))) (= (type $generated@@229) $generated@@79)) (= (type $generated@@230) ($generated@@68 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@157)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@66) (= (type $generated@@237) $generated@@66)) (= (type $generated@@238) $generated@@166)) (= (type $generated@@239) $generated@@166)) (= ($generated@@138 ($generated@@232 $generated@@238 $generated@@239) ($generated@@156 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@138 ($generated@@232 $generated@@238 $generated@@239) ($generated@@156 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@157) (= (type $generated@@241) $generated@@157)) (= ($generated@@163 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@163 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@66)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@78 $generated@@166 $generated@@4)) (= (type $generated@@245) $generated@@66)) (= ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@166) ($generated@@0 ($generated@@83 $generated@@244 $generated@@246))) ($generated@@233 $generated@@246 $generated@@245))
 :pattern ( ($generated@@83 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@78 $generated@@166 $generated@@4)) (= (type $generated@@250) $generated@@66)) (= ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@166) ($generated@@0 ($generated@@83 $generated@@249 $generated@@251))) ($generated@@233 $generated@@251 $generated@@250))
 :pattern ( ($generated@@83 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@252 $generated@@253) $generated@@253)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@66) (= (type $generated@@260) $generated@@66)) (= (type $generated@@261) $generated@@166)) (= (type $generated@@262) $generated@@166)) (= (type $generated@@263) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@150 $generated@@263)) (= ($generated@@76 ($generated@@232 $generated@@261 $generated@@262) ($generated@@156 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@261 $generated@@262) ($generated@@156 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@157) (= ($generated@@155 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@157) ($generated@@155 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@166) (= (type $generated@@269) $generated@@166)) (= $generated@@267 ($generated@@232 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@155 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@166)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@66) (= (type $generated@@282) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@76 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@285) $generated@@166)) (= (type $generated@@286) $generated@@66)) ($generated@@143 $generated@@283 $generated@@284)) ($generated@@258 $generated@@285 $generated@@286 $generated@@283)) ($generated@@258 $generated@@285 $generated@@286 $generated@@284))
 :pattern ( ($generated@@143 $generated@@283 $generated@@284) ($generated@@258 $generated@@285 $generated@@286 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@287) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@290) $generated@@66)) ($generated@@143 $generated@@287 $generated@@288)) ($generated@@76 $generated@@289 $generated@@290 $generated@@287)) ($generated@@76 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@143 $generated@@287 $generated@@288) ($generated@@76 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@78 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@81 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@78 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@83 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@71)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@66) (and (= ($generated@@74 ($generated@@135 $generated@@299)) $generated@@61) (= ($generated@@297 ($generated@@135 $generated@@299)) $generated@@64)))
 :pattern ( ($generated@@135 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@78 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@83 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@83 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@78 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@83 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@83 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@81 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@78 $generated@@337 $generated@@2)) (= ($generated@@172 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@83 $generated@@336 $generated@@338))) (<= ($generated ($generated@@83 $generated@@336 $generated@@338)) ($generated@@291 $generated@@336))))
 :pattern ( ($generated@@83 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@172 $generated@@336))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@66) (= (type $generated@@340) $generated@@79)) (= ($generated@@138 $generated@@340 ($generated@@135 $generated@@339))  (or (= $generated@@340 $generated@@136) (= ($generated@@137 $generated@@340) ($generated@@135 $generated@@339)))))
 :pattern ( ($generated@@138 $generated@@340 ($generated@@135 $generated@@339)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@304 (type $generated@@341))))
(let (($generated@@343 ($generated@@303 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@302 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@301 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@300 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@304 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@322 (type $generated@@352))))
(let (($generated@@354 ($generated@@321 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@320 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@319 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@318 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@322 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@78 $generated@@166 $generated@@2)) (= (type $generated@@364) $generated@@66)) (= ($generated@@138 $generated@@363 ($generated@@171 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@166) (< 0 ($generated ($generated@@83 $generated@@363 $generated@@365)))) ($generated@@233 $generated@@365 $generated@@364))
 :pattern ( ($generated@@83 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@138 $generated@@363 ($generated@@171 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@166 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@242 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@166) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@258 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@242 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@78 $generated@@166 $generated@@4)) (= (type $generated@@371) $generated@@66)) (= (type $generated@@372) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@370 ($generated@@247 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@166) ($generated@@0 ($generated@@83 $generated@@370 $generated@@373))) ($generated@@258 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@83 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@76 $generated@@370 ($generated@@247 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@83 ($generated@@292 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@83 ($generated@@292 $generated@@375) $generated@@374)))
)))
(assert  (and (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@376 $generated@@379)) ($generated@@78 $generated@@166 $generated@@4))
 :pattern ( ($generated@@376 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@377 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@304 (type $generated@@382))))
(let (($generated@@384 ($generated@@303 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@378 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@386) $generated@@166)) (= ($generated@@0 ($generated@@83 ($generated@@376 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@300 $generated@@385) ($generated@@164 ($generated@@377 $generated@@157 $generated@@386)))) (= ($generated@@83 ($generated@@378 $generated@@385) ($generated@@164 ($generated@@377 $generated@@157 $generated@@386))) ($generated@@165 ($generated@@377 $generated@@157 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@166 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@322 (type $generated@@390))))
(let (($generated@@392 ($generated@@321 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@394) $generated@@166)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@83 ($generated@@318 $generated@@393) ($generated@@164 ($generated@@377 $generated@@157 $generated@@394)))) (= ($generated@@83 ($generated@@388 $generated@@393) ($generated@@164 ($generated@@377 $generated@@157 $generated@@394))) ($generated@@165 ($generated@@377 $generated@@157 $generated@@394))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@303 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@302 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@83 ($generated@@300 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@83 ($generated@@378 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@395) $generated@@399))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@321 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@320 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@83 ($generated@@318 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@166) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@408) $generated@@412))) (and ($generated@@258 ($generated@@83 ($generated@@378 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@258 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@166) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@416) $generated@@420))) (and ($generated@@258 ($generated@@83 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@258 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@421) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@422) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@423) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@421 $generated@@423))) (and ($generated@@143 $generated@@421 $generated@@422) ($generated@@143 $generated@@422 $generated@@423))) ($generated@@143 $generated@@421 $generated@@423))
 :pattern ( ($generated@@143 $generated@@421 $generated@@422) ($generated@@143 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@78 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@322 (type $generated@@426))))
(let (($generated@@428 ($generated@@321 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@320 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@319 $generated@@428 $generated@@427)) (= ($generated@@318 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@318 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@322 (type $generated@@429))))
(let (($generated@@431 ($generated@@321 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@320 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@356 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@356 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@322 (type $generated@@432))))
(let (($generated@@434 ($generated@@321 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@320 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@319 $generated@@434 $generated@@433)) (= ($generated@@387 $generated@@432) ($generated@@424 $generated@@166))))))
 :pattern ( ($generated@@387 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@304 (type $generated@@435))))
(let (($generated@@437 ($generated@@303 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@302 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@301 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@166) (= (type $generated@@439) $generated@@166)) ($generated@@0 ($generated@@83 ($generated@@376 $generated@@435) ($generated@@278 ($generated@@232 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@376 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@322 (type $generated@@440))))
(let (($generated@@442 ($generated@@321 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@320 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@319 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@166) (= (type $generated@@444) $generated@@166)) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@440) ($generated@@278 ($generated@@232 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@387 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@166) ($generated@@233 $generated@@445 $generated@@46)) (and (= ($generated@@278 ($generated@@377 $generated@@2 $generated@@445)) $generated@@445) ($generated@@138 ($generated@@377 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@166) ($generated@@233 $generated@@446 $generated@@47)) (and (= ($generated@@278 ($generated@@377 $generated@@3 $generated@@446)) $generated@@446) ($generated@@138 ($generated@@377 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@166) ($generated@@233 $generated@@447 $generated@@44)) (and (= ($generated@@278 ($generated@@377 $generated@@4 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@377 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@166) ($generated@@233 $generated@@449 $generated@@45)) (and (= ($generated@@278 ($generated@@377 $generated@@448 $generated@@449)) $generated@@449) ($generated@@138 ($generated@@377 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@66) (= ($generated@@233 ($generated@@278 $generated@@450) $generated@@451) ($generated@@138 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@233 ($generated@@278 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@79) (<= 0 ($generated@@134 $generated@@452)))
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@81 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@78 $generated@@454 $generated@@2)) (<= 0 ($generated@@291 $generated@@453))))
 :pattern ( ($generated@@291 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@273 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@272 $generated@@456)) (<= 0 ($generated@@271 $generated@@455))))
 :pattern ( ($generated@@271 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@405 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@405 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@405 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@413 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@166) (= (type $generated@@478) $generated@@166)) (= ($generated@@264 ($generated@@232 $generated@@477 $generated@@478)) $generated@@62))
 :pattern ( ($generated@@232 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@156 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@156 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@483 ($generated@@156 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@156 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@166) (= (type $generated@@488) $generated@@166)) (= ($generated@@164 ($generated@@232 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@232 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@166) (= (type $generated@@490) $generated@@166)) (= ($generated@@165 ($generated@@232 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@232 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@273 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@272 $generated@@166)) (= (type $generated@@498) $generated@@66)) (= (type $generated@@499) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@271 $generated@@497))) ($generated@@258 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@77 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@77 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@503 ($generated@@242 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@74 ($generated@@242 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@507 ($generated@@247 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@511 ($generated@@171 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@171 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@74 ($generated@@171 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@74 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@519 ($generated@@135 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@135 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@377 $generated@@523 ($generated@@278 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@278 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@138 $generated@@524 ($generated@@405 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@166) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@524) $generated@@527))) (and ($generated@@233 ($generated@@83 ($generated@@378 $generated@@524) $generated@@527) $generated@@526) ($generated@@233 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@524) $generated@@527))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@138 $generated@@524 ($generated@@405 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) (= ($generated@@138 $generated@@528 ($generated@@413 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@166) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@528) $generated@@531))) (and ($generated@@233 ($generated@@83 ($generated@@388 $generated@@528) $generated@@531) $generated@@530) ($generated@@233 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@528) $generated@@531))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@138 $generated@@528 ($generated@@413 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@166) (= (type $generated@@535) $generated@@166)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@232 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@232 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) (= (type $generated@@537) $generated@@166)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@232 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@232 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@166) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@233 $generated@@538 ($generated@@405 $generated@@539 $generated@@540))) (and (= ($generated@@278 ($generated@@377 ($generated@@302 $generated@@166 $generated@@166) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@377 ($generated@@302 $generated@@166 $generated@@166) $generated@@538) ($generated@@405 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@233 $generated@@538 ($generated@@405 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@66)) ($generated@@233 $generated@@541 ($generated@@413 $generated@@542 $generated@@543))) (and (= ($generated@@278 ($generated@@377 ($generated@@320 $generated@@166 $generated@@166) $generated@@541)) $generated@@541) ($generated@@138 ($generated@@377 ($generated@@320 $generated@@166 $generated@@166) $generated@@541) ($generated@@413 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@541 ($generated@@413 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@166)) ($generated@@233 $generated@@546 ($generated@@156 $generated@@544 $generated@@545))) (and (= ($generated@@278 ($generated@@377 $generated@@157 $generated@@546)) $generated@@546) ($generated@@138 ($generated@@377 $generated@@157 $generated@@546) ($generated@@156 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@233 $generated@@546 ($generated@@156 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@83 ($generated@@424 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@83 ($generated@@424 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (and (= ($generated@@74 ($generated@@156 $generated@@549 $generated@@550)) $generated@@63) (= ($generated@@297 ($generated@@156 $generated@@549 $generated@@550)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@157) (= ($generated@@532 ($generated@@278 $generated@@551)) ($generated@@533 $generated@@551)))
 :pattern ( ($generated@@532 ($generated@@278 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@166) ($generated@@233 $generated@@552 ($generated@@77 0))) (and (= ($generated@@278 ($generated@@377 $generated@@2 $generated@@552)) $generated@@552) ($generated@@138 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@552) ($generated@@77 0))))
 :pattern ( ($generated@@233 $generated@@552 ($generated@@77 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@166) (= (type $generated@@554) $generated@@66)) ($generated@@233 $generated@@553 ($generated@@242 $generated@@554))) (and (= ($generated@@278 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@553)) $generated@@553) ($generated@@138 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@553) ($generated@@242 $generated@@554))))
 :pattern ( ($generated@@233 $generated@@553 ($generated@@242 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@166) (= (type $generated@@556) $generated@@66)) ($generated@@233 $generated@@555 ($generated@@247 $generated@@556))) (and (= ($generated@@278 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@555)) $generated@@555) ($generated@@138 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@555) ($generated@@247 $generated@@556))))
 :pattern ( ($generated@@233 $generated@@555 ($generated@@247 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@166) (= (type $generated@@558) $generated@@66)) ($generated@@233 $generated@@557 ($generated@@171 $generated@@558))) (and (= ($generated@@278 ($generated@@377 ($generated@@78 $generated@@166 $generated@@2) $generated@@557)) $generated@@557) ($generated@@138 ($generated@@377 ($generated@@78 $generated@@166 $generated@@2) $generated@@557) ($generated@@171 $generated@@558))))
 :pattern ( ($generated@@233 $generated@@557 ($generated@@171 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@166) (= (type $generated@@560) $generated@@66)) ($generated@@233 $generated@@559 ($generated@@491 $generated@@560))) (and (= ($generated@@278 ($generated@@377 ($generated@@272 $generated@@166) $generated@@559)) $generated@@559) ($generated@@138 ($generated@@377 ($generated@@272 $generated@@166) $generated@@559) ($generated@@491 $generated@@560))))
 :pattern ( ($generated@@233 $generated@@559 ($generated@@491 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@66) (= (type $generated@@562) $generated@@166)) ($generated@@233 $generated@@562 ($generated@@135 $generated@@561))) (and (= ($generated@@278 ($generated@@377 $generated@@79 $generated@@562)) $generated@@562) ($generated@@138 ($generated@@377 $generated@@79 $generated@@562) ($generated@@135 $generated@@561))))
 :pattern ( ($generated@@233 $generated@@562 ($generated@@135 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@166 $generated@@2)) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@563 ($generated@@171 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@166) (< 0 ($generated ($generated@@83 $generated@@563 $generated@@566)))) ($generated@@258 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@83 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@76 $generated@@563 ($generated@@171 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@157) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@150 $generated@@569) (and ($generated@@155 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@66) ($generated@@76 $generated@@567 ($generated@@156 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@76 $generated@@567 ($generated@@156 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@258 ($generated@@164 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@258 ($generated@@164 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@157) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@150 $generated@@573) (and ($generated@@155 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@66) ($generated@@76 $generated@@571 ($generated@@156 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@76 $generated@@571 ($generated@@156 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@258 ($generated@@165 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@258 ($generated@@165 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (= (type $generated@@576) $generated@@166)) (= ($generated@@232 ($generated@@254 $generated@@575) ($generated@@254 $generated@@576)) ($generated@@254 ($generated@@232 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@232 ($generated@@254 $generated@@575) ($generated@@254 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@252 $generated@@577))) ($generated@@254 ($generated@@278 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@252 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@278 ($generated@@254 $generated@@578)) ($generated@@254 ($generated@@278 $generated@@578)))
 :pattern ( ($generated@@278 ($generated@@254 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@273 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@272 $generated@@580)) (= ($generated@@271 $generated@@579) 0)) (= $generated@@579 ($generated@@270 $generated@@580))))
 :pattern ( ($generated@@271 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@78 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@291 ($generated@@84 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@291 $generated@@581) ($generated ($generated@@83 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@291 ($generated@@84 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@2)) ($generated@@76 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@3)) ($generated@@76 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@4)) ($generated@@76 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@448)) ($generated@@76 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@166)) ($generated@@76 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@272 $generated@@166)) (= (type $generated@@596) $generated@@66)) (= ($generated@@138 $generated@@595 ($generated@@491 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@271 $generated@@595))) ($generated@@233 ($generated@@492 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@492 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@138 $generated@@595 ($generated@@491 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@272 $generated@@166)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@271 $generated@@599))) (< ($generated@@533 ($generated@@377 $generated@@157 ($generated@@492 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@533 ($generated@@377 $generated@@157 ($generated@@492 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) $generated@@66)) ($generated@@138 $generated@@601 ($generated@@405 $generated@@602 $generated@@603))) (and (and ($generated@@138 ($generated@@300 $generated@@601) ($generated@@242 $generated@@602)) ($generated@@138 ($generated@@345 $generated@@601) ($generated@@242 $generated@@603))) ($generated@@138 ($generated@@376 $generated@@601) ($generated@@242 ($generated@@156 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@138 $generated@@601 ($generated@@405 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) ($generated@@138 $generated@@604 ($generated@@413 $generated@@605 $generated@@606))) (and (and ($generated@@138 ($generated@@318 $generated@@604) ($generated@@247 $generated@@605)) ($generated@@138 ($generated@@356 $generated@@604) ($generated@@247 $generated@@606))) ($generated@@138 ($generated@@387 $generated@@604) ($generated@@247 ($generated@@156 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@138 $generated@@604 ($generated@@413 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@138 $generated@@607 $generated@@46))
 :pattern ( ($generated@@138 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@138 $generated@@608 $generated@@47))
 :pattern ( ($generated@@138 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@138 $generated@@609 $generated@@44))
 :pattern ( ($generated@@138 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@448) ($generated@@138 $generated@@610 $generated@@45))
 :pattern ( ($generated@@138 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@166) ($generated@@138 $generated@@611 $generated@@48))
 :pattern ( ($generated@@138 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(assert  (and (and (and (= (type $generated@@612) $generated@@79) (= (type $generated@@614) ($generated@@178 $generated@@79 $generated@@4))) (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@617) $generated@@66)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@619 true))
(let (($generated@@620  (=> (and (=> (not (= $generated@@612 $generated@@136)) (= $generated@@613 ($generated@@134 $generated@@612))) (= (ControlFlow 0 4) 1)) $generated@@619)))
(let (($generated@@621  (=> (not (= $generated@@612 $generated@@136)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@612 $generated@@136))) (=> (not (= $generated@@612 $generated@@136)) (=> (and (= $generated@@613 ($generated@@134 $generated@@612)) (= (ControlFlow 0 2) 1)) $generated@@619))))))
(let (($generated@@622  (=> (= $generated@@614 ($generated@@177 $generated@@136 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@621) (=> (= (ControlFlow 0 5) 4) $generated@@620)))))
(let (($generated@@623  (=> (and (and (and ($generated@@150 $generated@@615) ($generated@@616 $generated@@615)) (and ($generated@@138 $generated@@612 ($generated@@135 $generated@@617)) ($generated@@76 $generated@@612 ($generated@@135 $generated@@617) $generated@@615))) (and (and (<= ($generated@@252 0) $generated@@613) (< $generated@@613 4294967296)) (and (= 1 $generated@@618) (= (ControlFlow 0 6) 5)))) $generated@@622)))
$generated@@623))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (Int) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (forall (($generated@@139 T@U) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@66)
 :pattern ( ($generated@@135 $generated@@139))
)) (= (type $generated@@136) $generated@@79)) (forall (($generated@@140 T@U) ) (! (= (type ($generated@@137 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@137 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) $generated@@79)) (and (not (= $generated@@142 $generated@@136)) (= ($generated@@137 $generated@@142) ($generated@@135 $generated@@141)))) ($generated@@138 ($generated@@8 ($generated@@134 $generated@@142)) $generated@@46))
 :pattern ( ($generated@@134 $generated@@142) ($generated@@135 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@147) $generated@@66) (= (type $generated@@148) $generated@@79)) (= (type $generated@@149) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@148 ($generated@@135 $generated@@147) $generated@@149)  (or (= $generated@@148 $generated@@136) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@76 $generated@@148 ($generated@@135 $generated@@147) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@66) (= (type $generated@@152) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@153) $generated@@79)) (and (and ($generated@@150 $generated@@152) (and (not (= $generated@@153 $generated@@136)) (= ($generated@@137 $generated@@153) ($generated@@135 $generated@@151)))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@152 $generated@@153) $generated@@60)))) ($generated@@76 ($generated@@8 ($generated@@134 $generated@@153)) $generated@@46 $generated@@152))
 :pattern ( ($generated@@134 $generated@@153) ($generated@@85 ($generated@@83 $generated@@152 $generated@@153) $generated@@60) ($generated@@135 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@138 $generated@@154 ($generated@@77 0)))
 :pattern ( ($generated@@138 $generated@@154 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@66) (= (type $generated@@161) $generated@@66)) (= (type $generated@@162) $generated@@157)) ($generated@@138 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@138 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@66)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@78 $generated@@166 $generated@@2)) (= (type $generated@@175) $generated@@66)) ($generated@@138 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@138 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@79 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@69 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@79) (= (type $generated@@226) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@227) ($generated@@68 $generated@@4))) (= (type $generated@@229) $generated@@79)) (= (type $generated@@230) ($generated@@68 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@157)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@66) (= (type $generated@@237) $generated@@66)) (= (type $generated@@238) $generated@@166)) (= (type $generated@@239) $generated@@166)) (= ($generated@@138 ($generated@@232 $generated@@238 $generated@@239) ($generated@@156 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@138 ($generated@@232 $generated@@238 $generated@@239) ($generated@@156 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@157) (= (type $generated@@241) $generated@@157)) (= ($generated@@163 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@163 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@66)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@78 $generated@@166 $generated@@4)) (= (type $generated@@245) $generated@@66)) (= ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@166) ($generated@@0 ($generated@@83 $generated@@244 $generated@@246))) ($generated@@233 $generated@@246 $generated@@245))
 :pattern ( ($generated@@83 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@78 $generated@@166 $generated@@4)) (= (type $generated@@250) $generated@@66)) (= ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@166) ($generated@@0 ($generated@@83 $generated@@249 $generated@@251))) ($generated@@233 $generated@@251 $generated@@250))
 :pattern ( ($generated@@83 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@252 $generated@@253) $generated@@253)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@66) (= (type $generated@@260) $generated@@66)) (= (type $generated@@261) $generated@@166)) (= (type $generated@@262) $generated@@166)) (= (type $generated@@263) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@150 $generated@@263)) (= ($generated@@76 ($generated@@232 $generated@@261 $generated@@262) ($generated@@156 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@261 $generated@@262) ($generated@@156 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@157) (= ($generated@@155 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@157) ($generated@@155 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@166) (= (type $generated@@269) $generated@@166)) (= $generated@@267 ($generated@@232 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@155 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@166)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@66) (= (type $generated@@282) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@76 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@285) $generated@@166)) (= (type $generated@@286) $generated@@66)) ($generated@@143 $generated@@283 $generated@@284)) ($generated@@258 $generated@@285 $generated@@286 $generated@@283)) ($generated@@258 $generated@@285 $generated@@286 $generated@@284))
 :pattern ( ($generated@@143 $generated@@283 $generated@@284) ($generated@@258 $generated@@285 $generated@@286 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@287) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@290) $generated@@66)) ($generated@@143 $generated@@287 $generated@@288)) ($generated@@76 $generated@@289 $generated@@290 $generated@@287)) ($generated@@76 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@143 $generated@@287 $generated@@288) ($generated@@76 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@78 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@81 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@78 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@83 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@71)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@66) (and (= ($generated@@74 ($generated@@135 $generated@@299)) $generated@@61) (= ($generated@@297 ($generated@@135 $generated@@299)) $generated@@64)))
 :pattern ( ($generated@@135 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@78 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@83 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@83 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@78 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@83 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@83 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@81 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@78 $generated@@337 $generated@@2)) (= ($generated@@172 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@83 $generated@@336 $generated@@338))) (<= ($generated ($generated@@83 $generated@@336 $generated@@338)) ($generated@@291 $generated@@336))))
 :pattern ( ($generated@@83 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@172 $generated@@336))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@66) (= (type $generated@@340) $generated@@79)) (= ($generated@@138 $generated@@340 ($generated@@135 $generated@@339))  (or (= $generated@@340 $generated@@136) (= ($generated@@137 $generated@@340) ($generated@@135 $generated@@339)))))
 :pattern ( ($generated@@138 $generated@@340 ($generated@@135 $generated@@339)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@304 (type $generated@@341))))
(let (($generated@@343 ($generated@@303 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@302 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@301 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@300 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@304 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@322 (type $generated@@352))))
(let (($generated@@354 ($generated@@321 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@320 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@319 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@318 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@322 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@78 $generated@@166 $generated@@2)) (= (type $generated@@364) $generated@@66)) (= ($generated@@138 $generated@@363 ($generated@@171 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@166) (< 0 ($generated ($generated@@83 $generated@@363 $generated@@365)))) ($generated@@233 $generated@@365 $generated@@364))
 :pattern ( ($generated@@83 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@138 $generated@@363 ($generated@@171 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@166 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@242 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@166) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@258 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@242 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@78 $generated@@166 $generated@@4)) (= (type $generated@@371) $generated@@66)) (= (type $generated@@372) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@370 ($generated@@247 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@166) ($generated@@0 ($generated@@83 $generated@@370 $generated@@373))) ($generated@@258 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@83 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@76 $generated@@370 ($generated@@247 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@83 ($generated@@292 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@83 ($generated@@292 $generated@@375) $generated@@374)))
)))
(assert  (and (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@376 $generated@@379)) ($generated@@78 $generated@@166 $generated@@4))
 :pattern ( ($generated@@376 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@377 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@304 (type $generated@@382))))
(let (($generated@@384 ($generated@@303 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@378 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@386) $generated@@166)) (= ($generated@@0 ($generated@@83 ($generated@@376 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@300 $generated@@385) ($generated@@164 ($generated@@377 $generated@@157 $generated@@386)))) (= ($generated@@83 ($generated@@378 $generated@@385) ($generated@@164 ($generated@@377 $generated@@157 $generated@@386))) ($generated@@165 ($generated@@377 $generated@@157 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@166 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@322 (type $generated@@390))))
(let (($generated@@392 ($generated@@321 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@394) $generated@@166)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@83 ($generated@@318 $generated@@393) ($generated@@164 ($generated@@377 $generated@@157 $generated@@394)))) (= ($generated@@83 ($generated@@388 $generated@@393) ($generated@@164 ($generated@@377 $generated@@157 $generated@@394))) ($generated@@165 ($generated@@377 $generated@@157 $generated@@394))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@303 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@302 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@83 ($generated@@300 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@83 ($generated@@378 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@395) $generated@@399))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@321 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@320 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@83 ($generated@@318 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@166) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@408) $generated@@412))) (and ($generated@@258 ($generated@@83 ($generated@@378 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@258 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@166) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@416) $generated@@420))) (and ($generated@@258 ($generated@@83 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@258 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@421) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@422) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@423) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@421 $generated@@423))) (and ($generated@@143 $generated@@421 $generated@@422) ($generated@@143 $generated@@422 $generated@@423))) ($generated@@143 $generated@@421 $generated@@423))
 :pattern ( ($generated@@143 $generated@@421 $generated@@422) ($generated@@143 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@78 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@322 (type $generated@@426))))
(let (($generated@@428 ($generated@@321 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@320 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@319 $generated@@428 $generated@@427)) (= ($generated@@318 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@318 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@322 (type $generated@@429))))
(let (($generated@@431 ($generated@@321 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@320 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@356 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@356 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@322 (type $generated@@432))))
(let (($generated@@434 ($generated@@321 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@320 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@319 $generated@@434 $generated@@433)) (= ($generated@@387 $generated@@432) ($generated@@424 $generated@@166))))))
 :pattern ( ($generated@@387 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@304 (type $generated@@435))))
(let (($generated@@437 ($generated@@303 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@302 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@301 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@166) (= (type $generated@@439) $generated@@166)) ($generated@@0 ($generated@@83 ($generated@@376 $generated@@435) ($generated@@278 ($generated@@232 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@376 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@322 (type $generated@@440))))
(let (($generated@@442 ($generated@@321 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@320 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@319 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@166) (= (type $generated@@444) $generated@@166)) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@440) ($generated@@278 ($generated@@232 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@387 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@166) ($generated@@233 $generated@@445 $generated@@46)) (and (= ($generated@@278 ($generated@@377 $generated@@2 $generated@@445)) $generated@@445) ($generated@@138 ($generated@@377 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@166) ($generated@@233 $generated@@446 $generated@@47)) (and (= ($generated@@278 ($generated@@377 $generated@@3 $generated@@446)) $generated@@446) ($generated@@138 ($generated@@377 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@166) ($generated@@233 $generated@@447 $generated@@44)) (and (= ($generated@@278 ($generated@@377 $generated@@4 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@377 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@166) ($generated@@233 $generated@@449 $generated@@45)) (and (= ($generated@@278 ($generated@@377 $generated@@448 $generated@@449)) $generated@@449) ($generated@@138 ($generated@@377 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@66) (= ($generated@@233 ($generated@@278 $generated@@450) $generated@@451) ($generated@@138 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@233 ($generated@@278 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@79) (<= 0 ($generated@@134 $generated@@452)))
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@81 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@78 $generated@@454 $generated@@2)) (<= 0 ($generated@@291 $generated@@453))))
 :pattern ( ($generated@@291 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@273 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@272 $generated@@456)) (<= 0 ($generated@@271 $generated@@455))))
 :pattern ( ($generated@@271 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@405 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@405 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@405 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@413 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@166) (= (type $generated@@478) $generated@@166)) (= ($generated@@264 ($generated@@232 $generated@@477 $generated@@478)) $generated@@62))
 :pattern ( ($generated@@232 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@156 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@156 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@483 ($generated@@156 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@156 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@166) (= (type $generated@@488) $generated@@166)) (= ($generated@@164 ($generated@@232 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@232 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@166) (= (type $generated@@490) $generated@@166)) (= ($generated@@165 ($generated@@232 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@232 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@273 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@272 $generated@@166)) (= (type $generated@@498) $generated@@66)) (= (type $generated@@499) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@271 $generated@@497))) ($generated@@258 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@77 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@77 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@503 ($generated@@242 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@74 ($generated@@242 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@507 ($generated@@247 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@511 ($generated@@171 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@171 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@74 ($generated@@171 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@74 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@519 ($generated@@135 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@135 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@377 $generated@@523 ($generated@@278 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@278 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@138 $generated@@524 ($generated@@405 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@166) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@524) $generated@@527))) (and ($generated@@233 ($generated@@83 ($generated@@378 $generated@@524) $generated@@527) $generated@@526) ($generated@@233 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@524) $generated@@527))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@138 $generated@@524 ($generated@@405 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) (= ($generated@@138 $generated@@528 ($generated@@413 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@166) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@528) $generated@@531))) (and ($generated@@233 ($generated@@83 ($generated@@388 $generated@@528) $generated@@531) $generated@@530) ($generated@@233 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@528) $generated@@531))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@138 $generated@@528 ($generated@@413 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@166) (= (type $generated@@535) $generated@@166)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@232 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@232 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) (= (type $generated@@537) $generated@@166)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@232 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@232 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@166) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@233 $generated@@538 ($generated@@405 $generated@@539 $generated@@540))) (and (= ($generated@@278 ($generated@@377 ($generated@@302 $generated@@166 $generated@@166) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@377 ($generated@@302 $generated@@166 $generated@@166) $generated@@538) ($generated@@405 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@233 $generated@@538 ($generated@@405 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@66)) ($generated@@233 $generated@@541 ($generated@@413 $generated@@542 $generated@@543))) (and (= ($generated@@278 ($generated@@377 ($generated@@320 $generated@@166 $generated@@166) $generated@@541)) $generated@@541) ($generated@@138 ($generated@@377 ($generated@@320 $generated@@166 $generated@@166) $generated@@541) ($generated@@413 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@541 ($generated@@413 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@166)) ($generated@@233 $generated@@546 ($generated@@156 $generated@@544 $generated@@545))) (and (= ($generated@@278 ($generated@@377 $generated@@157 $generated@@546)) $generated@@546) ($generated@@138 ($generated@@377 $generated@@157 $generated@@546) ($generated@@156 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@233 $generated@@546 ($generated@@156 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@83 ($generated@@424 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@83 ($generated@@424 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (and (= ($generated@@74 ($generated@@156 $generated@@549 $generated@@550)) $generated@@63) (= ($generated@@297 ($generated@@156 $generated@@549 $generated@@550)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@157) (= ($generated@@532 ($generated@@278 $generated@@551)) ($generated@@533 $generated@@551)))
 :pattern ( ($generated@@532 ($generated@@278 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@166) ($generated@@233 $generated@@552 ($generated@@77 0))) (and (= ($generated@@278 ($generated@@377 $generated@@2 $generated@@552)) $generated@@552) ($generated@@138 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@552) ($generated@@77 0))))
 :pattern ( ($generated@@233 $generated@@552 ($generated@@77 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@166) (= (type $generated@@554) $generated@@66)) ($generated@@233 $generated@@553 ($generated@@242 $generated@@554))) (and (= ($generated@@278 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@553)) $generated@@553) ($generated@@138 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@553) ($generated@@242 $generated@@554))))
 :pattern ( ($generated@@233 $generated@@553 ($generated@@242 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@166) (= (type $generated@@556) $generated@@66)) ($generated@@233 $generated@@555 ($generated@@247 $generated@@556))) (and (= ($generated@@278 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@555)) $generated@@555) ($generated@@138 ($generated@@377 ($generated@@78 $generated@@166 $generated@@4) $generated@@555) ($generated@@247 $generated@@556))))
 :pattern ( ($generated@@233 $generated@@555 ($generated@@247 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@166) (= (type $generated@@558) $generated@@66)) ($generated@@233 $generated@@557 ($generated@@171 $generated@@558))) (and (= ($generated@@278 ($generated@@377 ($generated@@78 $generated@@166 $generated@@2) $generated@@557)) $generated@@557) ($generated@@138 ($generated@@377 ($generated@@78 $generated@@166 $generated@@2) $generated@@557) ($generated@@171 $generated@@558))))
 :pattern ( ($generated@@233 $generated@@557 ($generated@@171 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@166) (= (type $generated@@560) $generated@@66)) ($generated@@233 $generated@@559 ($generated@@491 $generated@@560))) (and (= ($generated@@278 ($generated@@377 ($generated@@272 $generated@@166) $generated@@559)) $generated@@559) ($generated@@138 ($generated@@377 ($generated@@272 $generated@@166) $generated@@559) ($generated@@491 $generated@@560))))
 :pattern ( ($generated@@233 $generated@@559 ($generated@@491 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@66) (= (type $generated@@562) $generated@@166)) ($generated@@233 $generated@@562 ($generated@@135 $generated@@561))) (and (= ($generated@@278 ($generated@@377 $generated@@79 $generated@@562)) $generated@@562) ($generated@@138 ($generated@@377 $generated@@79 $generated@@562) ($generated@@135 $generated@@561))))
 :pattern ( ($generated@@233 $generated@@562 ($generated@@135 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@166 $generated@@2)) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@563 ($generated@@171 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@166) (< 0 ($generated ($generated@@83 $generated@@563 $generated@@566)))) ($generated@@258 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@83 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@76 $generated@@563 ($generated@@171 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@157) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@150 $generated@@569) (and ($generated@@155 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@66) ($generated@@76 $generated@@567 ($generated@@156 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@76 $generated@@567 ($generated@@156 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@258 ($generated@@164 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@258 ($generated@@164 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@157) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@150 $generated@@573) (and ($generated@@155 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@66) ($generated@@76 $generated@@571 ($generated@@156 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@76 $generated@@571 ($generated@@156 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@258 ($generated@@165 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@258 ($generated@@165 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (= (type $generated@@576) $generated@@166)) (= ($generated@@232 ($generated@@254 $generated@@575) ($generated@@254 $generated@@576)) ($generated@@254 ($generated@@232 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@232 ($generated@@254 $generated@@575) ($generated@@254 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@252 $generated@@577))) ($generated@@254 ($generated@@278 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@252 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@278 ($generated@@254 $generated@@578)) ($generated@@254 ($generated@@278 $generated@@578)))
 :pattern ( ($generated@@278 ($generated@@254 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@273 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@272 $generated@@580)) (= ($generated@@271 $generated@@579) 0)) (= $generated@@579 ($generated@@270 $generated@@580))))
 :pattern ( ($generated@@271 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@78 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@291 ($generated@@84 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@291 $generated@@581) ($generated ($generated@@83 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@291 ($generated@@84 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@2)) ($generated@@76 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@3)) ($generated@@76 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@4)) ($generated@@76 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@448)) ($generated@@76 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@166)) ($generated@@76 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@272 $generated@@166)) (= (type $generated@@596) $generated@@66)) (= ($generated@@138 $generated@@595 ($generated@@491 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@271 $generated@@595))) ($generated@@233 ($generated@@492 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@492 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@138 $generated@@595 ($generated@@491 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@272 $generated@@166)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@271 $generated@@599))) (< ($generated@@533 ($generated@@377 $generated@@157 ($generated@@492 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@533 ($generated@@377 $generated@@157 ($generated@@492 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) $generated@@66)) ($generated@@138 $generated@@601 ($generated@@405 $generated@@602 $generated@@603))) (and (and ($generated@@138 ($generated@@300 $generated@@601) ($generated@@242 $generated@@602)) ($generated@@138 ($generated@@345 $generated@@601) ($generated@@242 $generated@@603))) ($generated@@138 ($generated@@376 $generated@@601) ($generated@@242 ($generated@@156 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@138 $generated@@601 ($generated@@405 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) ($generated@@138 $generated@@604 ($generated@@413 $generated@@605 $generated@@606))) (and (and ($generated@@138 ($generated@@318 $generated@@604) ($generated@@247 $generated@@605)) ($generated@@138 ($generated@@356 $generated@@604) ($generated@@247 $generated@@606))) ($generated@@138 ($generated@@387 $generated@@604) ($generated@@247 ($generated@@156 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@138 $generated@@604 ($generated@@413 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@138 $generated@@607 $generated@@46))
 :pattern ( ($generated@@138 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@138 $generated@@608 $generated@@47))
 :pattern ( ($generated@@138 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@138 $generated@@609 $generated@@44))
 :pattern ( ($generated@@138 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@448) ($generated@@138 $generated@@610 $generated@@45))
 :pattern ( ($generated@@138 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@166) ($generated@@138 $generated@@611 $generated@@48))
 :pattern ( ($generated@@138 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Bool)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 (T@U) Bool)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(assert  (and (and (and (= (type $generated@@615) $generated@@79) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@622) ($generated@@178 $generated@@79 $generated@@4))) (= (type $generated@@626) $generated@@66)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@629  (=> (and (< $generated@@612 $generated@@613) (= $generated@@614 (- $generated@@613 $generated@@612))) (and (=> (= (ControlFlow 0 6) (- 0 11)) (not (= $generated@@615 $generated@@136))) (=> (not (= $generated@@615 $generated@@136)) (and (=> (= (ControlFlow 0 6) (- 0 10)) (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@134 $generated@@615)))) (=> (= $generated@@616 ($generated@@252 1)) (and (=> (= (ControlFlow 0 6) (- 0 9)) (and (<= ($generated@@252 0) $generated@@616) (< $generated@@616 4294967296))) (=> (and (<= ($generated@@252 0) $generated@@616) (< $generated@@616 4294967296)) (=> (= $generated@@617 (+ $generated@@612 1)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and (<= ($generated@@252 0) $generated@@617) (< $generated@@617 4294967296))) (=> (and (<= ($generated@@252 0) $generated@@617) (< $generated@@617 4294967296)) (=> (= $generated@@618 (+ $generated@@612 1)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0 $generated@@614) (= (- $generated@@613 $generated@@618) $generated@@614))) (=> (or (<= 0 $generated@@614) (= (- $generated@@613 $generated@@618) $generated@@614)) (=> (= (ControlFlow 0 6) (- 0 5)) (< (- $generated@@613 $generated@@618) $generated@@614)))))))))))))))))
(let (($generated@@630 true))
(let (($generated@@631  (=> $generated@@619 (and (=> (= (ControlFlow 0 12) 4) $generated@@630) (=> (= (ControlFlow 0 12) 6) $generated@@629)))))
(let (($generated@@632 true))
(let (($generated@@633  (and (=> (= (ControlFlow 0 13) 3) $generated@@632) (=> (= (ControlFlow 0 13) 12) $generated@@631))))
(let (($generated@@634 true))
(let (($generated@@635  (=> (and (<= ($generated@@252 0) $generated@@612) (< $generated@@612 4294967296)) (=> (and (and (and (and (not false) (<= 0 $generated@@612)) (= $generated@@620 0)) (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@79) (=> (and (not (= $generated@@636 $generated@@136)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@621 $generated@@636) $generated@@60))) (= ($generated@@83 $generated@@621 $generated@@636) ($generated@@83 $generated@@621 $generated@@636))))
 :pattern ( ($generated@@83 $generated@@621 $generated@@636))
))) (and (and ($generated@@143 $generated@@621 $generated@@621) (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (! (let (($generated@@639 ($generated@@69 (type $generated@@638))))
 (=> (and (and (= (type $generated@@637) $generated@@79) (= (type $generated@@638) ($generated@@68 $generated@@639))) (and (not (= $generated@@637 $generated@@136)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@621 $generated@@637) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@621 $generated@@637) $generated@@638) ($generated@@85 ($generated@@83 $generated@@621 $generated@@637) $generated@@638)) ($generated@@0 ($generated@@176 $generated@@622 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@621 $generated@@637) $generated@@638))
))) (and (<= (- $generated@@613 $generated@@612) $generated@@623) (=> (= (- $generated@@613 $generated@@612) $generated@@623) true)))) (and (=> (= (ControlFlow 0 14) 2) $generated@@634) (=> (= (ControlFlow 0 14) 13) $generated@@633))))))
(let (($generated@@640  (=> (and (not (= $generated@@615 $generated@@136)) (= $generated@@620 ($generated@@252 0))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= ($generated@@252 0) $generated@@620) (< $generated@@620 4294967296))) (=> (and (<= ($generated@@252 0) $generated@@620) (< $generated@@620 4294967296)) (=> (= $generated@@624 ($generated@@252 0)) (=> (and (= $generated@@623 (- $generated@@613 $generated@@624)) (= (ControlFlow 0 15) 14)) $generated@@635)))))))
(let (($generated@@641 true))
(let (($generated@@642  (=> (= $generated@@622 ($generated@@177 $generated@@136 $generated@@621 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 1) $generated@@641) (=> (= (ControlFlow 0 17) 15) $generated@@640)))))
(let (($generated@@643  (=> (and ($generated@@150 $generated@@621) ($generated@@625 $generated@@621)) (=> (and (and ($generated@@138 $generated@@615 ($generated@@135 $generated@@626)) ($generated@@76 $generated@@615 ($generated@@135 $generated@@626) $generated@@621)) (and (<= ($generated@@252 0) $generated@@613) (< $generated@@613 4294967296))) (=> (and (and (and (and (<= ($generated@@252 0) $generated@@627) (< $generated@@627 4294967296)) true) (= 1 $generated@@628)) (and (=> (not (= $generated@@615 $generated@@136)) (= $generated@@613 ($generated@@134 $generated@@615))) (= (ControlFlow 0 18) 17))) $generated@@642)))))
$generated@@643))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@186 (T@U Int) T@U)
(declare-fun $generated@@187 (T@U T@U) T@U)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@U) Int)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@208 (T@U Int) T@U)
(declare-fun $generated@@209 (T@U Int T@U) T@U)
(declare-fun $generated@@222 (T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@224 (T@T T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@281 (T@U T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@U Int) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@291 (Int) T@U)
(declare-fun $generated@@309 (T@U T@U) Bool)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (Int) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@340 (T@U T@U T@U) Bool)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@360 (T@T) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U) Int)
(declare-fun $generated@@397 (T@T) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@T T@T) T@U)
(declare-fun $generated@@408 (T@T T@T) T@T)
(declare-fun $generated@@409 (T@T) T@T)
(declare-fun $generated@@410 (T@T) T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@T T@T) T@U)
(declare-fun $generated@@426 (T@T T@T) T@T)
(declare-fun $generated@@427 (T@T) T@T)
(declare-fun $generated@@428 (T@T) T@T)
(declare-fun $generated@@445 (T@T T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@526 (T@U T@U) T@U)
(declare-fun $generated@@534 (T@U T@U) T@U)
(declare-fun $generated@@552 (T@T) T@U)
(declare-fun $generated@@576 () T@T)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@630 (T@U) Int)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@636 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@644 (T@U) T@U)
(declare-fun $generated@@649 (T@U) Int)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@654 (T@U) T@U)
(declare-fun $generated@@677 (T@U) Int)
(declare-fun $generated@@678 (T@U) Int)
(declare-fun $generated@@705 (T@U) T@U)
(declare-fun $generated@@706 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@73)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@75 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@75 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@72)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert  (and (and (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@72)
 :pattern ( ($generated@@142 $generated@@146))
)) (= (type $generated@@143) $generated@@86)) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@72)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@72) (= (type $generated@@149) $generated@@86)) (and (not (= $generated@@149 $generated@@143)) (= ($generated@@144 $generated@@149) ($generated@@142 $generated@@148)))) ($generated@@145 ($generated@@8 ($generated@@141 $generated@@149)) $generated@@46))
 :pattern ( ($generated@@141 $generated@@149) ($generated@@142 $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@152) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@72) (= (type $generated@@155) $generated@@86)) (= (type $generated@@156) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@155 ($generated@@142 $generated@@154) $generated@@156)  (or (= $generated@@155 $generated@@143) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@155 ($generated@@142 $generated@@154) $generated@@156))
)))
(assert (= (type $generated@@157) $generated@@72))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@2) (= (type $generated@@159) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@158 $generated@@157 $generated@@159))
 :pattern ( ($generated@@83 $generated@@158 $generated@@157 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@72) (= (type $generated@@162) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@163) $generated@@86)) (and (and ($generated@@160 $generated@@162) (and (not (= $generated@@163 $generated@@143)) (= ($generated@@144 $generated@@163) ($generated@@142 $generated@@161)))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@162 $generated@@163) $generated@@60)))) ($generated@@83 ($generated@@8 ($generated@@141 $generated@@163)) $generated@@46 $generated@@162))
 :pattern ( ($generated@@141 $generated@@163) ($generated@@92 ($generated@@90 $generated@@162 $generated@@163) $generated@@60) ($generated@@142 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@145 $generated@@164 ($generated@@84 0)))
 :pattern ( ($generated@@145 $generated@@164 ($generated@@84 0)))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@165 $generated@@166)) $generated@@72)
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@72) (= (type $generated@@168) $generated@@86)) (= (type $generated@@169) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@168 ($generated@@165 $generated@@167) $generated@@169) ($generated@@83 $generated@@168 ($generated@@142 $generated@@167) $generated@@169)))
 :pattern ( ($generated@@83 $generated@@168 ($generated@@165 $generated@@167) $generated@@169))
)))
(assert  (and (= ($generated@@1 $generated@@172) 14) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@173 $generated@@174)) $generated@@72)
 :pattern ( ($generated@@171 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and (= (type $generated@@175) $generated@@72) (= (type $generated@@176) $generated@@72)) (= (type $generated@@177) $generated@@172)) ($generated@@145 $generated@@177 ($generated@@171 $generated@@175 $generated@@176))) ($generated@@170 $generated@@177))
 :pattern ( ($generated@@170 $generated@@177) ($generated@@145 $generated@@177 ($generated@@171 $generated@@175 $generated@@176)))
)))
(assert  (and (and (= ($generated@@1 $generated@@181) 15) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@179 $generated@@182))
))) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@181)
 :pattern ( ($generated@@180 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@172) (= (type $generated@@185) $generated@@172)) true) (= ($generated@@178 $generated@@184 $generated@@185)  (and (= ($generated@@179 $generated@@184) ($generated@@179 $generated@@185)) (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)))))
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
)))
(assert  (and (and (and (forall (($generated@@191 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@191)) 16)) (forall (($generated@@192 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@188 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 Int) ) (! (let (($generated@@195 ($generated@@190 (type $generated@@193))))
(= (type ($generated@@186 $generated@@193 $generated@@194)) ($generated@@188 $generated@@195)))
 :pattern ( ($generated@@186 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(= (type ($generated@@187 $generated@@196 $generated@@197)) ($generated@@188 $generated@@198)))
 :pattern ( ($generated@@187 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Int) ) (! (let (($generated@@202 (type $generated@@200)))
 (=> (= (type $generated@@199) ($generated@@188 $generated@@202)) (=> (and (<= 0 $generated@@201) (<= $generated@@201 ($generated@@189 $generated@@199))) (= ($generated@@186 ($generated@@187 $generated@@199 $generated@@200) $generated@@201) ($generated@@187 ($generated@@186 $generated@@199 $generated@@201) $generated@@200)))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@199 $generated@@200) $generated@@201))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@205)) $generated@@72)
 :pattern ( ($generated@@203 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (= (type $generated@@206) ($generated@@85 $generated@@181 $generated@@2)) (= (type $generated@@207) $generated@@72)) ($generated@@145 $generated@@206 ($generated@@203 $generated@@207))) ($generated@@204 $generated@@206))
 :pattern ( ($generated@@145 $generated@@206 ($generated@@203 $generated@@207)))
)))
(assert  (and (forall (($generated@@210 T@U) ($generated@@211 Int) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@210))))
(= (type ($generated@@208 $generated@@210 $generated@@211)) $generated@@212))
 :pattern ( ($generated@@208 $generated@@210 $generated@@211))
)) (forall (($generated@@213 T@U) ($generated@@214 Int) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(= (type ($generated@@209 $generated@@213 $generated@@214 $generated@@215)) ($generated@@188 $generated@@216)))
 :pattern ( ($generated@@209 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 Int) ($generated@@219 T@U) ($generated@@220 Int) ) (! (let (($generated@@221 (type $generated@@219)))
 (=> (= (type $generated@@217) ($generated@@188 $generated@@221)) (=> (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@189 $generated@@217))) (and (=> (= $generated@@218 $generated@@220) (= ($generated@@208 ($generated@@209 $generated@@217 $generated@@218 $generated@@219) $generated@@220) $generated@@219)) (=> (not (= $generated@@218 $generated@@220)) (= ($generated@@208 ($generated@@209 $generated@@217 $generated@@218 $generated@@219) $generated@@220) ($generated@@208 $generated@@217 $generated@@220)))))))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@217 $generated@@218 $generated@@219) $generated@@220))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (= ($generated@@1 ($generated@@224 $generated@@228 $generated@@229)) 17)) (forall (($generated@@230 T@T) ($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@230 $generated@@231)) $generated@@230)
 :pattern ( ($generated@@224 $generated@@230 $generated@@231))
))) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (! (= ($generated@@226 ($generated@@224 $generated@@232 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@224 $generated@@232 $generated@@233))
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@226 (type $generated@@234))))
(= (type ($generated@@222 $generated@@234 $generated@@235 $generated@@236)) $generated@@237))
 :pattern ( ($generated@@222 $generated@@234 $generated@@235 $generated@@236))
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 (type $generated@@241)))
(let (($generated@@243 (type $generated@@239)))
(= (type ($generated@@227 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@224 $generated@@243 $generated@@242))))
 :pattern ( ($generated@@227 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@226 (type $generated@@244))))
 (=> (= (type $generated@@247) $generated@@248) (= ($generated@@222 ($generated@@227 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@245 $generated@@246) $generated@@247)))
 :weight 0
))) (and (and (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or (= $generated@@251 $generated@@253) (= ($generated@@222 ($generated@@227 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@222 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (or (= $generated@@258 $generated@@260) (= ($generated@@222 ($generated@@227 $generated@@256 $generated@@257 $generated@@258 $generated@@255) $generated@@259 $generated@@260) ($generated@@222 $generated@@256 $generated@@259 $generated@@260)))
 :weight 0
))) (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (or true (= ($generated@@222 ($generated@@227 $generated@@262 $generated@@263 $generated@@264 $generated@@261) $generated@@265 $generated@@266) ($generated@@222 $generated@@262 $generated@@265 $generated@@266)))
 :weight 0
)))) (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ) (! (= (type ($generated@@223 $generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@224 $generated@@86 $generated@@4))
 :pattern ( ($generated@@223 $generated@@267 $generated@@268 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@75 (type $generated@@276))))
 (=> (and (and (and (and (= (type $generated@@271) $generated@@86) (= (type $generated@@272) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@273) ($generated@@74 $generated@@4))) (= (type $generated@@275) $generated@@86)) (= (type $generated@@276) ($generated@@74 $generated@@277))) (= ($generated@@0 ($generated@@222 ($generated@@223 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))  (=> (and (not (= $generated@@275 $generated@@271)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@272 $generated@@275) $generated@@273))) $generated@@274))))
 :pattern ( ($generated@@222 ($generated@@223 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (= (type $generated@@279) $generated@@72))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@172) ($generated@@145 $generated@@280 $generated@@279)) ($generated@@278 $generated@@280))
 :pattern ( ($generated@@278 $generated@@280) ($generated@@145 $generated@@280 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (= (type ($generated@@281 $generated@@283 $generated@@284)) $generated@@172)
 :pattern ( ($generated@@281 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@181)) (= (type $generated@@288) $generated@@181)) (= ($generated@@145 ($generated@@281 $generated@@287 $generated@@288) ($generated@@171 $generated@@285 $generated@@286))  (and ($generated@@282 $generated@@287 $generated@@285) ($generated@@282 $generated@@288 $generated@@286))))
 :pattern ( ($generated@@145 ($generated@@281 $generated@@287 $generated@@288) ($generated@@171 $generated@@285 $generated@@286)))
)))
(assert  (and (and (forall (($generated@@292 T@U) ($generated@@293 Int) ) (! (let (($generated@@294 ($generated@@190 (type $generated@@292))))
(= (type ($generated@@289 $generated@@292 $generated@@293)) ($generated@@188 $generated@@294)))
 :pattern ( ($generated@@289 $generated@@292 $generated@@293))
)) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (= (type ($generated@@290 $generated@@295 $generated@@296)) ($generated@@188 $generated@@181))
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 Int) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@74 $generated@@181))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 Int) ) (!  (=> (and (= (type $generated@@298) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@299) $generated@@86)) (=> (and (and (= (+ $generated@@300 1) $generated@@301) (<= 0 $generated@@300)) (<= $generated@@301 ($generated@@141 $generated@@299))) (= ($generated@@289 ($generated@@290 $generated@@298 $generated@@299) $generated@@301) ($generated@@187 ($generated@@289 ($generated@@290 $generated@@298 $generated@@299) $generated@@300) ($generated@@92 ($generated@@90 $generated@@298 $generated@@299) ($generated@@291 $generated@@300))))))
 :pattern ( ($generated@@289 ($generated@@290 $generated@@298 $generated@@299) $generated@@300) ($generated@@289 ($generated@@290 $generated@@298 $generated@@299) $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 Int) ($generated@@304 T@U) ($generated@@305 Int) ) (! (let (($generated@@306 (type $generated@@304)))
 (=> (= (type $generated@@302) ($generated@@188 $generated@@306)) (=> (and (and (<= 0 $generated@@305) (<= $generated@@305 $generated@@303)) (< $generated@@303 ($generated@@189 $generated@@302))) (= ($generated@@186 ($generated@@209 $generated@@302 $generated@@303 $generated@@304) $generated@@305) ($generated@@209 ($generated@@186 $generated@@302 $generated@@305) (- $generated@@303 $generated@@305) $generated@@304)))))
 :pattern ( ($generated@@186 ($generated@@209 $generated@@302 $generated@@303 $generated@@304) $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@172) (= (type $generated@@308) $generated@@172)) (= ($generated@@178 $generated@@307 $generated@@308) (= $generated@@307 $generated@@308)))
 :pattern ( ($generated@@178 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@172) (= (type $generated@@311) $generated@@172)) (= ($generated@@309 $generated@@310 $generated@@311) (= $generated@@310 $generated@@311)))
 :pattern ( ($generated@@309 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 Int) ) (! (let (($generated@@314 ($generated@@190 (type $generated@@312))))
 (=> (and (= (type $generated@@312) ($generated@@188 $generated@@314)) (= $generated@@313 0)) (= ($generated@@186 $generated@@312 $generated@@313) $generated@@312)))
 :pattern ( ($generated@@186 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@72)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@85 $generated@@181 $generated@@4)) (= (type $generated@@318) $generated@@72)) (= ($generated@@145 $generated@@317 ($generated@@315 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@181) ($generated@@0 ($generated@@90 $generated@@317 $generated@@319))) ($generated@@282 $generated@@319 $generated@@318))
 :pattern ( ($generated@@90 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@145 $generated@@317 ($generated@@315 $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@72)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@85 $generated@@181 $generated@@4)) (= (type $generated@@323) $generated@@72)) (= ($generated@@145 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@181) ($generated@@0 ($generated@@90 $generated@@322 $generated@@324))) ($generated@@282 $generated@@324 $generated@@323))
 :pattern ( ($generated@@90 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@145 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 $generated@@326) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= (type ($generated@@327 $generated@@328)) $generated@@329))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (= ($generated@@327 $generated@@330) $generated@@330)
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@72)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) ($generated@@188 $generated@@181)) (= (type $generated@@334) $generated@@181)) (= (type $generated@@335) $generated@@72)) (and ($generated@@145 $generated@@333 ($generated@@331 $generated@@335)) ($generated@@282 $generated@@334 $generated@@335))) ($generated@@145 ($generated@@187 $generated@@333 $generated@@334) ($generated@@331 $generated@@335)))
 :pattern ( ($generated@@145 ($generated@@187 $generated@@333 $generated@@334) ($generated@@331 $generated@@335)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 Int) ($generated@@338 Int) ) (! (let (($generated@@339 ($generated@@190 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@188 $generated@@339)) (=> (and (and (<= 0 $generated@@338) (< $generated@@338 $generated@@337)) (< $generated@@338 ($generated@@189 $generated@@336))) (= ($generated@@208 ($generated@@289 $generated@@336 $generated@@337) $generated@@338) ($generated@@208 $generated@@336 $generated@@338)))))
 :weight 25
 :pattern ( ($generated@@208 ($generated@@289 $generated@@336 $generated@@337) $generated@@338))
 :pattern ( ($generated@@208 $generated@@336 $generated@@338) ($generated@@289 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@341) $generated@@72) (= (type $generated@@342) $generated@@72)) (= (type $generated@@343) $generated@@181)) (= (type $generated@@344) $generated@@181)) (= (type $generated@@345) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@160 $generated@@345)) (= ($generated@@83 ($generated@@281 $generated@@343 $generated@@344) ($generated@@171 $generated@@341 $generated@@342) $generated@@345)  (and ($generated@@340 $generated@@343 $generated@@341 $generated@@345) ($generated@@340 $generated@@344 $generated@@342 $generated@@345))))
 :pattern ( ($generated@@83 ($generated@@281 $generated@@343 $generated@@344) ($generated@@171 $generated@@341 $generated@@342) $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@190 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@188 $generated@@348)) (=> (and (<= 0 $generated@@347) (<= $generated@@347 ($generated@@189 $generated@@346))) (= ($generated@@189 ($generated@@186 $generated@@346 $generated@@347)) (- ($generated@@189 $generated@@346) $generated@@347)))))
 :pattern ( ($generated@@189 ($generated@@186 $generated@@346 $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@76)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@172) (= ($generated@@170 $generated@@351) (= ($generated@@349 $generated@@351) $generated@@63)))
 :pattern ( ($generated@@170 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@172) (= ($generated@@278 $generated@@352) (= ($generated@@349 $generated@@352) $generated@@66)))
 :pattern ( ($generated@@278 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 Int) ) (! (let (($generated@@356 ($generated@@190 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@188 $generated@@356)) (=> (and (<= 0 $generated@@355) (< $generated@@355 ($generated@@189 $generated@@354))) (< ($generated@@353 ($generated@@289 $generated@@354 $generated@@355)) ($generated@@353 $generated@@354)))))
 :pattern ( ($generated@@353 ($generated@@289 $generated@@354 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@172) ($generated@@170 $generated@@357)) (exists (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (and (and (= (type $generated@@358) $generated@@181) (= (type $generated@@359) $generated@@181)) (= $generated@@357 ($generated@@281 $generated@@358 $generated@@359)))
 :no-pattern (type $generated@@358)
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
)))
 :pattern ( ($generated@@170 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ) (! (= (type ($generated@@360 $generated@@361)) ($generated@@188 $generated@@361))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@T) ) (! (= ($generated@@189 ($generated@@360 $generated@@362)) 0)
 :pattern ( ($generated@@360 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (! (let (($generated@@365 ($generated@@190 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@188 $generated@@365)) (=> (and (< 0 $generated@@364) (<= $generated@@364 ($generated@@189 $generated@@363))) (< ($generated@@353 ($generated@@186 $generated@@363 $generated@@364)) ($generated@@353 $generated@@363)))))
 :pattern ( ($generated@@353 ($generated@@186 $generated@@363 $generated@@364)))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@86)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@368) $generated@@172) (= (type $generated@@369) $generated@@172)) true) (= ($generated@@309 $generated@@368 $generated@@369) (= ($generated@@366 $generated@@368) ($generated@@366 $generated@@369))))
 :pattern ( ($generated@@309 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (= (type ($generated@@370 $generated@@371)) $generated@@172)
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@172) ($generated@@278 $generated@@372)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@86) (= $generated@@372 ($generated@@370 $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
)))
 :pattern ( ($generated@@278 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
 (=> (= (type $generated@@374) ($generated@@188 $generated@@376)) (= ($generated@@189 ($generated@@187 $generated@@374 $generated@@375)) (+ 1 ($generated@@189 $generated@@374)))))
 :pattern ( ($generated@@187 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@72) (= (type $generated@@378) $generated@@86)) (= ($generated@@145 $generated@@378 ($generated@@165 $generated@@377))  (and ($generated@@145 $generated@@378 ($generated@@142 $generated@@377)) (not (= $generated@@378 $generated@@143)))))
 :pattern ( ($generated@@145 $generated@@378 ($generated@@165 $generated@@377)))
)))
(assert (forall (($generated@@380 T@U) ) (! (= (type ($generated@@379 $generated@@380)) $generated@@181)
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@72) (= (type $generated@@383) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@340 ($generated@@379 $generated@@381) $generated@@382 $generated@@383) ($generated@@83 $generated@@381 $generated@@382 $generated@@383)))
 :pattern ( ($generated@@340 ($generated@@379 $generated@@381) $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@384) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@385) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@386) $generated@@181)) (= (type $generated@@387) $generated@@72)) ($generated@@150 $generated@@384 $generated@@385)) ($generated@@340 $generated@@386 $generated@@387 $generated@@384)) ($generated@@340 $generated@@386 $generated@@387 $generated@@385))
 :pattern ( ($generated@@150 $generated@@384 $generated@@385) ($generated@@340 $generated@@386 $generated@@387 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@388) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@389) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@391) $generated@@72)) ($generated@@150 $generated@@388 $generated@@389)) ($generated@@83 $generated@@390 $generated@@391 $generated@@388)) ($generated@@83 $generated@@390 $generated@@391 $generated@@389))
 :pattern ( ($generated@@150 $generated@@388 $generated@@389) ($generated@@83 $generated@@390 $generated@@391 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 Int) ($generated@@394 Int) ) (! (let (($generated@@395 ($generated@@190 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@188 $generated@@395)) (=> (and (and (<= 0 $generated@@393) (<= 0 $generated@@394)) (< $generated@@394 (- ($generated@@189 $generated@@392) $generated@@393))) (= ($generated@@208 ($generated@@186 $generated@@392 $generated@@393) $generated@@394) ($generated@@208 $generated@@392 (+ $generated@@394 $generated@@393))))))
 :weight 25
 :pattern ( ($generated@@208 ($generated@@186 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@T) ) (! (= (type ($generated@@397 $generated@@398)) ($generated@@85 $generated@@398 $generated@@2))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@88 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@85 $generated@@400 $generated@@2)) (and (= (= ($generated@@396 $generated@@399) 0) (= $generated@@399 ($generated@@397 $generated@@400))) (=> (not (= ($generated@@396 $generated@@399) 0)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (< 0 ($generated ($generated@@90 $generated@@399 $generated@@401))))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ) (! (= (type ($generated@@402 $generated@@403)) $generated@@77)
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@72) (and (= ($generated@@81 ($generated@@142 $generated@@404)) $generated@@61) (= ($generated@@402 ($generated@@142 $generated@@404)) $generated@@68)))
 :pattern ( ($generated@@142 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@72) (and (= ($generated@@81 ($generated@@165 $generated@@405)) $generated@@62) (= ($generated@@402 ($generated@@165 $generated@@405)) $generated@@68)))
 :pattern ( ($generated@@165 $generated@@405))
)))
(assert  (and (and (and (and (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (= ($generated@@1 ($generated@@408 $generated@@411 $generated@@412)) 18)) (forall (($generated@@413 T@T) ($generated@@414 T@T) ) (! (= ($generated@@409 ($generated@@408 $generated@@413 $generated@@414)) $generated@@413)
 :pattern ( ($generated@@408 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@T) ($generated@@416 T@T) ) (! (= ($generated@@410 ($generated@@408 $generated@@415 $generated@@416)) $generated@@416)
 :pattern ( ($generated@@408 $generated@@415 $generated@@416))
))) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@409 (type $generated@@417))))
(= (type ($generated@@406 $generated@@417)) ($generated@@85 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@406 $generated@@417))
))) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= (type ($generated@@407 $generated@@419 $generated@@420)) ($generated@@408 $generated@@419 $generated@@420))
 :pattern ( ($generated@@407 $generated@@419 $generated@@420))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@T) ) (! (let (($generated@@423 (type $generated@@421)))
 (not ($generated@@0 ($generated@@90 ($generated@@406 ($generated@@407 $generated@@423 $generated@@422)) $generated@@421))))
 :pattern ( (let (($generated@@423 (type $generated@@421)))
($generated@@90 ($generated@@406 ($generated@@407 $generated@@423 $generated@@422)) $generated@@421)))
)))
(assert  (and (and (and (and (forall (($generated@@429 T@T) ($generated@@430 T@T) ) (= ($generated@@1 ($generated@@426 $generated@@429 $generated@@430)) 19)) (forall (($generated@@431 T@T) ($generated@@432 T@T) ) (! (= ($generated@@427 ($generated@@426 $generated@@431 $generated@@432)) $generated@@431)
 :pattern ( ($generated@@426 $generated@@431 $generated@@432))
))) (forall (($generated@@433 T@T) ($generated@@434 T@T) ) (! (= ($generated@@428 ($generated@@426 $generated@@433 $generated@@434)) $generated@@434)
 :pattern ( ($generated@@426 $generated@@433 $generated@@434))
))) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@427 (type $generated@@435))))
(= (type ($generated@@424 $generated@@435)) ($generated@@85 $generated@@436 $generated@@4)))
 :pattern ( ($generated@@424 $generated@@435))
))) (forall (($generated@@437 T@T) ($generated@@438 T@T) ) (! (= (type ($generated@@425 $generated@@437 $generated@@438)) ($generated@@426 $generated@@437 $generated@@438))
 :pattern ( ($generated@@425 $generated@@437 $generated@@438))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@T) ) (! (let (($generated@@441 (type $generated@@439)))
 (not ($generated@@0 ($generated@@90 ($generated@@424 ($generated@@425 $generated@@441 $generated@@440)) $generated@@439))))
 :pattern ( (let (($generated@@441 (type $generated@@439)))
($generated@@90 ($generated@@424 ($generated@@425 $generated@@441 $generated@@440)) $generated@@439)))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@88 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@85 $generated@@443 $generated@@2)) (= ($generated@@204 $generated@@442) (forall (($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@443) (and (<= 0 ($generated ($generated@@90 $generated@@442 $generated@@444))) (<= ($generated ($generated@@90 $generated@@442 $generated@@444)) ($generated@@396 $generated@@442))))
 :pattern ( ($generated@@90 $generated@@442 $generated@@444))
)))))
 :pattern ( ($generated@@204 $generated@@442))
)))
(assert (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@181) ($generated@@282 $generated@@448 $generated@@157)) (and (= ($generated@@379 ($generated@@445 $generated@@2 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@445 $generated@@2 $generated@@448) $generated@@157)))
 :pattern ( ($generated@@282 $generated@@448 $generated@@157))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@181) ($generated@@282 $generated@@449 $generated@@279)) (and (= ($generated@@379 ($generated@@445 $generated@@172 $generated@@449)) $generated@@449) ($generated@@145 ($generated@@445 $generated@@172 $generated@@449) $generated@@279)))
 :pattern ( ($generated@@282 $generated@@449 $generated@@279))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@72) (= (type $generated@@451) $generated@@86)) (= ($generated@@145 $generated@@451 ($generated@@142 $generated@@450))  (or (= $generated@@451 $generated@@143) (= ($generated@@144 $generated@@451) ($generated@@142 $generated@@450)))))
 :pattern ( ($generated@@145 $generated@@451 ($generated@@142 $generated@@450)))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 Int) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
 (=> (= (type $generated@@452) ($generated@@188 $generated@@455)) (and (=> (= $generated@@453 ($generated@@189 $generated@@452)) (= ($generated@@208 ($generated@@187 $generated@@452 $generated@@454) $generated@@453) $generated@@454)) (=> (not (= $generated@@453 ($generated@@189 $generated@@452))) (= ($generated@@208 ($generated@@187 $generated@@452 $generated@@454) $generated@@453) ($generated@@208 $generated@@452 $generated@@453))))))
 :pattern ( ($generated@@208 ($generated@@187 $generated@@452 $generated@@454) $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@410 (type $generated@@456))))
(let (($generated@@458 ($generated@@409 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@408 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@407 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@458) ($generated@@0 ($generated@@90 ($generated@@406 $generated@@456) $generated@@459)))
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@406 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@410 (type $generated@@461))))
(= (type ($generated@@460 $generated@@461)) ($generated@@85 $generated@@462 $generated@@4)))
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@410 (type $generated@@463))))
(let (($generated@@465 ($generated@@409 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@408 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@407 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@464) ($generated@@0 ($generated@@90 ($generated@@460 $generated@@463) $generated@@466)))
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@460 $generated@@463))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@428 (type $generated@@467))))
(let (($generated@@469 ($generated@@427 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@426 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@425 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) ($generated@@0 ($generated@@90 ($generated@@424 $generated@@467) $generated@@470)))
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@424 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@428 (type $generated@@472))))
(= (type ($generated@@471 $generated@@472)) ($generated@@85 $generated@@473 $generated@@4)))
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@428 (type $generated@@474))))
(let (($generated@@476 ($generated@@427 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@426 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@425 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@475) ($generated@@0 ($generated@@90 ($generated@@471 $generated@@474) $generated@@477)))
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@471 $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@479) $generated@@86)) (forall (($generated@@480 Int) ) (!  (=> (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@189 ($generated@@290 $generated@@478 $generated@@479)))) (= ($generated@@208 ($generated@@290 $generated@@478 $generated@@479) $generated@@480) ($generated@@92 ($generated@@90 $generated@@478 $generated@@479) ($generated@@291 $generated@@480))))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@478 $generated@@479) ($generated@@291 $generated@@480)))
 :pattern ( ($generated@@208 ($generated@@290 $generated@@478 $generated@@479) $generated@@480))
)))
 :pattern ( ($generated@@290 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) ($generated@@85 $generated@@181 $generated@@2)) (= (type $generated@@482) $generated@@72)) (= ($generated@@145 $generated@@481 ($generated@@203 $generated@@482)) (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@181) (< 0 ($generated ($generated@@90 $generated@@481 $generated@@483)))) ($generated@@282 $generated@@483 $generated@@482))
 :pattern ( ($generated@@90 $generated@@481 $generated@@483))
))))
 :pattern ( ($generated@@145 $generated@@481 ($generated@@203 $generated@@482)))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 Int) ($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 (type $generated@@486)))
 (=> (= (type $generated@@484) ($generated@@188 $generated@@488)) (=> (and (and (<= 0 $generated@@485) (< $generated@@485 $generated@@487)) (<= $generated@@487 ($generated@@189 $generated@@484))) (= ($generated@@186 ($generated@@209 $generated@@484 $generated@@485 $generated@@486) $generated@@487) ($generated@@186 $generated@@484 $generated@@487)))))
 :pattern ( ($generated@@186 ($generated@@209 $generated@@484 $generated@@485 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@86) (= ($generated@@145 ($generated@@370 $generated@@489) $generated@@279) ($generated@@145 $generated@@489 ($generated@@165 $generated@@157))))
 :pattern ( ($generated@@145 ($generated@@370 $generated@@489) $generated@@279))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@85 $generated@@181 $generated@@4)) (= (type $generated@@491) $generated@@72)) (= (type $generated@@492) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@490 ($generated@@315 $generated@@491) $generated@@492) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@181) ($generated@@0 ($generated@@90 $generated@@490 $generated@@493))) ($generated@@340 $generated@@493 $generated@@491 $generated@@492))
 :pattern ( ($generated@@90 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@83 $generated@@490 ($generated@@315 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@85 $generated@@181 $generated@@4)) (= (type $generated@@495) $generated@@72)) (= (type $generated@@496) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@494 ($generated@@320 $generated@@495) $generated@@496) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@181) ($generated@@0 ($generated@@90 $generated@@494 $generated@@497))) ($generated@@340 $generated@@497 $generated@@495 $generated@@496))
 :pattern ( ($generated@@90 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@83 $generated@@494 ($generated@@320 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated ($generated@@90 ($generated@@397 $generated@@499) $generated@@498)) 0))
 :pattern ( (let (($generated@@499 (type $generated@@498)))
($generated@@90 ($generated@@397 $generated@@499) $generated@@498)))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) ($generated@@85 $generated@@181 $generated@@4))
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@410 (type $generated@@503))))
(let (($generated@@505 ($generated@@409 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503)) ($generated@@85 $generated@@505 $generated@@504))))
 :pattern ( ($generated@@501 $generated@@503))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) ($generated@@408 $generated@@181 $generated@@181)) (= (type $generated@@507) $generated@@181)) (= ($generated@@0 ($generated@@90 ($generated@@500 $generated@@506) $generated@@507))  (and ($generated@@0 ($generated@@90 ($generated@@406 $generated@@506) ($generated@@179 ($generated@@445 $generated@@172 $generated@@507)))) (= ($generated@@90 ($generated@@501 $generated@@506) ($generated@@179 ($generated@@445 $generated@@172 $generated@@507))) ($generated@@180 ($generated@@445 $generated@@172 $generated@@507))))))
 :pattern ( ($generated@@90 ($generated@@500 $generated@@506) $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) ($generated@@85 $generated@@181 $generated@@4))
 :pattern ( ($generated@@508 $generated@@510))
)) (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@428 (type $generated@@511))))
(let (($generated@@513 ($generated@@427 (type $generated@@511))))
(= (type ($generated@@509 $generated@@511)) ($generated@@85 $generated@@513 $generated@@512))))
 :pattern ( ($generated@@509 $generated@@511))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) ($generated@@426 $generated@@181 $generated@@181)) (= (type $generated@@515) $generated@@181)) (= ($generated@@0 ($generated@@90 ($generated@@508 $generated@@514) $generated@@515))  (and ($generated@@0 ($generated@@90 ($generated@@424 $generated@@514) ($generated@@179 ($generated@@445 $generated@@172 $generated@@515)))) (= ($generated@@90 ($generated@@509 $generated@@514) ($generated@@179 ($generated@@445 $generated@@172 $generated@@515))) ($generated@@180 ($generated@@445 $generated@@172 $generated@@515))))))
 :pattern ( ($generated@@90 ($generated@@508 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(let (($generated@@519 ($generated@@409 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@408 $generated@@519 $generated@@518)) (= ($generated@@0 ($generated@@90 ($generated@@460 $generated@@516) $generated@@517)) (exists (($generated@@520 T@U) ) (!  (and (= (type $generated@@520) $generated@@519) (and ($generated@@0 ($generated@@90 ($generated@@406 $generated@@516) $generated@@520)) (= $generated@@517 ($generated@@90 ($generated@@501 $generated@@516) $generated@@520))))
 :pattern ( ($generated@@90 ($generated@@406 $generated@@516) $generated@@520))
 :pattern ( ($generated@@90 ($generated@@501 $generated@@516) $generated@@520))
))))))
 :pattern ( ($generated@@90 ($generated@@460 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 ($generated@@427 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@426 $generated@@524 $generated@@523)) (= ($generated@@0 ($generated@@90 ($generated@@471 $generated@@521) $generated@@522)) (exists (($generated@@525 T@U) ) (!  (and (= (type $generated@@525) $generated@@524) (and ($generated@@0 ($generated@@90 ($generated@@424 $generated@@521) $generated@@525)) (= $generated@@522 ($generated@@90 ($generated@@509 $generated@@521) $generated@@525))))
 :pattern ( ($generated@@90 ($generated@@424 $generated@@521) $generated@@525))
 :pattern ( ($generated@@90 ($generated@@509 $generated@@521) $generated@@525))
))))))
 :pattern ( ($generated@@90 ($generated@@471 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (! (= (type ($generated@@526 $generated@@527 $generated@@528)) $generated@@72)
 :pattern ( ($generated@@526 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) ($generated@@408 $generated@@181 $generated@@181)) (= (type $generated@@530) $generated@@72)) (= (type $generated@@531) $generated@@72)) (= (type $generated@@532) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@529 ($generated@@526 $generated@@530 $generated@@531) $generated@@532) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@181) ($generated@@0 ($generated@@90 ($generated@@406 $generated@@529) $generated@@533))) (and ($generated@@340 ($generated@@90 ($generated@@501 $generated@@529) $generated@@533) $generated@@531 $generated@@532) ($generated@@340 $generated@@533 $generated@@530 $generated@@532)))
 :pattern ( ($generated@@90 ($generated@@501 $generated@@529) $generated@@533))
 :pattern ( ($generated@@90 ($generated@@406 $generated@@529) $generated@@533))
))))
 :pattern ( ($generated@@83 $generated@@529 ($generated@@526 $generated@@530 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (! (= (type ($generated@@534 $generated@@535 $generated@@536)) $generated@@72)
 :pattern ( ($generated@@534 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) ($generated@@426 $generated@@181 $generated@@181)) (= (type $generated@@538) $generated@@72)) (= (type $generated@@539) $generated@@72)) (= (type $generated@@540) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@537 ($generated@@534 $generated@@538 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@181) ($generated@@0 ($generated@@90 ($generated@@424 $generated@@537) $generated@@541))) (and ($generated@@340 ($generated@@90 ($generated@@509 $generated@@537) $generated@@541) $generated@@539 $generated@@540) ($generated@@340 $generated@@541 $generated@@538 $generated@@540)))
 :pattern ( ($generated@@90 ($generated@@509 $generated@@537) $generated@@541))
 :pattern ( ($generated@@90 ($generated@@424 $generated@@537) $generated@@541))
))))
 :pattern ( ($generated@@83 $generated@@537 ($generated@@534 $generated@@538 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 Int) ) (! (let (($generated@@544 ($generated@@190 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@188 $generated@@544)) (=> (and (<= 0 $generated@@543) (<= $generated@@543 ($generated@@189 $generated@@542))) (= ($generated@@189 ($generated@@289 $generated@@542 $generated@@543)) $generated@@543))))
 :pattern ( ($generated@@189 ($generated@@289 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@545) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@546) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@547) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@545 $generated@@547))) (and ($generated@@150 $generated@@545 $generated@@546) ($generated@@150 $generated@@546 $generated@@547))) ($generated@@150 $generated@@545 $generated@@547))
 :pattern ( ($generated@@150 $generated@@545 $generated@@546) ($generated@@150 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 Int) ) (!  (=> (and (and (= (type $generated@@548) $generated@@72) (= (type $generated@@549) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@550) $generated@@86)) (=> (and (and (and ($generated@@160 $generated@@549) (and (not (= $generated@@550 $generated@@143)) (= ($generated@@144 $generated@@550) ($generated@@142 $generated@@548)))) (and (<= 0 $generated@@551) (< $generated@@551 ($generated@@141 $generated@@550)))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@549 $generated@@550) $generated@@60))) ($generated@@340 ($generated@@92 ($generated@@90 $generated@@549 $generated@@550) ($generated@@291 $generated@@551)) $generated@@548 $generated@@549)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@549 $generated@@550) ($generated@@291 $generated@@551)) ($generated@@142 $generated@@548))
)))
(assert (forall (($generated@@553 T@T) ) (! (= (type ($generated@@552 $generated@@553)) ($generated@@85 $generated@@553 $generated@@4))
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@428 (type $generated@@554))))
(let (($generated@@556 ($generated@@427 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@426 $generated@@556 $generated@@555)) (= (= $generated@@554 ($generated@@425 $generated@@556 $generated@@555)) (= ($generated@@424 $generated@@554) ($generated@@552 $generated@@556))))))
 :pattern ( ($generated@@424 $generated@@554))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@428 (type $generated@@557))))
(let (($generated@@559 ($generated@@427 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@426 $generated@@559 $generated@@558)) (= (= $generated@@557 ($generated@@425 $generated@@559 $generated@@558)) (= ($generated@@471 $generated@@557) ($generated@@552 $generated@@558))))))
 :pattern ( ($generated@@471 $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@428 (type $generated@@560))))
(let (($generated@@562 ($generated@@427 (type $generated@@560))))
 (=> (= (type $generated@@560) ($generated@@426 $generated@@562 $generated@@561)) (= (= $generated@@560 ($generated@@425 $generated@@562 $generated@@561)) (= ($generated@@508 $generated@@560) ($generated@@552 $generated@@181))))))
 :pattern ( ($generated@@508 $generated@@560))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@410 (type $generated@@563))))
(let (($generated@@565 ($generated@@409 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@408 $generated@@565 $generated@@564)) (or (= $generated@@563 ($generated@@407 $generated@@565 $generated@@564)) (exists (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (and (and (= (type $generated@@566) $generated@@181) (= (type $generated@@567) $generated@@181)) ($generated@@0 ($generated@@90 ($generated@@500 $generated@@563) ($generated@@379 ($generated@@281 $generated@@566 $generated@@567)))))
 :no-pattern (type $generated@@566)
 :no-pattern (type $generated@@567)
 :no-pattern ($generated $generated@@566)
 :no-pattern ($generated@@0 $generated@@566)
 :no-pattern ($generated $generated@@567)
 :no-pattern ($generated@@0 $generated@@567)
))))))
 :pattern ( ($generated@@500 $generated@@563))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@428 (type $generated@@568))))
(let (($generated@@570 ($generated@@427 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@426 $generated@@570 $generated@@569)) (or (= $generated@@568 ($generated@@425 $generated@@570 $generated@@569)) (exists (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (and (and (= (type $generated@@571) $generated@@181) (= (type $generated@@572) $generated@@181)) ($generated@@0 ($generated@@90 ($generated@@508 $generated@@568) ($generated@@379 ($generated@@281 $generated@@571 $generated@@572)))))
 :no-pattern (type $generated@@571)
 :no-pattern (type $generated@@572)
 :no-pattern ($generated $generated@@571)
 :no-pattern ($generated@@0 $generated@@571)
 :no-pattern ($generated $generated@@572)
 :no-pattern ($generated@@0 $generated@@572)
))))))
 :pattern ( ($generated@@508 $generated@@568))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@181) ($generated@@282 $generated@@573 $generated@@46)) (and (= ($generated@@379 ($generated@@445 $generated@@2 $generated@@573)) $generated@@573) ($generated@@145 ($generated@@445 $generated@@2 $generated@@573) $generated@@46)))
 :pattern ( ($generated@@282 $generated@@573 $generated@@46))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@181) ($generated@@282 $generated@@574 $generated@@47)) (and (= ($generated@@379 ($generated@@445 $generated@@3 $generated@@574)) $generated@@574) ($generated@@145 ($generated@@445 $generated@@3 $generated@@574) $generated@@47)))
 :pattern ( ($generated@@282 $generated@@574 $generated@@47))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@181) ($generated@@282 $generated@@575 $generated@@44)) (and (= ($generated@@379 ($generated@@445 $generated@@4 $generated@@575)) $generated@@575) ($generated@@145 ($generated@@445 $generated@@4 $generated@@575) $generated@@44)))
 :pattern ( ($generated@@282 $generated@@575 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@576) 20))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@181) ($generated@@282 $generated@@577 $generated@@45)) (and (= ($generated@@379 ($generated@@445 $generated@@576 $generated@@577)) $generated@@577) ($generated@@145 ($generated@@445 $generated@@576 $generated@@577) $generated@@45)))
 :pattern ( ($generated@@282 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@72) (= ($generated@@282 ($generated@@379 $generated@@578) $generated@@579) ($generated@@145 $generated@@578 $generated@@579)))
 :pattern ( ($generated@@282 ($generated@@379 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ($generated@@582 T@U) ($generated@@583 Int) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (= (type $generated@@580) ($generated@@188 $generated@@584)) (=> (and (<= $generated@@583 $generated@@581) (< $generated@@581 ($generated@@189 $generated@@580))) (= ($generated@@289 ($generated@@209 $generated@@580 $generated@@581 $generated@@582) $generated@@583) ($generated@@289 $generated@@580 $generated@@583)))))
 :pattern ( ($generated@@289 ($generated@@209 $generated@@580 $generated@@581 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@86) (<= 0 ($generated@@141 $generated@@585)))
 :no-pattern (type $generated@@585)
 :no-pattern ($generated $generated@@585)
 :no-pattern ($generated@@0 $generated@@585)
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@88 (type $generated@@586))))
 (=> (= (type $generated@@586) ($generated@@85 $generated@@587 $generated@@2)) (<= 0 ($generated@@396 $generated@@586))))
 :pattern ( ($generated@@396 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@190 (type $generated@@588))))
 (=> (= (type $generated@@588) ($generated@@188 $generated@@589)) (<= 0 ($generated@@189 $generated@@588))))
 :pattern ( ($generated@@189 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@86) (= (type $generated@@591) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@160 $generated@@591)) (= ($generated@@83 ($generated@@370 $generated@@590) $generated@@279 $generated@@591) ($generated@@83 $generated@@590 ($generated@@165 $generated@@157) $generated@@591)))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@590) $generated@@279 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@72)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@72) (= (type $generated@@595) $generated@@72)) (= ($generated@@592 ($generated@@526 $generated@@594 $generated@@595)) $generated@@594))
 :pattern ( ($generated@@526 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@72)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@72) (= (type $generated@@599) $generated@@72)) (= ($generated@@596 ($generated@@526 $generated@@598 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@526 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@72) (= (type $generated@@601) $generated@@72)) (= ($generated@@81 ($generated@@526 $generated@@600 $generated@@601)) $generated@@58))
 :pattern ( ($generated@@526 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@72)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@72) (= (type $generated@@605) $generated@@72)) (= ($generated@@602 ($generated@@534 $generated@@604 $generated@@605)) $generated@@604))
 :pattern ( ($generated@@534 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@72)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@72) (= (type $generated@@609) $generated@@72)) (= ($generated@@606 ($generated@@534 $generated@@608 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@534 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@72) (= (type $generated@@611) $generated@@72)) (= ($generated@@81 ($generated@@534 $generated@@610 $generated@@611)) $generated@@59))
 :pattern ( ($generated@@534 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@181) (= (type $generated@@613) $generated@@181)) (= ($generated@@349 ($generated@@281 $generated@@612 $generated@@613)) $generated@@63))
 :pattern ( ($generated@@281 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@72)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@72) (= (type $generated@@617) $generated@@72)) (= ($generated@@614 ($generated@@171 $generated@@616 $generated@@617)) $generated@@616))
 :pattern ( ($generated@@171 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@72)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@72) (= (type $generated@@621) $generated@@72)) (= ($generated@@618 ($generated@@171 $generated@@620 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@171 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@181) (= (type $generated@@623) $generated@@181)) (= ($generated@@179 ($generated@@281 $generated@@622 $generated@@623)) $generated@@622))
 :pattern ( ($generated@@281 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@181) (= (type $generated@@625) $generated@@181)) (= ($generated@@180 ($generated@@281 $generated@@624 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@281 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@188 $generated@@181)) (= (type $generated@@627) $generated@@72)) (= (type $generated@@628) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@626 ($generated@@331 $generated@@627) $generated@@628) (forall (($generated@@629 Int) ) (!  (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@189 $generated@@626))) ($generated@@340 ($generated@@208 $generated@@626 $generated@@629) $generated@@627 $generated@@628))
 :pattern ( ($generated@@208 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@83 $generated@@626 ($generated@@331 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@630 ($generated@@84 $generated@@631)) $generated@@631)
 :pattern ( ($generated@@84 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@72)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@72) (= ($generated@@632 ($generated@@315 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@315 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@72) (= ($generated@@81 ($generated@@315 $generated@@635)) $generated@@54))
 :pattern ( ($generated@@315 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (= (type ($generated@@636 $generated@@637)) $generated@@72)
 :pattern ( ($generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@72) (= ($generated@@636 ($generated@@320 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@320 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@72) (= ($generated@@81 ($generated@@320 $generated@@639)) $generated@@55))
 :pattern ( ($generated@@320 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (! (= (type ($generated@@640 $generated@@641)) $generated@@72)
 :pattern ( ($generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@72) (= ($generated@@640 ($generated@@203 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@203 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@72) (= ($generated@@81 ($generated@@203 $generated@@643)) $generated@@56))
 :pattern ( ($generated@@203 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ) (! (= (type ($generated@@644 $generated@@645)) $generated@@72)
 :pattern ( ($generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@72) (= ($generated@@644 ($generated@@331 $generated@@646)) $generated@@646))
 :pattern ( ($generated@@331 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@72) (= ($generated@@81 ($generated@@331 $generated@@647)) $generated@@57))
 :pattern ( ($generated@@331 $generated@@647))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@80 ($generated@@291 $generated@@648)) 1)
 :pattern ( ($generated@@291 $generated@@648))
)))
(assert (forall (($generated@@650 Int) ) (! (= ($generated@@649 ($generated@@291 $generated@@650)) $generated@@650)
 :pattern ( ($generated@@291 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@72)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@72) (= ($generated@@651 ($generated@@142 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@142 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ) (! (= (type ($generated@@654 $generated@@655)) $generated@@72)
 :pattern ( ($generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@72) (= ($generated@@654 ($generated@@165 $generated@@656)) $generated@@656))
 :pattern ( ($generated@@165 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@86) (= ($generated@@349 ($generated@@370 $generated@@657)) $generated@@66))
 :pattern ( ($generated@@370 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@86) (= ($generated@@366 ($generated@@370 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@370 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@659)))
(= ($generated@@445 $generated@@660 ($generated@@379 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@379 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@408 $generated@@181 $generated@@181)) (= (type $generated@@662) $generated@@72)) (= (type $generated@@663) $generated@@72)) (= ($generated@@145 $generated@@661 ($generated@@526 $generated@@662 $generated@@663)) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@181) ($generated@@0 ($generated@@90 ($generated@@406 $generated@@661) $generated@@664))) (and ($generated@@282 ($generated@@90 ($generated@@501 $generated@@661) $generated@@664) $generated@@663) ($generated@@282 $generated@@664 $generated@@662)))
 :pattern ( ($generated@@90 ($generated@@501 $generated@@661) $generated@@664))
 :pattern ( ($generated@@90 ($generated@@406 $generated@@661) $generated@@664))
))))
 :pattern ( ($generated@@145 $generated@@661 ($generated@@526 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@426 $generated@@181 $generated@@181)) (= (type $generated@@666) $generated@@72)) (= (type $generated@@667) $generated@@72)) (= ($generated@@145 $generated@@665 ($generated@@534 $generated@@666 $generated@@667)) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@181) ($generated@@0 ($generated@@90 ($generated@@424 $generated@@665) $generated@@668))) (and ($generated@@282 ($generated@@90 ($generated@@509 $generated@@665) $generated@@668) $generated@@667) ($generated@@282 $generated@@668 $generated@@666)))
 :pattern ( ($generated@@90 ($generated@@509 $generated@@665) $generated@@668))
 :pattern ( ($generated@@90 ($generated@@424 $generated@@665) $generated@@668))
))))
 :pattern ( ($generated@@145 $generated@@665 ($generated@@534 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 Int) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@671) $generated@@181)) (= (type $generated@@672) $generated@@86)) (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@141 $generated@@672)))) (= ($generated@@290 ($generated@@91 $generated@@669 $generated@@672 ($generated@@93 ($generated@@90 $generated@@669 $generated@@672) ($generated@@291 $generated@@670) $generated@@671)) $generated@@672) ($generated@@209 ($generated@@290 $generated@@669 $generated@@672) $generated@@670 $generated@@671)))
 :pattern ( ($generated@@290 ($generated@@91 $generated@@669 $generated@@672 ($generated@@93 ($generated@@90 $generated@@669 $generated@@672) ($generated@@291 $generated@@670) $generated@@671)) $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (and (and (and (= (type $generated@@673) $generated@@72) (= (type $generated@@674) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@675) $generated@@86)) (and (and ($generated@@160 $generated@@674) (and (not (= $generated@@675 $generated@@143)) (= ($generated@@144 $generated@@675) ($generated@@142 $generated@@673)))) (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@141 $generated@@675))))) ($generated@@282 ($generated@@92 ($generated@@90 $generated@@674 $generated@@675) ($generated@@291 $generated@@676)) $generated@@673))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@674 $generated@@675) ($generated@@291 $generated@@676)) ($generated@@142 $generated@@673))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@181) (= (type $generated@@680) $generated@@181)) (< ($generated@@677 $generated@@679) ($generated@@678 ($generated@@281 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@281 $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@181) (= (type $generated@@682) $generated@@181)) (< ($generated@@677 $generated@@682) ($generated@@678 ($generated@@281 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@281 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@181) (= (type $generated@@684) $generated@@72)) (= (type $generated@@685) $generated@@72)) ($generated@@282 $generated@@683 ($generated@@526 $generated@@684 $generated@@685))) (and (= ($generated@@379 ($generated@@445 ($generated@@408 $generated@@181 $generated@@181) $generated@@683)) $generated@@683) ($generated@@145 ($generated@@445 ($generated@@408 $generated@@181 $generated@@181) $generated@@683) ($generated@@526 $generated@@684 $generated@@685))))
 :pattern ( ($generated@@282 $generated@@683 ($generated@@526 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@181) (= (type $generated@@687) $generated@@72)) (= (type $generated@@688) $generated@@72)) ($generated@@282 $generated@@686 ($generated@@534 $generated@@687 $generated@@688))) (and (= ($generated@@379 ($generated@@445 ($generated@@426 $generated@@181 $generated@@181) $generated@@686)) $generated@@686) ($generated@@145 ($generated@@445 ($generated@@426 $generated@@181 $generated@@181) $generated@@686) ($generated@@534 $generated@@687 $generated@@688))))
 :pattern ( ($generated@@282 $generated@@686 ($generated@@534 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) $generated@@72) (= (type $generated@@690) $generated@@72)) (= (type $generated@@691) $generated@@181)) ($generated@@282 $generated@@691 ($generated@@171 $generated@@689 $generated@@690))) (and (= ($generated@@379 ($generated@@445 $generated@@172 $generated@@691)) $generated@@691) ($generated@@145 ($generated@@445 $generated@@172 $generated@@691) ($generated@@171 $generated@@689 $generated@@690))))
 :pattern ( ($generated@@282 $generated@@691 ($generated@@171 $generated@@689 $generated@@690)))
)))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 (type $generated@@692)))
 (not ($generated@@0 ($generated@@90 ($generated@@552 $generated@@693) $generated@@692))))
 :pattern ( (let (($generated@@693 (type $generated@@692)))
($generated@@90 ($generated@@552 $generated@@693) $generated@@692)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@694) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@695) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@696) $generated@@86)) (=> (and (and (and ($generated@@160 $generated@@694) ($generated@@160 $generated@@695)) ($generated@@150 $generated@@694 $generated@@695)) (= ($generated@@90 $generated@@694 $generated@@696) ($generated@@90 $generated@@695 $generated@@696))) (= ($generated@@290 $generated@@694 $generated@@696) ($generated@@290 $generated@@695 $generated@@696))))
 :pattern ( ($generated@@290 $generated@@695 $generated@@696) ($generated@@150 $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 Int) ($generated@@699 T@U) ) (! (let (($generated@@700 (type $generated@@699)))
 (=> (= (type $generated@@697) ($generated@@188 $generated@@700)) (=> (and (<= 0 $generated@@698) (< $generated@@698 ($generated@@189 $generated@@697))) (= ($generated@@189 ($generated@@209 $generated@@697 $generated@@698 $generated@@699)) ($generated@@189 $generated@@697)))))
 :pattern ( ($generated@@189 ($generated@@209 $generated@@697 $generated@@698 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@702) $generated@@86)) (= ($generated@@189 ($generated@@290 $generated@@701 $generated@@702)) ($generated@@141 $generated@@702)))
 :pattern ( ($generated@@189 ($generated@@290 $generated@@701 $generated@@702)))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@72) (= (type $generated@@704) $generated@@72)) (and (= ($generated@@81 ($generated@@171 $generated@@703 $generated@@704)) $generated@@64) (= ($generated@@402 ($generated@@171 $generated@@703 $generated@@704)) $generated@@69)))
 :pattern ( ($generated@@171 $generated@@703 $generated@@704))
)))
(assert  (and (forall (($generated@@707 T@U) ) (! (let (($generated@@708 ($generated@@190 (type $generated@@707))))
(= (type ($generated@@705 $generated@@707)) ($generated@@188 $generated@@708)))
 :pattern ( ($generated@@705 $generated@@707))
)) (forall (($generated@@709 T@U) ) (! (let (($generated@@710 ($generated@@190 (type $generated@@709))))
(= (type ($generated@@706 $generated@@709)) $generated@@710))
 :pattern ( ($generated@@706 $generated@@709))
))))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (! (let (($generated@@713 (type $generated@@712)))
 (=> (= (type $generated@@711) ($generated@@188 $generated@@713)) (and (= ($generated@@705 ($generated@@187 $generated@@711 $generated@@712)) $generated@@711) (= ($generated@@706 ($generated@@187 $generated@@711 $generated@@712)) $generated@@712))))
 :pattern ( ($generated@@187 $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@172) (= ($generated@@677 ($generated@@379 $generated@@714)) ($generated@@678 $generated@@714)))
 :pattern ( ($generated@@677 ($generated@@379 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@715) $generated@@181) ($generated@@282 $generated@@715 ($generated@@84 0))) (and (= ($generated@@379 ($generated@@445 $generated@@2 $generated@@715)) $generated@@715) ($generated@@145 ($generated@@445 ($generated@@85 $generated@@181 $generated@@4) $generated@@715) ($generated@@84 0))))
 :pattern ( ($generated@@282 $generated@@715 ($generated@@84 0)))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (= (type $generated@@716) $generated@@181) (= (type $generated@@717) $generated@@72)) ($generated@@282 $generated@@716 ($generated@@315 $generated@@717))) (and (= ($generated@@379 ($generated@@445 ($generated@@85 $generated@@181 $generated@@4) $generated@@716)) $generated@@716) ($generated@@145 ($generated@@445 ($generated@@85 $generated@@181 $generated@@4) $generated@@716) ($generated@@315 $generated@@717))))
 :pattern ( ($generated@@282 $generated@@716 ($generated@@315 $generated@@717)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (= (type $generated@@718) $generated@@181) (= (type $generated@@719) $generated@@72)) ($generated@@282 $generated@@718 ($generated@@320 $generated@@719))) (and (= ($generated@@379 ($generated@@445 ($generated@@85 $generated@@181 $generated@@4) $generated@@718)) $generated@@718) ($generated@@145 ($generated@@445 ($generated@@85 $generated@@181 $generated@@4) $generated@@718) ($generated@@320 $generated@@719))))
 :pattern ( ($generated@@282 $generated@@718 ($generated@@320 $generated@@719)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@720) $generated@@181) (= (type $generated@@721) $generated@@72)) ($generated@@282 $generated@@720 ($generated@@203 $generated@@721))) (and (= ($generated@@379 ($generated@@445 ($generated@@85 $generated@@181 $generated@@2) $generated@@720)) $generated@@720) ($generated@@145 ($generated@@445 ($generated@@85 $generated@@181 $generated@@2) $generated@@720) ($generated@@203 $generated@@721))))
 :pattern ( ($generated@@282 $generated@@720 ($generated@@203 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@181) (= (type $generated@@723) $generated@@72)) ($generated@@282 $generated@@722 ($generated@@331 $generated@@723))) (and (= ($generated@@379 ($generated@@445 ($generated@@188 $generated@@181) $generated@@722)) $generated@@722) ($generated@@145 ($generated@@445 ($generated@@188 $generated@@181) $generated@@722) ($generated@@331 $generated@@723))))
 :pattern ( ($generated@@282 $generated@@722 ($generated@@331 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@72) (= (type $generated@@725) $generated@@181)) ($generated@@282 $generated@@725 ($generated@@142 $generated@@724))) (and (= ($generated@@379 ($generated@@445 $generated@@86 $generated@@725)) $generated@@725) ($generated@@145 ($generated@@445 $generated@@86 $generated@@725) ($generated@@142 $generated@@724))))
 :pattern ( ($generated@@282 $generated@@725 ($generated@@142 $generated@@724)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@72) (= (type $generated@@727) $generated@@181)) ($generated@@282 $generated@@727 ($generated@@165 $generated@@726))) (and (= ($generated@@379 ($generated@@445 $generated@@86 $generated@@727)) $generated@@727) ($generated@@145 ($generated@@445 $generated@@86 $generated@@727) ($generated@@165 $generated@@726))))
 :pattern ( ($generated@@282 $generated@@727 ($generated@@165 $generated@@726)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (! (let (($generated@@732 (type $generated@@731)))
 (=> (and (and (and (= (type $generated@@728) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@729) $generated@@86)) (= (type $generated@@730) ($generated@@74 $generated@@732))) ($generated@@160 ($generated@@91 $generated@@728 $generated@@729 ($generated@@93 ($generated@@90 $generated@@728 $generated@@729) $generated@@730 $generated@@731)))) ($generated@@150 $generated@@728 ($generated@@91 $generated@@728 $generated@@729 ($generated@@93 ($generated@@90 $generated@@728 $generated@@729) $generated@@730 $generated@@731)))))
 :pattern ( ($generated@@91 $generated@@728 $generated@@729 ($generated@@93 ($generated@@90 $generated@@728 $generated@@729) $generated@@730 $generated@@731)))
)))
(assert (= ($generated@@81 $generated@@157) $generated@@65))
(assert (= ($generated@@402 $generated@@157) $generated@@70))
(assert (= ($generated@@81 $generated@@279) $generated@@67))
(assert (= ($generated@@402 $generated@@279) $generated@@71))
(assert (forall (($generated@@733 T@U) ($generated@@734 Int) ($generated@@735 Int) ) (! (let (($generated@@736 ($generated@@190 (type $generated@@733))))
 (=> (= (type $generated@@733) ($generated@@188 $generated@@736)) (=> (and (and (<= 0 $generated@@734) (<= $generated@@734 $generated@@735)) (< $generated@@735 ($generated@@189 $generated@@733))) (= ($generated@@208 ($generated@@186 $generated@@733 $generated@@734) (- $generated@@735 $generated@@734)) ($generated@@208 $generated@@733 $generated@@735)))))
 :weight 25
 :pattern ( ($generated@@208 $generated@@733 $generated@@735) ($generated@@186 $generated@@733 $generated@@734))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (= (type $generated@@737) ($generated@@85 $generated@@181 $generated@@2)) (= (type $generated@@738) $generated@@72)) (= (type $generated@@739) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@737 ($generated@@203 $generated@@738) $generated@@739) (forall (($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@740) $generated@@181) (< 0 ($generated ($generated@@90 $generated@@737 $generated@@740)))) ($generated@@340 $generated@@740 $generated@@738 $generated@@739))
 :pattern ( ($generated@@90 $generated@@737 $generated@@740))
))))
 :pattern ( ($generated@@83 $generated@@737 ($generated@@203 $generated@@738) $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 Int) ($generated@@743 Int) ) (! (let (($generated@@744 ($generated@@190 (type $generated@@741))))
 (=> (= (type $generated@@741) ($generated@@188 $generated@@744)) (=> (and (and (<= 0 $generated@@742) (<= 0 $generated@@743)) (<= (+ $generated@@742 $generated@@743) ($generated@@189 $generated@@741))) (= ($generated@@186 ($generated@@186 $generated@@741 $generated@@742) $generated@@743) ($generated@@186 $generated@@741 (+ $generated@@742 $generated@@743))))))
 :pattern ( ($generated@@186 ($generated@@186 $generated@@741 $generated@@742) $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (and (and (= (type $generated@@745) $generated@@172) (= (type $generated@@746) $generated@@72)) (= (type $generated@@747) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@160 $generated@@747) (and ($generated@@170 $generated@@745) (exists (($generated@@748 T@U) ) (!  (and (= (type $generated@@748) $generated@@72) ($generated@@83 $generated@@745 ($generated@@171 $generated@@746 $generated@@748) $generated@@747))
 :pattern ( ($generated@@83 $generated@@745 ($generated@@171 $generated@@746 $generated@@748) $generated@@747))
))))) ($generated@@340 ($generated@@179 $generated@@745) $generated@@746 $generated@@747))
 :pattern ( ($generated@@340 ($generated@@179 $generated@@745) $generated@@746 $generated@@747))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (and (= (type $generated@@749) $generated@@172) (= (type $generated@@750) $generated@@72)) (= (type $generated@@751) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@160 $generated@@751) (and ($generated@@170 $generated@@749) (exists (($generated@@752 T@U) ) (!  (and (= (type $generated@@752) $generated@@72) ($generated@@83 $generated@@749 ($generated@@171 $generated@@752 $generated@@750) $generated@@751))
 :pattern ( ($generated@@83 $generated@@749 ($generated@@171 $generated@@752 $generated@@750) $generated@@751))
))))) ($generated@@340 ($generated@@180 $generated@@749) $generated@@750 $generated@@751))
 :pattern ( ($generated@@340 ($generated@@180 $generated@@749) $generated@@750 $generated@@751))
)))
(assert (forall (($generated@@753 T@U) ) (!  (=> (= (type $generated@@753) $generated@@2) (= ($generated@@145 $generated@@753 $generated@@157)  (and (<= ($generated@@325 0) ($generated $generated@@753)) (< ($generated $generated@@753) 4294967296))))
 :pattern ( ($generated@@145 $generated@@753 $generated@@157))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (= (type $generated@@754) $generated@@181) (= (type $generated@@755) $generated@@181)) (= ($generated@@281 ($generated@@327 $generated@@754) ($generated@@327 $generated@@755)) ($generated@@327 ($generated@@281 $generated@@754 $generated@@755))))
 :pattern ( ($generated@@281 ($generated@@327 $generated@@754) ($generated@@327 $generated@@755)))
)))
(assert (forall (($generated@@756 Int) ) (! (= ($generated@@379 ($generated@@8 ($generated@@325 $generated@@756))) ($generated@@327 ($generated@@379 ($generated@@8 $generated@@756))))
 :pattern ( ($generated@@379 ($generated@@8 ($generated@@325 $generated@@756))))
)))
(assert (forall (($generated@@757 T@U) ) (!  (=> (= (type $generated@@757) $generated@@86) (= ($generated@@370 ($generated@@327 $generated@@757)) ($generated@@327 ($generated@@370 $generated@@757))))
 :pattern ( ($generated@@370 ($generated@@327 $generated@@757)))
)))
(assert (forall (($generated@@758 T@U) ) (! (= ($generated@@379 ($generated@@327 $generated@@758)) ($generated@@327 ($generated@@379 $generated@@758)))
 :pattern ( ($generated@@379 ($generated@@327 $generated@@758)))
)))
(assert (forall (($generated@@759 T@U) ) (! (let (($generated@@760 ($generated@@190 (type $generated@@759))))
 (=> (and (= (type $generated@@759) ($generated@@188 $generated@@760)) (= ($generated@@189 $generated@@759) 0)) (= $generated@@759 ($generated@@360 $generated@@760))))
 :pattern ( ($generated@@189 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 Int) ) (! (let (($generated@@763 ($generated@@190 (type $generated@@761))))
 (=> (and (= (type $generated@@761) ($generated@@188 $generated@@763)) (= $generated@@762 0)) (= ($generated@@289 $generated@@761 $generated@@762) ($generated@@360 $generated@@763))))
 :pattern ( ($generated@@289 $generated@@761 $generated@@762))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ) (! (let (($generated@@767 (type $generated@@765)))
 (=> (and (and (= (type $generated@@764) ($generated@@85 $generated@@767 $generated@@2)) (= (type $generated@@766) $generated@@2)) (<= 0 ($generated $generated@@766))) (= ($generated@@396 ($generated@@91 $generated@@764 $generated@@765 $generated@@766)) (+ (- ($generated@@396 $generated@@764) ($generated ($generated@@90 $generated@@764 $generated@@765))) ($generated $generated@@766)))))
 :pattern ( ($generated@@396 ($generated@@91 $generated@@764 $generated@@765 $generated@@766)))
)))
(assert (forall (($generated@@768 T@U) ($generated@@769 T@U) ) (!  (=> (and (and (= (type $generated@@768) $generated@@172) (= (type $generated@@769) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@160 $generated@@769) (and ($generated@@278 $generated@@768) ($generated@@83 $generated@@768 $generated@@279 $generated@@769)))) ($generated@@83 ($generated@@366 $generated@@768) ($generated@@165 $generated@@157) $generated@@769))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@768) ($generated@@165 $generated@@157) $generated@@769))
)))
(assert (forall (($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (= (type $generated@@770) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@771) $generated@@2)) ($generated@@83 $generated@@771 $generated@@46 $generated@@770))
 :pattern ( ($generated@@83 $generated@@771 $generated@@46 $generated@@770))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (= (type $generated@@772) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@773) $generated@@3)) ($generated@@83 $generated@@773 $generated@@47 $generated@@772))
 :pattern ( ($generated@@83 $generated@@773 $generated@@47 $generated@@772))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (= (type $generated@@774) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@775) $generated@@4)) ($generated@@83 $generated@@775 $generated@@44 $generated@@774))
 :pattern ( ($generated@@83 $generated@@775 $generated@@44 $generated@@774))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ) (!  (=> (and (= (type $generated@@776) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@777) $generated@@576)) ($generated@@83 $generated@@777 $generated@@45 $generated@@776))
 :pattern ( ($generated@@83 $generated@@777 $generated@@45 $generated@@776))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (= (type $generated@@778) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@779) $generated@@181)) ($generated@@83 $generated@@779 $generated@@48 $generated@@778))
 :pattern ( ($generated@@83 $generated@@779 $generated@@48 $generated@@778))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 Int) ($generated@@782 T@U) ($generated@@783 Int) ) (! (let (($generated@@784 (type $generated@@782)))
 (=> (= (type $generated@@780) ($generated@@188 $generated@@784)) (=> (and (and (<= 0 $generated@@781) (< $generated@@781 $generated@@783)) (<= $generated@@783 ($generated@@189 $generated@@780))) (= ($generated@@289 ($generated@@209 $generated@@780 $generated@@781 $generated@@782) $generated@@783) ($generated@@209 ($generated@@289 $generated@@780 $generated@@783) $generated@@781 $generated@@782)))))
 :pattern ( ($generated@@289 ($generated@@209 $generated@@780 $generated@@781 $generated@@782) $generated@@783))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ) (!  (=> (and (= (type $generated@@785) ($generated@@188 $generated@@181)) (= (type $generated@@786) $generated@@72)) (= ($generated@@145 $generated@@785 ($generated@@331 $generated@@786)) (forall (($generated@@787 Int) ) (!  (=> (and (<= 0 $generated@@787) (< $generated@@787 ($generated@@189 $generated@@785))) ($generated@@282 ($generated@@208 $generated@@785 $generated@@787) $generated@@786))
 :pattern ( ($generated@@208 $generated@@785 $generated@@787))
))))
 :pattern ( ($generated@@145 $generated@@785 ($generated@@331 $generated@@786)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 Int) ) (!  (=> (= (type $generated@@788) ($generated@@188 $generated@@181)) (=> (and (<= 0 $generated@@789) (< $generated@@789 ($generated@@189 $generated@@788))) (< ($generated@@678 ($generated@@445 $generated@@172 ($generated@@208 $generated@@788 $generated@@789))) ($generated@@353 $generated@@788))))
 :pattern ( ($generated@@678 ($generated@@445 $generated@@172 ($generated@@208 $generated@@788 $generated@@789))))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ($generated@@792 T@U) ) (!  (=> (and (and (and (= (type $generated@@790) ($generated@@408 $generated@@181 $generated@@181)) (= (type $generated@@791) $generated@@72)) (= (type $generated@@792) $generated@@72)) ($generated@@145 $generated@@790 ($generated@@526 $generated@@791 $generated@@792))) (and (and ($generated@@145 ($generated@@406 $generated@@790) ($generated@@315 $generated@@791)) ($generated@@145 ($generated@@460 $generated@@790) ($generated@@315 $generated@@792))) ($generated@@145 ($generated@@500 $generated@@790) ($generated@@315 ($generated@@171 $generated@@791 $generated@@792)))))
 :pattern ( ($generated@@145 $generated@@790 ($generated@@526 $generated@@791 $generated@@792)))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (and (and (= (type $generated@@793) ($generated@@426 $generated@@181 $generated@@181)) (= (type $generated@@794) $generated@@72)) (= (type $generated@@795) $generated@@72)) ($generated@@145 $generated@@793 ($generated@@534 $generated@@794 $generated@@795))) (and (and ($generated@@145 ($generated@@424 $generated@@793) ($generated@@320 $generated@@794)) ($generated@@145 ($generated@@471 $generated@@793) ($generated@@320 $generated@@795))) ($generated@@145 ($generated@@508 $generated@@793) ($generated@@320 ($generated@@171 $generated@@794 $generated@@795)))))
 :pattern ( ($generated@@145 $generated@@793 ($generated@@534 $generated@@794 $generated@@795)))
)))
(assert (forall (($generated@@796 T@U) ) (!  (=> (= (type $generated@@796) $generated@@2) ($generated@@145 $generated@@796 $generated@@46))
 :pattern ( ($generated@@145 $generated@@796 $generated@@46))
)))
(assert (forall (($generated@@797 T@U) ) (!  (=> (= (type $generated@@797) $generated@@3) ($generated@@145 $generated@@797 $generated@@47))
 :pattern ( ($generated@@145 $generated@@797 $generated@@47))
)))
(assert (forall (($generated@@798 T@U) ) (!  (=> (= (type $generated@@798) $generated@@4) ($generated@@145 $generated@@798 $generated@@44))
 :pattern ( ($generated@@145 $generated@@798 $generated@@44))
)))
(assert (forall (($generated@@799 T@U) ) (!  (=> (= (type $generated@@799) $generated@@576) ($generated@@145 $generated@@799 $generated@@45))
 :pattern ( ($generated@@145 $generated@@799 $generated@@45))
)))
(assert (forall (($generated@@800 T@U) ) (!  (=> (= (type $generated@@800) $generated@@181) ($generated@@145 $generated@@800 $generated@@48))
 :pattern ( ($generated@@145 $generated@@800 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@801 () Int)
(declare-fun $generated@@802 () Int)
(declare-fun $generated@@803 () T@U)
(declare-fun $generated@@804 () T@U)
(declare-fun $generated@@805 () T@U)
(declare-fun $generated@@806 () T@U)
(declare-fun $generated@@807 () Int)
(declare-fun $generated@@808 () Int)
(declare-fun $generated@@809 () Int)
(declare-fun $generated@@810 () Int)
(declare-fun $generated@@811 () Int)
(declare-fun $generated@@812 () T@U)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 (T@U) Bool)
(declare-fun $generated@@815 () Int)
(declare-fun $generated@@816 () Int)
(declare-fun $generated@@817 () Int)
(declare-fun $generated@@818 () Int)
(declare-fun $generated@@819 () Int)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 () Int)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () T@U)
(declare-fun $generated@@824 () T@U)
(declare-fun $generated@@825 () T@U)
(declare-fun $generated@@826 () Int)
(declare-fun $generated@@827 () Int)
(declare-fun $generated@@828 () T@U)
(declare-fun $generated@@829 () Int)
(declare-fun $generated@@830 () Int)
(declare-fun $generated@@831 () T@U)
(declare-fun $generated@@832 () T@U)
(declare-fun $generated@@833 () T@U)
(declare-fun $generated@@834 () T@U)
(declare-fun $generated@@835 () T@U)
(declare-fun $generated@@836 () T@U)
(declare-fun $generated@@837 () Int)
(declare-fun $generated@@838 () Int)
(declare-fun $generated@@839 () T@U)
(declare-fun $generated@@840 () T@U)
(declare-fun $generated@@841 () T@U)
(declare-fun $generated@@842 () T@U)
(declare-fun $generated@@843 () T@U)
(declare-fun $generated@@844 () Int)
(declare-fun $generated@@845 () Int)
(declare-fun $generated@@846 () T@U)
(declare-fun $generated@@847 () T@U)
(declare-fun $generated@@848 () T@U)
(declare-fun $generated@@849 () T@U)
(declare-fun $generated@@850 () Int)
(declare-fun $generated@@851 () Int)
(declare-fun $generated@@852 () T@U)
(declare-fun $generated@@853 () Int)
(declare-fun $generated@@854 () Int)
(declare-fun $generated@@855 () T@U)
(declare-fun $generated@@856 () Int)
(declare-fun $generated@@857 () Int)
(declare-fun $generated@@858 () T@U)
(declare-fun $generated@@859 () T@U)
(declare-fun $generated@@860 () T@U)
(declare-fun $generated@@861 () Int)
(declare-fun $generated@@862 () Int)
(declare-fun $generated@@863 () T@U)
(declare-fun $generated@@864 () Bool)
(declare-fun $generated@@865 () Int)
(declare-fun $generated@@866 () Int)
(declare-fun $generated@@867 () Int)
(declare-fun $generated@@868 () Int)
(declare-fun $generated@@869 () T@U)
(declare-fun $generated@@870 () Int)
(declare-fun $generated@@871 () T@U)
(declare-fun $generated@@872 () Int)
(declare-fun $generated@@873 () Int)
(declare-fun $generated@@874 () T@U)
(declare-fun $generated@@875 () T@U)
(declare-fun $generated@@876 () T@U)
(declare-fun $generated@@877 () T@U)
(declare-fun $generated@@878 () T@U)
(declare-fun $generated@@879 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@812) $generated@@72) (= (type $generated@@803) $generated@@86)) (= (type $generated@@813) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@806) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@820) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@822) ($generated@@188 $generated@@181))) (= (type $generated@@823) ($generated@@188 $generated@@181))) (= (type $generated@@824) ($generated@@188 $generated@@181))) (= (type $generated@@825) ($generated@@188 $generated@@181))) (= (type $generated@@804) ($generated@@224 $generated@@86 $generated@@4))) (= (type $generated@@828) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@831) $generated@@72)) (= (type $generated@@832) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@833) $generated@@86)) (= (type $generated@@834) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@835) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@836) $generated@@86)) (= (type $generated@@839) $generated@@72)) (= (type $generated@@840) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@841) $generated@@86)) (= (type $generated@@842) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@843) $generated@@86)) (= (type $generated@@846) $generated@@72)) (= (type $generated@@847) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@848) $generated@@86)) (= (type $generated@@849) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@852) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@855) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@858) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@859) $generated@@172)) (= (type $generated@@860) $generated@@86)) (= (type $generated@@863) $generated@@72)) (= (type $generated@@805) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@869) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@871) $generated@@86)) (= (type $generated@@874) ($generated@@188 $generated@@181))) (= (type $generated@@875) $generated@@86)) (= (type $generated@@876) $generated@@86)) (= (type $generated@@877) $generated@@86)) (= (type $generated@@878) $generated@@172)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 58) (let (($generated@@880  (=> (and (< $generated@@801 23) (= $generated@@802 (- 23 $generated@@801))) (and (=> (= (ControlFlow 0 44) (- 0 50)) (not (= $generated@@803 $generated@@143))) (=> (not (= $generated@@803 $generated@@143)) (and (=> (= (ControlFlow 0 44) (- 0 49)) (and (<= 0 $generated@@801) (< $generated@@801 ($generated@@141 $generated@@803)))) (=> (and (<= 0 $generated@@801) (< $generated@@801 ($generated@@141 $generated@@803))) (and (=> (= (ControlFlow 0 44) (- 0 48)) ($generated@@0 ($generated@@222 $generated@@804 $generated@@803 ($generated@@291 $generated@@801)))) (=> ($generated@@0 ($generated@@222 $generated@@804 $generated@@803 ($generated@@291 $generated@@801))) (=> (= $generated@@805 ($generated@@91 $generated@@806 $generated@@803 ($generated@@93 ($generated@@90 $generated@@806 $generated@@803) ($generated@@291 $generated@@801) ($generated@@379 ($generated@@8 $generated@@801))))) (=> (and ($generated@@160 $generated@@805) (= $generated@@807 ($generated@@325 1))) (and (=> (= (ControlFlow 0 44) (- 0 47)) (and (<= ($generated@@325 0) $generated@@807) (< $generated@@807 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@807) (< $generated@@807 4294967296)) (=> (= $generated@@808 (+ $generated@@801 1)) (and (=> (= (ControlFlow 0 44) (- 0 46)) (and (<= ($generated@@325 0) $generated@@808) (< $generated@@808 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@808) (< $generated@@808 4294967296)) (=> (= $generated@@809 (+ $generated@@801 1)) (and (=> (= (ControlFlow 0 44) (- 0 45)) (or (<= 0 $generated@@802) (= (- 23 $generated@@809) $generated@@802))) (=> (or (<= 0 $generated@@802) (= (- 23 $generated@@809) $generated@@802)) (=> (= (ControlFlow 0 44) (- 0 43)) (< (- 23 $generated@@809) $generated@@802)))))))))))))))))))))
(let (($generated@@881  (=> (and (<= 23 $generated@@801) (= $generated@@810 ($generated@@325 23))) (and (=> (= (ControlFlow 0 5) (- 0 42)) (and (<= ($generated@@325 0) $generated@@810) (< $generated@@810 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@810) (< $generated@@810 4294967296)) (=> (and (= $generated@@811 ($generated@@325 23)) (= $generated@@812 $generated@@157)) (and (=> (= (ControlFlow 0 5) (- 0 41)) (=> (not (= $generated@@803 $generated@@143)) (= $generated@@811 ($generated@@141 $generated@@803)))) (=> (=> (not (= $generated@@803 $generated@@143)) (= $generated@@811 ($generated@@141 $generated@@803))) (=> (and (and (and ($generated@@160 $generated@@813) ($generated@@814 $generated@@813)) (forall (($generated@@882 T@U) ) (!  (=> (= (type $generated@@882) $generated@@86) (=> (and (not (= $generated@@882 $generated@@143)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@806 $generated@@882) $generated@@60))) (= ($generated@@90 $generated@@813 $generated@@882) ($generated@@90 $generated@@806 $generated@@882))))
 :pattern ( ($generated@@90 $generated@@813 $generated@@882))
))) (and ($generated@@150 $generated@@806 $generated@@813) (= $generated@@815 ($generated@@325 23)))) (and (=> (= (ControlFlow 0 5) (- 0 40)) (and (<= ($generated@@325 0) $generated@@815) (< $generated@@815 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@815) (< $generated@@815 4294967296)) (=> (and (= $generated@@816 ($generated@@325 23)) (= $generated@@817 ($generated@@325 17))) (and (=> (= (ControlFlow 0 5) (- 0 39)) (and (<= ($generated@@325 0) $generated@@817) (< $generated@@817 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@817) (< $generated@@817 4294967296)) (=> (= $generated@@818 ($generated@@325 17)) (=> (and (<= ($generated@@325 0) $generated@@819) (< $generated@@819 4294967296)) (and (=> (= (ControlFlow 0 5) (- 0 38)) (= ($generated@@141 $generated@@803) $generated@@816)) (=> (= ($generated@@141 $generated@@803) $generated@@816) (=> (and ($generated@@160 $generated@@820) ($generated@@814 $generated@@820)) (=> (and (and (and (<= ($generated@@325 0) $generated@@821) (< $generated@@821 4294967296)) (<= ($generated@@325 0) $generated@@821)) (and (and (<= $generated@@821 $generated@@816) (or (= $generated@@821 $generated@@816) (= ($generated ($generated@@445 $generated@@2 ($generated@@92 ($generated@@90 $generated@@820 $generated@@803) ($generated@@291 $generated@@821)))) $generated@@818))) (and (forall (($generated@@883 T@U) ) (!  (=> (= (type $generated@@883) $generated@@86) (=> (and (not (= $generated@@883 $generated@@143)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@813 $generated@@883) $generated@@60))) (= ($generated@@90 $generated@@820 $generated@@883) ($generated@@90 $generated@@813 $generated@@883))))
 :pattern ( ($generated@@90 $generated@@820 $generated@@883))
)) ($generated@@150 $generated@@813 $generated@@820)))) (and (=> (= (ControlFlow 0 5) (- 0 37)) (not (= $generated@@803 $generated@@143))) (=> (not (= $generated@@803 $generated@@143)) (=> (= $generated@@822 ($generated@@290 $generated@@820 $generated@@803)) (and (=> (= (ControlFlow 0 5) (- 0 36)) (not (= $generated@@803 $generated@@143))) (=> (not (= $generated@@803 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 35)) (and (<= 0 ($generated@@325 2)) (<= ($generated@@325 2) ($generated@@141 $generated@@803)))) (=> (and (<= 0 ($generated@@325 2)) (<= ($generated@@325 2) ($generated@@141 $generated@@803))) (and (=> (= (ControlFlow 0 5) (- 0 34)) (and (<= ($generated@@325 2) ($generated@@325 16)) (<= ($generated@@325 16) ($generated@@141 $generated@@803)))) (=> (and (<= ($generated@@325 2) ($generated@@325 16)) (<= ($generated@@325 16) ($generated@@141 $generated@@803))) (=> (= $generated@@823 ($generated@@186 ($generated@@289 ($generated@@290 $generated@@820 $generated@@803) ($generated@@325 16)) ($generated@@325 2))) (and (=> (= (ControlFlow 0 5) (- 0 33)) (not (= $generated@@803 $generated@@143))) (=> (not (= $generated@@803 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 32)) (and (<= 0 ($generated@@325 20)) (<= ($generated@@325 20) ($generated@@141 $generated@@803)))) (=> (and (<= 0 ($generated@@325 20)) (<= ($generated@@325 20) ($generated@@141 $generated@@803))) (=> (= $generated@@824 ($generated@@186 ($generated@@290 $generated@@820 $generated@@803) ($generated@@325 20))) (and (=> (= (ControlFlow 0 5) (- 0 31)) (not (= $generated@@803 $generated@@143))) (=> (not (= $generated@@803 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 30)) (and (<= 0 ($generated@@325 8)) (<= ($generated@@325 8) ($generated@@141 $generated@@803)))) (=> (and (<= 0 ($generated@@325 8)) (<= ($generated@@325 8) ($generated@@141 $generated@@803))) (=> (= $generated@@825 ($generated@@289 ($generated@@290 $generated@@820 $generated@@803) ($generated@@325 8))) (and (=> (= (ControlFlow 0 5) (- 0 29)) (not (= $generated@@803 $generated@@143))) (=> (not (= $generated@@803 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 28)) (and (<= 0 ($generated@@325 0)) (< ($generated@@325 0) ($generated@@141 $generated@@803)))) (=> (and (<= 0 ($generated@@325 0)) (< ($generated@@325 0) ($generated@@141 $generated@@803))) (and (=> (= (ControlFlow 0 5) (- 0 27)) ($generated@@0 ($generated@@222 $generated@@804 $generated@@803 ($generated@@291 ($generated@@325 0))))) (=> ($generated@@0 ($generated@@222 $generated@@804 $generated@@803 ($generated@@291 ($generated@@325 0)))) (=> (= $generated@@826 ($generated@@325 42)) (and (=> (= (ControlFlow 0 5) (- 0 26)) (and (<= ($generated@@325 0) $generated@@826) (< $generated@@826 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@826) (< $generated@@826 4294967296)) (=> (and (and (= $generated@@827 ($generated@@325 42)) (= $generated@@828 ($generated@@91 $generated@@820 $generated@@803 ($generated@@93 ($generated@@90 $generated@@820 $generated@@803) ($generated@@291 ($generated@@325 0)) ($generated@@379 ($generated@@8 $generated@@827)))))) (and ($generated@@160 $generated@@828) (= $generated@@829 ($generated@@325 0)))) (and (=> (= (ControlFlow 0 5) (- 0 25)) (and (<= ($generated@@325 0) $generated@@829) (< $generated@@829 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@829) (< $generated@@829 4294967296)) (=> (and (= $generated@@830 ($generated@@325 0)) (= $generated@@831 $generated@@157)) (and (=> (= (ControlFlow 0 5) (- 0 24)) (=> (not (= $generated@@143 $generated@@143)) (= $generated@@830 ($generated@@141 $generated@@143)))) (=> (=> (not (= $generated@@143 $generated@@143)) (= $generated@@830 ($generated@@141 $generated@@143))) (=> (and ($generated@@160 $generated@@832) ($generated@@814 $generated@@832)) (=> (and (and (forall (($generated@@884 T@U) ) (!  (=> (= (type $generated@@884) $generated@@86) (=> (and (not (= $generated@@884 $generated@@143)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@828 $generated@@884) $generated@@60))) (= ($generated@@90 $generated@@832 $generated@@884) ($generated@@90 $generated@@828 $generated@@884))))
 :pattern ( ($generated@@90 $generated@@832 $generated@@884))
)) ($generated@@150 $generated@@828 $generated@@832)) (and ($generated@@145 $generated@@833 ($generated@@142 $generated@@157)) ($generated@@83 $generated@@833 ($generated@@142 $generated@@157) $generated@@834))) (=> (and (and (and ($generated@@160 $generated@@835) ($generated@@814 $generated@@835)) (and ($generated@@145 $generated@@836 ($generated@@142 $generated@@157)) ($generated@@83 $generated@@836 ($generated@@142 $generated@@157) $generated@@835))) (and (and (= $generated@@836 $generated@@143) (forall (($generated@@885 T@U) ) (!  (=> (= (type $generated@@885) $generated@@86) (=> (and (not (= $generated@@885 $generated@@143)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@832 $generated@@885) $generated@@60))) (= ($generated@@90 $generated@@835 $generated@@885) ($generated@@90 $generated@@832 $generated@@885))))
 :pattern ( ($generated@@90 $generated@@835 $generated@@885))
))) (and ($generated@@150 $generated@@832 $generated@@835) (= $generated@@837 ($generated@@325 5))))) (and (=> (= (ControlFlow 0 5) (- 0 23)) (and (<= ($generated@@325 0) $generated@@837) (< $generated@@837 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@837) (< $generated@@837 4294967296)) (=> (and (= $generated@@838 ($generated@@325 5)) (= $generated@@839 $generated@@157)) (and (=> (= (ControlFlow 0 5) (- 0 22)) (=> (not (= $generated@@836 $generated@@143)) (= $generated@@838 ($generated@@141 $generated@@836)))) (=> (=> (not (= $generated@@836 $generated@@143)) (= $generated@@838 ($generated@@141 $generated@@836))) (=> (and (and (and (and ($generated@@160 $generated@@840) ($generated@@814 $generated@@840)) (and (forall (($generated@@886 T@U) ) (!  (=> (= (type $generated@@886) $generated@@86) (=> (and (not (= $generated@@886 $generated@@143)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@835 $generated@@886) $generated@@60))) (= ($generated@@90 $generated@@840 $generated@@886) ($generated@@90 $generated@@835 $generated@@886))))
 :pattern ( ($generated@@90 $generated@@840 $generated@@886))
)) ($generated@@150 $generated@@835 $generated@@840))) (and (and ($generated@@145 $generated@@841 ($generated@@142 $generated@@157)) ($generated@@83 $generated@@841 ($generated@@142 $generated@@157) $generated@@834)) (and ($generated@@160 $generated@@842) ($generated@@814 $generated@@842)))) (and (and (and ($generated@@145 $generated@@843 ($generated@@142 $generated@@157)) ($generated@@83 $generated@@843 ($generated@@142 $generated@@157) $generated@@842)) (not (= $generated@@843 $generated@@143))) (and (and (= ($generated@@141 $generated@@843) ($generated@@325 5)) (forall (($generated@@887 T@U) ) (!  (=> (= (type $generated@@887) $generated@@86) (=> (and (not (= $generated@@887 $generated@@143)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@840 $generated@@887) $generated@@60))) (= ($generated@@90 $generated@@842 $generated@@887) ($generated@@90 $generated@@840 $generated@@887))))
 :pattern ( ($generated@@90 $generated@@842 $generated@@887))
))) (and ($generated@@150 $generated@@840 $generated@@842) (= $generated@@844 ($generated@@325 5)))))) (and (=> (= (ControlFlow 0 5) (- 0 21)) (and (<= ($generated@@325 0) $generated@@844) (< $generated@@844 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@844) (< $generated@@844 4294967296)) (=> (and (= $generated@@845 ($generated@@325 5)) (= $generated@@846 $generated@@157)) (and (=> (= (ControlFlow 0 5) (- 0 20)) (=> (not (= $generated@@843 $generated@@143)) (= $generated@@845 ($generated@@141 $generated@@843)))) (=> (=> (not (= $generated@@843 $generated@@143)) (= $generated@@845 ($generated@@141 $generated@@843))) (=> (and (and ($generated@@160 $generated@@847) ($generated@@814 $generated@@847)) (and (forall (($generated@@888 T@U) ) (!  (=> (= (type $generated@@888) $generated@@86) (=> (and (not (= $generated@@888 $generated@@143)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@842 $generated@@888) $generated@@60))) (= ($generated@@90 $generated@@847 $generated@@888) ($generated@@90 $generated@@842 $generated@@888))))
 :pattern ( ($generated@@90 $generated@@847 $generated@@888))
)) ($generated@@150 $generated@@842 $generated@@847))) (and (=> (= (ControlFlow 0 5) (- 0 19)) (<= 0 ($generated@@325 3))) (=> (<= 0 ($generated@@325 3)) (=> (and (and (and (not (= $generated@@848 $generated@@143)) (= ($generated@@144 $generated@@848) ($generated@@142 $generated@@157))) (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@847 $generated@@848) $generated@@60)))) (and (and (= ($generated@@141 $generated@@848) ($generated@@325 3)) (= $generated@@849 ($generated@@91 $generated@@847 $generated@@848 ($generated@@93 ($generated@@90 $generated@@847 $generated@@848) $generated@@60 ($generated@@11 true))))) (and ($generated@@160 $generated@@849) ($generated@@814 $generated@@849)))) (and (=> (= (ControlFlow 0 5) (- 0 18)) (not (= $generated@@848 $generated@@143))) (=> (not (= $generated@@848 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 17)) (and (<= 0 ($generated@@325 0)) (< ($generated@@325 0) ($generated@@141 $generated@@848)))) (=> (and (<= 0 ($generated@@325 0)) (< ($generated@@325 0) ($generated@@141 $generated@@848))) (and (=> (= (ControlFlow 0 5) (- 0 16)) ($generated@@0 ($generated@@222 $generated@@804 $generated@@848 ($generated@@291 ($generated@@325 0))))) (=> ($generated@@0 ($generated@@222 $generated@@804 $generated@@848 ($generated@@291 ($generated@@325 0)))) (=> (= $generated@@850 ($generated@@325 1)) (and (=> (= (ControlFlow 0 5) (- 0 15)) (and (<= ($generated@@325 0) $generated@@850) (< $generated@@850 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@850) (< $generated@@850 4294967296)) (=> (= $generated@@851 ($generated@@325 1)) (=> (and (= $generated@@852 ($generated@@91 $generated@@849 $generated@@848 ($generated@@93 ($generated@@90 $generated@@849 $generated@@848) ($generated@@291 ($generated@@325 0)) ($generated@@379 ($generated@@8 $generated@@851))))) ($generated@@160 $generated@@852)) (and (=> (= (ControlFlow 0 5) (- 0 14)) (not (= $generated@@848 $generated@@143))) (=> (not (= $generated@@848 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 13)) (and (<= 0 ($generated@@325 1)) (< ($generated@@325 1) ($generated@@141 $generated@@848)))) (=> (and (<= 0 ($generated@@325 1)) (< ($generated@@325 1) ($generated@@141 $generated@@848))) (and (=> (= (ControlFlow 0 5) (- 0 12)) ($generated@@0 ($generated@@222 $generated@@804 $generated@@848 ($generated@@291 ($generated@@325 1))))) (=> ($generated@@0 ($generated@@222 $generated@@804 $generated@@848 ($generated@@291 ($generated@@325 1)))) (=> (= $generated@@853 ($generated@@325 3)) (and (=> (= (ControlFlow 0 5) (- 0 11)) (and (<= ($generated@@325 0) $generated@@853) (< $generated@@853 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@853) (< $generated@@853 4294967296)) (=> (= $generated@@854 ($generated@@325 3)) (=> (and (= $generated@@855 ($generated@@91 $generated@@852 $generated@@848 ($generated@@93 ($generated@@90 $generated@@852 $generated@@848) ($generated@@291 ($generated@@325 1)) ($generated@@379 ($generated@@8 $generated@@854))))) ($generated@@160 $generated@@855)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (not (= $generated@@848 $generated@@143))) (=> (not (= $generated@@848 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 9)) (and (<= 0 ($generated@@325 2)) (< ($generated@@325 2) ($generated@@141 $generated@@848)))) (=> (and (<= 0 ($generated@@325 2)) (< ($generated@@325 2) ($generated@@141 $generated@@848))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@0 ($generated@@222 $generated@@804 $generated@@848 ($generated@@291 ($generated@@325 2))))) (=> ($generated@@0 ($generated@@222 $generated@@804 $generated@@848 ($generated@@291 ($generated@@325 2)))) (=> (= $generated@@856 ($generated@@325 9)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= ($generated@@325 0) $generated@@856) (< $generated@@856 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@856) (< $generated@@856 4294967296)) (=> (and (and (and (= $generated@@857 ($generated@@325 9)) (= $generated@@858 ($generated@@91 $generated@@855 $generated@@848 ($generated@@93 ($generated@@90 $generated@@855 $generated@@848) ($generated@@291 ($generated@@325 2)) ($generated@@379 ($generated@@8 $generated@@857)))))) (and ($generated@@160 $generated@@858) (= $generated@@859 ($generated@@370 $generated@@848)))) (and (and ($generated@@278 $generated@@859) ($generated@@278 $generated@@859)) (and (= $generated@@860 ($generated@@366 $generated@@859)) (= $generated@@861 ($generated@@325 3))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= ($generated@@325 0) $generated@@861) (< $generated@@861 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@861) (< $generated@@861 4294967296)) (=> (= $generated@@862 ($generated@@325 3)) (=> (and (and (= $generated@@863 $generated@@157) (= (ControlFlow 0 5) (- 0 4))) (not (= $generated@@860 $generated@@143))) (= $generated@@862 ($generated@@141 $generated@@860)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@889  (=> (and $generated@@864 (= $generated@@865 ($generated@@325 23))) (and (=> (= (ControlFlow 0 51) (- 0 52)) (and (<= ($generated@@325 0) $generated@@865) (< $generated@@865 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@865) (< $generated@@865 4294967296)) (and (=> (= (ControlFlow 0 51) 5) $generated@@881) (=> (= (ControlFlow 0 51) 44) $generated@@880)))))))
(let (($generated@@890  (=> (not $generated@@864) (=> (and (= $generated@@866 ($generated@@325 23)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@325 0) $generated@@866) (< $generated@@866 4294967296))))))
(let (($generated@@891  (and (=> (= (ControlFlow 0 53) 3) $generated@@890) (=> (= (ControlFlow 0 53) 51) $generated@@889))))
(let (($generated@@892 true))
(let (($generated@@893  (=> (and (and ($generated@@160 $generated@@806) ($generated@@814 $generated@@806)) (and (<= ($generated@@325 0) $generated@@801) (< $generated@@801 4294967296))) (=> (and (and (and (and (and (not false) (and (<= 0 $generated@@801) (< $generated@@801 24))) (= $generated@@867 0)) (= $generated@@868 23)) (forall (($generated@@894 T@U) ) (!  (=> (= (type $generated@@894) $generated@@86) (=> (and (not (= $generated@@894 $generated@@143)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@834 $generated@@894) $generated@@60))) (= ($generated@@90 $generated@@806 $generated@@894) ($generated@@90 $generated@@869 $generated@@894))))
 :pattern ( ($generated@@90 $generated@@806 $generated@@894))
))) (and (and ($generated@@150 $generated@@869 $generated@@806) (forall (($generated@@895 T@U) ($generated@@896 T@U) ) (! (let (($generated@@897 ($generated@@75 (type $generated@@896))))
 (=> (and (and (= (type $generated@@895) $generated@@86) (= (type $generated@@896) ($generated@@74 $generated@@897))) (and (not (= $generated@@895 $generated@@143)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@869 $generated@@895) $generated@@60)))) (or (= ($generated@@92 ($generated@@90 $generated@@806 $generated@@895) $generated@@896) ($generated@@92 ($generated@@90 $generated@@869 $generated@@895) $generated@@896)) ($generated@@0 ($generated@@222 $generated@@804 $generated@@895 $generated@@896)))))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@806 $generated@@895) $generated@@896))
))) (and (<= (- 23 $generated@@801) $generated@@868) (=> (= (- 23 $generated@@801) $generated@@868) true)))) (and (=> (= (ControlFlow 0 54) 1) $generated@@892) (=> (= (ControlFlow 0 54) 53) $generated@@891))))))
(let (($generated@@898  (=> (= $generated@@804 ($generated@@223 $generated@@143 $generated@@834 $generated@@60 false)) (and (=> (= (ControlFlow 0 55) (- 0 57)) (<= 0 ($generated@@325 23))) (=> (<= 0 ($generated@@325 23)) (=> (and (and (and (not (= $generated@@803 $generated@@143)) (= ($generated@@144 $generated@@803) ($generated@@142 $generated@@157))) (and (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@834 $generated@@803) $generated@@60))) (= ($generated@@141 $generated@@803) ($generated@@325 23)))) (and (and (= $generated@@869 ($generated@@91 $generated@@834 $generated@@803 ($generated@@93 ($generated@@90 $generated@@834 $generated@@803) $generated@@60 ($generated@@11 true)))) ($generated@@160 $generated@@869)) (and ($generated@@814 $generated@@869) (= $generated@@867 ($generated@@325 0))))) (and (=> (= (ControlFlow 0 55) (- 0 56)) (and (<= ($generated@@325 0) $generated@@867) (< $generated@@867 4294967296))) (=> (and (<= ($generated@@325 0) $generated@@867) (< $generated@@867 4294967296)) (=> (= $generated@@870 ($generated@@325 0)) (=> (and (= $generated@@868 (- 23 $generated@@870)) (= (ControlFlow 0 55) 54)) $generated@@893))))))))))
(let (($generated@@899  (=> (and ($generated@@160 $generated@@834) ($generated@@814 $generated@@834)) (=> (and (and ($generated@@145 $generated@@871 ($generated@@165 $generated@@157)) ($generated@@83 $generated@@871 ($generated@@165 $generated@@157) $generated@@834)) true) (=> (and (and (and (and (and (<= ($generated@@325 0) $generated@@872) (< $generated@@872 4294967296)) true) (and (and (<= ($generated@@325 0) $generated@@873) (< $generated@@873 4294967296)) true)) (and (and (and ($generated@@145 $generated@@874 ($generated@@331 $generated@@157)) ($generated@@83 $generated@@874 ($generated@@331 $generated@@157) $generated@@834)) true) (and (and ($generated@@145 $generated@@875 ($generated@@142 $generated@@157)) ($generated@@83 $generated@@875 ($generated@@142 $generated@@157) $generated@@834)) true))) (and (and (and (and ($generated@@145 $generated@@876 ($generated@@142 $generated@@157)) ($generated@@83 $generated@@876 ($generated@@142 $generated@@157) $generated@@834)) true) (and (and ($generated@@145 $generated@@877 ($generated@@165 $generated@@157)) ($generated@@83 $generated@@877 ($generated@@165 $generated@@157) $generated@@834)) true)) (and (and (and ($generated@@145 $generated@@878 $generated@@279) ($generated@@83 $generated@@878 $generated@@279 $generated@@834)) true) (and (= 2 $generated@@879) (= (ControlFlow 0 58) 55))))) $generated@@898)))))
$generated@@899))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
