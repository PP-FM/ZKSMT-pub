(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@266 (Int) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 () T@T)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U T@U) Bool)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U Int) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) Bool)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@486 (T@T) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@587 (T@U) Int)
(declare-fun $generated@@604 (T@T) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@633 (T@U T@U) Bool)
(declare-fun $generated@@682 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@81 (type $generated@@221))))
(= (type ($generated@@220 $generated@@221 $generated@@222)) ($generated@@78 $generated@@223 $generated@@4)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@81 (type $generated@@224))))
 (=> (and (= (type $generated@@224) ($generated@@78 $generated@@226 $generated@@4)) (= (type $generated@@225) ($generated@@78 $generated@@226 $generated@@4))) (= ($generated@@220 ($generated@@220 $generated@@224 $generated@@225) $generated@@225) ($generated@@220 $generated@@224 $generated@@225))))
 :pattern ( ($generated@@220 ($generated@@220 $generated@@224 $generated@@225) $generated@@225))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@145)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@66) (= (type $generated@@232) $generated@@66)) (= (type $generated@@233) $generated@@154)) (= (type $generated@@234) $generated@@154)) (= ($generated@@141 ($generated@@227 $generated@@233 $generated@@234) ($generated@@144 $generated@@231 $generated@@232))  (and ($generated@@228 $generated@@233 $generated@@231) ($generated@@228 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@141 ($generated@@227 $generated@@233 $generated@@234) ($generated@@144 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@145) (= (type $generated@@236) $generated@@145)) (= ($generated@@151 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@151 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@66)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@240) $generated@@66)) (= ($generated@@141 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@154) ($generated@@0 ($generated@@83 $generated@@239 $generated@@241))) ($generated@@228 $generated@@241 $generated@@240))
 :pattern ( ($generated@@83 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@141 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@66)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@245) $generated@@66)) (= ($generated@@141 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@154) ($generated@@0 ($generated@@83 $generated@@244 $generated@@246))) ($generated@@228 $generated@@246 $generated@@245))
 :pattern ( ($generated@@83 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@141 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@247 $generated@@248) $generated@@248)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert  (and (and (and (forall (($generated@@257 T@T) ) (= ($generated@@1 ($generated@@255 $generated@@257)) 17)) (forall (($generated@@258 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
))) (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@253 $generated@@259 $generated@@260)) ($generated@@255 $generated@@261)))
 :pattern ( ($generated@@253 $generated@@259 $generated@@260))
))) (forall (($generated@@262 T@U) ) (! (= (type ($generated@@254 $generated@@262)) $generated@@66)
 :pattern ( ($generated@@254 $generated@@262))
))))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) ($generated@@255 $generated@@154)) (= (type $generated@@264) $generated@@154)) (= (type $generated@@265) $generated@@66)) (and ($generated@@141 $generated@@263 ($generated@@254 $generated@@265)) ($generated@@228 $generated@@264 $generated@@265))) ($generated@@141 ($generated@@253 $generated@@263 $generated@@264) ($generated@@254 $generated@@265)))
 :pattern ( ($generated@@141 ($generated@@253 $generated@@263 $generated@@264) ($generated@@254 $generated@@265)))
)))
(assert  (and (= ($generated@@1 $generated@@268) 18) (forall (($generated@@269 Int) ) (! (= (type ($generated@@266 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@266 $generated@@269))
))))
(assert (forall (($generated@@270 Int) ) (!  (=> (and (<= 0 $generated@@270) (< $generated@@270 65536)) (= ($generated@@267 ($generated@@266 $generated@@270)) $generated@@270))
 :pattern ( ($generated@@266 $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@66) (= (type $generated@@274) $generated@@66)) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@154)) (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@271 $generated@@277)) (= ($generated@@76 ($generated@@227 $generated@@275 $generated@@276) ($generated@@144 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@76 ($generated@@227 $generated@@275 $generated@@276) ($generated@@144 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@70)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@145) (= ($generated@@143 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@145) ($generated@@143 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@154) (= (type $generated@@283) $generated@@154)) (= $generated@@281 ($generated@@227 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@143 $generated@@281))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@284 $generated@@286)) ($generated@@255 $generated@@286))
 :pattern ( ($generated@@284 $generated@@286))
)))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) 0)
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
 (=> (= (type $generated@@288) ($generated@@255 $generated@@290)) (= ($generated@@285 ($generated@@253 $generated@@288 $generated@@289)) (+ 1 ($generated@@285 $generated@@288)))))
 :pattern ( ($generated@@253 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@268) (and (and (= ($generated@@266 ($generated@@267 $generated@@291)) $generated@@291) (<= 0 ($generated@@267 $generated@@291))) (< ($generated@@267 $generated@@291) 65536)))
 :pattern ( ($generated@@267 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@154)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@66) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@272 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@76 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@272 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@298) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@299) $generated@@154)) (= (type $generated@@300) $generated@@66)) ($generated@@134 $generated@@297 $generated@@298)) ($generated@@272 $generated@@299 $generated@@300 $generated@@297)) ($generated@@272 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@134 $generated@@297 $generated@@298) ($generated@@272 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@302) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@304) $generated@@66)) ($generated@@134 $generated@@301 $generated@@302)) ($generated@@76 $generated@@303 $generated@@304 $generated@@301)) ($generated@@76 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@134 $generated@@301 $generated@@302) ($generated@@76 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@78 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@81 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@78 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@83 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@78 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 20)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@78 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@83 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@83 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@81 (type $generated@@348))))
 (=> (and (= (type $generated@@348) ($generated@@78 $generated@@350 $generated@@4)) (= (type $generated@@349) ($generated@@78 $generated@@350 $generated@@4))) (= ($generated@@347 $generated@@348 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (= ($generated@@0 ($generated@@83 $generated@@348 $generated@@351)) ($generated@@0 ($generated@@83 $generated@@349 $generated@@351))))
 :pattern ( ($generated@@83 $generated@@348 $generated@@351))
 :pattern ( ($generated@@83 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@81 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@78 $generated@@353 $generated@@2)) (= ($generated@@160 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@83 $generated@@352 $generated@@354))) (<= ($generated ($generated@@83 $generated@@352 $generated@@354)) ($generated@@305 $generated@@352))))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@160 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@228 $generated@@358 $generated@@138)) (and (= ($generated@@292 ($generated@@355 $generated@@2 $generated@@358)) $generated@@358) ($generated@@141 ($generated@@355 $generated@@2 $generated@@358) $generated@@138)))
 :pattern ( ($generated@@228 $generated@@358 $generated@@138))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 Int) ) (! (let (($generated@@362 ($generated@@256 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@362))
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (=> (= (type $generated@@363) ($generated@@255 $generated@@366)) (and (=> (= $generated@@364 ($generated@@285 $generated@@363)) (= ($generated@@359 ($generated@@253 $generated@@363 $generated@@365) $generated@@364) $generated@@365)) (=> (not (= $generated@@364 ($generated@@285 $generated@@363))) (= ($generated@@359 ($generated@@253 $generated@@363 $generated@@365) $generated@@364) ($generated@@359 $generated@@363 $generated@@364))))))
 :pattern ( ($generated@@359 ($generated@@253 $generated@@363 $generated@@365) $generated@@364))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@315 (type $generated@@367))))
(let (($generated@@369 ($generated@@314 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@313 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@312 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@311 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@315 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@78 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@315 (type $generated@@374))))
(let (($generated@@376 ($generated@@314 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@313 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@312 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@333 (type $generated@@378))))
(let (($generated@@380 ($generated@@332 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@331 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@330 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@83 ($generated@@329 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@329 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@333 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@78 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@333 (type $generated@@385))))
(let (($generated@@387 ($generated@@332 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@331 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@330 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@83 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@390) $generated@@66)) (= ($generated@@141 $generated@@389 ($generated@@159 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@389 $generated@@391)))) ($generated@@228 $generated@@391 $generated@@390))
 :pattern ( ($generated@@83 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@141 $generated@@389 ($generated@@159 $generated@@390)))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@81 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394 $generated@@395)) ($generated@@78 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@81 (type $generated@@397))))
 (=> (and (and (= (type $generated@@397) ($generated@@78 $generated@@399 $generated@@4)) (= (type $generated@@398) ($generated@@78 $generated@@399 $generated@@4))) ($generated@@392 $generated@@397 $generated@@398)) (and (= ($generated@@393 ($generated@@220 $generated@@397 $generated@@398) $generated@@397) $generated@@398) (= ($generated@@393 ($generated@@220 $generated@@397 $generated@@398) $generated@@398) $generated@@397))))
 :pattern ( ($generated@@220 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
 (=> (and (= (type $generated@@400) ($generated@@78 $generated@@403 $generated@@4)) (= (type $generated@@401) ($generated@@78 $generated@@403 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@393 $generated@@400 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@83 $generated@@400 $generated@@402)) (not ($generated@@0 ($generated@@83 $generated@@401 $generated@@402)))))))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@237 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@154) ($generated@@0 ($generated@@83 $generated@@404 $generated@@407))) ($generated@@272 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@83 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@237 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@242 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@154) ($generated@@0 ($generated@@83 $generated@@408 $generated@@411))) ($generated@@272 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@83 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@242 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@83 ($generated@@306 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@83 ($generated@@306 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@315 (type $generated@@417))))
(let (($generated@@419 ($generated@@314 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@78 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@421) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@420) ($generated@@152 ($generated@@355 $generated@@145 $generated@@421)))) (= ($generated@@83 ($generated@@415 $generated@@420) ($generated@@152 ($generated@@355 $generated@@145 $generated@@421))) ($generated@@153 ($generated@@355 $generated@@145 $generated@@421))))))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@333 (type $generated@@425))))
(let (($generated@@427 ($generated@@332 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@78 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@429) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@83 ($generated@@329 $generated@@428) ($generated@@152 ($generated@@355 $generated@@145 $generated@@429)))) (= ($generated@@83 ($generated@@423 $generated@@428) ($generated@@152 ($generated@@355 $generated@@145 $generated@@429))) ($generated@@153 ($generated@@355 $generated@@145 $generated@@429))))))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@314 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@313 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@83 ($generated@@415 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@430) $generated@@434))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@332 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@331 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@83 ($generated@@382 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@83 ($generated@@329 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@83 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@83 ($generated@@329 $generated@@435) $generated@@439))
 :pattern ( ($generated@@83 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@444) $generated@@66)) (= (type $generated@@445) $generated@@66)) (= (type $generated@@446) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@443) $generated@@447))) (and ($generated@@272 ($generated@@83 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@272 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@76 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@452) $generated@@66)) (= (type $generated@@453) $generated@@66)) (= (type $generated@@454) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@329 $generated@@451) $generated@@455))) (and ($generated@@272 ($generated@@83 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@272 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@83 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@83 ($generated@@329 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@76 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@81 (type $generated@@456))))
 (=> (and (and (= (type $generated@@456) ($generated@@78 $generated@@458 $generated@@4)) (= (type $generated@@457) ($generated@@78 $generated@@458 $generated@@4))) ($generated@@347 $generated@@456 $generated@@457)) (= $generated@@456 $generated@@457)))
 :pattern ( ($generated@@347 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(= (type ($generated@@459 $generated@@460 $generated@@461)) ($generated@@78 $generated@@462 $generated@@4)))
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@464)))
 (=> (and (and (= (type $generated@@463) ($generated@@78 $generated@@466 $generated@@4)) (= (type $generated@@465) $generated@@466)) ($generated@@0 ($generated@@83 $generated@@463 $generated@@465))) ($generated@@0 ($generated@@83 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))))
 :pattern ( ($generated@@459 $generated@@463 $generated@@464) ($generated@@83 $generated@@463 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
 (=> (and (and (= (type $generated@@467) ($generated@@78 $generated@@470 $generated@@4)) (= (type $generated@@468) ($generated@@78 $generated@@470 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@467 $generated@@469))) ($generated@@0 ($generated@@83 ($generated@@220 $generated@@467 $generated@@468) $generated@@469))))
 :pattern ( ($generated@@220 $generated@@467 $generated@@468) ($generated@@83 $generated@@467 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 (type $generated@@473)))
 (=> (and (and (= (type $generated@@471) ($generated@@78 $generated@@474 $generated@@4)) (= (type $generated@@472) ($generated@@78 $generated@@474 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@472 $generated@@473))) ($generated@@0 ($generated@@83 ($generated@@220 $generated@@471 $generated@@472) $generated@@473))))
 :pattern ( ($generated@@220 $generated@@471 $generated@@472) ($generated@@83 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (! (let (($generated@@478 (type $generated@@476)))
 (=> (and (= (type $generated@@475) ($generated@@78 $generated@@478 $generated@@4)) (= (type $generated@@477) $generated@@478)) (= ($generated@@0 ($generated@@83 ($generated@@459 $generated@@475 $generated@@476) $generated@@477))  (or (= $generated@@477 $generated@@476) ($generated@@0 ($generated@@83 $generated@@475 $generated@@477))))))
 :pattern ( ($generated@@83 ($generated@@459 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@479) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@480) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@481) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@479 $generated@@481))) (and ($generated@@134 $generated@@479 $generated@@480) ($generated@@134 $generated@@480 $generated@@481))) ($generated@@134 $generated@@479 $generated@@481))
 :pattern ( ($generated@@134 $generated@@479 $generated@@480) ($generated@@134 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
 (=> (and (and (= (type $generated@@482) ($generated@@78 $generated@@485 $generated@@4)) (= (type $generated@@483) ($generated@@78 $generated@@485 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@483 $generated@@484))) (not ($generated@@0 ($generated@@83 ($generated@@393 $generated@@482 $generated@@483) $generated@@484)))))
 :pattern ( ($generated@@393 $generated@@482 $generated@@483) ($generated@@83 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@487 T@T) ) (! (= (type ($generated@@486 $generated@@487)) ($generated@@78 $generated@@487 $generated@@4))
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@333 (type $generated@@488))))
(let (($generated@@490 ($generated@@332 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@331 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@330 $generated@@490 $generated@@489)) (= ($generated@@329 $generated@@488) ($generated@@486 $generated@@490))))))
 :pattern ( ($generated@@329 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@333 (type $generated@@491))))
(let (($generated@@493 ($generated@@332 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@331 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@330 $generated@@493 $generated@@492)) (= ($generated@@382 $generated@@491) ($generated@@486 $generated@@492))))))
 :pattern ( ($generated@@382 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@333 (type $generated@@494))))
(let (($generated@@496 ($generated@@332 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@331 $generated@@496 $generated@@495)) (= (= $generated@@494 ($generated@@330 $generated@@496 $generated@@495)) (= ($generated@@422 $generated@@494) ($generated@@486 $generated@@154))))))
 :pattern ( ($generated@@422 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@315 (type $generated@@497))))
(let (($generated@@499 ($generated@@314 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@313 $generated@@499 $generated@@498)) (or (= $generated@@497 ($generated@@312 $generated@@499 $generated@@498)) (exists (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (and (and (= (type $generated@@500) $generated@@154) (= (type $generated@@501) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@414 $generated@@497) ($generated@@292 ($generated@@227 $generated@@500 $generated@@501)))))
 :no-pattern (type $generated@@500)
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@414 $generated@@497))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@333 (type $generated@@502))))
(let (($generated@@504 ($generated@@332 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@331 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@330 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (and (and (= (type $generated@@505) $generated@@154) (= (type $generated@@506) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@422 $generated@@502) ($generated@@292 ($generated@@227 $generated@@505 $generated@@506)))))
 :no-pattern (type $generated@@505)
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
))))))
 :pattern ( ($generated@@422 $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) ($generated@@228 $generated@@507 $generated@@46)) (and (= ($generated@@292 ($generated@@355 $generated@@2 $generated@@507)) $generated@@507) ($generated@@141 ($generated@@355 $generated@@2 $generated@@507) $generated@@46)))
 :pattern ( ($generated@@228 $generated@@507 $generated@@46))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@154) ($generated@@228 $generated@@508 $generated@@47)) (and (= ($generated@@292 ($generated@@355 $generated@@3 $generated@@508)) $generated@@508) ($generated@@141 ($generated@@355 $generated@@3 $generated@@508) $generated@@47)))
 :pattern ( ($generated@@228 $generated@@508 $generated@@47))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@228 $generated@@509 $generated@@44)) (and (= ($generated@@292 ($generated@@355 $generated@@4 $generated@@509)) $generated@@509) ($generated@@141 ($generated@@355 $generated@@4 $generated@@509) $generated@@44)))
 :pattern ( ($generated@@228 $generated@@509 $generated@@44))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@154) ($generated@@228 $generated@@510 $generated@@45)) (and (= ($generated@@292 ($generated@@355 $generated@@268 $generated@@510)) $generated@@510) ($generated@@141 ($generated@@355 $generated@@268 $generated@@510) $generated@@45)))
 :pattern ( ($generated@@228 $generated@@510 $generated@@45))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@228 ($generated@@292 $generated@@511) $generated@@512) ($generated@@141 $generated@@511 $generated@@512)))
 :pattern ( ($generated@@228 ($generated@@292 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@81 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@78 $generated@@514 $generated@@2)) (<= 0 ($generated@@305 $generated@@513))))
 :pattern ( ($generated@@305 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@256 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@255 $generated@@516)) (<= 0 ($generated@@285 $generated@@515))))
 :pattern ( ($generated@@285 $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@66) (= (type $generated@@520) $generated@@66)) (= ($generated@@517 ($generated@@440 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@440 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@66)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@66) (= (type $generated@@524) $generated@@66)) (= ($generated@@521 ($generated@@440 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@440 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= ($generated@@74 ($generated@@440 $generated@@525 $generated@@526)) $generated@@58))
 :pattern ( ($generated@@440 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@66) (= (type $generated@@530) $generated@@66)) (= ($generated@@527 ($generated@@448 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@448 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@66)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (= ($generated@@531 ($generated@@448 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@448 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (= ($generated@@74 ($generated@@448 $generated@@535 $generated@@536)) $generated@@59))
 :pattern ( ($generated@@448 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@154)) (= ($generated@@278 ($generated@@227 $generated@@537 $generated@@538)) $generated@@61))
 :pattern ( ($generated@@227 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= ($generated@@539 ($generated@@144 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@144 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@66)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@66) (= (type $generated@@546) $generated@@66)) (= ($generated@@543 ($generated@@144 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@144 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@154) (= (type $generated@@548) $generated@@154)) (= ($generated@@152 ($generated@@227 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@227 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@154)) (= ($generated@@153 ($generated@@227 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@227 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@255 $generated@@154)) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@551 ($generated@@254 $generated@@552) $generated@@553) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@285 $generated@@551))) ($generated@@272 ($generated@@359 $generated@@551 $generated@@554) $generated@@552 $generated@@553))
 :pattern ( ($generated@@359 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@76 $generated@@551 ($generated@@254 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (=> (= (type $generated@@555) ($generated@@78 $generated@@557 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@459 $generated@@555 $generated@@556) $generated@@556))))
 :pattern ( ($generated@@459 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@558 ($generated@@77 $generated@@559)) $generated@@559)
 :pattern ( ($generated@@77 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@66)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@66) (= ($generated@@560 ($generated@@237 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@237 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@74 ($generated@@237 $generated@@563)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@66)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@66) (= ($generated@@564 ($generated@@242 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@242 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@66) (= ($generated@@74 ($generated@@242 $generated@@567)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@66)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@66) (= ($generated@@568 ($generated@@159 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@159 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@571)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@66)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@66) (= ($generated@@572 ($generated@@254 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@254 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@66) (= ($generated@@74 ($generated@@254 $generated@@575)) $generated@@57))
 :pattern ( ($generated@@254 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
(= ($generated@@355 $generated@@577 ($generated@@292 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@292 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@579) $generated@@66)) (= (type $generated@@580) $generated@@66)) (= ($generated@@141 $generated@@578 ($generated@@440 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@578) $generated@@581))) (and ($generated@@228 ($generated@@83 ($generated@@415 $generated@@578) $generated@@581) $generated@@580) ($generated@@228 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@83 ($generated@@415 $generated@@578) $generated@@581))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@141 $generated@@578 ($generated@@440 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) (= ($generated@@141 $generated@@582 ($generated@@448 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@329 $generated@@582) $generated@@585))) (and ($generated@@228 ($generated@@83 ($generated@@423 $generated@@582) $generated@@585) $generated@@584) ($generated@@228 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@83 ($generated@@423 $generated@@582) $generated@@585))
 :pattern ( ($generated@@83 ($generated@@329 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@141 $generated@@582 ($generated@@448 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@154) (= (type $generated@@589) $generated@@154)) (< ($generated@@586 $generated@@588) ($generated@@587 ($generated@@227 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@227 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@154) (= (type $generated@@591) $generated@@154)) (< ($generated@@586 $generated@@591) ($generated@@587 ($generated@@227 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@227 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@81 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@78 $generated@@594 $generated@@4)) (= (type $generated@@593) ($generated@@78 $generated@@594 $generated@@4))) (= ($generated@@220 $generated@@592 ($generated@@220 $generated@@592 $generated@@593)) ($generated@@220 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@220 $generated@@592 ($generated@@220 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@154) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) $generated@@66)) ($generated@@228 $generated@@595 ($generated@@440 $generated@@596 $generated@@597))) (and (= ($generated@@292 ($generated@@355 ($generated@@313 $generated@@154 $generated@@154) $generated@@595)) $generated@@595) ($generated@@141 ($generated@@355 ($generated@@313 $generated@@154 $generated@@154) $generated@@595) ($generated@@440 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@228 $generated@@595 ($generated@@440 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@154) (= (type $generated@@599) $generated@@66)) (= (type $generated@@600) $generated@@66)) ($generated@@228 $generated@@598 ($generated@@448 $generated@@599 $generated@@600))) (and (= ($generated@@292 ($generated@@355 ($generated@@331 $generated@@154 $generated@@154) $generated@@598)) $generated@@598) ($generated@@141 ($generated@@355 ($generated@@331 $generated@@154 $generated@@154) $generated@@598) ($generated@@448 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@228 $generated@@598 ($generated@@448 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@66) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) $generated@@154)) ($generated@@228 $generated@@603 ($generated@@144 $generated@@601 $generated@@602))) (and (= ($generated@@292 ($generated@@355 $generated@@145 $generated@@603)) $generated@@603) ($generated@@141 ($generated@@355 $generated@@145 $generated@@603) ($generated@@144 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@228 $generated@@603 ($generated@@144 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@605 T@T) ) (! (= (type ($generated@@604 $generated@@605)) ($generated@@78 $generated@@605 $generated@@4))
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@83 ($generated@@604 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@83 ($generated@@604 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@83 ($generated@@486 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@83 ($generated@@486 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@71)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@66) (= (type $generated@@613) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@612 $generated@@613)) $generated@@62) (= ($generated@@610 ($generated@@144 $generated@@612 $generated@@613)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@612 $generated@@613))
)))
(assert  (and (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@256 (type $generated@@616))))
(= (type ($generated@@614 $generated@@616)) ($generated@@255 $generated@@617)))
 :pattern ( ($generated@@614 $generated@@616))
)) (forall (($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@256 (type $generated@@618))))
(= (type ($generated@@615 $generated@@618)) $generated@@619))
 :pattern ( ($generated@@615 $generated@@618))
))))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (=> (= (type $generated@@620) ($generated@@255 $generated@@622)) (and (= ($generated@@614 ($generated@@253 $generated@@620 $generated@@621)) $generated@@620) (= ($generated@@615 ($generated@@253 $generated@@620 $generated@@621)) $generated@@621))))
 :pattern ( ($generated@@253 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@145) (= ($generated@@586 ($generated@@292 $generated@@623)) ($generated@@587 $generated@@623)))
 :pattern ( ($generated@@586 ($generated@@292 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@154) ($generated@@228 $generated@@624 ($generated@@77 0))) (and (= ($generated@@292 ($generated@@355 $generated@@2 $generated@@624)) $generated@@624) ($generated@@141 ($generated@@355 ($generated@@78 $generated@@154 $generated@@4) $generated@@624) ($generated@@77 0))))
 :pattern ( ($generated@@228 $generated@@624 ($generated@@77 0)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@154) (= (type $generated@@626) $generated@@66)) ($generated@@228 $generated@@625 ($generated@@237 $generated@@626))) (and (= ($generated@@292 ($generated@@355 ($generated@@78 $generated@@154 $generated@@4) $generated@@625)) $generated@@625) ($generated@@141 ($generated@@355 ($generated@@78 $generated@@154 $generated@@4) $generated@@625) ($generated@@237 $generated@@626))))
 :pattern ( ($generated@@228 $generated@@625 ($generated@@237 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@154) (= (type $generated@@628) $generated@@66)) ($generated@@228 $generated@@627 ($generated@@242 $generated@@628))) (and (= ($generated@@292 ($generated@@355 ($generated@@78 $generated@@154 $generated@@4) $generated@@627)) $generated@@627) ($generated@@141 ($generated@@355 ($generated@@78 $generated@@154 $generated@@4) $generated@@627) ($generated@@242 $generated@@628))))
 :pattern ( ($generated@@228 $generated@@627 ($generated@@242 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@154) (= (type $generated@@630) $generated@@66)) ($generated@@228 $generated@@629 ($generated@@159 $generated@@630))) (and (= ($generated@@292 ($generated@@355 ($generated@@78 $generated@@154 $generated@@2) $generated@@629)) $generated@@629) ($generated@@141 ($generated@@355 ($generated@@78 $generated@@154 $generated@@2) $generated@@629) ($generated@@159 $generated@@630))))
 :pattern ( ($generated@@228 $generated@@629 ($generated@@159 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@154) (= (type $generated@@632) $generated@@66)) ($generated@@228 $generated@@631 ($generated@@254 $generated@@632))) (and (= ($generated@@292 ($generated@@355 ($generated@@255 $generated@@154) $generated@@631)) $generated@@631) ($generated@@141 ($generated@@355 ($generated@@255 $generated@@154) $generated@@631) ($generated@@254 $generated@@632))))
 :pattern ( ($generated@@228 $generated@@631 ($generated@@254 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (! (let (($generated@@636 ($generated@@81 (type $generated@@634))))
 (=> (and (= (type $generated@@634) ($generated@@78 $generated@@636 $generated@@4)) (= (type $generated@@635) ($generated@@78 $generated@@636 $generated@@4))) (= ($generated@@633 $generated@@634 $generated@@635) (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@636) ($generated@@0 ($generated@@83 $generated@@634 $generated@@637))) ($generated@@0 ($generated@@83 $generated@@635 $generated@@637)))
 :pattern ( ($generated@@83 $generated@@634 $generated@@637))
 :pattern ( ($generated@@83 $generated@@635 $generated@@637))
)))))
 :pattern ( ($generated@@633 $generated@@634 $generated@@635))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@610 $generated@@138) $generated@@65))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@638) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@639) $generated@@66)) (= (type $generated@@640) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@638 ($generated@@159 $generated@@639) $generated@@640) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@638 $generated@@641)))) ($generated@@272 $generated@@641 $generated@@639 $generated@@640))
 :pattern ( ($generated@@83 $generated@@638 $generated@@641))
))))
 :pattern ( ($generated@@76 $generated@@638 ($generated@@159 $generated@@639) $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@81 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@78 $generated@@644 $generated@@4)) (= (type $generated@@643) ($generated@@78 $generated@@644 $generated@@4))) (= ($generated@@392 $generated@@642 $generated@@643) (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@644) (or (not ($generated@@0 ($generated@@83 $generated@@642 $generated@@645))) (not ($generated@@0 ($generated@@83 $generated@@643 $generated@@645)))))
 :pattern ( ($generated@@83 $generated@@642 $generated@@645))
 :pattern ( ($generated@@83 $generated@@643 $generated@@645))
)))))
 :pattern ( ($generated@@392 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@145) (= (type $generated@@647) $generated@@66)) (= (type $generated@@648) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@271 $generated@@648) (and ($generated@@143 $generated@@646) (exists (($generated@@649 T@U) ) (!  (and (= (type $generated@@649) $generated@@66) ($generated@@76 $generated@@646 ($generated@@144 $generated@@647 $generated@@649) $generated@@648))
 :pattern ( ($generated@@76 $generated@@646 ($generated@@144 $generated@@647 $generated@@649) $generated@@648))
))))) ($generated@@272 ($generated@@152 $generated@@646) $generated@@647 $generated@@648))
 :pattern ( ($generated@@272 ($generated@@152 $generated@@646) $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@145) (= (type $generated@@651) $generated@@66)) (= (type $generated@@652) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@271 $generated@@652) (and ($generated@@143 $generated@@650) (exists (($generated@@653 T@U) ) (!  (and (= (type $generated@@653) $generated@@66) ($generated@@76 $generated@@650 ($generated@@144 $generated@@653 $generated@@651) $generated@@652))
 :pattern ( ($generated@@76 $generated@@650 ($generated@@144 $generated@@653 $generated@@651) $generated@@652))
))))) ($generated@@272 ($generated@@153 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@272 ($generated@@153 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@2) (= ($generated@@141 $generated@@654 $generated@@138)  (and (<= ($generated@@247 0) ($generated $generated@@654)) (< ($generated $generated@@654) 4294967296))))
 :pattern ( ($generated@@141 $generated@@654 $generated@@138))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@154) (= (type $generated@@656) $generated@@154)) (= ($generated@@227 ($generated@@249 $generated@@655) ($generated@@249 $generated@@656)) ($generated@@249 ($generated@@227 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@227 ($generated@@249 $generated@@655) ($generated@@249 $generated@@656)))
)))
(assert (forall (($generated@@657 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@247 $generated@@657))) ($generated@@249 ($generated@@292 ($generated@@8 $generated@@657))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@247 $generated@@657))))
)))
(assert (forall (($generated@@658 T@U) ) (! (= ($generated@@292 ($generated@@249 $generated@@658)) ($generated@@249 ($generated@@292 $generated@@658)))
 :pattern ( ($generated@@292 ($generated@@249 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ) (! (let (($generated@@660 ($generated@@256 (type $generated@@659))))
 (=> (and (= (type $generated@@659) ($generated@@255 $generated@@660)) (= ($generated@@285 $generated@@659) 0)) (= $generated@@659 ($generated@@284 $generated@@660))))
 :pattern ( ($generated@@285 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (! (let (($generated@@664 (type $generated@@662)))
 (=> (and (and (= (type $generated@@661) ($generated@@78 $generated@@664 $generated@@2)) (= (type $generated@@663) $generated@@2)) (<= 0 ($generated $generated@@663))) (= ($generated@@305 ($generated@@84 $generated@@661 $generated@@662 $generated@@663)) (+ (- ($generated@@305 $generated@@661) ($generated ($generated@@83 $generated@@661 $generated@@662))) ($generated $generated@@663)))))
 :pattern ( ($generated@@305 ($generated@@84 $generated@@661 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (! (let (($generated@@668 (type $generated@@667)))
 (=> (and (= (type $generated@@665) ($generated@@78 $generated@@668 $generated@@4)) (= (type $generated@@666) ($generated@@78 $generated@@668 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@220 $generated@@665 $generated@@666) $generated@@667))  (or ($generated@@0 ($generated@@83 $generated@@665 $generated@@667)) ($generated@@0 ($generated@@83 $generated@@666 $generated@@667))))))
 :pattern ( ($generated@@83 ($generated@@220 $generated@@665 $generated@@666) $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@670) $generated@@2)) ($generated@@76 $generated@@670 $generated@@46 $generated@@669))
 :pattern ( ($generated@@76 $generated@@670 $generated@@46 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@672) $generated@@3)) ($generated@@76 $generated@@672 $generated@@47 $generated@@671))
 :pattern ( ($generated@@76 $generated@@672 $generated@@47 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@674) $generated@@4)) ($generated@@76 $generated@@674 $generated@@44 $generated@@673))
 :pattern ( ($generated@@76 $generated@@674 $generated@@44 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@676) $generated@@268)) ($generated@@76 $generated@@676 $generated@@45 $generated@@675))
 :pattern ( ($generated@@76 $generated@@676 $generated@@45 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@678) $generated@@154)) ($generated@@76 $generated@@678 $generated@@48 $generated@@677))
 :pattern ( ($generated@@76 $generated@@678 $generated@@48 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@255 $generated@@154)) (= (type $generated@@680) $generated@@66)) (= ($generated@@141 $generated@@679 ($generated@@254 $generated@@680)) (forall (($generated@@681 Int) ) (!  (=> (and (<= 0 $generated@@681) (< $generated@@681 ($generated@@285 $generated@@679))) ($generated@@228 ($generated@@359 $generated@@679 $generated@@681) $generated@@680))
 :pattern ( ($generated@@359 $generated@@679 $generated@@681))
))))
 :pattern ( ($generated@@141 $generated@@679 ($generated@@254 $generated@@680)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 Int) ) (!  (=> (= (type $generated@@683) ($generated@@255 $generated@@154)) (=> (and (<= 0 $generated@@684) (< $generated@@684 ($generated@@285 $generated@@683))) (< ($generated@@587 ($generated@@355 $generated@@145 ($generated@@359 $generated@@683 $generated@@684))) ($generated@@682 $generated@@683))))
 :pattern ( ($generated@@587 ($generated@@355 $generated@@145 ($generated@@359 $generated@@683 $generated@@684))))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (and (= (type $generated@@685) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@686) $generated@@66)) (= (type $generated@@687) $generated@@66)) ($generated@@141 $generated@@685 ($generated@@440 $generated@@686 $generated@@687))) (and (and ($generated@@141 ($generated@@311 $generated@@685) ($generated@@237 $generated@@686)) ($generated@@141 ($generated@@371 $generated@@685) ($generated@@237 $generated@@687))) ($generated@@141 ($generated@@414 $generated@@685) ($generated@@237 ($generated@@144 $generated@@686 $generated@@687)))))
 :pattern ( ($generated@@141 $generated@@685 ($generated@@440 $generated@@686 $generated@@687)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (and (= (type $generated@@688) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@689) $generated@@66)) (= (type $generated@@690) $generated@@66)) ($generated@@141 $generated@@688 ($generated@@448 $generated@@689 $generated@@690))) (and (and ($generated@@141 ($generated@@329 $generated@@688) ($generated@@242 $generated@@689)) ($generated@@141 ($generated@@382 $generated@@688) ($generated@@242 $generated@@690))) ($generated@@141 ($generated@@422 $generated@@688) ($generated@@242 ($generated@@144 $generated@@689 $generated@@690)))))
 :pattern ( ($generated@@141 $generated@@688 ($generated@@448 $generated@@689 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@2) ($generated@@141 $generated@@691 $generated@@46))
 :pattern ( ($generated@@141 $generated@@691 $generated@@46))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@3) ($generated@@141 $generated@@692 $generated@@47))
 :pattern ( ($generated@@141 $generated@@692 $generated@@47))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@4) ($generated@@141 $generated@@693 $generated@@44))
 :pattern ( ($generated@@141 $generated@@693 $generated@@44))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@268) ($generated@@141 $generated@@694 $generated@@45))
 :pattern ( ($generated@@141 $generated@@694 $generated@@45))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@154) ($generated@@141 $generated@@695 $generated@@48))
 :pattern ( ($generated@@141 $generated@@695 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@696 () Bool)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 (T@U) Bool)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () Bool)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () Bool)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () Int)
(declare-fun $generated@@712 () Bool)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () Int)
(declare-fun $generated@@716 () Int)
(declare-fun $generated@@717 () Bool)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () Int)
(declare-fun $generated@@722 () Int)
(declare-fun $generated@@723 () Int)
(declare-fun $generated@@724 () Int)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () Int)
(declare-fun $generated@@727 () Int)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () Bool)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () Bool)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () Int)
(declare-fun $generated@@736 () Int)
(declare-fun $generated@@737 () Bool)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 () Int)
(declare-fun $generated@@741 () Int)
(declare-fun $generated@@742 () Bool)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () Bool)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () Bool)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () Bool)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 () T@U)
(declare-fun $generated@@755 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@697) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@698) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@699) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@701) $generated@@79)) (= (type $generated@@702) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@703) ($generated@@255 $generated@@154))) (= (type $generated@@705) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@706) ($generated@@255 $generated@@154))) (= (type $generated@@709) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@710) ($generated@@255 $generated@@154))) (= (type $generated@@713) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@714) ($generated@@255 $generated@@154))) (= (type $generated@@718) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@719) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@728) ($generated@@255 $generated@@154))) (= (type $generated@@730) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@731) ($generated@@255 $generated@@154))) (= (type $generated@@733) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@734) ($generated@@255 $generated@@154))) (= (type $generated@@738) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@739) ($generated@@255 $generated@@154))) (= (type $generated@@743) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@744) ($generated@@255 $generated@@154))) (= (type $generated@@746) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@747) ($generated@@255 $generated@@154))) (= (type $generated@@749) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@750) ($generated@@255 $generated@@154))) (= (type $generated@@752) ($generated@@255 $generated@@154))) (= (type $generated@@753) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@754) ($generated@@78 $generated@@154 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@756  (=> (= $generated@@696  (and ($generated@@633 $generated@@697 $generated@@698) ($generated@@633 $generated@@698 $generated@@697))) (and (=> (= (ControlFlow 0 2) (- 0 10)) $generated@@696) (=> $generated@@696 (=> (and ($generated@@271 $generated@@699) ($generated@@700 $generated@@699)) (=> (and (and (forall (($generated@@757 T@U) ) (!  (=> (= (type $generated@@757) $generated@@79) (=> (and (not (= $generated@@757 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@702 $generated@@757) $generated@@60))) (= ($generated@@83 $generated@@699 $generated@@757) ($generated@@83 $generated@@702 $generated@@757))))
 :pattern ( ($generated@@83 $generated@@699 $generated@@757))
)) ($generated@@134 $generated@@702 $generated@@699)) (and (= $generated@@703 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 85))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 111))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 73))) ($generated@@292 ($generated@@266 100))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 121))))) (= $generated@@704 ($generated@@347 ($generated@@220 $generated@@698 $generated@@698) $generated@@698)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) $generated@@704) (=> $generated@@704 (=> (and ($generated@@271 $generated@@705) ($generated@@700 $generated@@705)) (=> (and (and (forall (($generated@@758 T@U) ) (!  (=> (= (type $generated@@758) $generated@@79) (=> (and (not (= $generated@@758 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@699 $generated@@758) $generated@@60))) (= ($generated@@83 $generated@@705 $generated@@758) ($generated@@83 $generated@@699 $generated@@758))))
 :pattern ( ($generated@@83 $generated@@705 $generated@@758))
)) ($generated@@134 $generated@@699 $generated@@705)) (and (= $generated@@706 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 77))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 109))) ($generated@@292 ($generated@@266 98))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 114))) ($generated@@292 ($generated@@266 115))) ($generated@@292 ($generated@@266 104))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 112))))) (= $generated@@707 ($generated@@247 1)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@247 0) $generated@@707) (< $generated@@707 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@707) (< $generated@@707 4294967296)) (=> (= $generated@@708 ($generated@@0 ($generated@@83 $generated@@698 ($generated@@292 ($generated@@8 ($generated@@247 1)))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) $generated@@708) (=> $generated@@708 (=> (and ($generated@@271 $generated@@709) ($generated@@700 $generated@@709)) (=> (and (and (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) $generated@@79) (=> (and (not (= $generated@@759 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@705 $generated@@759) $generated@@60))) (= ($generated@@83 $generated@@709 $generated@@759) ($generated@@83 $generated@@705 $generated@@759))))
 :pattern ( ($generated@@83 $generated@@709 $generated@@759))
)) ($generated@@134 $generated@@705 $generated@@709)) (and (= $generated@@710 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 78))) ($generated@@292 ($generated@@266 111))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 77))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 109))) ($generated@@292 ($generated@@266 98))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 114))) ($generated@@292 ($generated@@266 115))) ($generated@@292 ($generated@@266 104))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 112))) ($generated@@292 ($generated@@266 49))))) (= $generated@@711 ($generated@@247 5)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@247 0) $generated@@711) (< $generated@@711 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@711) (< $generated@@711 4294967296)) (=> (= $generated@@712  (not ($generated@@0 ($generated@@83 $generated@@698 ($generated@@292 ($generated@@8 ($generated@@247 5))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) $generated@@712) (=> $generated@@712 (=> (and ($generated@@271 $generated@@713) ($generated@@700 $generated@@713)) (=> (and (and (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@79) (=> (and (not (= $generated@@760 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@709 $generated@@760) $generated@@60))) (= ($generated@@83 $generated@@713 $generated@@760) ($generated@@83 $generated@@709 $generated@@760))))
 :pattern ( ($generated@@83 $generated@@713 $generated@@760))
)) ($generated@@134 $generated@@709 $generated@@713)) (and (= $generated@@714 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 78))) ($generated@@292 ($generated@@266 111))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 77))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 109))) ($generated@@292 ($generated@@266 98))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 114))) ($generated@@292 ($generated@@266 115))) ($generated@@292 ($generated@@266 104))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 112))) ($generated@@292 ($generated@@266 50))))) (= $generated@@715 ($generated@@247 1)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@247 0) $generated@@715) (< $generated@@715 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@715) (< $generated@@715 4294967296)) (=> (= $generated@@716 ($generated@@247 1)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@247 0) $generated@@716) (< $generated@@716 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@716) (< $generated@@716 4294967296)) (=> (and (= $generated@@717  (not ($generated@@0 ($generated@@83 ($generated@@393 $generated@@698 ($generated@@459 ($generated@@604 $generated@@154) ($generated@@292 ($generated@@8 ($generated@@247 1))))) ($generated@@292 ($generated@@8 ($generated@@247 1))))))) (= (ControlFlow 0 2) (- 0 1))) $generated@@717)))))))))))))))))))))))))))))))
(let (($generated@@761  (=> (and (not ($generated@@633 $generated@@697 $generated@@698)) (= (ControlFlow 0 12) 2)) $generated@@756)))
(let (($generated@@762  (=> (and ($generated@@633 $generated@@697 $generated@@698) (= (ControlFlow 0 11) 2)) $generated@@756)))
(let (($generated@@763  (=> (and (= $generated@@718 ($generated@@165 $generated@@701 $generated@@719 $generated@@60 false)) (= $generated@@720 ($generated@@247 1))) (and (=> (= (ControlFlow 0 13) (- 0 32)) (and (<= ($generated@@247 0) $generated@@720) (< $generated@@720 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@720) (< $generated@@720 4294967296)) (=> (= $generated@@721 ($generated@@247 2)) (and (=> (= (ControlFlow 0 13) (- 0 31)) (and (<= ($generated@@247 0) $generated@@721) (< $generated@@721 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@721) (< $generated@@721 4294967296)) (=> (= $generated@@722 ($generated@@247 3)) (and (=> (= (ControlFlow 0 13) (- 0 30)) (and (<= ($generated@@247 0) $generated@@722) (< $generated@@722 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@722) (< $generated@@722 4294967296)) (=> (= $generated@@723 ($generated@@247 4)) (and (=> (= (ControlFlow 0 13) (- 0 29)) (and (<= ($generated@@247 0) $generated@@723) (< $generated@@723 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@723) (< $generated@@723 4294967296)) (=> (and (= $generated@@698 ($generated@@249 ($generated@@459 ($generated@@459 ($generated@@459 ($generated@@459 ($generated@@604 $generated@@154) ($generated@@292 ($generated@@8 ($generated@@247 1)))) ($generated@@292 ($generated@@8 ($generated@@247 2)))) ($generated@@292 ($generated@@8 ($generated@@247 3)))) ($generated@@292 ($generated@@8 ($generated@@247 4)))))) (= $generated@@724 ($generated@@247 1))) (and (=> (= (ControlFlow 0 13) (- 0 28)) (and (<= ($generated@@247 0) $generated@@724) (< $generated@@724 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@724) (< $generated@@724 4294967296)) (=> (= $generated@@725 ($generated@@247 2)) (and (=> (= (ControlFlow 0 13) (- 0 27)) (and (<= ($generated@@247 0) $generated@@725) (< $generated@@725 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@725) (< $generated@@725 4294967296)) (=> (= $generated@@726 ($generated@@247 3)) (and (=> (= (ControlFlow 0 13) (- 0 26)) (and (<= ($generated@@247 0) $generated@@726) (< $generated@@726 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@726) (< $generated@@726 4294967296)) (=> (= $generated@@727 ($generated@@247 4)) (and (=> (= (ControlFlow 0 13) (- 0 25)) (and (<= ($generated@@247 0) $generated@@727) (< $generated@@727 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@727) (< $generated@@727 4294967296)) (=> (= $generated@@697 ($generated@@249 ($generated@@459 ($generated@@459 ($generated@@459 ($generated@@459 ($generated@@604 $generated@@154) ($generated@@292 ($generated@@8 ($generated@@247 1)))) ($generated@@292 ($generated@@8 ($generated@@247 2)))) ($generated@@292 ($generated@@8 ($generated@@247 3)))) ($generated@@292 ($generated@@8 ($generated@@247 4)))))) (=> (and (= $generated@@728 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 73))) ($generated@@292 ($generated@@266 100))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 121))))) (= $generated@@729 ($generated@@347 $generated@@698 $generated@@698))) (and (=> (= (ControlFlow 0 13) (- 0 24)) $generated@@729) (=> $generated@@729 (=> (and ($generated@@271 $generated@@730) ($generated@@700 $generated@@730)) (=> (and (and (forall (($generated@@764 T@U) ) (!  (=> (= (type $generated@@764) $generated@@79) (=> (and (not (= $generated@@764 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@719 $generated@@764) $generated@@60))) (= ($generated@@83 $generated@@730 $generated@@764) ($generated@@83 $generated@@719 $generated@@764))))
 :pattern ( ($generated@@83 $generated@@730 $generated@@764))
)) ($generated@@134 $generated@@719 $generated@@730)) (and (= $generated@@731 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 86))) ($generated@@292 ($generated@@266 97))) ($generated@@292 ($generated@@266 108))) ($generated@@292 ($generated@@266 117))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 115))) ($generated@@292 ($generated@@266 73))) ($generated@@292 ($generated@@266 100))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 121))))) (= $generated@@732 ($generated@@347 $generated@@698 $generated@@697)))) (and (=> (= (ControlFlow 0 13) (- 0 23)) $generated@@732) (=> $generated@@732 (=> (and ($generated@@271 $generated@@733) ($generated@@700 $generated@@733)) (=> (and (and (forall (($generated@@765 T@U) ) (!  (=> (= (type $generated@@765) $generated@@79) (=> (and (not (= $generated@@765 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@730 $generated@@765) $generated@@60))) (= ($generated@@83 $generated@@733 $generated@@765) ($generated@@83 $generated@@730 $generated@@765))))
 :pattern ( ($generated@@83 $generated@@733 $generated@@765))
)) ($generated@@134 $generated@@730 $generated@@733)) (and (= $generated@@734 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 68))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 102))) ($generated@@292 ($generated@@266 102))) ($generated@@292 ($generated@@266 73))) ($generated@@292 ($generated@@266 100))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 121))))) (= $generated@@735 ($generated@@247 1)))) (and (=> (= (ControlFlow 0 13) (- 0 22)) (and (<= ($generated@@247 0) $generated@@735) (< $generated@@735 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@735) (< $generated@@735 4294967296)) (=> (= $generated@@736 ($generated@@247 1)) (and (=> (= (ControlFlow 0 13) (- 0 21)) (and (<= ($generated@@247 0) $generated@@736) (< $generated@@736 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@736) (< $generated@@736 4294967296)) (=> (= $generated@@737 ($generated@@347 ($generated@@393 $generated@@698 ($generated@@459 ($generated@@604 $generated@@154) ($generated@@292 ($generated@@8 ($generated@@247 1))))) ($generated@@393 $generated@@697 ($generated@@459 ($generated@@604 $generated@@154) ($generated@@292 ($generated@@8 ($generated@@247 1))))))) (and (=> (= (ControlFlow 0 13) (- 0 20)) $generated@@737) (=> $generated@@737 (=> (and ($generated@@271 $generated@@738) ($generated@@700 $generated@@738)) (=> (and (and (forall (($generated@@766 T@U) ) (!  (=> (= (type $generated@@766) $generated@@79) (=> (and (not (= $generated@@766 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@733 $generated@@766) $generated@@60))) (= ($generated@@83 $generated@@738 $generated@@766) ($generated@@83 $generated@@733 $generated@@766))))
 :pattern ( ($generated@@83 $generated@@738 $generated@@766))
)) ($generated@@134 $generated@@733 $generated@@738)) (and (= $generated@@739 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 68))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 102))) ($generated@@292 ($generated@@266 102))) ($generated@@292 ($generated@@266 73))) ($generated@@292 ($generated@@266 100))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 121))) ($generated@@292 ($generated@@266 83))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 108))) ($generated@@292 ($generated@@266 102))))) (= $generated@@740 ($generated@@247 2)))) (and (=> (= (ControlFlow 0 13) (- 0 19)) (and (<= ($generated@@247 0) $generated@@740) (< $generated@@740 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@740) (< $generated@@740 4294967296)) (=> (= $generated@@741 ($generated@@247 1)) (and (=> (= (ControlFlow 0 13) (- 0 18)) (and (<= ($generated@@247 0) $generated@@741) (< $generated@@741 4294967296))) (=> (and (<= ($generated@@247 0) $generated@@741) (< $generated@@741 4294967296)) (=> (= $generated@@742  (not ($generated@@347 ($generated@@393 $generated@@698 ($generated@@459 ($generated@@604 $generated@@154) ($generated@@292 ($generated@@8 ($generated@@247 2))))) ($generated@@393 $generated@@698 ($generated@@459 ($generated@@604 $generated@@154) ($generated@@292 ($generated@@8 ($generated@@247 1)))))))) (and (=> (= (ControlFlow 0 13) (- 0 17)) $generated@@742) (=> $generated@@742 (=> (and ($generated@@271 $generated@@743) ($generated@@700 $generated@@743)) (=> (and (and (forall (($generated@@767 T@U) ) (!  (=> (= (type $generated@@767) $generated@@79) (=> (and (not (= $generated@@767 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@738 $generated@@767) $generated@@60))) (= ($generated@@83 $generated@@743 $generated@@767) ($generated@@83 $generated@@738 $generated@@767))))
 :pattern ( ($generated@@83 $generated@@743 $generated@@767))
)) ($generated@@134 $generated@@738 $generated@@743)) (and (= $generated@@744 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 80))) ($generated@@292 ($generated@@266 114))) ($generated@@292 ($generated@@266 111))) ($generated@@292 ($generated@@266 112))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 114))) ($generated@@292 ($generated@@266 83))) ($generated@@292 ($generated@@266 117))) ($generated@@292 ($generated@@266 98))) ($generated@@292 ($generated@@266 115))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 73))) ($generated@@292 ($generated@@266 100))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 110))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 105))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 121))))) (= $generated@@745  (not (and ($generated@@633 $generated@@698 $generated@@698) (not ($generated@@633 $generated@@698 $generated@@698))))))) (and (=> (= (ControlFlow 0 13) (- 0 16)) $generated@@745) (=> $generated@@745 (=> (and ($generated@@271 $generated@@746) ($generated@@700 $generated@@746)) (=> (and (and (forall (($generated@@768 T@U) ) (!  (=> (= (type $generated@@768) $generated@@79) (=> (and (not (= $generated@@768 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@743 $generated@@768) $generated@@60))) (= ($generated@@83 $generated@@746 $generated@@768) ($generated@@83 $generated@@743 $generated@@768))))
 :pattern ( ($generated@@83 $generated@@746 $generated@@768))
)) ($generated@@134 $generated@@743 $generated@@746)) (and (= $generated@@747 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 80))) ($generated@@292 ($generated@@266 114))) ($generated@@292 ($generated@@266 111))) ($generated@@292 ($generated@@266 112))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 114))) ($generated@@292 ($generated@@266 83))) ($generated@@292 ($generated@@266 117))) ($generated@@292 ($generated@@266 98))) ($generated@@292 ($generated@@266 115))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 116))))) (= $generated@@748  (not (and ($generated@@633 $generated@@698 $generated@@697) (not ($generated@@633 $generated@@697 $generated@@698))))))) (and (=> (= (ControlFlow 0 13) (- 0 15)) $generated@@748) (=> $generated@@748 (=> (and ($generated@@271 $generated@@749) ($generated@@700 $generated@@749)) (=> (and (and (forall (($generated@@769 T@U) ) (!  (=> (= (type $generated@@769) $generated@@79) (=> (and (not (= $generated@@769 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@746 $generated@@769) $generated@@60))) (= ($generated@@83 $generated@@749 $generated@@769) ($generated@@83 $generated@@746 $generated@@769))))
 :pattern ( ($generated@@83 $generated@@749 $generated@@769))
)) ($generated@@134 $generated@@746 $generated@@749)) (and (= $generated@@750 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 83))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 108))) ($generated@@292 ($generated@@266 102))) ($generated@@292 ($generated@@266 83))) ($generated@@292 ($generated@@266 117))) ($generated@@292 ($generated@@266 98))) ($generated@@292 ($generated@@266 115))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 116))))) (= $generated@@751 ($generated@@633 $generated@@698 $generated@@698)))) (and (=> (= (ControlFlow 0 13) (- 0 14)) $generated@@751) (=> $generated@@751 (=> (and (and (and ($generated@@271 $generated@@702) ($generated@@700 $generated@@702)) (forall (($generated@@770 T@U) ) (!  (=> (= (type $generated@@770) $generated@@79) (=> (and (not (= $generated@@770 $generated@@701)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@749 $generated@@770) $generated@@60))) (= ($generated@@83 $generated@@702 $generated@@770) ($generated@@83 $generated@@749 $generated@@770))))
 :pattern ( ($generated@@83 $generated@@702 $generated@@770))
))) (and ($generated@@134 $generated@@749 $generated@@702) (= $generated@@752 ($generated@@249 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@253 ($generated@@284 $generated@@154) ($generated@@292 ($generated@@266 79))) ($generated@@292 ($generated@@266 116))) ($generated@@292 ($generated@@266 104))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 114))) ($generated@@292 ($generated@@266 83))) ($generated@@292 ($generated@@266 117))) ($generated@@292 ($generated@@266 98))) ($generated@@292 ($generated@@266 115))) ($generated@@292 ($generated@@266 101))) ($generated@@292 ($generated@@266 116))))))) (and (=> (= (ControlFlow 0 13) 11) $generated@@762) (=> (= (ControlFlow 0 13) 12) $generated@@761)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@771  (=> (and ($generated@@271 $generated@@719) ($generated@@700 $generated@@719)) (=> (and (and ($generated@@141 $generated@@753 ($generated@@237 $generated@@138)) ($generated@@76 $generated@@753 ($generated@@237 $generated@@138) $generated@@719)) true) (=> (and (and (and ($generated@@141 $generated@@754 ($generated@@237 $generated@@138)) ($generated@@76 $generated@@754 ($generated@@237 $generated@@138) $generated@@719)) true) (and (= 2 $generated@@755) (= (ControlFlow 0 33) 13))) $generated@@763)))))
$generated@@771))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@259 (Int) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 () T@T)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@343 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U Int) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@T) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@574 (T@T) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@639 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (and (and (and (forall (($generated@@250 T@T) ) (= ($generated@@1 ($generated@@248 $generated@@250)) 17)) (forall (($generated@@251 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@246 $generated@@252 $generated@@253)) ($generated@@248 $generated@@254)))
 :pattern ( ($generated@@246 $generated@@252 $generated@@253))
))) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@247 $generated@@255)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@248 $generated@@154)) (= (type $generated@@257) $generated@@154)) (= (type $generated@@258) $generated@@66)) (and ($generated@@141 $generated@@256 ($generated@@247 $generated@@258)) ($generated@@221 $generated@@257 $generated@@258))) ($generated@@141 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
 :pattern ( ($generated@@141 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
)))
(assert  (and (= ($generated@@1 $generated@@261) 18) (forall (($generated@@262 Int) ) (! (= (type ($generated@@259 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@259 $generated@@262))
))))
(assert (forall (($generated@@263 Int) ) (!  (=> (and (<= 0 $generated@@263) (< $generated@@263 65536)) (= ($generated@@260 ($generated@@259 $generated@@263)) $generated@@263))
 :pattern ( ($generated@@259 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) $generated@@66)) (= (type $generated@@268) $generated@@154)) (= (type $generated@@269) $generated@@154)) (= (type $generated@@270) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@264 $generated@@270)) (= ($generated@@76 ($generated@@220 $generated@@268 $generated@@269) ($generated@@144 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@268 $generated@@269) ($generated@@144 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@145) (= ($generated@@143 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@145) ($generated@@143 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@154) (= (type $generated@@276) $generated@@154)) (= $generated@@274 ($generated@@220 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@143 $generated@@274))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@277 $generated@@279)) ($generated@@248 $generated@@279))
 :pattern ( ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) 0)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
 (=> (= (type $generated@@281) ($generated@@248 $generated@@283)) (= ($generated@@278 ($generated@@246 $generated@@281 $generated@@282)) (+ 1 ($generated@@278 $generated@@281)))))
 :pattern ( ($generated@@246 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@261) (and (and (= ($generated@@259 ($generated@@260 $generated@@284)) $generated@@284) (<= 0 ($generated@@260 $generated@@284))) (< ($generated@@260 $generated@@284) 65536)))
 :pattern ( ($generated@@260 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@154)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@66) (= (type $generated@@289) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@76 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@291) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@292) $generated@@154)) (= (type $generated@@293) $generated@@66)) ($generated@@134 $generated@@290 $generated@@291)) ($generated@@265 $generated@@292 $generated@@293 $generated@@290)) ($generated@@265 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@134 $generated@@290 $generated@@291) ($generated@@265 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@294) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@295) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@297) $generated@@66)) ($generated@@134 $generated@@294 $generated@@295)) ($generated@@76 $generated@@296 $generated@@297 $generated@@294)) ($generated@@76 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@134 $generated@@294 $generated@@295) ($generated@@76 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@78 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@81 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@78 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@83 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@81 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@78 $generated@@341 $generated@@2)) (= ($generated@@160 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@83 $generated@@340 $generated@@342))) (<= ($generated ($generated@@83 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@160 $generated@@340))
)))
(assert (forall (($generated@@344 T@T) ($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@154) ($generated@@221 $generated@@346 $generated@@138)) (and (= ($generated@@285 ($generated@@343 $generated@@2 $generated@@346)) $generated@@346) ($generated@@141 ($generated@@343 $generated@@2 $generated@@346) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@346 $generated@@138))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 Int) ) (! (let (($generated@@350 ($generated@@249 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@350))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 Int) ($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
 (=> (= (type $generated@@351) ($generated@@248 $generated@@354)) (and (=> (= $generated@@352 ($generated@@278 $generated@@351)) (= ($generated@@347 ($generated@@246 $generated@@351 $generated@@353) $generated@@352) $generated@@353)) (=> (not (= $generated@@352 ($generated@@278 $generated@@351))) (= ($generated@@347 ($generated@@246 $generated@@351 $generated@@353) $generated@@352) ($generated@@347 $generated@@351 $generated@@352))))))
 :pattern ( ($generated@@347 ($generated@@246 $generated@@351 $generated@@353) $generated@@352))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@308 (type $generated@@355))))
(let (($generated@@357 ($generated@@307 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@306 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@305 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@304 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@308 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@78 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@308 (type $generated@@362))))
(let (($generated@@364 ($generated@@307 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@306 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@305 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(let (($generated@@368 ($generated@@325 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@324 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@323 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@322 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@78 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@83 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@378) $generated@@66)) (= ($generated@@141 $generated@@377 ($generated@@159 $generated@@378)) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@377 $generated@@379)))) ($generated@@221 $generated@@379 $generated@@378))
 :pattern ( ($generated@@83 $generated@@377 $generated@@379))
))))
 :pattern ( ($generated@@141 $generated@@377 ($generated@@159 $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@81 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381 $generated@@382)) ($generated@@78 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
 (=> (and (= (type $generated@@384) ($generated@@78 $generated@@387 $generated@@4)) (= (type $generated@@385) ($generated@@78 $generated@@387 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 $generated@@384 $generated@@386)) (not ($generated@@0 ($generated@@83 $generated@@385 $generated@@386)))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@389) $generated@@66)) (= (type $generated@@390) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@388 ($generated@@230 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@154) ($generated@@0 ($generated@@83 $generated@@388 $generated@@391))) ($generated@@265 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@83 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@76 $generated@@388 ($generated@@230 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@392 ($generated@@235 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@154) ($generated@@0 ($generated@@83 $generated@@392 $generated@@395))) ($generated@@265 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@83 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@76 $generated@@392 ($generated@@235 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@83 ($generated@@299 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@83 ($generated@@299 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@308 (type $generated@@401))))
(let (($generated@@403 ($generated@@307 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@78 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@405) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@404) ($generated@@152 ($generated@@343 $generated@@145 $generated@@405)))) (= ($generated@@83 ($generated@@399 $generated@@404) ($generated@@152 ($generated@@343 $generated@@145 $generated@@405))) ($generated@@153 ($generated@@343 $generated@@145 $generated@@405))))))
 :pattern ( ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@326 (type $generated@@409))))
(let (($generated@@411 ($generated@@325 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@78 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@413) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@412) ($generated@@152 ($generated@@343 $generated@@145 $generated@@413)))) (= ($generated@@83 ($generated@@407 $generated@@412) ($generated@@152 ($generated@@343 $generated@@145 $generated@@413))) ($generated@@153 ($generated@@343 $generated@@145 $generated@@413))))))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@307 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@83 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@414) $generated@@418))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@325 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@324 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@83 ($generated@@370 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@83 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@419) $generated@@423))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@66)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@428) $generated@@66)) (= (type $generated@@429) $generated@@66)) (= (type $generated@@430) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@427) $generated@@431))) (and ($generated@@265 ($generated@@83 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@265 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@66)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) $generated@@66)) (= (type $generated@@438) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@435) $generated@@439))) (and ($generated@@265 ($generated@@83 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@265 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(= (type ($generated@@440 $generated@@441 $generated@@442)) ($generated@@78 $generated@@443 $generated@@4)))
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@445)))
 (=> (and (and (= (type $generated@@444) ($generated@@78 $generated@@447 $generated@@4)) (= (type $generated@@446) $generated@@447)) ($generated@@0 ($generated@@83 $generated@@444 $generated@@446))) ($generated@@0 ($generated@@83 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))))
 :pattern ( ($generated@@440 $generated@@444 $generated@@445) ($generated@@83 $generated@@444 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@449)))
 (=> (and (= (type $generated@@448) ($generated@@78 $generated@@451 $generated@@4)) (= (type $generated@@450) $generated@@451)) (= ($generated@@0 ($generated@@83 ($generated@@440 $generated@@448 $generated@@449) $generated@@450))  (or (= $generated@@450 $generated@@449) ($generated@@0 ($generated@@83 $generated@@448 $generated@@450))))))
 :pattern ( ($generated@@83 ($generated@@440 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@453) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@454) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@452 $generated@@454))) (and ($generated@@134 $generated@@452 $generated@@453) ($generated@@134 $generated@@453 $generated@@454))) ($generated@@134 $generated@@452 $generated@@454))
 :pattern ( ($generated@@134 $generated@@452 $generated@@453) ($generated@@134 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
 (=> (and (and (= (type $generated@@455) ($generated@@78 $generated@@458 $generated@@4)) (= (type $generated@@456) ($generated@@78 $generated@@458 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@456 $generated@@457))) (not ($generated@@0 ($generated@@83 ($generated@@380 $generated@@455 $generated@@456) $generated@@457)))))
 :pattern ( ($generated@@380 $generated@@455 $generated@@456) ($generated@@83 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@460 T@T) ) (! (= (type ($generated@@459 $generated@@460)) ($generated@@78 $generated@@460 $generated@@4))
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@326 (type $generated@@461))))
(let (($generated@@463 ($generated@@325 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@324 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@323 $generated@@463 $generated@@462)) (= ($generated@@322 $generated@@461) ($generated@@459 $generated@@463))))))
 :pattern ( ($generated@@322 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@326 (type $generated@@464))))
(let (($generated@@466 ($generated@@325 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@324 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@323 $generated@@466 $generated@@465)) (= ($generated@@370 $generated@@464) ($generated@@459 $generated@@465))))))
 :pattern ( ($generated@@370 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@326 (type $generated@@467))))
(let (($generated@@469 ($generated@@325 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@324 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@323 $generated@@469 $generated@@468)) (= ($generated@@406 $generated@@467) ($generated@@459 $generated@@154))))))
 :pattern ( ($generated@@406 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@308 (type $generated@@470))))
(let (($generated@@472 ($generated@@307 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@306 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@305 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@154) (= (type $generated@@474) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@398 $generated@@470) ($generated@@285 ($generated@@220 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@398 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@326 (type $generated@@475))))
(let (($generated@@477 ($generated@@325 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@324 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@323 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@154) (= (type $generated@@479) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@406 $generated@@475) ($generated@@285 ($generated@@220 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@406 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@154) ($generated@@221 $generated@@480 $generated@@46)) (and (= ($generated@@285 ($generated@@343 $generated@@2 $generated@@480)) $generated@@480) ($generated@@141 ($generated@@343 $generated@@2 $generated@@480) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@480 $generated@@46))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@154) ($generated@@221 $generated@@481 $generated@@47)) (and (= ($generated@@285 ($generated@@343 $generated@@3 $generated@@481)) $generated@@481) ($generated@@141 ($generated@@343 $generated@@3 $generated@@481) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@481 $generated@@47))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@154) ($generated@@221 $generated@@482 $generated@@44)) (and (= ($generated@@285 ($generated@@343 $generated@@4 $generated@@482)) $generated@@482) ($generated@@141 ($generated@@343 $generated@@4 $generated@@482) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@482 $generated@@44))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) ($generated@@221 $generated@@483 $generated@@45)) (and (= ($generated@@285 ($generated@@343 $generated@@261 $generated@@483)) $generated@@483) ($generated@@141 ($generated@@343 $generated@@261 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@66) (= ($generated@@221 ($generated@@285 $generated@@484) $generated@@485) ($generated@@141 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@221 ($generated@@285 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@81 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@78 $generated@@487 $generated@@2)) (<= 0 ($generated@@298 $generated@@486))))
 :pattern ( ($generated@@298 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@249 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@248 $generated@@489)) (<= 0 ($generated@@278 $generated@@488))))
 :pattern ( ($generated@@278 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@66) (= (type $generated@@493) $generated@@66)) (= ($generated@@490 ($generated@@424 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@424 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@66) (= (type $generated@@497) $generated@@66)) (= ($generated@@494 ($generated@@424 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@424 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@66) (= (type $generated@@499) $generated@@66)) (= ($generated@@74 ($generated@@424 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@66) (= (type $generated@@503) $generated@@66)) (= ($generated@@500 ($generated@@432 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@432 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@504 ($generated@@432 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@432 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@66) (= (type $generated@@509) $generated@@66)) (= ($generated@@74 ($generated@@432 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@154) (= (type $generated@@511) $generated@@154)) (= ($generated@@271 ($generated@@220 $generated@@510 $generated@@511)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@144 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@144 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@66) (= (type $generated@@519) $generated@@66)) (= ($generated@@516 ($generated@@144 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@144 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@220 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@220 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@248 $generated@@154)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@524 ($generated@@247 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@278 $generated@@524))) ($generated@@265 ($generated@@347 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@347 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@76 $generated@@524 ($generated@@247 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (=> (= (type $generated@@528) ($generated@@78 $generated@@530 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@440 $generated@@528 $generated@@529) $generated@@529))))
 :pattern ( ($generated@@440 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@531 ($generated@@77 $generated@@532)) $generated@@532)
 :pattern ( ($generated@@77 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@533 ($generated@@230 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@230 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@536)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@537 ($generated@@235 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@235 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@540)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@66)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@66) (= ($generated@@541 ($generated@@159 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@159 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@544)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@66)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@545 ($generated@@247 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@247 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@548)) $generated@@57))
 :pattern ( ($generated@@247 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
(= ($generated@@343 $generated@@550 ($generated@@285 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@285 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) $generated@@66)) (= ($generated@@141 $generated@@551 ($generated@@424 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@551) $generated@@554))) (and ($generated@@221 ($generated@@83 ($generated@@399 $generated@@551) $generated@@554) $generated@@553) ($generated@@221 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@551) $generated@@554))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@141 $generated@@551 ($generated@@424 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) $generated@@66)) (= ($generated@@141 $generated@@555 ($generated@@432 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@555) $generated@@558))) (and ($generated@@221 ($generated@@83 ($generated@@407 $generated@@555) $generated@@558) $generated@@557) ($generated@@221 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@555) $generated@@558))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@141 $generated@@555 ($generated@@432 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@154)) (< ($generated@@559 $generated@@561) ($generated@@560 ($generated@@220 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@220 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (< ($generated@@559 $generated@@564) ($generated@@560 ($generated@@220 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@220 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@154) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) $generated@@66)) ($generated@@221 $generated@@565 ($generated@@424 $generated@@566 $generated@@567))) (and (= ($generated@@285 ($generated@@343 ($generated@@306 $generated@@154 $generated@@154) $generated@@565)) $generated@@565) ($generated@@141 ($generated@@343 ($generated@@306 $generated@@154 $generated@@154) $generated@@565) ($generated@@424 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@221 $generated@@565 ($generated@@424 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@221 $generated@@568 ($generated@@432 $generated@@569 $generated@@570))) (and (= ($generated@@285 ($generated@@343 ($generated@@324 $generated@@154 $generated@@154) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@343 ($generated@@324 $generated@@154 $generated@@154) $generated@@568) ($generated@@432 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@221 $generated@@568 ($generated@@432 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@66) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@154)) ($generated@@221 $generated@@573 ($generated@@144 $generated@@571 $generated@@572))) (and (= ($generated@@285 ($generated@@343 $generated@@145 $generated@@573)) $generated@@573) ($generated@@141 ($generated@@343 $generated@@145 $generated@@573) ($generated@@144 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@221 $generated@@573 ($generated@@144 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@575 T@T) ) (! (= (type ($generated@@574 $generated@@575)) ($generated@@78 $generated@@575 $generated@@4))
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@83 ($generated@@574 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@83 ($generated@@574 $generated@@577) $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@83 ($generated@@459 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@83 ($generated@@459 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@71)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@66) (= (type $generated@@583) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@582 $generated@@583)) $generated@@62) (= ($generated@@580 ($generated@@144 $generated@@582 $generated@@583)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@582 $generated@@583))
)))
(assert  (and (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@249 (type $generated@@586))))
(= (type ($generated@@584 $generated@@586)) ($generated@@248 $generated@@587)))
 :pattern ( ($generated@@584 $generated@@586))
)) (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@249 (type $generated@@588))))
(= (type ($generated@@585 $generated@@588)) $generated@@589))
 :pattern ( ($generated@@585 $generated@@588))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (=> (= (type $generated@@590) ($generated@@248 $generated@@592)) (and (= ($generated@@584 ($generated@@246 $generated@@590 $generated@@591)) $generated@@590) (= ($generated@@585 ($generated@@246 $generated@@590 $generated@@591)) $generated@@591))))
 :pattern ( ($generated@@246 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@145) (= ($generated@@559 ($generated@@285 $generated@@593)) ($generated@@560 $generated@@593)))
 :pattern ( ($generated@@559 ($generated@@285 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) ($generated@@221 $generated@@594 ($generated@@77 0))) (and (= ($generated@@285 ($generated@@343 $generated@@2 $generated@@594)) $generated@@594) ($generated@@141 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@594) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@594 ($generated@@77 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@154) (= (type $generated@@596) $generated@@66)) ($generated@@221 $generated@@595 ($generated@@230 $generated@@596))) (and (= ($generated@@285 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@595)) $generated@@595) ($generated@@141 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@595) ($generated@@230 $generated@@596))))
 :pattern ( ($generated@@221 $generated@@595 ($generated@@230 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@154) (= (type $generated@@598) $generated@@66)) ($generated@@221 $generated@@597 ($generated@@235 $generated@@598))) (and (= ($generated@@285 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@597)) $generated@@597) ($generated@@141 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@597) ($generated@@235 $generated@@598))))
 :pattern ( ($generated@@221 $generated@@597 ($generated@@235 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@154) (= (type $generated@@600) $generated@@66)) ($generated@@221 $generated@@599 ($generated@@159 $generated@@600))) (and (= ($generated@@285 ($generated@@343 ($generated@@78 $generated@@154 $generated@@2) $generated@@599)) $generated@@599) ($generated@@141 ($generated@@343 ($generated@@78 $generated@@154 $generated@@2) $generated@@599) ($generated@@159 $generated@@600))))
 :pattern ( ($generated@@221 $generated@@599 ($generated@@159 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@154) (= (type $generated@@602) $generated@@66)) ($generated@@221 $generated@@601 ($generated@@247 $generated@@602))) (and (= ($generated@@285 ($generated@@343 ($generated@@248 $generated@@154) $generated@@601)) $generated@@601) ($generated@@141 ($generated@@343 ($generated@@248 $generated@@154) $generated@@601) ($generated@@247 $generated@@602))))
 :pattern ( ($generated@@221 $generated@@601 ($generated@@247 $generated@@602)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@580 $generated@@138) $generated@@65))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@603 ($generated@@159 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@603 $generated@@606)))) ($generated@@265 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@83 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@76 $generated@@603 ($generated@@159 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@145) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@609) (and ($generated@@143 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@66) ($generated@@76 $generated@@607 ($generated@@144 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@76 $generated@@607 ($generated@@144 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@265 ($generated@@152 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@265 ($generated@@152 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@145) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@613) (and ($generated@@143 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@66) ($generated@@76 $generated@@611 ($generated@@144 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@76 $generated@@611 ($generated@@144 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@265 ($generated@@153 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@265 ($generated@@153 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) (= ($generated@@141 $generated@@615 $generated@@138)  (and (<= ($generated@@240 0) ($generated $generated@@615)) (< ($generated $generated@@615) 4294967296))))
 :pattern ( ($generated@@141 $generated@@615 $generated@@138))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@154) (= (type $generated@@617) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@616) ($generated@@242 $generated@@617)) ($generated@@242 ($generated@@220 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@616) ($generated@@242 $generated@@617)))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@240 $generated@@618))) ($generated@@242 ($generated@@285 ($generated@@8 $generated@@618))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@240 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ) (! (= ($generated@@285 ($generated@@242 $generated@@619)) ($generated@@242 ($generated@@285 $generated@@619)))
 :pattern ( ($generated@@285 ($generated@@242 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@249 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@248 $generated@@621)) (= ($generated@@278 $generated@@620) 0)) (= $generated@@620 ($generated@@277 $generated@@621))))
 :pattern ( ($generated@@278 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@623)))
 (=> (and (and (= (type $generated@@622) ($generated@@78 $generated@@625 $generated@@2)) (= (type $generated@@624) $generated@@2)) (<= 0 ($generated $generated@@624))) (= ($generated@@298 ($generated@@84 $generated@@622 $generated@@623 $generated@@624)) (+ (- ($generated@@298 $generated@@622) ($generated ($generated@@83 $generated@@622 $generated@@623))) ($generated $generated@@624)))))
 :pattern ( ($generated@@298 ($generated@@84 $generated@@622 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@627) $generated@@2)) ($generated@@76 $generated@@627 $generated@@46 $generated@@626))
 :pattern ( ($generated@@76 $generated@@627 $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@629) $generated@@3)) ($generated@@76 $generated@@629 $generated@@47 $generated@@628))
 :pattern ( ($generated@@76 $generated@@629 $generated@@47 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@631) $generated@@4)) ($generated@@76 $generated@@631 $generated@@44 $generated@@630))
 :pattern ( ($generated@@76 $generated@@631 $generated@@44 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@633) $generated@@261)) ($generated@@76 $generated@@633 $generated@@45 $generated@@632))
 :pattern ( ($generated@@76 $generated@@633 $generated@@45 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@635) $generated@@154)) ($generated@@76 $generated@@635 $generated@@48 $generated@@634))
 :pattern ( ($generated@@76 $generated@@635 $generated@@48 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@248 $generated@@154)) (= (type $generated@@637) $generated@@66)) (= ($generated@@141 $generated@@636 ($generated@@247 $generated@@637)) (forall (($generated@@638 Int) ) (!  (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@278 $generated@@636))) ($generated@@221 ($generated@@347 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@347 $generated@@636 $generated@@638))
))))
 :pattern ( ($generated@@141 $generated@@636 ($generated@@247 $generated@@637)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 Int) ) (!  (=> (= (type $generated@@640) ($generated@@248 $generated@@154)) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@278 $generated@@640))) (< ($generated@@560 ($generated@@343 $generated@@145 ($generated@@347 $generated@@640 $generated@@641))) ($generated@@639 $generated@@640))))
 :pattern ( ($generated@@560 ($generated@@343 $generated@@145 ($generated@@347 $generated@@640 $generated@@641))))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@643) $generated@@66)) (= (type $generated@@644) $generated@@66)) ($generated@@141 $generated@@642 ($generated@@424 $generated@@643 $generated@@644))) (and (and ($generated@@141 ($generated@@304 $generated@@642) ($generated@@230 $generated@@643)) ($generated@@141 ($generated@@359 $generated@@642) ($generated@@230 $generated@@644))) ($generated@@141 ($generated@@398 $generated@@642) ($generated@@230 ($generated@@144 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@141 $generated@@642 ($generated@@424 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@646) $generated@@66)) (= (type $generated@@647) $generated@@66)) ($generated@@141 $generated@@645 ($generated@@432 $generated@@646 $generated@@647))) (and (and ($generated@@141 ($generated@@322 $generated@@645) ($generated@@235 $generated@@646)) ($generated@@141 ($generated@@370 $generated@@645) ($generated@@235 $generated@@647))) ($generated@@141 ($generated@@406 $generated@@645) ($generated@@235 ($generated@@144 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@141 $generated@@645 ($generated@@432 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@2) ($generated@@141 $generated@@648 $generated@@46))
 :pattern ( ($generated@@141 $generated@@648 $generated@@46))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@3) ($generated@@141 $generated@@649 $generated@@47))
 :pattern ( ($generated@@141 $generated@@649 $generated@@47))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@4) ($generated@@141 $generated@@650 $generated@@44))
 :pattern ( ($generated@@141 $generated@@650 $generated@@44))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@261) ($generated@@141 $generated@@651 $generated@@45))
 :pattern ( ($generated@@141 $generated@@651 $generated@@45))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@154) ($generated@@141 $generated@@652 $generated@@48))
 :pattern ( ($generated@@141 $generated@@652 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Bool)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 (T@U) Bool)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () Bool)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () Bool)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () Bool)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () Bool)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Bool)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () Bool)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () Bool)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@653) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@654) $generated@@79)) (= (type $generated@@655) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@657) ($generated@@248 $generated@@154))) (= (type $generated@@660) ($generated@@248 $generated@@154))) (= (type $generated@@664) ($generated@@248 $generated@@154))) (= (type $generated@@669) ($generated@@248 $generated@@154))) (= (type $generated@@671) ($generated@@248 $generated@@154))) (= (type $generated@@674) ($generated@@248 $generated@@154))) (= (type $generated@@678) ($generated@@248 $generated@@154))) (= (type $generated@@679) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@680) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@681) ($generated@@248 $generated@@154))) (= (type $generated@@683) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@685) ($generated@@248 $generated@@154))) (= (type $generated@@687) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@688) ($generated@@248 $generated@@154))) (= (type $generated@@690) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@691) ($generated@@248 $generated@@154))) (= (type $generated@@693) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@694) ($generated@@248 $generated@@154))) (= (type $generated@@696) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@697) ($generated@@248 $generated@@154))) (= (type $generated@@699) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@700) ($generated@@248 $generated@@154))) (= (type $generated@@702) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@703) ($generated@@248 $generated@@154))) (= (type $generated@@705) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@706) ($generated@@248 $generated@@154))) (= (type $generated@@708) ($generated@@248 $generated@@154))) (= (type $generated@@709) ($generated@@248 $generated@@154))) (= (type $generated@@710) ($generated@@248 $generated@@154))) (= (type $generated@@711) ($generated@@248 $generated@@154))) (= (type $generated@@712) ($generated@@248 $generated@@154))) (= (type $generated@@713) ($generated@@248 $generated@@154))) (= (type $generated@@714) ($generated@@248 $generated@@154))) (= (type $generated@@715) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@716) ($generated@@78 $generated@@154 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@718  (=> (and (= $generated@@653 ($generated@@165 $generated@@654 $generated@@655 $generated@@60 false)) (= $generated@@656 ($generated@@240 1))) (and (=> (= (ControlFlow 0 2) (- 0 26)) (and (<= ($generated@@240 0) $generated@@656) (< $generated@@656 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@656) (< $generated@@656 4294967296)) (=> (and (= $generated@@657 ($generated@@242 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@8 ($generated@@240 1)))))) (= $generated@@658 ($generated@@240 1))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (and (<= ($generated@@240 0) $generated@@658) (< $generated@@658 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@658) (< $generated@@658 4294967296)) (=> (= $generated@@659 ($generated@@240 2)) (and (=> (= (ControlFlow 0 2) (- 0 24)) (and (<= ($generated@@240 0) $generated@@659) (< $generated@@659 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@659) (< $generated@@659 4294967296)) (=> (and (= $generated@@660 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@8 ($generated@@240 1)))) ($generated@@285 ($generated@@8 ($generated@@240 2)))))) (= $generated@@661 ($generated@@240 1))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (and (<= ($generated@@240 0) $generated@@661) (< $generated@@661 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@661) (< $generated@@661 4294967296)) (=> (= $generated@@662 ($generated@@240 2)) (and (=> (= (ControlFlow 0 2) (- 0 22)) (and (<= ($generated@@240 0) $generated@@662) (< $generated@@662 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@662) (< $generated@@662 4294967296)) (=> (= $generated@@663 ($generated@@240 3)) (and (=> (= (ControlFlow 0 2) (- 0 21)) (and (<= ($generated@@240 0) $generated@@663) (< $generated@@663 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@663) (< $generated@@663 4294967296)) (=> (and (= $generated@@664 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@8 ($generated@@240 1)))) ($generated@@285 ($generated@@8 ($generated@@240 2)))) ($generated@@285 ($generated@@8 ($generated@@240 3)))))) (= $generated@@665 ($generated@@240 1))) (and (=> (= (ControlFlow 0 2) (- 0 20)) (and (<= ($generated@@240 0) $generated@@665) (< $generated@@665 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@665) (< $generated@@665 4294967296)) (=> (= $generated@@666 ($generated@@240 2)) (and (=> (= (ControlFlow 0 2) (- 0 19)) (and (<= ($generated@@240 0) $generated@@666) (< $generated@@666 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@666) (< $generated@@666 4294967296)) (=> (= $generated@@667 ($generated@@240 3)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= ($generated@@240 0) $generated@@667) (< $generated@@667 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@667) (< $generated@@667 4294967296)) (=> (= $generated@@668 ($generated@@240 4)) (and (=> (= (ControlFlow 0 2) (- 0 17)) (and (<= ($generated@@240 0) $generated@@668) (< $generated@@668 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@668) (< $generated@@668 4294967296)) (=> (and (= $generated@@669 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@8 ($generated@@240 1)))) ($generated@@285 ($generated@@8 ($generated@@240 2)))) ($generated@@285 ($generated@@8 ($generated@@240 3)))) ($generated@@285 ($generated@@8 ($generated@@240 4)))))) (= $generated@@670 ($generated@@240 1))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (and (<= ($generated@@240 0) $generated@@670) (< $generated@@670 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@670) (< $generated@@670 4294967296)) (=> (and (= $generated@@671 ($generated@@242 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@8 ($generated@@240 1)))))) (= $generated@@672 ($generated@@240 1))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= ($generated@@240 0) $generated@@672) (< $generated@@672 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@672) (< $generated@@672 4294967296)) (=> (= $generated@@673 ($generated@@240 2)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= ($generated@@240 0) $generated@@673) (< $generated@@673 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@673) (< $generated@@673 4294967296)) (=> (and (= $generated@@674 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@8 ($generated@@240 1)))) ($generated@@285 ($generated@@8 ($generated@@240 2)))))) (= $generated@@675 ($generated@@240 1))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@240 0) $generated@@675) (< $generated@@675 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@675) (< $generated@@675 4294967296)) (=> (= $generated@@676 ($generated@@240 2)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@240 0) $generated@@676) (< $generated@@676 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@676) (< $generated@@676 4294967296)) (=> (= $generated@@677 ($generated@@240 3)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@240 0) $generated@@677) (< $generated@@677 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@677) (< $generated@@677 4294967296)) (=> (= $generated@@678 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@8 ($generated@@240 1)))) ($generated@@285 ($generated@@8 ($generated@@240 2)))) ($generated@@285 ($generated@@8 ($generated@@240 3)))))) (=> (and (and (= $generated@@679 ($generated@@440 ($generated@@440 ($generated@@440 ($generated@@574 $generated@@154) ($generated@@285 $generated@@657)) ($generated@@285 $generated@@660)) ($generated@@285 $generated@@664))) (= $generated@@680 ($generated@@380 $generated@@679 ($generated@@440 ($generated@@574 $generated@@154) ($generated@@285 $generated@@657))))) (and (= $generated@@681 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 49))))) (= $generated@@682 ($generated@@0 ($generated@@83 $generated@@679 ($generated@@285 $generated@@657)))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) $generated@@682) (=> $generated@@682 (=> (and ($generated@@264 $generated@@683) ($generated@@684 $generated@@683)) (=> (and (and (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) $generated@@79) (=> (and (not (= $generated@@719 $generated@@654)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@655 $generated@@719) $generated@@60))) (= ($generated@@83 $generated@@683 $generated@@719) ($generated@@83 $generated@@655 $generated@@719))))
 :pattern ( ($generated@@83 $generated@@683 $generated@@719))
)) ($generated@@134 $generated@@655 $generated@@683)) (and (= $generated@@685 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 50))))) (= $generated@@686 ($generated@@0 ($generated@@83 $generated@@679 ($generated@@285 $generated@@660)))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) $generated@@686) (=> $generated@@686 (=> (and ($generated@@264 $generated@@687) ($generated@@684 $generated@@687)) (=> (and (and (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) $generated@@79) (=> (and (not (= $generated@@720 $generated@@654)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@683 $generated@@720) $generated@@60))) (= ($generated@@83 $generated@@687 $generated@@720) ($generated@@83 $generated@@683 $generated@@720))))
 :pattern ( ($generated@@83 $generated@@687 $generated@@720))
)) ($generated@@134 $generated@@683 $generated@@687)) (and (= $generated@@688 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 51))))) (= $generated@@689 ($generated@@0 ($generated@@83 $generated@@679 ($generated@@285 $generated@@664)))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) $generated@@689) (=> $generated@@689 (=> (and ($generated@@264 $generated@@690) ($generated@@684 $generated@@690)) (=> (and (and (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@79) (=> (and (not (= $generated@@721 $generated@@654)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@687 $generated@@721) $generated@@60))) (= ($generated@@83 $generated@@690 $generated@@721) ($generated@@83 $generated@@687 $generated@@721))))
 :pattern ( ($generated@@83 $generated@@690 $generated@@721))
)) ($generated@@134 $generated@@687 $generated@@690)) (and (= $generated@@691 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 78))) ($generated@@285 ($generated@@259 111))) ($generated@@285 ($generated@@259 110))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 49))))) (= $generated@@692  (not ($generated@@0 ($generated@@83 $generated@@680 ($generated@@285 $generated@@657))))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) $generated@@692) (=> $generated@@692 (=> (and ($generated@@264 $generated@@693) ($generated@@684 $generated@@693)) (=> (and (and (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@79) (=> (and (not (= $generated@@722 $generated@@654)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@690 $generated@@722) $generated@@60))) (= ($generated@@83 $generated@@693 $generated@@722) ($generated@@83 $generated@@690 $generated@@722))))
 :pattern ( ($generated@@83 $generated@@693 $generated@@722))
)) ($generated@@134 $generated@@690 $generated@@693)) (and (= $generated@@694 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 78))) ($generated@@285 ($generated@@259 111))) ($generated@@285 ($generated@@259 110))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 50))))) (= $generated@@695  (not ($generated@@0 ($generated@@83 $generated@@679 ($generated@@285 $generated@@669))))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) $generated@@695) (=> $generated@@695 (=> (and ($generated@@264 $generated@@696) ($generated@@684 $generated@@696)) (=> (and (and (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@79) (=> (and (not (= $generated@@723 $generated@@654)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@693 $generated@@723) $generated@@60))) (= ($generated@@83 $generated@@696 $generated@@723) ($generated@@83 $generated@@693 $generated@@723))))
 :pattern ( ($generated@@83 $generated@@696 $generated@@723))
)) ($generated@@134 $generated@@693 $generated@@696)) (and (= $generated@@697 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 78))) ($generated@@285 ($generated@@259 111))) ($generated@@285 ($generated@@259 110))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 51))))) (= $generated@@698  (not ($generated@@0 ($generated@@83 $generated@@680 ($generated@@285 $generated@@669))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) $generated@@698) (=> $generated@@698 (=> (and ($generated@@264 $generated@@699) ($generated@@684 $generated@@699)) (=> (and (and (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@79) (=> (and (not (= $generated@@724 $generated@@654)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@696 $generated@@724) $generated@@60))) (= ($generated@@83 $generated@@699 $generated@@724) ($generated@@83 $generated@@696 $generated@@724))))
 :pattern ( ($generated@@83 $generated@@699 $generated@@724))
)) ($generated@@134 $generated@@696 $generated@@699)) (and (= $generated@@700 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 86))) ($generated@@285 ($generated@@259 97))) ($generated@@285 ($generated@@259 108))) ($generated@@285 ($generated@@259 117))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 49))))) (= $generated@@701 ($generated@@0 ($generated@@83 $generated@@679 ($generated@@285 $generated@@671)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@701) (=> $generated@@701 (=> (and ($generated@@264 $generated@@702) ($generated@@684 $generated@@702)) (=> (and (and (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@79) (=> (and (not (= $generated@@725 $generated@@654)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@699 $generated@@725) $generated@@60))) (= ($generated@@83 $generated@@702 $generated@@725) ($generated@@83 $generated@@699 $generated@@725))))
 :pattern ( ($generated@@83 $generated@@702 $generated@@725))
)) ($generated@@134 $generated@@699 $generated@@702)) (and (= $generated@@703 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 86))) ($generated@@285 ($generated@@259 97))) ($generated@@285 ($generated@@259 108))) ($generated@@285 ($generated@@259 117))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 50))))) (= $generated@@704 ($generated@@0 ($generated@@83 $generated@@679 ($generated@@285 $generated@@674)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@704) (=> $generated@@704 (=> (and (and (and ($generated@@264 $generated@@705) ($generated@@684 $generated@@705)) (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@79) (=> (and (not (= $generated@@726 $generated@@654)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@702 $generated@@726) $generated@@60))) (= ($generated@@83 $generated@@705 $generated@@726) ($generated@@83 $generated@@702 $generated@@726))))
 :pattern ( ($generated@@83 $generated@@705 $generated@@726))
))) (and (and ($generated@@134 $generated@@702 $generated@@705) (= $generated@@706 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 86))) ($generated@@285 ($generated@@259 97))) ($generated@@285 ($generated@@259 108))) ($generated@@285 ($generated@@259 117))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 51)))))) (and (= $generated@@707 ($generated@@0 ($generated@@83 $generated@@679 ($generated@@285 $generated@@678)))) (= (ControlFlow 0 2) (- 0 1))))) $generated@@707)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@727  (=> (and ($generated@@264 $generated@@655) ($generated@@684 $generated@@655)) (=> (and (and (and ($generated@@141 $generated@@708 ($generated@@247 $generated@@138)) ($generated@@76 $generated@@708 ($generated@@247 $generated@@138) $generated@@655)) true) (and (and ($generated@@141 $generated@@709 ($generated@@247 $generated@@138)) ($generated@@76 $generated@@709 ($generated@@247 $generated@@138) $generated@@655)) true)) (=> (and (and (and (and (and ($generated@@141 $generated@@710 ($generated@@247 $generated@@138)) ($generated@@76 $generated@@710 ($generated@@247 $generated@@138) $generated@@655)) true) (and (and ($generated@@141 $generated@@711 ($generated@@247 $generated@@138)) ($generated@@76 $generated@@711 ($generated@@247 $generated@@138) $generated@@655)) true)) (and (and (and ($generated@@141 $generated@@712 ($generated@@247 $generated@@138)) ($generated@@76 $generated@@712 ($generated@@247 $generated@@138) $generated@@655)) true) (and (and ($generated@@141 $generated@@713 ($generated@@247 $generated@@138)) ($generated@@76 $generated@@713 ($generated@@247 $generated@@138) $generated@@655)) true))) (and (and (and (and ($generated@@141 $generated@@714 ($generated@@247 $generated@@138)) ($generated@@76 $generated@@714 ($generated@@247 $generated@@138) $generated@@655)) true) (and (and ($generated@@141 $generated@@715 ($generated@@230 ($generated@@247 $generated@@138))) ($generated@@76 $generated@@715 ($generated@@230 ($generated@@247 $generated@@138)) $generated@@655)) true)) (and (and (and ($generated@@141 $generated@@716 ($generated@@230 ($generated@@247 $generated@@138))) ($generated@@76 $generated@@716 ($generated@@230 ($generated@@247 $generated@@138)) $generated@@655)) true) (and (= 2 $generated@@717) (= (ControlFlow 0 27) 2))))) $generated@@718)))))
$generated@@727)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@441 (T@U) Int)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@538 (T@T) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@154)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271) ($generated@@76 $generated@@269 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@274) $generated@@154)) (= (type $generated@@275) $generated@@66)) ($generated@@134 $generated@@272 $generated@@273)) ($generated@@247 $generated@@274 $generated@@275 $generated@@272)) ($generated@@247 $generated@@274 $generated@@275 $generated@@273))
 :pattern ( ($generated@@134 $generated@@272 $generated@@273) ($generated@@247 $generated@@274 $generated@@275 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@279) $generated@@66)) ($generated@@134 $generated@@276 $generated@@277)) ($generated@@76 $generated@@278 $generated@@279 $generated@@276)) ($generated@@76 $generated@@278 $generated@@279 $generated@@277))
 :pattern ( ($generated@@134 $generated@@276 $generated@@277) ($generated@@76 $generated@@278 $generated@@279 $generated@@276))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@78 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@81 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@78 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@83 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@78 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@81 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@78 $generated@@323 $generated@@2)) (= ($generated@@160 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@83 $generated@@322 $generated@@324))) (<= ($generated ($generated@@83 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@83 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@160 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@154) ($generated@@221 $generated@@328 $generated@@138)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@328)) $generated@@328) ($generated@@141 ($generated@@325 $generated@@2 $generated@@328) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@328 $generated@@138))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@78 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@352) $generated@@66)) (= ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@351 $generated@@353)))) ($generated@@221 $generated@@353 $generated@@352))
 :pattern ( ($generated@@83 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@290 (type $generated@@355))))
(let (($generated@@357 ($generated@@289 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@288 $generated@@357 $generated@@356)) (= (= ($generated@@354 $generated@@355) 0) (= $generated@@355 ($generated@@287 $generated@@357 $generated@@356))))))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@359) $generated@@66)) (= (type $generated@@360) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@358 ($generated@@230 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) ($generated@@0 ($generated@@83 $generated@@358 $generated@@361))) ($generated@@247 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@83 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@76 $generated@@358 ($generated@@230 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@363) $generated@@66)) (= (type $generated@@364) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@362 ($generated@@235 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@154) ($generated@@0 ($generated@@83 $generated@@362 $generated@@365))) ($generated@@247 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@235 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@83 ($generated@@281 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@83 ($generated@@281 $generated@@367) $generated@@366)))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@290 (type $generated@@371))))
(let (($generated@@373 ($generated@@289 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@78 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@375) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@374) ($generated@@152 ($generated@@325 $generated@@145 $generated@@375)))) (= ($generated@@83 ($generated@@369 $generated@@374) ($generated@@152 ($generated@@325 $generated@@145 $generated@@375))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@375))))))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@308 (type $generated@@379))))
(let (($generated@@381 ($generated@@307 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@78 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@383) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@382) ($generated@@152 ($generated@@325 $generated@@145 $generated@@383)))) (= ($generated@@83 ($generated@@377 $generated@@382) ($generated@@152 ($generated@@325 $generated@@145 $generated@@383))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@383))))))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@289 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@288 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@83 ($generated@@369 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@384) $generated@@388))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@307 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@306 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@83 ($generated@@344 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@83 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@389) $generated@@393))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@66)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@397) $generated@@401))) (and ($generated@@247 ($generated@@83 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@247 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@76 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@66)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@405) $generated@@409))) (and ($generated@@247 ($generated@@83 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@247 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@76 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@410) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@410 $generated@@412))) (and ($generated@@134 $generated@@410 $generated@@411) ($generated@@134 $generated@@411 $generated@@412))) ($generated@@134 $generated@@410 $generated@@412))
 :pattern ( ($generated@@134 $generated@@410 $generated@@411) ($generated@@134 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@78 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@308 (type $generated@@415))))
(let (($generated@@417 ($generated@@307 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@306 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@305 $generated@@417 $generated@@416)) (= ($generated@@304 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@304 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@308 (type $generated@@418))))
(let (($generated@@420 ($generated@@307 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@306 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@305 $generated@@420 $generated@@419)) (= ($generated@@344 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@344 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@308 (type $generated@@421))))
(let (($generated@@423 ($generated@@307 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@306 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@305 $generated@@423 $generated@@422)) (= ($generated@@376 $generated@@421) ($generated@@413 $generated@@154))))))
 :pattern ( ($generated@@376 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@290 (type $generated@@424))))
(let (($generated@@426 ($generated@@289 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@288 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@287 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@154) (= (type $generated@@428) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@368 $generated@@424) ($generated@@267 ($generated@@220 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@308 (type $generated@@429))))
(let (($generated@@431 ($generated@@307 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@306 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@305 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@154) (= (type $generated@@433) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@376 $generated@@429) ($generated@@267 ($generated@@220 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@376 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@221 $generated@@434 $generated@@46)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@434)) $generated@@434) ($generated@@141 ($generated@@325 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@47)) (and (= ($generated@@267 ($generated@@325 $generated@@3 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@325 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@154) ($generated@@221 $generated@@436 $generated@@44)) (and (= ($generated@@267 ($generated@@325 $generated@@4 $generated@@436)) $generated@@436) ($generated@@141 ($generated@@325 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@154) ($generated@@221 $generated@@438 $generated@@45)) (and (= ($generated@@267 ($generated@@325 $generated@@437 $generated@@438)) $generated@@438) ($generated@@141 ($generated@@325 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@66) (= ($generated@@221 ($generated@@267 $generated@@439) $generated@@440) ($generated@@141 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@221 ($generated@@267 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@81 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@78 $generated@@443 $generated@@4)) (<= 0 ($generated@@441 $generated@@442))))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@81 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@78 $generated@@445 $generated@@2)) (<= 0 ($generated@@280 $generated@@444))))
 :pattern ( ($generated@@280 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@262 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@261 $generated@@447)) (<= 0 ($generated@@260 $generated@@446))))
 :pattern ( ($generated@@260 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@290 (type $generated@@448))))
(let (($generated@@450 ($generated@@289 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@288 $generated@@450 $generated@@449)) (<= 0 ($generated@@354 $generated@@448)))))
 :pattern ( ($generated@@354 $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@394 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@394 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@394 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@394 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@394 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@402 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@402 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@402 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@402 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@74 ($generated@@402 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@154) (= (type $generated@@472) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@144 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@144 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@144 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@144 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@154) (= (type $generated@@482) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@220 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) (= (type $generated@@484) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@220 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@262 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@261 $generated@@154)) (= (type $generated@@492) $generated@@66)) (= (type $generated@@493) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@260 $generated@@491))) ($generated@@247 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@76 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@77 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@77 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@230 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@230 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@235 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@235 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@159 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@159 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@325 $generated@@514 ($generated@@267 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@267 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) $generated@@66)) (= ($generated@@141 $generated@@515 ($generated@@394 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@515) $generated@@518))) (and ($generated@@221 ($generated@@83 ($generated@@369 $generated@@515) $generated@@518) $generated@@517) ($generated@@221 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@515) $generated@@518))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@141 $generated@@515 ($generated@@394 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) (= ($generated@@141 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@519) $generated@@522))) (and ($generated@@221 ($generated@@83 ($generated@@377 $generated@@519) $generated@@522) $generated@@521) ($generated@@221 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@519) $generated@@522))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@141 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) (= (type $generated@@526) $generated@@154)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@220 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@220 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@154) (= (type $generated@@528) $generated@@154)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@220 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@220 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@154) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) $generated@@66)) ($generated@@221 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@267 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@529)) $generated@@529) ($generated@@141 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@221 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@154) (= (type $generated@@533) $generated@@66)) (= (type $generated@@534) $generated@@66)) ($generated@@221 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@267 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@532)) $generated@@532) ($generated@@141 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@221 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@154)) ($generated@@221 $generated@@537 ($generated@@144 $generated@@535 $generated@@536))) (and (= ($generated@@267 ($generated@@325 $generated@@145 $generated@@537)) $generated@@537) ($generated@@141 ($generated@@325 $generated@@145 $generated@@537) ($generated@@144 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@144 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@T) ) (! (= (type ($generated@@538 $generated@@539)) ($generated@@78 $generated@@539 $generated@@4))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@83 ($generated@@538 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@83 ($generated@@538 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@83 ($generated@@413 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@83 ($generated@@413 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@71)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@66) (= (type $generated@@547) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@144 $generated@@546 $generated@@547)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@145) (= ($generated@@523 ($generated@@267 $generated@@548)) ($generated@@524 $generated@@548)))
 :pattern ( ($generated@@523 ($generated@@267 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@290 (type $generated@@549))))
(let (($generated@@551 ($generated@@289 (type $generated@@549))))
 (=> (= (type $generated@@549) ($generated@@288 $generated@@551 $generated@@550)) (= ($generated@@441 ($generated@@286 $generated@@549)) ($generated@@354 $generated@@549)))))
 :pattern ( ($generated@@441 ($generated@@286 $generated@@549)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@290 (type $generated@@552))))
(let (($generated@@554 ($generated@@289 (type $generated@@552))))
 (=> (= (type $generated@@552) ($generated@@288 $generated@@554 $generated@@553)) (= ($generated@@441 ($generated@@368 $generated@@552)) ($generated@@354 $generated@@552)))))
 :pattern ( ($generated@@441 ($generated@@368 $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@290 (type $generated@@555))))
(let (($generated@@557 ($generated@@289 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@288 $generated@@557 $generated@@556)) (<= ($generated@@441 ($generated@@333 $generated@@555)) ($generated@@354 $generated@@555)))))
 :pattern ( ($generated@@441 ($generated@@333 $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) ($generated@@221 $generated@@558 ($generated@@77 0))) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@558)) $generated@@558) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@558) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@558 ($generated@@77 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@154) (= (type $generated@@560) $generated@@66)) ($generated@@221 $generated@@559 ($generated@@230 $generated@@560))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@559)) $generated@@559) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@559) ($generated@@230 $generated@@560))))
 :pattern ( ($generated@@221 $generated@@559 ($generated@@230 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@66)) ($generated@@221 $generated@@561 ($generated@@235 $generated@@562))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@561)) $generated@@561) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@561) ($generated@@235 $generated@@562))))
 :pattern ( ($generated@@221 $generated@@561 ($generated@@235 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@66)) ($generated@@221 $generated@@563 ($generated@@159 $generated@@564))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@563)) $generated@@563) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@563) ($generated@@159 $generated@@564))))
 :pattern ( ($generated@@221 $generated@@563 ($generated@@159 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@154) (= (type $generated@@566) $generated@@66)) ($generated@@221 $generated@@565 ($generated@@485 $generated@@566))) (and (= ($generated@@267 ($generated@@325 ($generated@@261 $generated@@154) $generated@@565)) $generated@@565) ($generated@@141 ($generated@@325 ($generated@@261 $generated@@154) $generated@@565) ($generated@@485 $generated@@566))))
 :pattern ( ($generated@@221 $generated@@565 ($generated@@485 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@81 (type $generated@@567))))
 (=> (= (type $generated@@567) ($generated@@78 $generated@@568 $generated@@4)) (and (= (= ($generated@@441 $generated@@567) 0) (= $generated@@567 ($generated@@538 $generated@@568))) (=> (not (= ($generated@@441 $generated@@567) 0)) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@568) ($generated@@0 ($generated@@83 $generated@@567 $generated@@569)))
 :no-pattern (type $generated@@569)
 :no-pattern ($generated $generated@@569)
 :no-pattern ($generated@@0 $generated@@569)
))))))
 :pattern ( ($generated@@441 $generated@@567))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@544 $generated@@138) $generated@@65))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@571) $generated@@66)) (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@570 ($generated@@159 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@570 $generated@@573)))) ($generated@@247 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@83 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@76 $generated@@570 ($generated@@159 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@145) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@576) (and ($generated@@143 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@66) ($generated@@76 $generated@@574 ($generated@@144 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@76 $generated@@574 ($generated@@144 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@247 ($generated@@152 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@145) (= (type $generated@@579) $generated@@66)) (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@580) (and ($generated@@143 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@66) ($generated@@76 $generated@@578 ($generated@@144 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@76 $generated@@578 ($generated@@144 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@247 ($generated@@153 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) (= ($generated@@141 $generated@@582 $generated@@138)  (and (<= ($generated@@240 0) ($generated $generated@@582)) (< ($generated $generated@@582) 4294967296))))
 :pattern ( ($generated@@141 $generated@@582 $generated@@138))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@154) (= (type $generated@@584) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@583) ($generated@@242 $generated@@584)) ($generated@@242 ($generated@@220 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@583) ($generated@@242 $generated@@584)))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@267 ($generated@@8 ($generated@@240 $generated@@585))) ($generated@@242 ($generated@@267 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@267 ($generated@@8 ($generated@@240 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@267 ($generated@@242 $generated@@586)) ($generated@@242 ($generated@@267 $generated@@586)))
 :pattern ( ($generated@@267 ($generated@@242 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@262 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@261 $generated@@588)) (= ($generated@@260 $generated@@587) 0)) (= $generated@@587 ($generated@@259 $generated@@588))))
 :pattern ( ($generated@@260 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@78 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@280 ($generated@@84 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@280 $generated@@589) ($generated ($generated@@83 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@280 ($generated@@84 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@2)) ($generated@@76 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@3)) ($generated@@76 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@598) $generated@@4)) ($generated@@76 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@76 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@600) $generated@@437)) ($generated@@76 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@76 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@602) $generated@@154)) ($generated@@76 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@76 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@261 $generated@@154)) (= (type $generated@@604) $generated@@66)) (= ($generated@@141 $generated@@603 ($generated@@485 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@260 $generated@@603))) ($generated@@221 ($generated@@486 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@486 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@141 $generated@@603 ($generated@@485 $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ) (!  (=> (= (type $generated@@607) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@260 $generated@@607))) (< ($generated@@524 ($generated@@325 $generated@@145 ($generated@@486 $generated@@607 $generated@@608))) ($generated@@606 $generated@@607))))
 :pattern ( ($generated@@524 ($generated@@325 $generated@@145 ($generated@@486 $generated@@607 $generated@@608))))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) $generated@@66)) ($generated@@141 $generated@@609 ($generated@@394 $generated@@610 $generated@@611))) (and (and ($generated@@141 ($generated@@286 $generated@@609) ($generated@@230 $generated@@610)) ($generated@@141 ($generated@@333 $generated@@609) ($generated@@230 $generated@@611))) ($generated@@141 ($generated@@368 $generated@@609) ($generated@@230 ($generated@@144 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@141 $generated@@609 ($generated@@394 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) $generated@@66)) ($generated@@141 $generated@@612 ($generated@@402 $generated@@613 $generated@@614))) (and (and ($generated@@141 ($generated@@304 $generated@@612) ($generated@@235 $generated@@613)) ($generated@@141 ($generated@@344 $generated@@612) ($generated@@235 $generated@@614))) ($generated@@141 ($generated@@376 $generated@@612) ($generated@@235 ($generated@@144 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@141 $generated@@612 ($generated@@402 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@2) ($generated@@141 $generated@@615 $generated@@46))
 :pattern ( ($generated@@141 $generated@@615 $generated@@46))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@3) ($generated@@141 $generated@@616 $generated@@47))
 :pattern ( ($generated@@141 $generated@@616 $generated@@47))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@4) ($generated@@141 $generated@@617 $generated@@44))
 :pattern ( ($generated@@141 $generated@@617 $generated@@44))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@437) ($generated@@141 $generated@@618 $generated@@45))
 :pattern ( ($generated@@141 $generated@@618 $generated@@45))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@154) ($generated@@141 $generated@@619 $generated@@48))
 :pattern ( ($generated@@141 $generated@@619 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(declare-fun $generated@@628 () Int)
(assert  (and (and (and (= (type $generated@@621) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@624) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@625) $generated@@79)) (= (type $generated@@626) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@629 true))
(let (($generated@@630  (=> (and (=> (and (<= ($generated@@240 0) $generated@@620) (< $generated@@620 10)) ($generated@@0 ($generated@@83 $generated@@621 ($generated@@267 ($generated@@8 $generated@@620))))) (= (ControlFlow 0 5) 1)) $generated@@629)))
(let (($generated@@631  (=> (= $generated@@622 ($generated@@240 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@240 0) $generated@@622) (< $generated@@622 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@622) (< $generated@@622 4294967296)) (=> (and (<= ($generated@@240 0) $generated@@620) (= $generated@@623 ($generated@@240 10))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@240 0) $generated@@623) (< $generated@@623 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@623) (< $generated@@623 4294967296)) (=> (< $generated@@620 10) (=> (and ($generated@@0 ($generated@@83 $generated@@621 ($generated@@267 ($generated@@8 $generated@@620)))) (= (ControlFlow 0 2) 1)) $generated@@629))))))))))
(let (($generated@@632  (=> (= $generated@@624 ($generated@@165 $generated@@625 $generated@@626 $generated@@60 false)) (=> (and (<= ($generated@@240 0) $generated@@620) (< $generated@@620 4294967296)) (and (=> (= (ControlFlow 0 6) 2) $generated@@631) (=> (= (ControlFlow 0 6) 5) $generated@@630))))))
(let (($generated@@633  (=> (and ($generated@@246 $generated@@626) ($generated@@627 $generated@@626)) (=> (and (and ($generated@@141 $generated@@621 ($generated@@230 $generated@@138)) ($generated@@76 $generated@@621 ($generated@@230 $generated@@138) $generated@@626)) (and (= 2 $generated@@628) (= (ControlFlow 0 7) 6))) $generated@@632))))
$generated@@633))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@259 (Int) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 () T@T)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U Int) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@385 (T@U) Int)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@474 (T@U) Int)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@556 (T@U T@U) T@U)
(declare-fun $generated@@571 (T@T) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@648 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (and (and (and (forall (($generated@@250 T@T) ) (= ($generated@@1 ($generated@@248 $generated@@250)) 17)) (forall (($generated@@251 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@246 $generated@@252 $generated@@253)) ($generated@@248 $generated@@254)))
 :pattern ( ($generated@@246 $generated@@252 $generated@@253))
))) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@247 $generated@@255)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@248 $generated@@154)) (= (type $generated@@257) $generated@@154)) (= (type $generated@@258) $generated@@66)) (and ($generated@@141 $generated@@256 ($generated@@247 $generated@@258)) ($generated@@221 $generated@@257 $generated@@258))) ($generated@@141 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
 :pattern ( ($generated@@141 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
)))
(assert  (and (= ($generated@@1 $generated@@261) 18) (forall (($generated@@262 Int) ) (! (= (type ($generated@@259 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@259 $generated@@262))
))))
(assert (forall (($generated@@263 Int) ) (!  (=> (and (<= 0 $generated@@263) (< $generated@@263 65536)) (= ($generated@@260 ($generated@@259 $generated@@263)) $generated@@263))
 :pattern ( ($generated@@259 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) $generated@@66)) (= (type $generated@@268) $generated@@154)) (= (type $generated@@269) $generated@@154)) (= (type $generated@@270) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@264 $generated@@270)) (= ($generated@@76 ($generated@@220 $generated@@268 $generated@@269) ($generated@@144 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@268 $generated@@269) ($generated@@144 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@145) (= ($generated@@143 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@145) ($generated@@143 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@154) (= (type $generated@@276) $generated@@154)) (= $generated@@274 ($generated@@220 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@143 $generated@@274))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@277 $generated@@279)) ($generated@@248 $generated@@279))
 :pattern ( ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) 0)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
 (=> (= (type $generated@@281) ($generated@@248 $generated@@283)) (= ($generated@@278 ($generated@@246 $generated@@281 $generated@@282)) (+ 1 ($generated@@278 $generated@@281)))))
 :pattern ( ($generated@@246 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@261) (and (and (= ($generated@@259 ($generated@@260 $generated@@284)) $generated@@284) (<= 0 ($generated@@260 $generated@@284))) (< ($generated@@260 $generated@@284) 65536)))
 :pattern ( ($generated@@260 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@154)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@66) (= (type $generated@@289) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@76 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@291) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@292) $generated@@154)) (= (type $generated@@293) $generated@@66)) ($generated@@134 $generated@@290 $generated@@291)) ($generated@@265 $generated@@292 $generated@@293 $generated@@290)) ($generated@@265 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@134 $generated@@290 $generated@@291) ($generated@@265 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@294) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@295) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@297) $generated@@66)) ($generated@@134 $generated@@294 $generated@@295)) ($generated@@76 $generated@@296 $generated@@297 $generated@@294)) ($generated@@76 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@134 $generated@@294 $generated@@295) ($generated@@76 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@78 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@81 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@78 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@83 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@81 (type $generated@@341))))
 (=> (and (= (type $generated@@341) ($generated@@78 $generated@@343 $generated@@4)) (= (type $generated@@342) ($generated@@78 $generated@@343 $generated@@4))) (= ($generated@@340 $generated@@341 $generated@@342) (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@343) (= ($generated@@0 ($generated@@83 $generated@@341 $generated@@344)) ($generated@@0 ($generated@@83 $generated@@342 $generated@@344))))
 :pattern ( ($generated@@83 $generated@@341 $generated@@344))
 :pattern ( ($generated@@83 $generated@@342 $generated@@344))
)))))
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@81 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@78 $generated@@346 $generated@@2)) (= ($generated@@160 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@83 $generated@@345 $generated@@347))) (<= ($generated ($generated@@83 $generated@@345 $generated@@347)) ($generated@@298 $generated@@345))))
 :pattern ( ($generated@@83 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@160 $generated@@345))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@154) ($generated@@221 $generated@@351 $generated@@138)) (and (= ($generated@@285 ($generated@@348 $generated@@2 $generated@@351)) $generated@@351) ($generated@@141 ($generated@@348 $generated@@2 $generated@@351) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@351 $generated@@138))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 Int) ) (! (let (($generated@@355 ($generated@@249 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@355))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 Int) ($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
 (=> (= (type $generated@@356) ($generated@@248 $generated@@359)) (and (=> (= $generated@@357 ($generated@@278 $generated@@356)) (= ($generated@@352 ($generated@@246 $generated@@356 $generated@@358) $generated@@357) $generated@@358)) (=> (not (= $generated@@357 ($generated@@278 $generated@@356))) (= ($generated@@352 ($generated@@246 $generated@@356 $generated@@358) $generated@@357) ($generated@@352 $generated@@356 $generated@@357))))))
 :pattern ( ($generated@@352 ($generated@@246 $generated@@356 $generated@@358) $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@308 (type $generated@@360))))
(let (($generated@@362 ($generated@@307 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@306 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@305 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@304 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@308 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@78 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@308 (type $generated@@367))))
(let (($generated@@369 ($generated@@307 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@306 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@305 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(let (($generated@@373 ($generated@@325 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@324 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@323 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@322 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@326 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@78 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@326 (type $generated@@378))))
(let (($generated@@380 ($generated@@325 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@324 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@323 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@383) $generated@@66)) (= ($generated@@141 $generated@@382 ($generated@@159 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@382 $generated@@384)))) ($generated@@221 $generated@@384 $generated@@383))
 :pattern ( ($generated@@83 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@141 $generated@@382 ($generated@@159 $generated@@383)))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@308 (type $generated@@386))))
(let (($generated@@388 ($generated@@307 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@306 $generated@@388 $generated@@387)) (= (= ($generated@@385 $generated@@386) 0) (= $generated@@386 ($generated@@305 $generated@@388 $generated@@387))))))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@389 ($generated@@230 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@154) ($generated@@0 ($generated@@83 $generated@@389 $generated@@392))) ($generated@@265 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@83 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@76 $generated@@389 ($generated@@230 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@393 ($generated@@235 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@154) ($generated@@0 ($generated@@83 $generated@@393 $generated@@396))) ($generated@@265 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@83 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@76 $generated@@393 ($generated@@235 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@83 ($generated@@299 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@83 ($generated@@299 $generated@@398) $generated@@397)))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@308 (type $generated@@402))))
(let (($generated@@404 ($generated@@307 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@78 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@406) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@405) ($generated@@152 ($generated@@348 $generated@@145 $generated@@406)))) (= ($generated@@83 ($generated@@400 $generated@@405) ($generated@@152 ($generated@@348 $generated@@145 $generated@@406))) ($generated@@153 ($generated@@348 $generated@@145 $generated@@406))))))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@326 (type $generated@@410))))
(let (($generated@@412 ($generated@@325 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@78 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@414) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@413) ($generated@@152 ($generated@@348 $generated@@145 $generated@@414)))) (= ($generated@@83 ($generated@@408 $generated@@413) ($generated@@152 ($generated@@348 $generated@@145 $generated@@414))) ($generated@@153 ($generated@@348 $generated@@145 $generated@@414))))))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@307 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@306 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@83 ($generated@@364 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@83 ($generated@@400 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@415) $generated@@419))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@325 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@324 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@83 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@420) $generated@@424))
 :pattern ( ($generated@@83 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@66)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@429) $generated@@66)) (= (type $generated@@430) $generated@@66)) (= (type $generated@@431) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@428) $generated@@432))) (and ($generated@@265 ($generated@@83 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@265 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@76 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@66)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@437) $generated@@66)) (= (type $generated@@438) $generated@@66)) (= (type $generated@@439) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@436) $generated@@440))) (and ($generated@@265 ($generated@@83 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@265 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@83 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@76 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@81 (type $generated@@441))))
 (=> (and (and (= (type $generated@@441) ($generated@@78 $generated@@443 $generated@@4)) (= (type $generated@@442) ($generated@@78 $generated@@443 $generated@@4))) ($generated@@340 $generated@@441 $generated@@442)) (= $generated@@441 $generated@@442)))
 :pattern ( ($generated@@340 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@445) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@446) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@444 $generated@@446))) (and ($generated@@134 $generated@@444 $generated@@445) ($generated@@134 $generated@@445 $generated@@446))) ($generated@@134 $generated@@444 $generated@@446))
 :pattern ( ($generated@@134 $generated@@444 $generated@@445) ($generated@@134 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@78 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@326 (type $generated@@449))))
(let (($generated@@451 ($generated@@325 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@324 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@323 $generated@@451 $generated@@450)) (= ($generated@@322 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@322 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@326 (type $generated@@452))))
(let (($generated@@454 ($generated@@325 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@324 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@323 $generated@@454 $generated@@453)) (= ($generated@@375 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@375 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@326 (type $generated@@455))))
(let (($generated@@457 ($generated@@325 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@324 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@323 $generated@@457 $generated@@456)) (= ($generated@@407 $generated@@455) ($generated@@447 $generated@@154))))))
 :pattern ( ($generated@@407 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@308 (type $generated@@458))))
(let (($generated@@460 ($generated@@307 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@306 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@305 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@154) (= (type $generated@@462) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@399 $generated@@458) ($generated@@285 ($generated@@220 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@399 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@326 (type $generated@@463))))
(let (($generated@@465 ($generated@@325 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@324 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@323 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@154) (= (type $generated@@467) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@407 $generated@@463) ($generated@@285 ($generated@@220 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@407 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@154) ($generated@@221 $generated@@468 $generated@@46)) (and (= ($generated@@285 ($generated@@348 $generated@@2 $generated@@468)) $generated@@468) ($generated@@141 ($generated@@348 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@154) ($generated@@221 $generated@@469 $generated@@47)) (and (= ($generated@@285 ($generated@@348 $generated@@3 $generated@@469)) $generated@@469) ($generated@@141 ($generated@@348 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@154) ($generated@@221 $generated@@470 $generated@@44)) (and (= ($generated@@285 ($generated@@348 $generated@@4 $generated@@470)) $generated@@470) ($generated@@141 ($generated@@348 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@470 $generated@@44))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@154) ($generated@@221 $generated@@471 $generated@@45)) (and (= ($generated@@285 ($generated@@348 $generated@@261 $generated@@471)) $generated@@471) ($generated@@141 ($generated@@348 $generated@@261 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@66) (= ($generated@@221 ($generated@@285 $generated@@472) $generated@@473) ($generated@@141 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@221 ($generated@@285 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@81 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@78 $generated@@476 $generated@@4)) (<= 0 ($generated@@474 $generated@@475))))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@81 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@78 $generated@@478 $generated@@2)) (<= 0 ($generated@@298 $generated@@477))))
 :pattern ( ($generated@@298 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@249 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@248 $generated@@480)) (<= 0 ($generated@@278 $generated@@479))))
 :pattern ( ($generated@@278 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@308 (type $generated@@481))))
(let (($generated@@483 ($generated@@307 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@306 $generated@@483 $generated@@482)) (<= 0 ($generated@@385 $generated@@481)))))
 :pattern ( ($generated@@385 $generated@@481))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@66) (= (type $generated@@487) $generated@@66)) (= ($generated@@484 ($generated@@425 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@425 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@488 ($generated@@425 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@425 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@66) (= (type $generated@@493) $generated@@66)) (= ($generated@@74 ($generated@@425 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@66) (= (type $generated@@497) $generated@@66)) (= ($generated@@494 ($generated@@433 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@433 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@433 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@433 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@66) (= (type $generated@@503) $generated@@66)) (= ($generated@@74 ($generated@@433 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@154) (= (type $generated@@505) $generated@@154)) (= ($generated@@271 ($generated@@220 $generated@@504 $generated@@505)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@66) (= (type $generated@@509) $generated@@66)) (= ($generated@@506 ($generated@@144 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@144 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@66) (= (type $generated@@513) $generated@@66)) (= ($generated@@510 ($generated@@144 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@144 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@154) (= (type $generated@@515) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@220 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@248 $generated@@154)) (= (type $generated@@519) $generated@@66)) (= (type $generated@@520) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@518 ($generated@@247 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@278 $generated@@518))) ($generated@@265 ($generated@@352 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@352 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@76 $generated@@518 ($generated@@247 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@77 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@77 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@66) (= ($generated@@524 ($generated@@230 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@230 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@66)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@66) (= ($generated@@528 ($generated@@235 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@235 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@66) (= ($generated@@532 ($generated@@159 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@159 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@66)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@66) (= ($generated@@536 ($generated@@247 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@247 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@247 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@348 $generated@@541 ($generated@@285 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@285 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@66)) (= ($generated@@141 $generated@@542 ($generated@@425 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@542) $generated@@545))) (and ($generated@@221 ($generated@@83 ($generated@@400 $generated@@542) $generated@@545) $generated@@544) ($generated@@221 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@542) $generated@@545))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@141 $generated@@542 ($generated@@425 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) $generated@@66)) (= ($generated@@141 $generated@@546 ($generated@@433 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@546) $generated@@549))) (and ($generated@@221 ($generated@@83 ($generated@@408 $generated@@546) $generated@@549) $generated@@548) ($generated@@221 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@83 ($generated@@408 $generated@@546) $generated@@549))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@141 $generated@@546 ($generated@@433 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@154)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@220 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@220 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@154)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@220 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@220 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@557 $generated@@558)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@556 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@66) (= (type $generated@@560) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@561) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@556 $generated@@559 $generated@@560) $generated@@561))  (and ($generated@@221 $generated@@561 $generated@@559) ($generated@@0 ($generated@@83 $generated@@560 $generated@@561)))))
 :pattern ( ($generated@@83 ($generated@@556 $generated@@559 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@154) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) ($generated@@221 $generated@@562 ($generated@@425 $generated@@563 $generated@@564))) (and (= ($generated@@285 ($generated@@348 ($generated@@306 $generated@@154 $generated@@154) $generated@@562)) $generated@@562) ($generated@@141 ($generated@@348 ($generated@@306 $generated@@154 $generated@@154) $generated@@562) ($generated@@425 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@221 $generated@@562 ($generated@@425 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@154) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) $generated@@66)) ($generated@@221 $generated@@565 ($generated@@433 $generated@@566 $generated@@567))) (and (= ($generated@@285 ($generated@@348 ($generated@@324 $generated@@154 $generated@@154) $generated@@565)) $generated@@565) ($generated@@141 ($generated@@348 ($generated@@324 $generated@@154 $generated@@154) $generated@@565) ($generated@@433 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@221 $generated@@565 ($generated@@433 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@66) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@154)) ($generated@@221 $generated@@570 ($generated@@144 $generated@@568 $generated@@569))) (and (= ($generated@@285 ($generated@@348 $generated@@145 $generated@@570)) $generated@@570) ($generated@@141 ($generated@@348 $generated@@145 $generated@@570) ($generated@@144 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@221 $generated@@570 ($generated@@144 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@572 T@T) ) (! (= (type ($generated@@571 $generated@@572)) ($generated@@78 $generated@@572 $generated@@4))
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@83 ($generated@@571 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@83 ($generated@@571 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (not ($generated@@0 ($generated@@83 ($generated@@447 $generated@@576) $generated@@575))))
 :pattern ( (let (($generated@@576 (type $generated@@575)))
($generated@@83 ($generated@@447 $generated@@576) $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@71)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@66) (= (type $generated@@580) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@579 $generated@@580)) $generated@@62) (= ($generated@@577 ($generated@@144 $generated@@579 $generated@@580)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@579 $generated@@580))
)))
(assert  (and (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@249 (type $generated@@583))))
(= (type ($generated@@581 $generated@@583)) ($generated@@248 $generated@@584)))
 :pattern ( ($generated@@581 $generated@@583))
)) (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@249 (type $generated@@585))))
(= (type ($generated@@582 $generated@@585)) $generated@@586))
 :pattern ( ($generated@@582 $generated@@585))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
 (=> (= (type $generated@@587) ($generated@@248 $generated@@589)) (and (= ($generated@@581 ($generated@@246 $generated@@587 $generated@@588)) $generated@@587) (= ($generated@@582 ($generated@@246 $generated@@587 $generated@@588)) $generated@@588))))
 :pattern ( ($generated@@246 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@145) (= ($generated@@550 ($generated@@285 $generated@@590)) ($generated@@551 $generated@@590)))
 :pattern ( ($generated@@550 ($generated@@285 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@308 (type $generated@@591))))
(let (($generated@@593 ($generated@@307 (type $generated@@591))))
 (=> (= (type $generated@@591) ($generated@@306 $generated@@593 $generated@@592)) (= ($generated@@474 ($generated@@304 $generated@@591)) ($generated@@385 $generated@@591)))))
 :pattern ( ($generated@@474 ($generated@@304 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@308 (type $generated@@594))))
(let (($generated@@596 ($generated@@307 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@306 $generated@@596 $generated@@595)) (= ($generated@@474 ($generated@@399 $generated@@594)) ($generated@@385 $generated@@594)))))
 :pattern ( ($generated@@474 ($generated@@399 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@308 (type $generated@@597))))
(let (($generated@@599 ($generated@@307 (type $generated@@597))))
 (=> (= (type $generated@@597) ($generated@@306 $generated@@599 $generated@@598)) (<= ($generated@@474 ($generated@@364 $generated@@597)) ($generated@@385 $generated@@597)))))
 :pattern ( ($generated@@474 ($generated@@364 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@154) ($generated@@221 $generated@@600 ($generated@@77 0))) (and (= ($generated@@285 ($generated@@348 $generated@@2 $generated@@600)) $generated@@600) ($generated@@141 ($generated@@348 ($generated@@78 $generated@@154 $generated@@4) $generated@@600) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@600 ($generated@@77 0)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@154) (= (type $generated@@602) $generated@@66)) ($generated@@221 $generated@@601 ($generated@@230 $generated@@602))) (and (= ($generated@@285 ($generated@@348 ($generated@@78 $generated@@154 $generated@@4) $generated@@601)) $generated@@601) ($generated@@141 ($generated@@348 ($generated@@78 $generated@@154 $generated@@4) $generated@@601) ($generated@@230 $generated@@602))))
 :pattern ( ($generated@@221 $generated@@601 ($generated@@230 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@154) (= (type $generated@@604) $generated@@66)) ($generated@@221 $generated@@603 ($generated@@235 $generated@@604))) (and (= ($generated@@285 ($generated@@348 ($generated@@78 $generated@@154 $generated@@4) $generated@@603)) $generated@@603) ($generated@@141 ($generated@@348 ($generated@@78 $generated@@154 $generated@@4) $generated@@603) ($generated@@235 $generated@@604))))
 :pattern ( ($generated@@221 $generated@@603 ($generated@@235 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@154) (= (type $generated@@606) $generated@@66)) ($generated@@221 $generated@@605 ($generated@@159 $generated@@606))) (and (= ($generated@@285 ($generated@@348 ($generated@@78 $generated@@154 $generated@@2) $generated@@605)) $generated@@605) ($generated@@141 ($generated@@348 ($generated@@78 $generated@@154 $generated@@2) $generated@@605) ($generated@@159 $generated@@606))))
 :pattern ( ($generated@@221 $generated@@605 ($generated@@159 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@154) (= (type $generated@@608) $generated@@66)) ($generated@@221 $generated@@607 ($generated@@247 $generated@@608))) (and (= ($generated@@285 ($generated@@348 ($generated@@248 $generated@@154) $generated@@607)) $generated@@607) ($generated@@141 ($generated@@348 ($generated@@248 $generated@@154) $generated@@607) ($generated@@247 $generated@@608))))
 :pattern ( ($generated@@221 $generated@@607 ($generated@@247 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@81 (type $generated@@609))))
 (=> (= (type $generated@@609) ($generated@@78 $generated@@610 $generated@@4)) (and (= (= ($generated@@474 $generated@@609) 0) (= $generated@@609 ($generated@@571 $generated@@610))) (=> (not (= ($generated@@474 $generated@@609) 0)) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@610) ($generated@@0 ($generated@@83 $generated@@609 $generated@@611)))
 :no-pattern (type $generated@@611)
 :no-pattern ($generated $generated@@611)
 :no-pattern ($generated@@0 $generated@@611)
))))))
 :pattern ( ($generated@@474 $generated@@609))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@577 $generated@@138) $generated@@65))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@612 ($generated@@159 $generated@@613) $generated@@614) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@612 $generated@@615)))) ($generated@@265 $generated@@615 $generated@@613 $generated@@614))
 :pattern ( ($generated@@83 $generated@@612 $generated@@615))
))))
 :pattern ( ($generated@@76 $generated@@612 ($generated@@159 $generated@@613) $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@145) (= (type $generated@@617) $generated@@66)) (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@618) (and ($generated@@143 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@66) ($generated@@76 $generated@@616 ($generated@@144 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@76 $generated@@616 ($generated@@144 $generated@@617 $generated@@619) $generated@@618))
))))) ($generated@@265 ($generated@@152 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@265 ($generated@@152 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@145) (= (type $generated@@621) $generated@@66)) (= (type $generated@@622) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@622) (and ($generated@@143 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@66) ($generated@@76 $generated@@620 ($generated@@144 $generated@@623 $generated@@621) $generated@@622))
 :pattern ( ($generated@@76 $generated@@620 ($generated@@144 $generated@@623 $generated@@621) $generated@@622))
))))) ($generated@@265 ($generated@@153 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@265 ($generated@@153 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) (= ($generated@@141 $generated@@624 $generated@@138)  (and (<= ($generated@@240 0) ($generated $generated@@624)) (< ($generated $generated@@624) 4294967296))))
 :pattern ( ($generated@@141 $generated@@624 $generated@@138))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@154) (= (type $generated@@626) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@625) ($generated@@242 $generated@@626)) ($generated@@242 ($generated@@220 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@625) ($generated@@242 $generated@@626)))
)))
(assert (forall (($generated@@627 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@240 $generated@@627))) ($generated@@242 ($generated@@285 ($generated@@8 $generated@@627))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@240 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ) (! (= ($generated@@285 ($generated@@242 $generated@@628)) ($generated@@242 ($generated@@285 $generated@@628)))
 :pattern ( ($generated@@285 ($generated@@242 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@249 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@248 $generated@@630)) (= ($generated@@278 $generated@@629) 0)) (= $generated@@629 ($generated@@277 $generated@@630))))
 :pattern ( ($generated@@278 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@632)))
 (=> (and (and (= (type $generated@@631) ($generated@@78 $generated@@634 $generated@@2)) (= (type $generated@@633) $generated@@2)) (<= 0 ($generated $generated@@633))) (= ($generated@@298 ($generated@@84 $generated@@631 $generated@@632 $generated@@633)) (+ (- ($generated@@298 $generated@@631) ($generated ($generated@@83 $generated@@631 $generated@@632))) ($generated $generated@@633)))))
 :pattern ( ($generated@@298 ($generated@@84 $generated@@631 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@636) $generated@@2)) ($generated@@76 $generated@@636 $generated@@46 $generated@@635))
 :pattern ( ($generated@@76 $generated@@636 $generated@@46 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@638) $generated@@3)) ($generated@@76 $generated@@638 $generated@@47 $generated@@637))
 :pattern ( ($generated@@76 $generated@@638 $generated@@47 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@640) $generated@@4)) ($generated@@76 $generated@@640 $generated@@44 $generated@@639))
 :pattern ( ($generated@@76 $generated@@640 $generated@@44 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) $generated@@261)) ($generated@@76 $generated@@642 $generated@@45 $generated@@641))
 :pattern ( ($generated@@76 $generated@@642 $generated@@45 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@644) $generated@@154)) ($generated@@76 $generated@@644 $generated@@48 $generated@@643))
 :pattern ( ($generated@@76 $generated@@644 $generated@@48 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@248 $generated@@154)) (= (type $generated@@646) $generated@@66)) (= ($generated@@141 $generated@@645 ($generated@@247 $generated@@646)) (forall (($generated@@647 Int) ) (!  (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@278 $generated@@645))) ($generated@@221 ($generated@@352 $generated@@645 $generated@@647) $generated@@646))
 :pattern ( ($generated@@352 $generated@@645 $generated@@647))
))))
 :pattern ( ($generated@@141 $generated@@645 ($generated@@247 $generated@@646)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 Int) ) (!  (=> (= (type $generated@@649) ($generated@@248 $generated@@154)) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@278 $generated@@649))) (< ($generated@@551 ($generated@@348 $generated@@145 ($generated@@352 $generated@@649 $generated@@650))) ($generated@@648 $generated@@649))))
 :pattern ( ($generated@@551 ($generated@@348 $generated@@145 ($generated@@352 $generated@@649 $generated@@650))))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@652) $generated@@66)) (= (type $generated@@653) $generated@@66)) ($generated@@141 $generated@@651 ($generated@@425 $generated@@652 $generated@@653))) (and (and ($generated@@141 ($generated@@304 $generated@@651) ($generated@@230 $generated@@652)) ($generated@@141 ($generated@@364 $generated@@651) ($generated@@230 $generated@@653))) ($generated@@141 ($generated@@399 $generated@@651) ($generated@@230 ($generated@@144 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@141 $generated@@651 ($generated@@425 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@655) $generated@@66)) (= (type $generated@@656) $generated@@66)) ($generated@@141 $generated@@654 ($generated@@433 $generated@@655 $generated@@656))) (and (and ($generated@@141 ($generated@@322 $generated@@654) ($generated@@235 $generated@@655)) ($generated@@141 ($generated@@375 $generated@@654) ($generated@@235 $generated@@656))) ($generated@@141 ($generated@@407 $generated@@654) ($generated@@235 ($generated@@144 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@141 $generated@@654 ($generated@@433 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@2) ($generated@@141 $generated@@657 $generated@@46))
 :pattern ( ($generated@@141 $generated@@657 $generated@@46))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@3) ($generated@@141 $generated@@658 $generated@@47))
 :pattern ( ($generated@@141 $generated@@658 $generated@@47))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@4) ($generated@@141 $generated@@659 $generated@@44))
 :pattern ( ($generated@@141 $generated@@659 $generated@@44))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@261) ($generated@@141 $generated@@660 $generated@@45))
 :pattern ( ($generated@@141 $generated@@660 $generated@@45))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@154) ($generated@@141 $generated@@661 $generated@@48))
 :pattern ( ($generated@@141 $generated@@661 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Bool)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 (T@U) Bool)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Bool)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@662) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@663) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@664) ($generated@@248 $generated@@154))) (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@668) $generated@@79)) (= (type $generated@@669) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@670) ($generated@@248 $generated@@154))) (= (type $generated@@674) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@675) ($generated@@78 $generated@@154 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@677  (=> (= $generated@@662 ($generated@@556 $generated@@138 $generated@@663)) (=> (and (= $generated@@664 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 116))) ($generated@@285 ($generated@@259 67))) ($generated@@285 ($generated@@259 111))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 110))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 111))) ($generated@@285 ($generated@@259 110))) ($generated@@285 ($generated@@259 73))) ($generated@@285 ($generated@@259 110))) ($generated@@285 ($generated@@259 69))) ($generated@@285 ($generated@@259 113))) ($generated@@285 ($generated@@259 117))) ($generated@@285 ($generated@@259 97))) ($generated@@285 ($generated@@259 108))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 116))) ($generated@@285 ($generated@@259 121))))) (= $generated@@665 ($generated@@340 $generated@@662 $generated@@663))) (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@665) (=> $generated@@665 (=> (and ($generated@@264 $generated@@666) ($generated@@667 $generated@@666)) (=> (and (and (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@79) (=> (and (not (= $generated@@678 $generated@@668)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@669 $generated@@678) $generated@@60))) (= ($generated@@83 $generated@@666 $generated@@678) ($generated@@83 $generated@@669 $generated@@678))))
 :pattern ( ($generated@@83 $generated@@666 $generated@@678))
)) ($generated@@134 $generated@@669 $generated@@666)) (and (= $generated@@670 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 116))) ($generated@@285 ($generated@@259 67))) ($generated@@285 ($generated@@259 111))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 112))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 110))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 111))) ($generated@@285 ($generated@@259 110))) ($generated@@285 ($generated@@259 73))) ($generated@@285 ($generated@@259 110))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))))) (= $generated@@671 ($generated@@240 0)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@240 0) $generated@@671) (< $generated@@671 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@671) (< $generated@@671 4294967296)) (=> (and (= $generated@@672 ($generated@@0 ($generated@@83 $generated@@662 ($generated@@285 ($generated@@8 ($generated@@240 0)))))) (= (ControlFlow 0 2) (- 0 1))) $generated@@672)))))))))))
(let (($generated@@679  (=> (and (not ($generated@@0 ($generated@@83 $generated@@663 ($generated@@285 ($generated@@8 $generated@@673))))) (= (ControlFlow 0 7) 2)) $generated@@677)))
(let (($generated@@680  (=> (and ($generated@@0 ($generated@@83 $generated@@663 ($generated@@285 ($generated@@8 $generated@@673)))) (= (ControlFlow 0 6) 2)) $generated@@677)))
(let (($generated@@681  (=> (and (<= ($generated@@240 0) $generated@@673) (< $generated@@673 4294967296)) (and (=> (= (ControlFlow 0 8) 6) $generated@@680) (=> (= (ControlFlow 0 8) 7) $generated@@679)))))
(let (($generated@@682  (=> (and (not (and (<= ($generated@@240 0) $generated@@673) (< $generated@@673 4294967296))) (= (ControlFlow 0 5) 2)) $generated@@677)))
(let (($generated@@683  (=> (= $generated@@674 ($generated@@165 $generated@@668 $generated@@669 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@681) (=> (= (ControlFlow 0 9) 5) $generated@@682)))))
(let (($generated@@684  (=> (and (and ($generated@@264 $generated@@669) ($generated@@667 $generated@@669)) (and ($generated@@141 $generated@@663 ($generated@@230 $generated@@138)) ($generated@@76 $generated@@663 ($generated@@230 $generated@@138) $generated@@669))) (=> (and (and (and ($generated@@141 $generated@@675 ($generated@@230 $generated@@138)) ($generated@@76 $generated@@675 ($generated@@230 $generated@@138) $generated@@669)) true) (and (and (= 2 $generated@@676) (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@2) (=> (and (<= ($generated@@240 0) ($generated $generated@@685)) (< ($generated $generated@@685) 4294967296)) (=> (and (<= ($generated@@240 0) ($generated $generated@@685)) (< ($generated $generated@@685) 10)) ($generated@@0 ($generated@@83 $generated@@663 ($generated@@285 $generated@@685))))))
 :pattern ( ($generated@@83 $generated@@663 ($generated@@285 $generated@@685)))
))) (and (= ($generated@@474 $generated@@663) ($generated@@240 10)) (= (ControlFlow 0 10) 9)))) $generated@@683))))
$generated@@684))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@259 (Int) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 () T@T)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@343 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U Int) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@562 (T@T) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (and (and (and (forall (($generated@@250 T@T) ) (= ($generated@@1 ($generated@@248 $generated@@250)) 17)) (forall (($generated@@251 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@246 $generated@@252 $generated@@253)) ($generated@@248 $generated@@254)))
 :pattern ( ($generated@@246 $generated@@252 $generated@@253))
))) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@247 $generated@@255)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@248 $generated@@154)) (= (type $generated@@257) $generated@@154)) (= (type $generated@@258) $generated@@66)) (and ($generated@@141 $generated@@256 ($generated@@247 $generated@@258)) ($generated@@221 $generated@@257 $generated@@258))) ($generated@@141 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
 :pattern ( ($generated@@141 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
)))
(assert  (and (= ($generated@@1 $generated@@261) 18) (forall (($generated@@262 Int) ) (! (= (type ($generated@@259 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@259 $generated@@262))
))))
(assert (forall (($generated@@263 Int) ) (!  (=> (and (<= 0 $generated@@263) (< $generated@@263 65536)) (= ($generated@@260 ($generated@@259 $generated@@263)) $generated@@263))
 :pattern ( ($generated@@259 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) $generated@@66)) (= (type $generated@@268) $generated@@154)) (= (type $generated@@269) $generated@@154)) (= (type $generated@@270) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@264 $generated@@270)) (= ($generated@@76 ($generated@@220 $generated@@268 $generated@@269) ($generated@@144 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@268 $generated@@269) ($generated@@144 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@145) (= ($generated@@143 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@145) ($generated@@143 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@154) (= (type $generated@@276) $generated@@154)) (= $generated@@274 ($generated@@220 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@143 $generated@@274))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@277 $generated@@279)) ($generated@@248 $generated@@279))
 :pattern ( ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) 0)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
 (=> (= (type $generated@@281) ($generated@@248 $generated@@283)) (= ($generated@@278 ($generated@@246 $generated@@281 $generated@@282)) (+ 1 ($generated@@278 $generated@@281)))))
 :pattern ( ($generated@@246 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@261) (and (and (= ($generated@@259 ($generated@@260 $generated@@284)) $generated@@284) (<= 0 ($generated@@260 $generated@@284))) (< ($generated@@260 $generated@@284) 65536)))
 :pattern ( ($generated@@260 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@154)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@66) (= (type $generated@@289) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@76 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@291) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@292) $generated@@154)) (= (type $generated@@293) $generated@@66)) ($generated@@134 $generated@@290 $generated@@291)) ($generated@@265 $generated@@292 $generated@@293 $generated@@290)) ($generated@@265 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@134 $generated@@290 $generated@@291) ($generated@@265 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@294) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@295) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@297) $generated@@66)) ($generated@@134 $generated@@294 $generated@@295)) ($generated@@76 $generated@@296 $generated@@297 $generated@@294)) ($generated@@76 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@134 $generated@@294 $generated@@295) ($generated@@76 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@78 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@81 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@78 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@83 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@81 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@78 $generated@@341 $generated@@2)) (= ($generated@@160 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@83 $generated@@340 $generated@@342))) (<= ($generated ($generated@@83 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@160 $generated@@340))
)))
(assert (forall (($generated@@344 T@T) ($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@154) ($generated@@221 $generated@@346 $generated@@138)) (and (= ($generated@@285 ($generated@@343 $generated@@2 $generated@@346)) $generated@@346) ($generated@@141 ($generated@@343 $generated@@2 $generated@@346) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@346 $generated@@138))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 Int) ) (! (let (($generated@@350 ($generated@@249 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@350))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 Int) ($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
 (=> (= (type $generated@@351) ($generated@@248 $generated@@354)) (and (=> (= $generated@@352 ($generated@@278 $generated@@351)) (= ($generated@@347 ($generated@@246 $generated@@351 $generated@@353) $generated@@352) $generated@@353)) (=> (not (= $generated@@352 ($generated@@278 $generated@@351))) (= ($generated@@347 ($generated@@246 $generated@@351 $generated@@353) $generated@@352) ($generated@@347 $generated@@351 $generated@@352))))))
 :pattern ( ($generated@@347 ($generated@@246 $generated@@351 $generated@@353) $generated@@352))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@308 (type $generated@@355))))
(let (($generated@@357 ($generated@@307 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@306 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@305 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@304 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@308 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@78 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@308 (type $generated@@362))))
(let (($generated@@364 ($generated@@307 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@306 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@305 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(let (($generated@@368 ($generated@@325 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@324 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@323 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@322 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@78 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@83 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@378) $generated@@66)) (= ($generated@@141 $generated@@377 ($generated@@159 $generated@@378)) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@377 $generated@@379)))) ($generated@@221 $generated@@379 $generated@@378))
 :pattern ( ($generated@@83 $generated@@377 $generated@@379))
))))
 :pattern ( ($generated@@141 $generated@@377 ($generated@@159 $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@381) $generated@@66)) (= (type $generated@@382) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@380 ($generated@@230 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@154) ($generated@@0 ($generated@@83 $generated@@380 $generated@@383))) ($generated@@265 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@83 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@76 $generated@@380 ($generated@@230 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@385) $generated@@66)) (= (type $generated@@386) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@384 ($generated@@235 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@154) ($generated@@0 ($generated@@83 $generated@@384 $generated@@387))) ($generated@@265 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@83 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@76 $generated@@384 ($generated@@235 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(= ($generated ($generated@@83 ($generated@@299 $generated@@389) $generated@@388)) 0))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@83 ($generated@@299 $generated@@389) $generated@@388)))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@308 (type $generated@@393))))
(let (($generated@@395 ($generated@@307 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@78 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@397) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@396) ($generated@@152 ($generated@@343 $generated@@145 $generated@@397)))) (= ($generated@@83 ($generated@@391 $generated@@396) ($generated@@152 ($generated@@343 $generated@@145 $generated@@397))) ($generated@@153 ($generated@@343 $generated@@145 $generated@@397))))))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@326 (type $generated@@401))))
(let (($generated@@403 ($generated@@325 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@78 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@405) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@404) ($generated@@152 ($generated@@343 $generated@@145 $generated@@405)))) (= ($generated@@83 ($generated@@399 $generated@@404) ($generated@@152 ($generated@@343 $generated@@145 $generated@@405))) ($generated@@153 ($generated@@343 $generated@@145 $generated@@405))))))
 :pattern ( ($generated@@83 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@307 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@306 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@83 ($generated@@391 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@406) $generated@@410))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@325 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@324 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@83 ($generated@@370 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@83 ($generated@@399 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@411) $generated@@415))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@66)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@420) $generated@@66)) (= (type $generated@@421) $generated@@66)) (= (type $generated@@422) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@419) $generated@@423))) (and ($generated@@265 ($generated@@83 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@265 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@76 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@66)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@428) $generated@@66)) (= (type $generated@@429) $generated@@66)) (= (type $generated@@430) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@427) $generated@@431))) (and ($generated@@265 ($generated@@83 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@265 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= (type ($generated@@432 $generated@@433 $generated@@434)) ($generated@@78 $generated@@435 $generated@@4)))
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@437)))
 (=> (and (and (= (type $generated@@436) ($generated@@78 $generated@@439 $generated@@4)) (= (type $generated@@438) $generated@@439)) ($generated@@0 ($generated@@83 $generated@@436 $generated@@438))) ($generated@@0 ($generated@@83 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))))
 :pattern ( ($generated@@432 $generated@@436 $generated@@437) ($generated@@83 $generated@@436 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@441)))
 (=> (and (= (type $generated@@440) ($generated@@78 $generated@@443 $generated@@4)) (= (type $generated@@442) $generated@@443)) (= ($generated@@0 ($generated@@83 ($generated@@432 $generated@@440 $generated@@441) $generated@@442))  (or (= $generated@@442 $generated@@441) ($generated@@0 ($generated@@83 $generated@@440 $generated@@442))))))
 :pattern ( ($generated@@83 ($generated@@432 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@445) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@446) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@444 $generated@@446))) (and ($generated@@134 $generated@@444 $generated@@445) ($generated@@134 $generated@@445 $generated@@446))) ($generated@@134 $generated@@444 $generated@@446))
 :pattern ( ($generated@@134 $generated@@444 $generated@@445) ($generated@@134 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@78 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@326 (type $generated@@449))))
(let (($generated@@451 ($generated@@325 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@324 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@323 $generated@@451 $generated@@450)) (= ($generated@@322 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@322 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@326 (type $generated@@452))))
(let (($generated@@454 ($generated@@325 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@324 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@323 $generated@@454 $generated@@453)) (= ($generated@@370 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@370 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@326 (type $generated@@455))))
(let (($generated@@457 ($generated@@325 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@324 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@323 $generated@@457 $generated@@456)) (= ($generated@@398 $generated@@455) ($generated@@447 $generated@@154))))))
 :pattern ( ($generated@@398 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@308 (type $generated@@458))))
(let (($generated@@460 ($generated@@307 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@306 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@305 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@154) (= (type $generated@@462) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@390 $generated@@458) ($generated@@285 ($generated@@220 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@390 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@326 (type $generated@@463))))
(let (($generated@@465 ($generated@@325 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@324 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@323 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@154) (= (type $generated@@467) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@398 $generated@@463) ($generated@@285 ($generated@@220 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@398 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@154) ($generated@@221 $generated@@468 $generated@@46)) (and (= ($generated@@285 ($generated@@343 $generated@@2 $generated@@468)) $generated@@468) ($generated@@141 ($generated@@343 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@154) ($generated@@221 $generated@@469 $generated@@47)) (and (= ($generated@@285 ($generated@@343 $generated@@3 $generated@@469)) $generated@@469) ($generated@@141 ($generated@@343 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@154) ($generated@@221 $generated@@470 $generated@@44)) (and (= ($generated@@285 ($generated@@343 $generated@@4 $generated@@470)) $generated@@470) ($generated@@141 ($generated@@343 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@470 $generated@@44))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@154) ($generated@@221 $generated@@471 $generated@@45)) (and (= ($generated@@285 ($generated@@343 $generated@@261 $generated@@471)) $generated@@471) ($generated@@141 ($generated@@343 $generated@@261 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@66) (= ($generated@@221 ($generated@@285 $generated@@472) $generated@@473) ($generated@@141 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@221 ($generated@@285 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@81 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@78 $generated@@475 $generated@@2)) (<= 0 ($generated@@298 $generated@@474))))
 :pattern ( ($generated@@298 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@249 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@248 $generated@@477)) (<= 0 ($generated@@278 $generated@@476))))
 :pattern ( ($generated@@278 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@416 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@416 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@416 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@416 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@66) (= (type $generated@@487) $generated@@66)) (= ($generated@@74 ($generated@@416 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@416 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@488 ($generated@@424 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@424 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@66) (= (type $generated@@495) $generated@@66)) (= ($generated@@492 ($generated@@424 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@424 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@66) (= (type $generated@@497) $generated@@66)) (= ($generated@@74 ($generated@@424 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@424 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@154) (= (type $generated@@499) $generated@@154)) (= ($generated@@271 ($generated@@220 $generated@@498 $generated@@499)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@66) (= (type $generated@@503) $generated@@66)) (= ($generated@@500 ($generated@@144 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@144 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@504 ($generated@@144 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@144 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@154) (= (type $generated@@509) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@220 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@154) (= (type $generated@@511) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@220 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@248 $generated@@154)) (= (type $generated@@513) $generated@@66)) (= (type $generated@@514) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@512 ($generated@@247 $generated@@513) $generated@@514) (forall (($generated@@515 Int) ) (!  (=> (and (<= 0 $generated@@515) (< $generated@@515 ($generated@@278 $generated@@512))) ($generated@@265 ($generated@@347 $generated@@512 $generated@@515) $generated@@513 $generated@@514))
 :pattern ( ($generated@@347 $generated@@512 $generated@@515))
))))
 :pattern ( ($generated@@76 $generated@@512 ($generated@@247 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (=> (= (type $generated@@516) ($generated@@78 $generated@@518 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@432 $generated@@516 $generated@@517) $generated@@517))))
 :pattern ( ($generated@@432 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@77 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@77 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@66)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@521 ($generated@@230 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@230 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@525 ($generated@@235 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@235 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@529 ($generated@@159 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@159 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@533 ($generated@@247 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@247 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@247 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(= ($generated@@343 $generated@@538 ($generated@@285 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@285 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) (= ($generated@@141 $generated@@539 ($generated@@416 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@539) $generated@@542))) (and ($generated@@221 ($generated@@83 ($generated@@391 $generated@@539) $generated@@542) $generated@@541) ($generated@@221 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@539) $generated@@542))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@141 $generated@@539 ($generated@@416 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@544) $generated@@66)) (= (type $generated@@545) $generated@@66)) (= ($generated@@141 $generated@@543 ($generated@@424 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@543) $generated@@546))) (and ($generated@@221 ($generated@@83 ($generated@@399 $generated@@543) $generated@@546) $generated@@545) ($generated@@221 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@543) $generated@@546))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@141 $generated@@543 ($generated@@424 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@154)) (< ($generated@@547 $generated@@549) ($generated@@548 ($generated@@220 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@220 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@154) (= (type $generated@@552) $generated@@154)) (< ($generated@@547 $generated@@552) ($generated@@548 ($generated@@220 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@220 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@154) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) $generated@@66)) ($generated@@221 $generated@@553 ($generated@@416 $generated@@554 $generated@@555))) (and (= ($generated@@285 ($generated@@343 ($generated@@306 $generated@@154 $generated@@154) $generated@@553)) $generated@@553) ($generated@@141 ($generated@@343 ($generated@@306 $generated@@154 $generated@@154) $generated@@553) ($generated@@416 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@221 $generated@@553 ($generated@@416 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@154) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) $generated@@66)) ($generated@@221 $generated@@556 ($generated@@424 $generated@@557 $generated@@558))) (and (= ($generated@@285 ($generated@@343 ($generated@@324 $generated@@154 $generated@@154) $generated@@556)) $generated@@556) ($generated@@141 ($generated@@343 ($generated@@324 $generated@@154 $generated@@154) $generated@@556) ($generated@@424 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@221 $generated@@556 ($generated@@424 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@66) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) $generated@@154)) ($generated@@221 $generated@@561 ($generated@@144 $generated@@559 $generated@@560))) (and (= ($generated@@285 ($generated@@343 $generated@@145 $generated@@561)) $generated@@561) ($generated@@141 ($generated@@343 $generated@@145 $generated@@561) ($generated@@144 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@221 $generated@@561 ($generated@@144 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@563 T@T) ) (! (= (type ($generated@@562 $generated@@563)) ($generated@@78 $generated@@563 $generated@@4))
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (not ($generated@@0 ($generated@@83 ($generated@@562 $generated@@565) $generated@@564))))
 :pattern ( (let (($generated@@565 (type $generated@@564)))
($generated@@83 ($generated@@562 $generated@@565) $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@83 ($generated@@447 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@83 ($generated@@447 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@71)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@66) (= (type $generated@@571) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@570 $generated@@571)) $generated@@62) (= ($generated@@568 ($generated@@144 $generated@@570 $generated@@571)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@570 $generated@@571))
)))
(assert  (and (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@249 (type $generated@@574))))
(= (type ($generated@@572 $generated@@574)) ($generated@@248 $generated@@575)))
 :pattern ( ($generated@@572 $generated@@574))
)) (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@249 (type $generated@@576))))
(= (type ($generated@@573 $generated@@576)) $generated@@577))
 :pattern ( ($generated@@573 $generated@@576))
))))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (=> (= (type $generated@@578) ($generated@@248 $generated@@580)) (and (= ($generated@@572 ($generated@@246 $generated@@578 $generated@@579)) $generated@@578) (= ($generated@@573 ($generated@@246 $generated@@578 $generated@@579)) $generated@@579))))
 :pattern ( ($generated@@246 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@145) (= ($generated@@547 ($generated@@285 $generated@@581)) ($generated@@548 $generated@@581)))
 :pattern ( ($generated@@547 ($generated@@285 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@154) ($generated@@221 $generated@@582 ($generated@@77 0))) (and (= ($generated@@285 ($generated@@343 $generated@@2 $generated@@582)) $generated@@582) ($generated@@141 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@582) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@582 ($generated@@77 0)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@154) (= (type $generated@@584) $generated@@66)) ($generated@@221 $generated@@583 ($generated@@230 $generated@@584))) (and (= ($generated@@285 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@583)) $generated@@583) ($generated@@141 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@583) ($generated@@230 $generated@@584))))
 :pattern ( ($generated@@221 $generated@@583 ($generated@@230 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@154) (= (type $generated@@586) $generated@@66)) ($generated@@221 $generated@@585 ($generated@@235 $generated@@586))) (and (= ($generated@@285 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@585)) $generated@@585) ($generated@@141 ($generated@@343 ($generated@@78 $generated@@154 $generated@@4) $generated@@585) ($generated@@235 $generated@@586))))
 :pattern ( ($generated@@221 $generated@@585 ($generated@@235 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@154) (= (type $generated@@588) $generated@@66)) ($generated@@221 $generated@@587 ($generated@@159 $generated@@588))) (and (= ($generated@@285 ($generated@@343 ($generated@@78 $generated@@154 $generated@@2) $generated@@587)) $generated@@587) ($generated@@141 ($generated@@343 ($generated@@78 $generated@@154 $generated@@2) $generated@@587) ($generated@@159 $generated@@588))))
 :pattern ( ($generated@@221 $generated@@587 ($generated@@159 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@154) (= (type $generated@@590) $generated@@66)) ($generated@@221 $generated@@589 ($generated@@247 $generated@@590))) (and (= ($generated@@285 ($generated@@343 ($generated@@248 $generated@@154) $generated@@589)) $generated@@589) ($generated@@141 ($generated@@343 ($generated@@248 $generated@@154) $generated@@589) ($generated@@247 $generated@@590))))
 :pattern ( ($generated@@221 $generated@@589 ($generated@@247 $generated@@590)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@568 $generated@@138) $generated@@65))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@591 ($generated@@159 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@591 $generated@@594)))) ($generated@@265 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@83 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@76 $generated@@591 ($generated@@159 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@597) (and ($generated@@143 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@66) ($generated@@76 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@76 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@265 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@265 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@601) (and ($generated@@143 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@66) ($generated@@76 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@76 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@265 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@265 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) (= ($generated@@141 $generated@@603 $generated@@138)  (and (<= ($generated@@240 0) ($generated $generated@@603)) (< ($generated $generated@@603) 4294967296))))
 :pattern ( ($generated@@141 $generated@@603 $generated@@138))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@154) (= (type $generated@@605) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@604) ($generated@@242 $generated@@605)) ($generated@@242 ($generated@@220 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@604) ($generated@@242 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@240 $generated@@606))) ($generated@@242 ($generated@@285 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@240 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@285 ($generated@@242 $generated@@607)) ($generated@@242 ($generated@@285 $generated@@607)))
 :pattern ( ($generated@@285 ($generated@@242 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@249 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@248 $generated@@609)) (= ($generated@@278 $generated@@608) 0)) (= $generated@@608 ($generated@@277 $generated@@609))))
 :pattern ( ($generated@@278 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@78 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@298 ($generated@@84 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@298 $generated@@610) ($generated ($generated@@83 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@298 ($generated@@84 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@615) $generated@@2)) ($generated@@76 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@76 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@617) $generated@@3)) ($generated@@76 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@76 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@619) $generated@@4)) ($generated@@76 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@76 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@621) $generated@@261)) ($generated@@76 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@76 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@623) $generated@@154)) ($generated@@76 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@76 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@248 $generated@@154)) (= (type $generated@@625) $generated@@66)) (= ($generated@@141 $generated@@624 ($generated@@247 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@278 $generated@@624))) ($generated@@221 ($generated@@347 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@347 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@141 $generated@@624 ($generated@@247 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@248 $generated@@154)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@278 $generated@@628))) (< ($generated@@548 ($generated@@343 $generated@@145 ($generated@@347 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@548 ($generated@@343 $generated@@145 ($generated@@347 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) $generated@@66)) ($generated@@141 $generated@@630 ($generated@@416 $generated@@631 $generated@@632))) (and (and ($generated@@141 ($generated@@304 $generated@@630) ($generated@@230 $generated@@631)) ($generated@@141 ($generated@@359 $generated@@630) ($generated@@230 $generated@@632))) ($generated@@141 ($generated@@390 $generated@@630) ($generated@@230 ($generated@@144 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@141 $generated@@630 ($generated@@416 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@324 $generated@@154 $generated@@154)) (= (type $generated@@634) $generated@@66)) (= (type $generated@@635) $generated@@66)) ($generated@@141 $generated@@633 ($generated@@424 $generated@@634 $generated@@635))) (and (and ($generated@@141 ($generated@@322 $generated@@633) ($generated@@235 $generated@@634)) ($generated@@141 ($generated@@370 $generated@@633) ($generated@@235 $generated@@635))) ($generated@@141 ($generated@@398 $generated@@633) ($generated@@235 ($generated@@144 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@141 $generated@@633 ($generated@@424 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@141 $generated@@636 $generated@@46))
 :pattern ( ($generated@@141 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@141 $generated@@637 $generated@@47))
 :pattern ( ($generated@@141 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@141 $generated@@638 $generated@@44))
 :pattern ( ($generated@@141 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@261) ($generated@@141 $generated@@639 $generated@@45))
 :pattern ( ($generated@@141 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@154) ($generated@@141 $generated@@640 $generated@@48))
 :pattern ( ($generated@@141 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () Bool)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Bool)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 (T@U) Bool)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@646) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@647) ($generated@@248 $generated@@154))) (= (type $generated@@649) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@651) $generated@@79)) (= (type $generated@@652) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@653) ($generated@@248 $generated@@154))) (= (type $generated@@656) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@661) ($generated@@78 $generated@@154 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@664  (=> (and (= $generated@@641  (or (or (or (= $generated@@642 ($generated@@240 0)) (= $generated@@642 ($generated@@240 1))) (= $generated@@642 ($generated@@240 2))) (= $generated@@642 ($generated@@240 3)))) (= (ControlFlow 0 2) (- 0 1))) $generated@@641)))
(let (($generated@@665  (=> (and (or (or (= $generated@@642 ($generated@@240 0)) (= $generated@@642 ($generated@@240 1))) (= $generated@@642 ($generated@@240 2))) (= (ControlFlow 0 5) 2)) $generated@@664)))
(let (($generated@@666  (=> (and (not (or (or (= $generated@@642 ($generated@@240 0)) (= $generated@@642 ($generated@@240 1))) (= $generated@@642 ($generated@@240 2)))) (= $generated@@643 ($generated@@240 3))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@240 0) $generated@@643) (< $generated@@643 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@643) (< $generated@@643 4294967296)) (=> (= (ControlFlow 0 3) 2) $generated@@664))))))
(let (($generated@@667  (=> (or (= $generated@@642 ($generated@@240 0)) (= $generated@@642 ($generated@@240 1))) (and (=> (= (ControlFlow 0 8) 3) $generated@@666) (=> (= (ControlFlow 0 8) 5) $generated@@665)))))
(let (($generated@@668  (=> (and (not (or (= $generated@@642 ($generated@@240 0)) (= $generated@@642 ($generated@@240 1)))) (= $generated@@644 ($generated@@240 2))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= ($generated@@240 0) $generated@@644) (< $generated@@644 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@644) (< $generated@@644 4294967296)) (and (=> (= (ControlFlow 0 6) 3) $generated@@666) (=> (= (ControlFlow 0 6) 5) $generated@@665)))))))
(let (($generated@@669  (=> (= $generated@@642 ($generated@@240 0)) (and (=> (= (ControlFlow 0 11) 6) $generated@@668) (=> (= (ControlFlow 0 11) 8) $generated@@667)))))
(let (($generated@@670  (=> (and (not (= $generated@@642 ($generated@@240 0))) (= $generated@@645 ($generated@@240 1))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= ($generated@@240 0) $generated@@645) (< $generated@@645 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@645) (< $generated@@645 4294967296)) (and (=> (= (ControlFlow 0 9) 6) $generated@@668) (=> (= (ControlFlow 0 9) 8) $generated@@667)))))))
(let (($generated@@671  (and (=> (= (ControlFlow 0 12) (- 0 15)) (or (and ($generated@@141 ($generated@@8 ($generated@@240 (- 4294967296 1))) $generated@@138) ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 ($generated@@8 ($generated@@240 (- 4294967296 1))))))) (or (and ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 ($generated@@8 ($generated@@240 0)))))) (or (and ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 ($generated@@8 ($generated@@240 0)))))) (exists (($generated@@672 T@U) ) (!  (and (= (type $generated@@672) $generated@@2) (and (and (<= ($generated@@240 0) ($generated $generated@@672)) (< ($generated $generated@@672) 4294967296)) ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 $generated@@672)))))
 :no-pattern (type $generated@@672)
 :no-pattern ($generated $generated@@672)
 :no-pattern ($generated@@0 $generated@@672)
)))))) (=> (or (and ($generated@@141 ($generated@@8 ($generated@@240 (- 4294967296 1))) $generated@@138) ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 ($generated@@8 ($generated@@240 (- 4294967296 1))))))) (or (and ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 ($generated@@8 ($generated@@240 0)))))) (or (and ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 ($generated@@8 ($generated@@240 0)))))) (exists (($generated@@673 Int) )  (and (and (<= ($generated@@240 0) $generated@@673) (< $generated@@673 4294967296)) ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 ($generated@@8 $generated@@673))))))))) (=> (and (and (and (<= ($generated@@240 0) $generated@@642) (< $generated@@642 4294967296)) ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 ($generated@@8 $generated@@642))))) (and (= $generated@@647 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 76))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 116))) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 117))) ($generated@@285 ($generated@@259 99))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 84))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 97))) ($generated@@285 ($generated@@259 116))) ($generated@@285 ($generated@@259 77))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 109))) ($generated@@285 ($generated@@259 98))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 114))) ($generated@@285 ($generated@@259 115))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 105))) ($generated@@285 ($generated@@259 112))))) (= $generated@@648 ($generated@@0 ($generated@@83 $generated@@646 ($generated@@285 ($generated@@8 $generated@@642))))))) (and (=> (= (ControlFlow 0 12) (- 0 14)) $generated@@648) (=> $generated@@648 (=> (and ($generated@@264 $generated@@649) ($generated@@650 $generated@@649)) (=> (and (and (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@79) (=> (and (not (= $generated@@674 $generated@@651)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@652 $generated@@674) $generated@@60))) (= ($generated@@83 $generated@@649 $generated@@674) ($generated@@83 $generated@@652 $generated@@674))))
 :pattern ( ($generated@@83 $generated@@649 $generated@@674))
)) ($generated@@134 $generated@@652 $generated@@649)) (and (= $generated@@653 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@285 ($generated@@259 76))) ($generated@@285 ($generated@@259 101))) ($generated@@285 ($generated@@259 116))) ($generated@@285 ($generated@@259 83))) ($generated@@285 ($generated@@259 117))) ($generated@@285 ($generated@@259 99))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 84))) ($generated@@285 ($generated@@259 104))) ($generated@@285 ($generated@@259 97))) ($generated@@285 ($generated@@259 116))) ($generated@@285 ($generated@@259 86))) ($generated@@285 ($generated@@259 97))) ($generated@@285 ($generated@@259 108))) ($generated@@285 ($generated@@259 117))) ($generated@@285 ($generated@@259 101))))) (= $generated@@654 ($generated@@240 0)))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= ($generated@@240 0) $generated@@654) (< $generated@@654 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@654) (< $generated@@654 4294967296)) (and (=> (= (ControlFlow 0 12) 9) $generated@@670) (=> (= (ControlFlow 0 12) 11) $generated@@669)))))))))))))
(let (($generated@@675  (=> (and (not (and (<= ($generated@@240 0) $generated@@655) (< $generated@@655 4294967296))) (= (ControlFlow 0 17) 12)) $generated@@671)))
(let (($generated@@676  (=> (and (and (<= ($generated@@240 0) $generated@@655) (< $generated@@655 4294967296)) (= (ControlFlow 0 16) 12)) $generated@@671)))
(let (($generated@@677  (=> (and (= $generated@@656 ($generated@@165 $generated@@651 $generated@@652 $generated@@60 false)) (= $generated@@657 ($generated@@240 0))) (and (=> (= (ControlFlow 0 18) (- 0 22)) (and (<= ($generated@@240 0) $generated@@657) (< $generated@@657 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@657) (< $generated@@657 4294967296)) (=> (= $generated@@658 ($generated@@240 1)) (and (=> (= (ControlFlow 0 18) (- 0 21)) (and (<= ($generated@@240 0) $generated@@658) (< $generated@@658 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@658) (< $generated@@658 4294967296)) (=> (= $generated@@659 ($generated@@240 2)) (and (=> (= (ControlFlow 0 18) (- 0 20)) (and (<= ($generated@@240 0) $generated@@659) (< $generated@@659 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@659) (< $generated@@659 4294967296)) (=> (= $generated@@660 ($generated@@240 3)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= ($generated@@240 0) $generated@@660) (< $generated@@660 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@660) (< $generated@@660 4294967296)) (=> (= $generated@@646 ($generated@@242 ($generated@@432 ($generated@@432 ($generated@@432 ($generated@@432 ($generated@@562 $generated@@154) ($generated@@285 ($generated@@8 ($generated@@240 0)))) ($generated@@285 ($generated@@8 ($generated@@240 1)))) ($generated@@285 ($generated@@8 ($generated@@240 2)))) ($generated@@285 ($generated@@8 ($generated@@240 3)))))) (and (=> (= (ControlFlow 0 18) 16) $generated@@676) (=> (= (ControlFlow 0 18) 17) $generated@@675)))))))))))))))))
(let (($generated@@678  (=> (and ($generated@@264 $generated@@652) ($generated@@650 $generated@@652)) (=> (and (and ($generated@@141 $generated@@661 ($generated@@230 $generated@@138)) ($generated@@76 $generated@@661 ($generated@@230 $generated@@138) $generated@@652)) true) (=> (and (and (and (<= ($generated@@240 0) $generated@@662) (< $generated@@662 4294967296)) true) (and (= 2 $generated@@663) (= (ControlFlow 0 23) 18))) $generated@@677)))))
$generated@@678)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@T) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U Int) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert  (and (and (forall (($generated@@141 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@141)) 14)) (forall (($generated@@142 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@139 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (let (($generated@@145 (type $generated@@144)))
(= (type ($generated@@138 $generated@@143 $generated@@144)) ($generated@@139 $generated@@145)))
 :pattern ( ($generated@@138 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 (type $generated@@147)))
 (=> (and (= (type $generated@@146) ($generated@@139 $generated@@149)) (= (type $generated@@148) $generated@@149)) (= ($generated@@137 ($generated@@138 $generated@@146 $generated@@147) $generated@@148)  (or (= $generated@@147 $generated@@148) ($generated@@137 $generated@@146 $generated@@148)))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@146 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@77 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@66)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@66) (= (type $generated@@158) $generated@@66)) (= (type $generated@@159) $generated@@154)) ($generated@@150 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@150 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@T) ) (! (= (type ($generated@@168 $generated@@169)) ($generated@@139 $generated@@169))
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (! (let (($generated@@171 (type $generated@@170)))
 (not ($generated@@137 ($generated@@168 $generated@@171) $generated@@170)))
 :pattern ( (let (($generated@@171 (type $generated@@170)))
($generated@@137 ($generated@@168 $generated@@171) $generated@@170)))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@78 $generated@@163 $generated@@2)) (= (type $generated@@176) $generated@@66)) ($generated@@150 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@150 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@79 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@69 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@79) (= (type $generated@@227) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@228) ($generated@@68 $generated@@4))) (= (type $generated@@230) $generated@@79)) (= (type $generated@@231) ($generated@@68 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@154)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@66) (= (type $generated@@238) $generated@@66)) (= (type $generated@@239) $generated@@163)) (= (type $generated@@240) $generated@@163)) (= ($generated@@150 ($generated@@233 $generated@@239 $generated@@240) ($generated@@153 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@150 ($generated@@233 $generated@@239 $generated@@240) ($generated@@153 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@154) (= (type $generated@@242) $generated@@154)) (= ($generated@@160 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@160 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@150 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@163) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@150 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@66)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@251) $generated@@66)) (= ($generated@@150 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@163) ($generated@@0 ($generated@@83 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@83 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@150 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@66)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) ($generated@@139 $generated@@163)) (= (type $generated@@262) $generated@@163)) (= (type $generated@@263) $generated@@66)) (and ($generated@@150 $generated@@261 ($generated@@259 $generated@@263)) ($generated@@234 $generated@@262 $generated@@263))) ($generated@@150 ($generated@@138 $generated@@261 $generated@@262) ($generated@@259 $generated@@263)))
 :pattern ( ($generated@@150 ($generated@@138 $generated@@261 $generated@@262) ($generated@@259 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) $generated@@66)) (= (type $generated@@268) $generated@@163)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@264 $generated@@270)) (= ($generated@@76 ($generated@@233 $generated@@268 $generated@@269) ($generated@@153 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@268 $generated@@269) ($generated@@153 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@154) (= ($generated@@152 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@154) ($generated@@152 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@163) (= (type $generated@@276) $generated@@163)) (= $generated@@274 ($generated@@233 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@277 ($generated@@168 $generated@@278)) 0)
 :pattern ( ($generated@@168 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
 (=> (= (type $generated@@279) ($generated@@139 $generated@@281)) (= ($generated@@277 ($generated@@138 $generated@@279 $generated@@280)) (+ 1 ($generated@@277 $generated@@279)))))
 :pattern ( ($generated@@138 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@163)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@66) (= (type $generated@@286) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@265 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@76 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@265 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@78 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@81 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@78 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@83 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@78 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@81 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@78 $generated@@330 $generated@@2)) (= ($generated@@173 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@83 $generated@@329 $generated@@331))) (<= ($generated ($generated@@83 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@83 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@173 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@163) ($generated@@234 $generated@@335 $generated@@134)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@150 ($generated@@332 $generated@@2 $generated@@335) $generated@@134)))
 :pattern ( ($generated@@234 $generated@@335 $generated@@134))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 Int) ) (! (let (($generated@@339 ($generated@@140 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@339))
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 Int) ($generated@@342 T@U) ) (! (let (($generated@@343 (type $generated@@342)))
 (=> (= (type $generated@@340) ($generated@@139 $generated@@343)) (and (=> (= $generated@@341 ($generated@@277 $generated@@340)) (= ($generated@@336 ($generated@@138 $generated@@340 $generated@@342) $generated@@341) $generated@@342)) (=> (not (= $generated@@341 ($generated@@277 $generated@@340))) (= ($generated@@336 ($generated@@138 $generated@@340 $generated@@342) $generated@@341) ($generated@@336 $generated@@340 $generated@@341))))))
 :pattern ( ($generated@@336 ($generated@@138 $generated@@340 $generated@@342) $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@297 (type $generated@@344))))
(let (($generated@@346 ($generated@@296 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@295 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@294 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@293 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@297 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@297 (type $generated@@351))))
(let (($generated@@353 ($generated@@296 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@295 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@294 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@83 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@315 (type $generated@@355))))
(let (($generated@@357 ($generated@@314 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@313 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@312 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@311 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@315 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@78 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@315 (type $generated@@362))))
(let (($generated@@364 ($generated@@314 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@313 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@312 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@78 $generated@@163 $generated@@2)) (= (type $generated@@367) $generated@@66)) (= ($generated@@150 $generated@@366 ($generated@@172 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@163) (< 0 ($generated ($generated@@83 $generated@@366 $generated@@368)))) ($generated@@234 $generated@@368 $generated@@367))
 :pattern ( ($generated@@83 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@150 $generated@@366 ($generated@@172 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
 (=> (= (type $generated@@369) ($generated@@139 $generated@@371)) (= ($generated@@137 $generated@@369 $generated@@370) (exists (($generated@@372 Int) ) (!  (and (and (<= 0 $generated@@372) (< $generated@@372 ($generated@@277 $generated@@369))) (= ($generated@@336 $generated@@369 $generated@@372) $generated@@370))
 :pattern ( ($generated@@336 $generated@@369 $generated@@372))
)))))
 :pattern ( ($generated@@137 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@374) $generated@@66)) (= (type $generated@@375) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@373 ($generated@@243 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@163) ($generated@@0 ($generated@@83 $generated@@373 $generated@@376))) ($generated@@265 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@83 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@76 $generated@@373 ($generated@@243 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@378) $generated@@66)) (= (type $generated@@379) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@377 ($generated@@248 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@163) ($generated@@0 ($generated@@83 $generated@@377 $generated@@380))) ($generated@@265 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@83 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@76 $generated@@377 ($generated@@248 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@83 ($generated@@288 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@83 ($generated@@288 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@78 $generated@@163 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@297 (type $generated@@386))))
(let (($generated@@388 ($generated@@296 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@78 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@295 $generated@@163 $generated@@163)) (= (type $generated@@390) $generated@@163)) (= ($generated@@0 ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@389) ($generated@@161 ($generated@@332 $generated@@154 $generated@@390)))) (= ($generated@@83 ($generated@@384 $generated@@389) ($generated@@161 ($generated@@332 $generated@@154 $generated@@390))) ($generated@@162 ($generated@@332 $generated@@154 $generated@@390))))))
 :pattern ( ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@78 $generated@@163 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@315 (type $generated@@394))))
(let (($generated@@396 ($generated@@314 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@78 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@313 $generated@@163 $generated@@163)) (= (type $generated@@398) $generated@@163)) (= ($generated@@0 ($generated@@83 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@397) ($generated@@161 ($generated@@332 $generated@@154 $generated@@398)))) (= ($generated@@83 ($generated@@392 $generated@@397) ($generated@@161 ($generated@@332 $generated@@154 $generated@@398))) ($generated@@162 ($generated@@332 $generated@@154 $generated@@398))))))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@296 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@295 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@83 ($generated@@348 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@83 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@399) $generated@@403))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@83 ($generated@@348 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@314 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@313 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@83 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@66)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@295 $generated@@163 $generated@@163)) (= (type $generated@@413) $generated@@66)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@163) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@412) $generated@@416))) (and ($generated@@265 ($generated@@83 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@265 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@66)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@313 $generated@@163 $generated@@163)) (= (type $generated@@421) $generated@@66)) (= (type $generated@@422) $generated@@66)) (= (type $generated@@423) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@163) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@420) $generated@@424))) (and ($generated@@265 ($generated@@83 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@265 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@76 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@78 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@315 (type $generated@@427))))
(let (($generated@@429 ($generated@@314 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@313 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@312 $generated@@429 $generated@@428)) (= ($generated@@311 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@311 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@315 (type $generated@@430))))
(let (($generated@@432 ($generated@@314 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@313 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@312 $generated@@432 $generated@@431)) (= ($generated@@359 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@359 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@315 (type $generated@@433))))
(let (($generated@@435 ($generated@@314 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@313 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@312 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@163))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@297 (type $generated@@436))))
(let (($generated@@438 ($generated@@296 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@295 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@294 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@163) (= (type $generated@@440) $generated@@163)) ($generated@@0 ($generated@@83 ($generated@@383 $generated@@436) ($generated@@282 ($generated@@233 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@315 (type $generated@@441))))
(let (($generated@@443 ($generated@@314 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@313 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@312 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@163) (= (type $generated@@445) $generated@@163)) ($generated@@0 ($generated@@83 ($generated@@391 $generated@@441) ($generated@@282 ($generated@@233 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@163) ($generated@@234 $generated@@446 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@446)) $generated@@446) ($generated@@150 ($generated@@332 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@163) ($generated@@234 $generated@@447 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@447)) $generated@@447) ($generated@@150 ($generated@@332 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@163) ($generated@@234 $generated@@448 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@448)) $generated@@448) ($generated@@150 ($generated@@332 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@163) ($generated@@234 $generated@@450 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@449 $generated@@450)) $generated@@450) ($generated@@150 ($generated@@332 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@66) (= ($generated@@234 ($generated@@282 $generated@@451) $generated@@452) ($generated@@150 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@234 ($generated@@282 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@81 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@78 $generated@@454 $generated@@2)) (<= 0 ($generated@@287 $generated@@453))))
 :pattern ( ($generated@@287 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@140 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@139 $generated@@456)) (<= 0 ($generated@@277 $generated@@455))))
 :pattern ( ($generated@@277 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@409 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@409 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@74 ($generated@@409 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@74 ($generated@@417 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@163) (= (type $generated@@478) $generated@@163)) (= ($generated@@271 ($generated@@233 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@153 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@153 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@483 ($generated@@153 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@153 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@163) (= (type $generated@@488) $generated@@163)) (= ($generated@@161 ($generated@@233 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@233 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@163) (= (type $generated@@490) $generated@@163)) (= ($generated@@162 ($generated@@233 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@233 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@139 $generated@@163)) (= (type $generated@@492) $generated@@66)) (= (type $generated@@493) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@491 ($generated@@259 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@277 $generated@@491))) ($generated@@265 ($generated@@336 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@336 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@76 $generated@@491 ($generated@@259 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@77 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@77 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@243 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@243 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@248 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@248 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@248 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@172 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@172 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@172 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@259 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@259 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@259 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@259 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@332 $generated@@514 ($generated@@282 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@282 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@295 $generated@@163 $generated@@163)) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) $generated@@66)) (= ($generated@@150 $generated@@515 ($generated@@409 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@163) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@515) $generated@@518))) (and ($generated@@234 ($generated@@83 ($generated@@384 $generated@@515) $generated@@518) $generated@@517) ($generated@@234 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@515) $generated@@518))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@150 $generated@@515 ($generated@@409 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@313 $generated@@163 $generated@@163)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) (= ($generated@@150 $generated@@519 ($generated@@417 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@163) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@519) $generated@@522))) (and ($generated@@234 ($generated@@83 ($generated@@392 $generated@@519) $generated@@522) $generated@@521) ($generated@@234 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@519) $generated@@522))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@150 $generated@@519 ($generated@@417 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@163) (= (type $generated@@526) $generated@@163)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@233 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@233 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@163) (= (type $generated@@528) $generated@@163)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@233 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@233 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@163) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) $generated@@66)) ($generated@@234 $generated@@529 ($generated@@409 $generated@@530 $generated@@531))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@163 $generated@@163) $generated@@529)) $generated@@529) ($generated@@150 ($generated@@332 ($generated@@295 $generated@@163 $generated@@163) $generated@@529) ($generated@@409 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@234 $generated@@529 ($generated@@409 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@163) (= (type $generated@@533) $generated@@66)) (= (type $generated@@534) $generated@@66)) ($generated@@234 $generated@@532 ($generated@@417 $generated@@533 $generated@@534))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@163 $generated@@163) $generated@@532)) $generated@@532) ($generated@@150 ($generated@@332 ($generated@@313 $generated@@163 $generated@@163) $generated@@532) ($generated@@417 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@234 $generated@@532 ($generated@@417 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@163)) ($generated@@234 $generated@@537 ($generated@@153 $generated@@535 $generated@@536))) (and (= ($generated@@282 ($generated@@332 $generated@@154 $generated@@537)) $generated@@537) ($generated@@150 ($generated@@332 $generated@@154 $generated@@537) ($generated@@153 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@537 ($generated@@153 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@83 ($generated@@425 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@83 ($generated@@425 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@71)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@66) (= (type $generated@@543) $generated@@66)) (and (= ($generated@@74 ($generated@@153 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@153 $generated@@542 $generated@@543)) $generated@@64)))
 :pattern ( ($generated@@153 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@140 (type $generated@@546))))
(= (type ($generated@@544 $generated@@546)) ($generated@@139 $generated@@547)))
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@140 (type $generated@@548))))
(= (type ($generated@@545 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (=> (= (type $generated@@550) ($generated@@139 $generated@@552)) (and (= ($generated@@544 ($generated@@138 $generated@@550 $generated@@551)) $generated@@550) (= ($generated@@545 ($generated@@138 $generated@@550 $generated@@551)) $generated@@551))))
 :pattern ( ($generated@@138 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@154) (= ($generated@@523 ($generated@@282 $generated@@553)) ($generated@@524 $generated@@553)))
 :pattern ( ($generated@@523 ($generated@@282 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@163) ($generated@@234 $generated@@554 ($generated@@77 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@554)) $generated@@554) ($generated@@150 ($generated@@332 ($generated@@78 $generated@@163 $generated@@4) $generated@@554) ($generated@@77 0))))
 :pattern ( ($generated@@234 $generated@@554 ($generated@@77 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@66)) ($generated@@234 $generated@@555 ($generated@@243 $generated@@556))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@163 $generated@@4) $generated@@555)) $generated@@555) ($generated@@150 ($generated@@332 ($generated@@78 $generated@@163 $generated@@4) $generated@@555) ($generated@@243 $generated@@556))))
 :pattern ( ($generated@@234 $generated@@555 ($generated@@243 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@163) (= (type $generated@@558) $generated@@66)) ($generated@@234 $generated@@557 ($generated@@248 $generated@@558))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@163 $generated@@4) $generated@@557)) $generated@@557) ($generated@@150 ($generated@@332 ($generated@@78 $generated@@163 $generated@@4) $generated@@557) ($generated@@248 $generated@@558))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@248 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@163) (= (type $generated@@560) $generated@@66)) ($generated@@234 $generated@@559 ($generated@@172 $generated@@560))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@163 $generated@@2) $generated@@559)) $generated@@559) ($generated@@150 ($generated@@332 ($generated@@78 $generated@@163 $generated@@2) $generated@@559) ($generated@@172 $generated@@560))))
 :pattern ( ($generated@@234 $generated@@559 ($generated@@172 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@163) (= (type $generated@@562) $generated@@66)) ($generated@@234 $generated@@561 ($generated@@259 $generated@@562))) (and (= ($generated@@282 ($generated@@332 ($generated@@139 $generated@@163) $generated@@561)) $generated@@561) ($generated@@150 ($generated@@332 ($generated@@139 $generated@@163) $generated@@561) ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@234 $generated@@561 ($generated@@259 $generated@@562)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@540 $generated@@134) $generated@@65))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@163 $generated@@2)) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@563 ($generated@@172 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@163) (< 0 ($generated ($generated@@83 $generated@@563 $generated@@566)))) ($generated@@265 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@83 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@76 $generated@@563 ($generated@@172 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@154) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@569) (and ($generated@@152 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@66) ($generated@@76 $generated@@567 ($generated@@153 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@76 $generated@@567 ($generated@@153 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@265 ($generated@@161 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@265 ($generated@@161 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@154) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@573) (and ($generated@@152 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@66) ($generated@@76 $generated@@571 ($generated@@153 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@76 $generated@@571 ($generated@@153 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@265 ($generated@@162 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@265 ($generated@@162 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) (= ($generated@@150 $generated@@575 $generated@@134)  (and (<= ($generated@@253 0) ($generated $generated@@575)) (< ($generated $generated@@575) 4294967296))))
 :pattern ( ($generated@@150 $generated@@575 $generated@@134))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@163) (= (type $generated@@577) $generated@@163)) (= ($generated@@233 ($generated@@255 $generated@@576) ($generated@@255 $generated@@577)) ($generated@@255 ($generated@@233 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@233 ($generated@@255 $generated@@576) ($generated@@255 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@253 $generated@@578))) ($generated@@255 ($generated@@282 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@253 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@282 ($generated@@255 $generated@@579)) ($generated@@255 ($generated@@282 $generated@@579)))
 :pattern ( ($generated@@282 ($generated@@255 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@140 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@139 $generated@@581)) (= ($generated@@277 $generated@@580) 0)) (= $generated@@580 ($generated@@168 $generated@@581))))
 :pattern ( ($generated@@277 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@78 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@287 ($generated@@84 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@287 $generated@@582) ($generated ($generated@@83 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@287 ($generated@@84 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@2)) ($generated@@76 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@3)) ($generated@@76 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@4)) ($generated@@76 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@449)) ($generated@@76 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@163)) ($generated@@76 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@139 $generated@@163)) (= (type $generated@@597) $generated@@66)) (= ($generated@@150 $generated@@596 ($generated@@259 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@277 $generated@@596))) ($generated@@234 ($generated@@336 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@336 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@150 $generated@@596 ($generated@@259 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@139 $generated@@163)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@277 $generated@@600))) (< ($generated@@524 ($generated@@332 $generated@@154 ($generated@@336 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@524 ($generated@@332 $generated@@154 ($generated@@336 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@295 $generated@@163 $generated@@163)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@150 $generated@@602 ($generated@@409 $generated@@603 $generated@@604))) (and (and ($generated@@150 ($generated@@293 $generated@@602) ($generated@@243 $generated@@603)) ($generated@@150 ($generated@@348 $generated@@602) ($generated@@243 $generated@@604))) ($generated@@150 ($generated@@383 $generated@@602) ($generated@@243 ($generated@@153 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@150 $generated@@602 ($generated@@409 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@313 $generated@@163 $generated@@163)) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) $generated@@66)) ($generated@@150 $generated@@605 ($generated@@417 $generated@@606 $generated@@607))) (and (and ($generated@@150 ($generated@@311 $generated@@605) ($generated@@248 $generated@@606)) ($generated@@150 ($generated@@359 $generated@@605) ($generated@@248 $generated@@607))) ($generated@@150 ($generated@@391 $generated@@605) ($generated@@248 ($generated@@153 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@150 $generated@@605 ($generated@@417 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@150 $generated@@608 $generated@@46))
 :pattern ( ($generated@@150 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@150 $generated@@609 $generated@@47))
 :pattern ( ($generated@@150 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@150 $generated@@610 $generated@@44))
 :pattern ( ($generated@@150 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@449) ($generated@@150 $generated@@611 $generated@@45))
 :pattern ( ($generated@@150 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@163) ($generated@@150 $generated@@612 $generated@@48))
 :pattern ( ($generated@@150 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 (T@U) Bool)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@613) ($generated@@139 $generated@@163)) (= (type $generated@@614) ($generated@@139 $generated@@163))) (= (type $generated@@615) ($generated@@139 $generated@@163))) (= (type $generated@@616) ($generated@@139 $generated@@163))) (= (type $generated@@617) ($generated@@139 $generated@@163))) (= (type $generated@@618) ($generated@@179 $generated@@79 $generated@@4))) (= (type $generated@@619) $generated@@79)) (= (type $generated@@620) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@631) ($generated@@139 $generated@@163))) (= (type $generated@@632) ($generated@@139 $generated@@163))) (= (type $generated@@633) ($generated@@139 $generated@@163))) (= (type $generated@@634) ($generated@@139 $generated@@163))) (= (type $generated@@635) ($generated@@139 $generated@@163))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@637  (=> (and (not ($generated@@137 $generated@@613 ($generated@@282 $generated@@614))) (= (ControlFlow 0 3) (- 0 2))) ($generated@@0 ($generated@@255 ($generated@@11 false))))))
(let (($generated@@638 true))
(let (($generated@@639  (and (=> (= (ControlFlow 0 4) 1) $generated@@638) (=> (= (ControlFlow 0 4) 3) $generated@@637))))
(let (($generated@@640  (=> (not ($generated@@137 $generated@@613 ($generated@@282 $generated@@615))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@255 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@255 ($generated@@11 false))) (=> (= (ControlFlow 0 6) 4) $generated@@639))))))
(let (($generated@@641  (=> (and ($generated@@137 $generated@@613 ($generated@@282 $generated@@615)) (= (ControlFlow 0 5) 4)) $generated@@639)))
(let (($generated@@642  (and (=> (= (ControlFlow 0 8) 5) $generated@@641) (=> (= (ControlFlow 0 8) 6) $generated@@640))))
(let (($generated@@643  (=> (and (not ($generated@@137 $generated@@613 ($generated@@282 $generated@@616))) (= (ControlFlow 0 11) 8)) $generated@@642)))
(let (($generated@@644  (=> ($generated@@137 $generated@@613 ($generated@@282 $generated@@616)) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@0 ($generated@@255 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@255 ($generated@@11 false))) (=> (= (ControlFlow 0 9) 8) $generated@@642))))))
(let (($generated@@645  (and (=> (= (ControlFlow 0 12) 9) $generated@@644) (=> (= (ControlFlow 0 12) 11) $generated@@643))))
(let (($generated@@646  (=> (not ($generated@@137 $generated@@613 ($generated@@282 $generated@@617))) (and (=> (= (ControlFlow 0 14) (- 0 15)) ($generated@@0 ($generated@@255 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@255 ($generated@@11 false))) (=> (= (ControlFlow 0 14) 12) $generated@@645))))))
(let (($generated@@647  (=> (and ($generated@@137 $generated@@613 ($generated@@282 $generated@@617)) (= (ControlFlow 0 13) 12)) $generated@@645)))
(let (($generated@@648  (=> (and (= $generated@@618 ($generated@@178 $generated@@619 $generated@@620 $generated@@60 false)) (= $generated@@621 ($generated@@253 1))) (and (=> (= (ControlFlow 0 16) (- 0 25)) (and (<= ($generated@@253 0) $generated@@621) (< $generated@@621 4294967296))) (=> (and (<= ($generated@@253 0) $generated@@621) (< $generated@@621 4294967296)) (=> (and (= $generated@@617 ($generated@@255 ($generated@@138 ($generated@@168 $generated@@163) ($generated@@282 ($generated@@8 ($generated@@253 1)))))) (= $generated@@622 ($generated@@253 1))) (and (=> (= (ControlFlow 0 16) (- 0 24)) (and (<= ($generated@@253 0) $generated@@622) (< $generated@@622 4294967296))) (=> (and (<= ($generated@@253 0) $generated@@622) (< $generated@@622 4294967296)) (=> (= $generated@@623 ($generated@@253 2)) (and (=> (= (ControlFlow 0 16) (- 0 23)) (and (<= ($generated@@253 0) $generated@@623) (< $generated@@623 4294967296))) (=> (and (<= ($generated@@253 0) $generated@@623) (< $generated@@623 4294967296)) (=> (and (= $generated@@616 ($generated@@255 ($generated@@138 ($generated@@138 ($generated@@168 $generated@@163) ($generated@@282 ($generated@@8 ($generated@@253 1)))) ($generated@@282 ($generated@@8 ($generated@@253 2)))))) (= $generated@@624 ($generated@@253 1))) (and (=> (= (ControlFlow 0 16) (- 0 22)) (and (<= ($generated@@253 0) $generated@@624) (< $generated@@624 4294967296))) (=> (and (<= ($generated@@253 0) $generated@@624) (< $generated@@624 4294967296)) (=> (= $generated@@625 ($generated@@253 2)) (and (=> (= (ControlFlow 0 16) (- 0 21)) (and (<= ($generated@@253 0) $generated@@625) (< $generated@@625 4294967296))) (=> (and (<= ($generated@@253 0) $generated@@625) (< $generated@@625 4294967296)) (=> (= $generated@@626 ($generated@@253 3)) (and (=> (= (ControlFlow 0 16) (- 0 20)) (and (<= ($generated@@253 0) $generated@@626) (< $generated@@626 4294967296))) (=> (and (<= ($generated@@253 0) $generated@@626) (< $generated@@626 4294967296)) (=> (and (= $generated@@615 ($generated@@255 ($generated@@138 ($generated@@138 ($generated@@138 ($generated@@168 $generated@@163) ($generated@@282 ($generated@@8 ($generated@@253 1)))) ($generated@@282 ($generated@@8 ($generated@@253 2)))) ($generated@@282 ($generated@@8 ($generated@@253 3)))))) (= $generated@@627 ($generated@@253 1))) (and (=> (= (ControlFlow 0 16) (- 0 19)) (and (<= ($generated@@253 0) $generated@@627) (< $generated@@627 4294967296))) (=> (and (<= ($generated@@253 0) $generated@@627) (< $generated@@627 4294967296)) (=> (= $generated@@628 ($generated@@253 2)) (and (=> (= (ControlFlow 0 16) (- 0 18)) (and (<= ($generated@@253 0) $generated@@628) (< $generated@@628 4294967296))) (=> (and (<= ($generated@@253 0) $generated@@628) (< $generated@@628 4294967296)) (=> (= $generated@@629 ($generated@@253 3)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= ($generated@@253 0) $generated@@629) (< $generated@@629 4294967296))) (=> (and (<= ($generated@@253 0) $generated@@629) (< $generated@@629 4294967296)) (=> (and (= $generated@@614 ($generated@@255 ($generated@@138 ($generated@@138 ($generated@@138 ($generated@@168 $generated@@163) ($generated@@282 ($generated@@8 ($generated@@253 1)))) ($generated@@282 ($generated@@8 ($generated@@253 2)))) ($generated@@282 ($generated@@8 ($generated@@253 3)))))) (= $generated@@613 ($generated@@138 ($generated@@138 ($generated@@138 ($generated@@168 $generated@@163) ($generated@@282 $generated@@617)) ($generated@@282 $generated@@615)) ($generated@@282 $generated@@617)))) (and (=> (= (ControlFlow 0 16) 13) $generated@@647) (=> (= (ControlFlow 0 16) 14) $generated@@646))))))))))))))))))))))))))))))))
(let (($generated@@649  (=> (and ($generated@@264 $generated@@620) ($generated@@630 $generated@@620)) (=> (and (and (and ($generated@@150 $generated@@631 ($generated@@259 $generated@@134)) ($generated@@76 $generated@@631 ($generated@@259 $generated@@134) $generated@@620)) true) (and (and ($generated@@150 $generated@@632 ($generated@@259 $generated@@134)) ($generated@@76 $generated@@632 ($generated@@259 $generated@@134) $generated@@620)) true)) (=> (and (and (and (and ($generated@@150 $generated@@633 ($generated@@259 $generated@@134)) ($generated@@76 $generated@@633 ($generated@@259 $generated@@134) $generated@@620)) true) (and (and ($generated@@150 $generated@@634 ($generated@@259 $generated@@134)) ($generated@@76 $generated@@634 ($generated@@259 $generated@@134) $generated@@620)) true)) (and (and (and ($generated@@150 $generated@@635 ($generated@@259 ($generated@@259 $generated@@134))) ($generated@@76 $generated@@635 ($generated@@259 ($generated@@259 $generated@@134)) $generated@@620)) true) (and (= 1 $generated@@636) (= (ControlFlow 0 26) 16)))) $generated@@648)))))
$generated@@649))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@453 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@556 (T@T) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@154)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271) ($generated@@76 $generated@@269 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@247 ($generated@@267 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@274) $generated@@154)) (= (type $generated@@275) $generated@@66)) ($generated@@134 $generated@@272 $generated@@273)) ($generated@@247 $generated@@274 $generated@@275 $generated@@272)) ($generated@@247 $generated@@274 $generated@@275 $generated@@273))
 :pattern ( ($generated@@134 $generated@@272 $generated@@273) ($generated@@247 $generated@@274 $generated@@275 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@279) $generated@@66)) ($generated@@134 $generated@@276 $generated@@277)) ($generated@@76 $generated@@278 $generated@@279 $generated@@276)) ($generated@@76 $generated@@278 $generated@@279 $generated@@277))
 :pattern ( ($generated@@134 $generated@@276 $generated@@277) ($generated@@76 $generated@@278 $generated@@279 $generated@@276))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@78 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@81 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@78 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@83 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@78 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@81 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@78 $generated@@323 $generated@@2)) (= ($generated@@160 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@83 $generated@@322 $generated@@324))) (<= ($generated ($generated@@83 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@83 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@160 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@154) ($generated@@221 $generated@@328 $generated@@138)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@328)) $generated@@328) ($generated@@141 ($generated@@325 $generated@@2 $generated@@328) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@328 $generated@@138))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@78 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@352) $generated@@66)) (= ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@351 $generated@@353)))) ($generated@@221 $generated@@353 $generated@@352))
 :pattern ( ($generated@@83 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@141 $generated@@351 ($generated@@159 $generated@@352)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@290 (type $generated@@355))))
(let (($generated@@357 ($generated@@289 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@288 $generated@@357 $generated@@356)) (= (= ($generated@@354 $generated@@355) 0) (= $generated@@355 ($generated@@287 $generated@@357 $generated@@356))))))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@359) $generated@@66)) (= (type $generated@@360) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@358 ($generated@@230 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) ($generated@@0 ($generated@@83 $generated@@358 $generated@@361))) ($generated@@247 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@83 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@76 $generated@@358 ($generated@@230 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@363) $generated@@66)) (= (type $generated@@364) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@362 ($generated@@235 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@154) ($generated@@0 ($generated@@83 $generated@@362 $generated@@365))) ($generated@@247 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@235 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@83 ($generated@@281 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@83 ($generated@@281 $generated@@367) $generated@@366)))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@290 (type $generated@@371))))
(let (($generated@@373 ($generated@@289 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@78 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@375) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@374) ($generated@@152 ($generated@@325 $generated@@145 $generated@@375)))) (= ($generated@@83 ($generated@@369 $generated@@374) ($generated@@152 ($generated@@325 $generated@@145 $generated@@375))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@375))))))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@308 (type $generated@@379))))
(let (($generated@@381 ($generated@@307 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@78 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@383) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@382) ($generated@@152 ($generated@@325 $generated@@145 $generated@@383)))) (= ($generated@@83 ($generated@@377 $generated@@382) ($generated@@152 ($generated@@325 $generated@@145 $generated@@383))) ($generated@@153 ($generated@@325 $generated@@145 $generated@@383))))))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@289 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@288 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@83 ($generated@@369 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@384) $generated@@388))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@307 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@306 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@83 ($generated@@344 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@83 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@389) $generated@@393))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@66)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@397) $generated@@401))) (and ($generated@@247 ($generated@@83 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@247 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@76 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@66)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@405) $generated@@409))) (and ($generated@@247 ($generated@@83 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@247 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@76 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= (type ($generated@@410 $generated@@411 $generated@@412)) ($generated@@78 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@415)))
 (=> (and (and (= (type $generated@@414) ($generated@@78 $generated@@417 $generated@@4)) (= (type $generated@@416) $generated@@417)) ($generated@@0 ($generated@@83 $generated@@414 $generated@@416))) ($generated@@0 ($generated@@83 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))))
 :pattern ( ($generated@@410 $generated@@414 $generated@@415) ($generated@@83 $generated@@414 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@419)))
 (=> (and (= (type $generated@@418) ($generated@@78 $generated@@421 $generated@@4)) (= (type $generated@@420) $generated@@421)) (= ($generated@@0 ($generated@@83 ($generated@@410 $generated@@418 $generated@@419) $generated@@420))  (or (= $generated@@420 $generated@@419) ($generated@@0 ($generated@@83 $generated@@418 $generated@@420))))))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@422) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@423) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@424) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@422 $generated@@424))) (and ($generated@@134 $generated@@422 $generated@@423) ($generated@@134 $generated@@423 $generated@@424))) ($generated@@134 $generated@@422 $generated@@424))
 :pattern ( ($generated@@134 $generated@@422 $generated@@423) ($generated@@134 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@78 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@308 (type $generated@@427))))
(let (($generated@@429 ($generated@@307 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@306 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@305 $generated@@429 $generated@@428)) (= ($generated@@304 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@304 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@308 (type $generated@@430))))
(let (($generated@@432 ($generated@@307 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@306 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@305 $generated@@432 $generated@@431)) (= ($generated@@344 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@344 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@308 (type $generated@@433))))
(let (($generated@@435 ($generated@@307 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@306 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@305 $generated@@435 $generated@@434)) (= ($generated@@376 $generated@@433) ($generated@@425 $generated@@154))))))
 :pattern ( ($generated@@376 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@290 (type $generated@@436))))
(let (($generated@@438 ($generated@@289 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@288 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@287 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@154) (= (type $generated@@440) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@368 $generated@@436) ($generated@@267 ($generated@@220 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@368 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@308 (type $generated@@441))))
(let (($generated@@443 ($generated@@307 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@306 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@305 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@154) (= (type $generated@@445) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@376 $generated@@441) ($generated@@267 ($generated@@220 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@376 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@154) ($generated@@221 $generated@@446 $generated@@46)) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@446)) $generated@@446) ($generated@@141 ($generated@@325 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@154) ($generated@@221 $generated@@447 $generated@@47)) (and (= ($generated@@267 ($generated@@325 $generated@@3 $generated@@447)) $generated@@447) ($generated@@141 ($generated@@325 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@154) ($generated@@221 $generated@@448 $generated@@44)) (and (= ($generated@@267 ($generated@@325 $generated@@4 $generated@@448)) $generated@@448) ($generated@@141 ($generated@@325 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@154) ($generated@@221 $generated@@450 $generated@@45)) (and (= ($generated@@267 ($generated@@325 $generated@@449 $generated@@450)) $generated@@450) ($generated@@141 ($generated@@325 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@66) (= ($generated@@221 ($generated@@267 $generated@@451) $generated@@452) ($generated@@141 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@221 ($generated@@267 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@81 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@78 $generated@@455 $generated@@4)) (<= 0 ($generated@@453 $generated@@454))))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@81 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@78 $generated@@457 $generated@@2)) (<= 0 ($generated@@280 $generated@@456))))
 :pattern ( ($generated@@280 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@262 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@261 $generated@@459)) (<= 0 ($generated@@260 $generated@@458))))
 :pattern ( ($generated@@260 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@290 (type $generated@@460))))
(let (($generated@@462 ($generated@@289 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@288 $generated@@462 $generated@@461)) (<= 0 ($generated@@354 $generated@@460)))))
 :pattern ( ($generated@@354 $generated@@460))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@394 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@394 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@394 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@394 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@74 ($generated@@394 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@402 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@402 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@402 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@402 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@74 ($generated@@402 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) (= (type $generated@@484) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@66) (= (type $generated@@488) $generated@@66)) (= ($generated@@485 ($generated@@144 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@144 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@66) (= (type $generated@@492) $generated@@66)) (= ($generated@@489 ($generated@@144 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@144 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@154) (= (type $generated@@494) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@220 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@154) (= (type $generated@@496) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@220 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@262 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@261 $generated@@154)) (= (type $generated@@504) $generated@@66)) (= (type $generated@@505) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@260 $generated@@503))) ($generated@@247 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@76 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
 (=> (= (type $generated@@507) ($generated@@78 $generated@@509 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@410 $generated@@507 $generated@@508) $generated@@508))))
 :pattern ( ($generated@@410 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
 (=> (and (= (type $generated@@510) ($generated@@78 $generated@@512 $generated@@4)) ($generated@@0 ($generated@@83 $generated@@510 $generated@@511))) (= ($generated@@453 ($generated@@410 $generated@@510 $generated@@511)) ($generated@@453 $generated@@510))))
 :pattern ( ($generated@@453 ($generated@@410 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@77 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@77 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@515 ($generated@@230 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@230 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@519 ($generated@@235 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@235 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@66) (= ($generated@@523 ($generated@@159 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@159 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@66) (= ($generated@@527 ($generated@@497 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@497 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@66) (= ($generated@@74 ($generated@@497 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@325 $generated@@532 ($generated@@267 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@267 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) (= ($generated@@141 $generated@@533 ($generated@@394 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@533) $generated@@536))) (and ($generated@@221 ($generated@@83 ($generated@@369 $generated@@533) $generated@@536) $generated@@535) ($generated@@221 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@533) $generated@@536))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@141 $generated@@533 ($generated@@394 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) $generated@@66)) (= ($generated@@141 $generated@@537 ($generated@@402 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@537) $generated@@540))) (and ($generated@@221 ($generated@@83 ($generated@@377 $generated@@537) $generated@@540) $generated@@539) ($generated@@221 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@537) $generated@@540))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@141 $generated@@537 ($generated@@402 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@154)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@220 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@220 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) (= (type $generated@@546) $generated@@154)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@220 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@220 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@154) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) $generated@@66)) ($generated@@221 $generated@@547 ($generated@@394 $generated@@548 $generated@@549))) (and (= ($generated@@267 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@547)) $generated@@547) ($generated@@141 ($generated@@325 ($generated@@288 $generated@@154 $generated@@154) $generated@@547) ($generated@@394 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@221 $generated@@547 ($generated@@394 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@154) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) $generated@@66)) ($generated@@221 $generated@@550 ($generated@@402 $generated@@551 $generated@@552))) (and (= ($generated@@267 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@550)) $generated@@550) ($generated@@141 ($generated@@325 ($generated@@306 $generated@@154 $generated@@154) $generated@@550) ($generated@@402 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@221 $generated@@550 ($generated@@402 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@66) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) $generated@@154)) ($generated@@221 $generated@@555 ($generated@@144 $generated@@553 $generated@@554))) (and (= ($generated@@267 ($generated@@325 $generated@@145 $generated@@555)) $generated@@555) ($generated@@141 ($generated@@325 $generated@@145 $generated@@555) ($generated@@144 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@221 $generated@@555 ($generated@@144 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@557 T@T) ) (! (= (type ($generated@@556 $generated@@557)) ($generated@@78 $generated@@557 $generated@@4))
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@83 ($generated@@556 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@83 ($generated@@556 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
 (not ($generated@@0 ($generated@@83 ($generated@@425 $generated@@561) $generated@@560))))
 :pattern ( (let (($generated@@561 (type $generated@@560)))
($generated@@83 ($generated@@425 $generated@@561) $generated@@560)))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@71)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@66) (= (type $generated@@565) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@564 $generated@@565)) $generated@@62) (= ($generated@@562 ($generated@@144 $generated@@564 $generated@@565)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@145) (= ($generated@@541 ($generated@@267 $generated@@566)) ($generated@@542 $generated@@566)))
 :pattern ( ($generated@@541 ($generated@@267 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@290 (type $generated@@567))))
(let (($generated@@569 ($generated@@289 (type $generated@@567))))
 (=> (= (type $generated@@567) ($generated@@288 $generated@@569 $generated@@568)) (= ($generated@@453 ($generated@@286 $generated@@567)) ($generated@@354 $generated@@567)))))
 :pattern ( ($generated@@453 ($generated@@286 $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@290 (type $generated@@570))))
(let (($generated@@572 ($generated@@289 (type $generated@@570))))
 (=> (= (type $generated@@570) ($generated@@288 $generated@@572 $generated@@571)) (= ($generated@@453 ($generated@@368 $generated@@570)) ($generated@@354 $generated@@570)))))
 :pattern ( ($generated@@453 ($generated@@368 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@290 (type $generated@@573))))
(let (($generated@@575 ($generated@@289 (type $generated@@573))))
 (=> (= (type $generated@@573) ($generated@@288 $generated@@575 $generated@@574)) (<= ($generated@@453 ($generated@@333 $generated@@573)) ($generated@@354 $generated@@573)))))
 :pattern ( ($generated@@453 ($generated@@333 $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@154) ($generated@@221 $generated@@576 ($generated@@77 0))) (and (= ($generated@@267 ($generated@@325 $generated@@2 $generated@@576)) $generated@@576) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@576) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@576 ($generated@@77 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@154) (= (type $generated@@578) $generated@@66)) ($generated@@221 $generated@@577 ($generated@@230 $generated@@578))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@577)) $generated@@577) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@577) ($generated@@230 $generated@@578))))
 :pattern ( ($generated@@221 $generated@@577 ($generated@@230 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@154) (= (type $generated@@580) $generated@@66)) ($generated@@221 $generated@@579 ($generated@@235 $generated@@580))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@579)) $generated@@579) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@4) $generated@@579) ($generated@@235 $generated@@580))))
 :pattern ( ($generated@@221 $generated@@579 ($generated@@235 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@154) (= (type $generated@@582) $generated@@66)) ($generated@@221 $generated@@581 ($generated@@159 $generated@@582))) (and (= ($generated@@267 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@581)) $generated@@581) ($generated@@141 ($generated@@325 ($generated@@78 $generated@@154 $generated@@2) $generated@@581) ($generated@@159 $generated@@582))))
 :pattern ( ($generated@@221 $generated@@581 ($generated@@159 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@154) (= (type $generated@@584) $generated@@66)) ($generated@@221 $generated@@583 ($generated@@497 $generated@@584))) (and (= ($generated@@267 ($generated@@325 ($generated@@261 $generated@@154) $generated@@583)) $generated@@583) ($generated@@141 ($generated@@325 ($generated@@261 $generated@@154) $generated@@583) ($generated@@497 $generated@@584))))
 :pattern ( ($generated@@221 $generated@@583 ($generated@@497 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@81 (type $generated@@585))))
 (=> (= (type $generated@@585) ($generated@@78 $generated@@586 $generated@@4)) (and (= (= ($generated@@453 $generated@@585) 0) (= $generated@@585 ($generated@@556 $generated@@586))) (=> (not (= ($generated@@453 $generated@@585) 0)) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@586) ($generated@@0 ($generated@@83 $generated@@585 $generated@@587)))
 :no-pattern (type $generated@@587)
 :no-pattern ($generated $generated@@587)
 :no-pattern ($generated@@0 $generated@@587)
))))))
 :pattern ( ($generated@@453 $generated@@585))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@562 $generated@@138) $generated@@65))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@588 ($generated@@159 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@588 $generated@@591)))) ($generated@@247 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@83 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@76 $generated@@588 ($generated@@159 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (=> (and (= (type $generated@@592) ($generated@@78 $generated@@594 $generated@@4)) (not ($generated@@0 ($generated@@83 $generated@@592 $generated@@593)))) (= ($generated@@453 ($generated@@410 $generated@@592 $generated@@593)) (+ ($generated@@453 $generated@@592) 1))))
 :pattern ( ($generated@@453 ($generated@@410 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@597) (and ($generated@@143 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@66) ($generated@@76 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@76 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@247 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@601) (and ($generated@@143 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@66) ($generated@@76 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@76 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@247 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) (= ($generated@@141 $generated@@603 $generated@@138)  (and (<= ($generated@@240 0) ($generated $generated@@603)) (< ($generated $generated@@603) 4294967296))))
 :pattern ( ($generated@@141 $generated@@603 $generated@@138))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@154) (= (type $generated@@605) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@604) ($generated@@242 $generated@@605)) ($generated@@242 ($generated@@220 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@604) ($generated@@242 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@267 ($generated@@8 ($generated@@240 $generated@@606))) ($generated@@242 ($generated@@267 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@267 ($generated@@8 ($generated@@240 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@267 ($generated@@242 $generated@@607)) ($generated@@242 ($generated@@267 $generated@@607)))
 :pattern ( ($generated@@267 ($generated@@242 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@262 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@261 $generated@@609)) (= ($generated@@260 $generated@@608) 0)) (= $generated@@608 ($generated@@259 $generated@@609))))
 :pattern ( ($generated@@260 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@78 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@280 ($generated@@84 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@280 $generated@@610) ($generated ($generated@@83 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@280 ($generated@@84 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@615) $generated@@2)) ($generated@@76 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@76 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@617) $generated@@3)) ($generated@@76 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@76 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@619) $generated@@4)) ($generated@@76 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@76 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@621) $generated@@449)) ($generated@@76 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@76 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@623) $generated@@154)) ($generated@@76 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@76 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@261 $generated@@154)) (= (type $generated@@625) $generated@@66)) (= ($generated@@141 $generated@@624 ($generated@@497 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@260 $generated@@624))) ($generated@@221 ($generated@@498 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@498 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@141 $generated@@624 ($generated@@497 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@260 $generated@@628))) (< ($generated@@542 ($generated@@325 $generated@@145 ($generated@@498 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@542 ($generated@@325 $generated@@145 ($generated@@498 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@288 $generated@@154 $generated@@154)) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) $generated@@66)) ($generated@@141 $generated@@630 ($generated@@394 $generated@@631 $generated@@632))) (and (and ($generated@@141 ($generated@@286 $generated@@630) ($generated@@230 $generated@@631)) ($generated@@141 ($generated@@333 $generated@@630) ($generated@@230 $generated@@632))) ($generated@@141 ($generated@@368 $generated@@630) ($generated@@230 ($generated@@144 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@141 $generated@@630 ($generated@@394 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@306 $generated@@154 $generated@@154)) (= (type $generated@@634) $generated@@66)) (= (type $generated@@635) $generated@@66)) ($generated@@141 $generated@@633 ($generated@@402 $generated@@634 $generated@@635))) (and (and ($generated@@141 ($generated@@304 $generated@@633) ($generated@@235 $generated@@634)) ($generated@@141 ($generated@@344 $generated@@633) ($generated@@235 $generated@@635))) ($generated@@141 ($generated@@376 $generated@@633) ($generated@@235 ($generated@@144 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@141 $generated@@633 ($generated@@402 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@141 $generated@@636 $generated@@46))
 :pattern ( ($generated@@141 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@141 $generated@@637 $generated@@47))
 :pattern ( ($generated@@141 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@141 $generated@@638 $generated@@44))
 :pattern ( ($generated@@141 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@449) ($generated@@141 $generated@@639 $generated@@45))
 :pattern ( ($generated@@141 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@154) ($generated@@141 $generated@@640 $generated@@48))
 :pattern ( ($generated@@141 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@641) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@642) $generated@@79)) (= (type $generated@@643) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@644) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@646) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@657) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@658) ($generated@@78 $generated@@154 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@660  (=> (= $generated@@641 ($generated@@165 $generated@@642 $generated@@643 $generated@@60 false)) (=> (and (and ($generated@@246 $generated@@644) ($generated@@645 $generated@@644)) (and (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@79) (=> (and (not (= $generated@@661 $generated@@642)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@643 $generated@@661) $generated@@60))) (= ($generated@@83 $generated@@644 $generated@@661) ($generated@@83 $generated@@643 $generated@@661))))
 :pattern ( ($generated@@83 $generated@@644 $generated@@661))
)) ($generated@@134 $generated@@643 $generated@@644))) (=> (and (and (and ($generated@@246 $generated@@646) ($generated@@645 $generated@@646)) (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@79) (=> (and (not (= $generated@@662 $generated@@642)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@644 $generated@@662) $generated@@60))) (= ($generated@@83 $generated@@646 $generated@@662) ($generated@@83 $generated@@644 $generated@@662))))
 :pattern ( ($generated@@83 $generated@@646 $generated@@662))
))) (and ($generated@@134 $generated@@644 $generated@@646) (= $generated@@647 ($generated@@240 0)))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@240 0) $generated@@647) (< $generated@@647 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@647) (< $generated@@647 4294967296)) (=> (= $generated@@648 ($generated@@240 1)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@240 0) $generated@@648) (< $generated@@648 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@648) (< $generated@@648 4294967296)) (=> (= $generated@@649 ($generated@@240 2)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@240 0) $generated@@649) (< $generated@@649 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@649) (< $generated@@649 4294967296)) (=> (= $generated@@650 ($generated@@240 3)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@240 0) $generated@@650) (< $generated@@650 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@650) (< $generated@@650 4294967296)) (=> (= $generated@@651 ($generated@@240 4)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@240 0) $generated@@651) (< $generated@@651 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@651) (< $generated@@651 4294967296)) (=> (= $generated@@652 ($generated@@240 5)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@240 0) $generated@@652) (< $generated@@652 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@652) (< $generated@@652 4294967296)) (=> (= $generated@@653 ($generated@@240 6)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@240 0) $generated@@653) (< $generated@@653 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@653) (< $generated@@653 4294967296)) (=> (= $generated@@654 ($generated@@240 7)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@240 0) $generated@@654) (< $generated@@654 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@654) (< $generated@@654 4294967296)) (=> (= $generated@@655 ($generated@@240 8)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@240 0) $generated@@655) (< $generated@@655 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@655) (< $generated@@655 4294967296)) (=> (= $generated@@656 ($generated@@240 9)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@240 0) $generated@@656) (< $generated@@656 4294967296))) (=> (and (<= ($generated@@240 0) $generated@@656) (< $generated@@656 4294967296)) (=> (= $generated@@657 ($generated@@242 ($generated@@410 ($generated@@410 ($generated@@410 ($generated@@410 ($generated@@410 ($generated@@410 ($generated@@410 ($generated@@410 ($generated@@410 ($generated@@410 ($generated@@556 $generated@@154) ($generated@@267 ($generated@@8 ($generated@@240 0)))) ($generated@@267 ($generated@@8 ($generated@@240 1)))) ($generated@@267 ($generated@@8 ($generated@@240 2)))) ($generated@@267 ($generated@@8 ($generated@@240 3)))) ($generated@@267 ($generated@@8 ($generated@@240 4)))) ($generated@@267 ($generated@@8 ($generated@@240 5)))) ($generated@@267 ($generated@@8 ($generated@@240 6)))) ($generated@@267 ($generated@@8 ($generated@@240 7)))) ($generated@@267 ($generated@@8 ($generated@@240 8)))) ($generated@@267 ($generated@@8 ($generated@@240 9)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@663 Int) ) (!  (=> (and (<= ($generated@@240 0) $generated@@663) (< $generated@@663 4294967296)) (=> (and (<= ($generated@@240 0) $generated@@663) (< $generated@@663 10)) ($generated@@0 ($generated@@83 $generated@@657 ($generated@@267 ($generated@@8 $generated@@663))))))
 :pattern ( ($generated@@83 $generated@@657 ($generated@@267 ($generated@@8 $generated@@663))))
))) (=> (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@2) (=> (and (<= ($generated@@240 0) ($generated $generated@@664)) (< ($generated $generated@@664) 4294967296)) (=> (and (<= ($generated@@240 0) ($generated $generated@@664)) (< ($generated $generated@@664) 10)) ($generated@@0 ($generated@@83 $generated@@657 ($generated@@267 $generated@@664))))))
 :pattern ( ($generated@@83 $generated@@657 ($generated@@267 $generated@@664)))
)) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@453 $generated@@657) ($generated@@240 10))))))))))))))))))))))))))))))))))))))))
(let (($generated@@665  (=> (and ($generated@@246 $generated@@643) ($generated@@645 $generated@@643)) (=> (and (and (and ($generated@@141 $generated@@658 ($generated@@230 $generated@@138)) ($generated@@76 $generated@@658 ($generated@@230 $generated@@138) $generated@@643)) true) (and (= 3 $generated@@659) (= (ControlFlow 0 14) 2))) $generated@@660))))
$generated@@665)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
