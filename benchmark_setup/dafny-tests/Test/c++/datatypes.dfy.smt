(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (Int Bool) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@335 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (= ($generated@@1 $generated@@80) 11))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and (= (type $generated@@83) $generated@@80) (= (type $generated@@84) $generated@@80)) true) (= ($generated@@79 $generated@@83 $generated@@84)  (and (= ($generated@@81 $generated@@83) ($generated@@81 $generated@@84)) (= ($generated@@82 $generated@@83) ($generated@@82 $generated@@84)))))
 :pattern ( ($generated@@79 $generated@@83 $generated@@84))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 12)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@72 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@72 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (= (type $generated@@143) $generated@@69))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@144 $generated@@143 $generated@@145))
 :pattern ( ($generated@@85 $generated@@144 $generated@@143 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@86 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@86 0)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@150 $generated@@151)) $generated@@69)
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@69) (= (type $generated@@153) $generated@@69)) (= (type $generated@@154) $generated@@80)) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153))) ($generated@@148 $generated@@154))
 :pattern ( ($generated@@148 $generated@@154) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@80) (= (type $generated@@162) $generated@@80)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@69)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@87 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@69)) ($generated@@146 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@146 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@88 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@72 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@88) (= (type $generated@@218) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@219) ($generated@@71 $generated@@4))) (= (type $generated@@221) $generated@@88)) (= (type $generated@@222) ($generated@@71 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (= (type $generated@@225) $generated@@69))
(assert (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) ($generated@@146 $generated@@226 $generated@@225)) ($generated@@224 $generated@@226))
 :pattern ( ($generated@@224 $generated@@226) ($generated@@146 $generated@@226 $generated@@225))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@80)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@69) (= (type $generated@@232) $generated@@69)) (= (type $generated@@233) $generated@@158)) (= (type $generated@@234) $generated@@158)) (= ($generated@@146 ($generated@@227 $generated@@233 $generated@@234) ($generated@@149 $generated@@231 $generated@@232))  (and ($generated@@228 $generated@@233 $generated@@231) ($generated@@228 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@146 ($generated@@227 $generated@@233 $generated@@234) ($generated@@149 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@80) (= (type $generated@@236) $generated@@80)) (= ($generated@@155 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@155 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@80) (= (type $generated@@238) $generated@@80)) (= ($generated@@79 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@79 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@69)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@87 $generated@@158 $generated@@4)) (= (type $generated@@242) $generated@@69)) (= ($generated@@146 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@158) ($generated@@0 ($generated@@92 $generated@@241 $generated@@243))) ($generated@@228 $generated@@243 $generated@@242))
 :pattern ( ($generated@@92 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@146 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@69)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@158 $generated@@4)) (= (type $generated@@247) $generated@@69)) (= ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@158) ($generated@@0 ($generated@@92 $generated@@246 $generated@@248))) ($generated@@228 $generated@@248 $generated@@247))
 :pattern ( ($generated@@92 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@69) (= (type $generated@@258) $generated@@69)) (= (type $generated@@259) $generated@@158)) (= (type $generated@@260) $generated@@158)) (= (type $generated@@261) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@255 $generated@@261)) (= ($generated@@85 ($generated@@227 $generated@@259 $generated@@260) ($generated@@149 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@85 ($generated@@227 $generated@@259 $generated@@260) ($generated@@149 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@73)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@80) (= ($generated@@148 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@80) (= ($generated@@224 $generated@@265) (= ($generated@@262 $generated@@265) $generated@@64)))
 :pattern ( ($generated@@224 $generated@@265))
)))
(assert (forall (($generated@@267 Int) ($generated@@268 Bool) ) (! (= (type ($generated@@266 $generated@@267 $generated@@268)) $generated@@80)
 :pattern ( ($generated@@266 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 Int) ($generated@@270 Bool) ) (! (= ($generated@@146 ($generated@@266 $generated@@269 $generated@@270) $generated@@225)  (and ($generated@@146 ($generated@@8 $generated@@269) $generated@@143) ($generated@@146 ($generated@@11 $generated@@270) $generated@@44)))
 :pattern ( ($generated@@146 ($generated@@266 $generated@@269 $generated@@270) $generated@@225))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@80) ($generated@@148 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@158) (= (type $generated@@273) $generated@@158)) (= $generated@@271 ($generated@@227 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@148 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@80) ($generated@@224 $generated@@274)) (exists (($generated@@275 Int) ($generated@@276 Bool) ) (= $generated@@274 ($generated@@266 $generated@@275 $generated@@276))))
 :pattern ( ($generated@@224 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@158)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@69) (= (type $generated@@289) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@256 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@85 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@256 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@87 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@90 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@87 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@92 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@87 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@92 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@92 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@87 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@92 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@92 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@90 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@87 $generated@@333 $generated@@2)) (= ($generated@@164 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@92 $generated@@332 $generated@@334))) (<= ($generated ($generated@@92 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@92 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@164 $generated@@332))
)))
(assert (forall (($generated@@336 T@T) ($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@158) ($generated@@228 $generated@@338 $generated@@143)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@338)) $generated@@338) ($generated@@146 ($generated@@335 $generated@@2 $generated@@338) $generated@@143)))
 :pattern ( ($generated@@228 $generated@@338 $generated@@143))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@158) ($generated@@228 $generated@@339 $generated@@225)) (and (= ($generated@@285 ($generated@@335 $generated@@80 $generated@@339)) $generated@@339) ($generated@@146 ($generated@@335 $generated@@80 $generated@@339) $generated@@225)))
 :pattern ( ($generated@@228 $generated@@339 $generated@@225))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@300 (type $generated@@340))))
(let (($generated@@342 ($generated@@299 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@298 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@297 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@92 ($generated@@296 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@296 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@300 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@87 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@300 (type $generated@@347))))
(let (($generated@@349 ($generated@@299 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@298 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@297 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@92 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@318 (type $generated@@351))))
(let (($generated@@353 ($generated@@317 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@316 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@315 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@92 ($generated@@314 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@314 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@318 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@87 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@318 (type $generated@@358))))
(let (($generated@@360 ($generated@@317 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@316 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@315 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@92 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@87 $generated@@158 $generated@@2)) (= (type $generated@@363) $generated@@69)) (= ($generated@@146 $generated@@362 ($generated@@163 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@158) (< 0 ($generated ($generated@@92 $generated@@362 $generated@@364)))) ($generated@@228 $generated@@364 $generated@@363))
 :pattern ( ($generated@@92 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@146 $generated@@362 ($generated@@163 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@87 $generated@@158 $generated@@4)) (= (type $generated@@366) $generated@@69)) (= (type $generated@@367) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@365 ($generated@@239 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@158) ($generated@@0 ($generated@@92 $generated@@365 $generated@@368))) ($generated@@256 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@92 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@85 $generated@@365 ($generated@@239 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@87 $generated@@158 $generated@@4)) (= (type $generated@@370) $generated@@69)) (= (type $generated@@371) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@369 ($generated@@244 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@158) ($generated@@0 ($generated@@92 $generated@@369 $generated@@372))) ($generated@@256 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@92 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@85 $generated@@369 ($generated@@244 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@92 ($generated@@291 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@92 ($generated@@291 $generated@@374) $generated@@373)))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@87 $generated@@158 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@300 (type $generated@@378))))
(let (($generated@@380 ($generated@@299 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@87 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@298 $generated@@158 $generated@@158)) (= (type $generated@@382) $generated@@158)) (= ($generated@@0 ($generated@@92 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@92 ($generated@@296 $generated@@381) ($generated@@156 ($generated@@335 $generated@@80 $generated@@382)))) (= ($generated@@92 ($generated@@376 $generated@@381) ($generated@@156 ($generated@@335 $generated@@80 $generated@@382))) ($generated@@157 ($generated@@335 $generated@@80 $generated@@382))))))
 :pattern ( ($generated@@92 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@87 $generated@@158 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@318 (type $generated@@386))))
(let (($generated@@388 ($generated@@317 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@87 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@316 $generated@@158 $generated@@158)) (= (type $generated@@390) $generated@@158)) (= ($generated@@0 ($generated@@92 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@92 ($generated@@314 $generated@@389) ($generated@@156 ($generated@@335 $generated@@80 $generated@@390)))) (= ($generated@@92 ($generated@@384 $generated@@389) ($generated@@156 ($generated@@335 $generated@@80 $generated@@390))) ($generated@@157 ($generated@@335 $generated@@80 $generated@@390))))))
 :pattern ( ($generated@@92 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@299 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@298 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@92 ($generated@@344 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@92 ($generated@@296 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@92 ($generated@@376 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@92 ($generated@@296 $generated@@391) $generated@@395))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@92 ($generated@@344 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@317 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@316 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@92 ($generated@@355 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@92 ($generated@@314 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@92 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@396) $generated@@400))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@92 ($generated@@355 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@69)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@298 $generated@@158 $generated@@158)) (= (type $generated@@405) $generated@@69)) (= (type $generated@@406) $generated@@69)) (= (type $generated@@407) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@158) ($generated@@0 ($generated@@92 ($generated@@296 $generated@@404) $generated@@408))) (and ($generated@@256 ($generated@@92 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@256 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@92 ($generated@@296 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@85 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@69)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@316 $generated@@158 $generated@@158)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) $generated@@69)) (= (type $generated@@415) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@158) ($generated@@0 ($generated@@92 ($generated@@314 $generated@@412) $generated@@416))) (and ($generated@@256 ($generated@@92 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@256 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@85 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Bool) ) (! (= ($generated@@82 ($generated@@266 $generated@@417 $generated@@418)) $generated@@418)
 :pattern ( ($generated@@266 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@87 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@318 (type $generated@@421))))
(let (($generated@@423 ($generated@@317 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@316 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@315 $generated@@423 $generated@@422)) (= ($generated@@314 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@314 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@318 (type $generated@@424))))
(let (($generated@@426 ($generated@@317 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@316 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@315 $generated@@426 $generated@@425)) (= ($generated@@355 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@355 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@318 (type $generated@@427))))
(let (($generated@@429 ($generated@@317 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@316 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@315 $generated@@429 $generated@@428)) (= ($generated@@383 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@383 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@300 (type $generated@@430))))
(let (($generated@@432 ($generated@@299 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@298 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@297 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@92 ($generated@@375 $generated@@430) ($generated@@285 ($generated@@227 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@375 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@318 (type $generated@@435))))
(let (($generated@@437 ($generated@@317 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@316 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@315 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@92 ($generated@@383 $generated@@435) ($generated@@285 ($generated@@227 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@383 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@228 $generated@@440 $generated@@46)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@440)) $generated@@440) ($generated@@146 ($generated@@335 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@228 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@228 $generated@@441 $generated@@47)) (and (= ($generated@@285 ($generated@@335 $generated@@3 $generated@@441)) $generated@@441) ($generated@@146 ($generated@@335 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@228 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@228 $generated@@442 $generated@@44)) (and (= ($generated@@285 ($generated@@335 $generated@@4 $generated@@442)) $generated@@442) ($generated@@146 ($generated@@335 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@228 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@228 $generated@@444 $generated@@45)) (and (= ($generated@@285 ($generated@@335 $generated@@443 $generated@@444)) $generated@@444) ($generated@@146 ($generated@@335 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@228 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@69) (= ($generated@@228 ($generated@@285 $generated@@445) $generated@@446) ($generated@@146 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@228 ($generated@@285 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@90 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@87 $generated@@448 $generated@@2)) (<= 0 ($generated@@290 $generated@@447))))
 :pattern ( ($generated@@290 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@280 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@279 $generated@@450)) (<= 0 ($generated@@278 $generated@@449))))
 :pattern ( ($generated@@278 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@69)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@69) (= (type $generated@@454) $generated@@69)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@69)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@69) (= (type $generated@@458) $generated@@69)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@69) (= (type $generated@@460) $generated@@69)) (= ($generated@@77 ($generated@@401 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@69)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@409 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@409 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@77 ($generated@@409 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@262 ($generated@@227 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@227 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@69)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@473 ($generated@@149 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@149 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@69)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@477 ($generated@@149 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@149 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@227 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@227 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@227 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@227 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 Int) ($generated@@486 Bool) ) (! (= ($generated@@262 ($generated@@266 $generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 Int) ($generated@@488 Bool) ) (! (= ($generated@@81 ($generated@@266 $generated@@487 $generated@@488)) $generated@@487)
 :pattern ( ($generated@@266 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@69)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@280 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@279 $generated@@158)) (= (type $generated@@496) $generated@@69)) (= (type $generated@@497) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@278 $generated@@495))) ($generated@@256 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@85 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@86 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@86 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@69) (= ($generated@@501 ($generated@@239 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@77 ($generated@@239 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@69) (= ($generated@@505 ($generated@@244 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@244 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@77 ($generated@@244 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@69) (= ($generated@@509 ($generated@@163 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@163 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@77 ($generated@@163 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@69)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@77 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@335 $generated@@518 ($generated@@285 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@285 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@298 $generated@@158 $generated@@158)) (= (type $generated@@520) $generated@@69)) (= (type $generated@@521) $generated@@69)) (= ($generated@@146 $generated@@519 ($generated@@401 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@158) ($generated@@0 ($generated@@92 ($generated@@296 $generated@@519) $generated@@522))) (and ($generated@@228 ($generated@@92 ($generated@@376 $generated@@519) $generated@@522) $generated@@521) ($generated@@228 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@519) $generated@@522))
 :pattern ( ($generated@@92 ($generated@@296 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@146 $generated@@519 ($generated@@401 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@316 $generated@@158 $generated@@158)) (= (type $generated@@524) $generated@@69)) (= (type $generated@@525) $generated@@69)) (= ($generated@@146 $generated@@523 ($generated@@409 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@158) ($generated@@0 ($generated@@92 ($generated@@314 $generated@@523) $generated@@526))) (and ($generated@@228 ($generated@@92 ($generated@@384 $generated@@523) $generated@@526) $generated@@525) ($generated@@228 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@523) $generated@@526))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@146 $generated@@523 ($generated@@409 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@158) (= (type $generated@@530) $generated@@158)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@227 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@227 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) (= (type $generated@@532) $generated@@158)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@227 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@227 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@158) (= (type $generated@@534) $generated@@69)) (= (type $generated@@535) $generated@@69)) ($generated@@228 $generated@@533 ($generated@@401 $generated@@534 $generated@@535))) (and (= ($generated@@285 ($generated@@335 ($generated@@298 $generated@@158 $generated@@158) $generated@@533)) $generated@@533) ($generated@@146 ($generated@@335 ($generated@@298 $generated@@158 $generated@@158) $generated@@533) ($generated@@401 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@228 $generated@@533 ($generated@@401 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@158) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@69)) ($generated@@228 $generated@@536 ($generated@@409 $generated@@537 $generated@@538))) (and (= ($generated@@285 ($generated@@335 ($generated@@316 $generated@@158 $generated@@158) $generated@@536)) $generated@@536) ($generated@@146 ($generated@@335 ($generated@@316 $generated@@158 $generated@@158) $generated@@536) ($generated@@409 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@228 $generated@@536 ($generated@@409 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@69) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@158)) ($generated@@228 $generated@@541 ($generated@@149 $generated@@539 $generated@@540))) (and (= ($generated@@285 ($generated@@335 $generated@@80 $generated@@541)) $generated@@541) ($generated@@146 ($generated@@335 $generated@@80 $generated@@541) ($generated@@149 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@228 $generated@@541 ($generated@@149 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@92 ($generated@@419 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@92 ($generated@@419 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@74)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@69) (= (type $generated@@547) $generated@@69)) (and (= ($generated@@77 ($generated@@149 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@149 $generated@@546 $generated@@547)) $generated@@66)))
 :pattern ( ($generated@@149 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@80) (= (type $generated@@549) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@255 $generated@@549) (and ($generated@@224 $generated@@548) ($generated@@85 $generated@@548 $generated@@225 $generated@@549)))) ($generated@@85 ($generated@@11 ($generated@@82 $generated@@548)) $generated@@44 $generated@@549))
 :pattern ( ($generated@@85 ($generated@@11 ($generated@@82 $generated@@548)) $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@80) (= ($generated@@527 ($generated@@285 $generated@@550)) ($generated@@528 $generated@@550)))
 :pattern ( ($generated@@527 ($generated@@285 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@158) ($generated@@228 $generated@@551 ($generated@@86 0))) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@551)) $generated@@551) ($generated@@146 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@551) ($generated@@86 0))))
 :pattern ( ($generated@@228 $generated@@551 ($generated@@86 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@158) (= (type $generated@@553) $generated@@69)) ($generated@@228 $generated@@552 ($generated@@239 $generated@@553))) (and (= ($generated@@285 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@552)) $generated@@552) ($generated@@146 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@552) ($generated@@239 $generated@@553))))
 :pattern ( ($generated@@228 $generated@@552 ($generated@@239 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@158) (= (type $generated@@555) $generated@@69)) ($generated@@228 $generated@@554 ($generated@@244 $generated@@555))) (and (= ($generated@@285 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@554)) $generated@@554) ($generated@@146 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@554) ($generated@@244 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@554 ($generated@@244 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@158) (= (type $generated@@557) $generated@@69)) ($generated@@228 $generated@@556 ($generated@@163 $generated@@557))) (and (= ($generated@@285 ($generated@@335 ($generated@@87 $generated@@158 $generated@@2) $generated@@556)) $generated@@556) ($generated@@146 ($generated@@335 ($generated@@87 $generated@@158 $generated@@2) $generated@@556) ($generated@@163 $generated@@557))))
 :pattern ( ($generated@@228 $generated@@556 ($generated@@163 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@158) (= (type $generated@@559) $generated@@69)) ($generated@@228 $generated@@558 ($generated@@489 $generated@@559))) (and (= ($generated@@285 ($generated@@335 ($generated@@279 $generated@@158) $generated@@558)) $generated@@558) ($generated@@146 ($generated@@335 ($generated@@279 $generated@@158) $generated@@558) ($generated@@489 $generated@@559))))
 :pattern ( ($generated@@228 $generated@@558 ($generated@@489 $generated@@559)))
)))
(assert (= ($generated@@77 $generated@@143) $generated@@63))
(assert (= ($generated@@544 $generated@@143) $generated@@67))
(assert (= ($generated@@77 $generated@@225) $generated@@65))
(assert (= ($generated@@544 $generated@@225) $generated@@68))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@87 $generated@@158 $generated@@2)) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@560 ($generated@@163 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@158) (< 0 ($generated ($generated@@92 $generated@@560 $generated@@563)))) ($generated@@256 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@92 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@85 $generated@@560 ($generated@@163 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@80) (= (type $generated@@565) $generated@@69)) (= (type $generated@@566) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@255 $generated@@566) (and ($generated@@148 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@69) ($generated@@85 $generated@@564 ($generated@@149 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@85 $generated@@564 ($generated@@149 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@256 ($generated@@156 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@256 ($generated@@156 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@80) (= (type $generated@@569) $generated@@69)) (= (type $generated@@570) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@255 $generated@@570) (and ($generated@@148 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@69) ($generated@@85 $generated@@568 ($generated@@149 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@85 $generated@@568 ($generated@@149 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@256 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@256 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@80) (= (type $generated@@573) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@255 $generated@@573) (and ($generated@@224 $generated@@572) ($generated@@85 $generated@@572 $generated@@225 $generated@@573)))) ($generated@@85 ($generated@@8 ($generated@@81 $generated@@572)) $generated@@143 $generated@@573))
 :pattern ( ($generated@@85 ($generated@@8 ($generated@@81 $generated@@572)) $generated@@143 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) (= ($generated@@146 $generated@@574 $generated@@143)  (and (<= ($generated@@249 0) ($generated $generated@@574)) (< ($generated $generated@@574) 4294967296))))
 :pattern ( ($generated@@146 $generated@@574 $generated@@143))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@158) (= (type $generated@@576) $generated@@158)) (= ($generated@@227 ($generated@@251 $generated@@575) ($generated@@251 $generated@@576)) ($generated@@251 ($generated@@227 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@227 ($generated@@251 $generated@@575) ($generated@@251 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@4) (= ($generated@@266 ($generated@@249 $generated@@577) ($generated@@0 ($generated@@251 $generated@@578))) ($generated@@251 ($generated@@266 $generated@@577 ($generated@@0 $generated@@578)))))
 :pattern ( ($generated@@266 ($generated@@249 $generated@@577) ($generated@@0 ($generated@@251 $generated@@578))))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@249 $generated@@579))) ($generated@@251 ($generated@@285 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@249 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@285 ($generated@@251 $generated@@580)) ($generated@@251 ($generated@@285 $generated@@580)))
 :pattern ( ($generated@@285 ($generated@@251 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@280 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@279 $generated@@582)) (= ($generated@@278 $generated@@581) 0)) (= $generated@@581 ($generated@@277 $generated@@582))))
 :pattern ( ($generated@@278 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@87 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@290 ($generated@@93 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@290 $generated@@583) ($generated ($generated@@92 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@290 ($generated@@93 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@588) $generated@@2)) ($generated@@85 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@85 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@590) $generated@@3)) ($generated@@85 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@85 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@592) $generated@@4)) ($generated@@85 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@85 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@594) $generated@@443)) ($generated@@85 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@85 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@596) $generated@@158)) ($generated@@85 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@85 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@279 $generated@@158)) (= (type $generated@@598) $generated@@69)) (= ($generated@@146 $generated@@597 ($generated@@489 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@278 $generated@@597))) ($generated@@228 ($generated@@490 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@490 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@146 $generated@@597 ($generated@@489 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@279 $generated@@158)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@278 $generated@@601))) (< ($generated@@528 ($generated@@335 $generated@@80 ($generated@@490 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@528 ($generated@@335 $generated@@80 ($generated@@490 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@298 $generated@@158 $generated@@158)) (= (type $generated@@604) $generated@@69)) (= (type $generated@@605) $generated@@69)) ($generated@@146 $generated@@603 ($generated@@401 $generated@@604 $generated@@605))) (and (and ($generated@@146 ($generated@@296 $generated@@603) ($generated@@239 $generated@@604)) ($generated@@146 ($generated@@344 $generated@@603) ($generated@@239 $generated@@605))) ($generated@@146 ($generated@@375 $generated@@603) ($generated@@239 ($generated@@149 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@146 $generated@@603 ($generated@@401 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@316 $generated@@158 $generated@@158)) (= (type $generated@@607) $generated@@69)) (= (type $generated@@608) $generated@@69)) ($generated@@146 $generated@@606 ($generated@@409 $generated@@607 $generated@@608))) (and (and ($generated@@146 ($generated@@314 $generated@@606) ($generated@@244 $generated@@607)) ($generated@@146 ($generated@@355 $generated@@606) ($generated@@244 $generated@@608))) ($generated@@146 ($generated@@383 $generated@@606) ($generated@@244 ($generated@@149 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@146 $generated@@606 ($generated@@409 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@146 $generated@@609 $generated@@46))
 :pattern ( ($generated@@146 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@146 $generated@@610 $generated@@47))
 :pattern ( ($generated@@146 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@146 $generated@@611 $generated@@44))
 :pattern ( ($generated@@146 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@443) ($generated@@146 $generated@@612 $generated@@45))
 :pattern ( ($generated@@146 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@158) ($generated@@146 $generated@@613 $generated@@48))
 :pattern ( ($generated@@146 $generated@@613 $generated@@48))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 Bool) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) ($generated@@255 $generated@@616)) (= ($generated@@85 ($generated@@266 $generated@@614 $generated@@615) $generated@@225 $generated@@616)  (and ($generated@@85 ($generated@@8 $generated@@614) $generated@@143 $generated@@616) ($generated@@85 ($generated@@11 $generated@@615) $generated@@44 $generated@@616))))
 :pattern ( ($generated@@85 ($generated@@266 $generated@@614 $generated@@615) $generated@@225 $generated@@616))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () Int)
(assert  (and (and (and (= (type $generated@@618) $generated@@80) (= (type $generated@@620) ($generated@@170 $generated@@88 $generated@@4))) (= (type $generated@@621) $generated@@88)) (= (type $generated@@622) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@625  (=> (= $generated@@617 ($generated@@249 0)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= ($generated@@249 0) $generated@@617) (< $generated@@617 4294967296))) (=> (and (<= ($generated@@249 0) $generated@@617) (< $generated@@617 4294967296)) (=> (and ($generated@@224 ($generated@@251 ($generated@@266 ($generated@@249 0) ($generated@@0 ($generated@@251 ($generated@@11 true)))))) (= (ControlFlow 0 4) (- 0 3))) (= ($generated@@249 ($generated@@81 ($generated@@251 ($generated@@266 ($generated@@249 0) ($generated@@0 ($generated@@251 ($generated@@11 true))))))) ($generated@@249 0))))))))
(let (($generated@@626  (=> ($generated@@224 $generated@@618) (=> (and (= $generated@@619 ($generated@@249 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@249 0) $generated@@619) (< $generated@@619 4294967296))))))
(let (($generated@@627  (=> (= $generated@@620 ($generated@@169 $generated@@621 $generated@@622 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@626) (=> (= (ControlFlow 0 6) 4) $generated@@625)))))
(let (($generated@@628  (=> (and (and (and ($generated@@255 $generated@@622) ($generated@@623 $generated@@622)) ($generated@@146 $generated@@618 $generated@@225)) (and (= 2 $generated@@624) (= (ControlFlow 0 7) 6))) $generated@@627)))
$generated@@628)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (Int) T@U)
(declare-fun $generated@@284 (Bool) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@338 (T@T T@U) T@U)
(declare-fun $generated@@342 () T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U Int) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@1 $generated@@80) 11))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and (and (= (type $generated@@82) $generated@@80) (= (type $generated@@83) $generated@@80)) (and ($generated@@79 $generated@@82) ($generated@@79 $generated@@83))) (= ($generated@@78 $generated@@82 $generated@@83) (= ($generated@@81 $generated@@82) ($generated@@81 $generated@@83))))
 :pattern ( ($generated@@78 $generated@@82 $generated@@83) ($generated@@79 $generated@@82))
 :pattern ( ($generated@@78 $generated@@82 $generated@@83) ($generated@@79 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@71)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 12)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@73 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@73 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@70)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (= (type $generated@@144) $generated@@70))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@145 $generated@@144 $generated@@146))
 :pattern ( ($generated@@86 $generated@@145 $generated@@144 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@80) (= (type $generated@@150) $generated@@80)) (and ($generated@@147 $generated@@149) ($generated@@147 $generated@@150))) (= ($generated@@78 $generated@@149 $generated@@150) (= ($generated@@148 $generated@@149) ($generated@@148 $generated@@150))))
 :pattern ( ($generated@@78 $generated@@149 $generated@@150) ($generated@@147 $generated@@149))
 :pattern ( ($generated@@78 $generated@@149 $generated@@150) ($generated@@147 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@87 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@87 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@80)) ($generated@@151 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@151 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@80) (= (type $generated@@167) $generated@@80)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@88 $generated@@163 $generated@@2)) (= (type $generated@@172) $generated@@70)) ($generated@@151 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@151 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@89 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@73 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@89) (= (type $generated@@223) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@224) ($generated@@72 $generated@@4))) (= (type $generated@@226) $generated@@89)) (= (type $generated@@227) ($generated@@72 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@80)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@70) (= (type $generated@@234) $generated@@70)) (= (type $generated@@235) $generated@@163)) (= (type $generated@@236) $generated@@163)) (= ($generated@@151 ($generated@@229 $generated@@235 $generated@@236) ($generated@@154 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@151 ($generated@@229 $generated@@235 $generated@@236) ($generated@@154 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@80) (= (type $generated@@238) $generated@@80)) (= ($generated@@160 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@160 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@80) (= (type $generated@@240) $generated@@80)) (= ($generated@@78 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@78 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@70)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@88 $generated@@163 $generated@@4)) (= (type $generated@@244) $generated@@70)) (= ($generated@@151 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@163) ($generated@@0 ($generated@@93 $generated@@243 $generated@@245))) ($generated@@230 $generated@@245 $generated@@244))
 :pattern ( ($generated@@93 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@151 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@70)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@88 $generated@@163 $generated@@4)) (= (type $generated@@249) $generated@@70)) (= ($generated@@151 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@163) ($generated@@0 ($generated@@93 $generated@@248 $generated@@250))) ($generated@@230 $generated@@250 $generated@@249))
 :pattern ( ($generated@@93 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@151 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@70) (= (type $generated@@260) $generated@@70)) (= (type $generated@@261) $generated@@163)) (= (type $generated@@262) $generated@@163)) (= (type $generated@@263) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@257 $generated@@263)) (= ($generated@@86 ($generated@@229 $generated@@261 $generated@@262) ($generated@@154 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@86 ($generated@@229 $generated@@261 $generated@@262) ($generated@@154 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@74)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@80) (= ($generated@@153 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@80) (= ($generated@@147 $generated@@267) (= ($generated@@264 $generated@@267) $generated@@64)))
 :pattern ( ($generated@@147 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@80) (= ($generated@@79 $generated@@268) (= ($generated@@264 $generated@@268) $generated@@66)))
 :pattern ( ($generated@@79 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@80) ($generated@@153 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@163) (= (type $generated@@271) $generated@@163)) (= $generated@@269 ($generated@@229 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@153 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 Int) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@80)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@80) ($generated@@147 $generated@@282)) (exists (($generated@@283 Int) ) (= $generated@@282 ($generated@@280 $generated@@283))))
 :pattern ( ($generated@@147 $generated@@282))
)))
(assert (forall (($generated@@285 Bool) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@80)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@80) ($generated@@79 $generated@@286)) (exists (($generated@@287 Bool) ) (= $generated@@286 ($generated@@284 $generated@@287))))
 :pattern ( ($generated@@79 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@163)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@70) (= (type $generated@@292) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@258 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@86 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@258 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@88 $generated@@295 $generated@@2))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@91 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@88 $generated@@297 $generated@@2)) (and (= (= ($generated@@293 $generated@@296) 0) (= $generated@@296 ($generated@@294 $generated@@297))) (=> (not (= ($generated@@293 $generated@@296) 0)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) (< 0 ($generated ($generated@@93 $generated@@296 $generated@@298))))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 18)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@88 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@93 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@93 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@88 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@93 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@93 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@91 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@88 $generated@@336 $generated@@2)) (= ($generated@@169 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@93 $generated@@335 $generated@@337))) (<= ($generated ($generated@@93 $generated@@335 $generated@@337)) ($generated@@293 $generated@@335))))
 :pattern ( ($generated@@93 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@169 $generated@@335))
)))
(assert (forall (($generated@@339 T@T) ($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@163) ($generated@@230 $generated@@341 $generated@@144)) (and (= ($generated@@288 ($generated@@338 $generated@@2 $generated@@341)) $generated@@341) ($generated@@151 ($generated@@338 $generated@@2 $generated@@341) $generated@@144)))
 :pattern ( ($generated@@230 $generated@@341 $generated@@144))
)))
(assert (= (type $generated@@342) $generated@@70))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@163) ($generated@@230 $generated@@343 $generated@@342)) (and (= ($generated@@288 ($generated@@338 $generated@@80 $generated@@343)) $generated@@343) ($generated@@151 ($generated@@338 $generated@@80 $generated@@343) $generated@@342)))
 :pattern ( ($generated@@230 $generated@@343 $generated@@342))
)))
(assert (forall (($generated@@344 Int) ) (! (= ($generated@@151 ($generated@@280 $generated@@344) $generated@@342) ($generated@@151 ($generated@@8 $generated@@344) $generated@@144))
 :pattern ( ($generated@@151 ($generated@@280 $generated@@344) $generated@@342))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@303 (type $generated@@345))))
(let (($generated@@347 ($generated@@302 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@301 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@300 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@93 ($generated@@299 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@299 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@303 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@88 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@303 (type $generated@@352))))
(let (($generated@@354 ($generated@@302 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@301 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@300 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@93 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@321 (type $generated@@356))))
(let (($generated@@358 ($generated@@320 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@319 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@318 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@93 ($generated@@317 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@317 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@321 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@88 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@321 (type $generated@@363))))
(let (($generated@@365 ($generated@@320 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@319 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@318 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@93 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@88 $generated@@163 $generated@@2)) (= (type $generated@@368) $generated@@70)) (= ($generated@@151 $generated@@367 ($generated@@168 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@163) (< 0 ($generated ($generated@@93 $generated@@367 $generated@@369)))) ($generated@@230 $generated@@369 $generated@@368))
 :pattern ( ($generated@@93 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@151 $generated@@367 ($generated@@168 $generated@@368)))
)))
(assert (forall (($generated@@370 Bool) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@257 $generated@@371)) (= ($generated@@86 ($generated@@284 $generated@@370) $generated@@342 $generated@@371) ($generated@@86 ($generated@@11 $generated@@370) $generated@@44 $generated@@371)))
 :pattern ( ($generated@@86 ($generated@@284 $generated@@370) $generated@@342 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@88 $generated@@163 $generated@@4)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@372 ($generated@@241 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@163) ($generated@@0 ($generated@@93 $generated@@372 $generated@@375))) ($generated@@258 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@93 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@86 $generated@@372 ($generated@@241 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@88 $generated@@163 $generated@@4)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@376 ($generated@@246 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@163) ($generated@@0 ($generated@@93 $generated@@376 $generated@@379))) ($generated@@258 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@93 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@86 $generated@@376 ($generated@@246 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@93 ($generated@@294 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@93 ($generated@@294 $generated@@381) $generated@@380)))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@88 $generated@@163 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@303 (type $generated@@385))))
(let (($generated@@387 ($generated@@302 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@88 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@301 $generated@@163 $generated@@163)) (= (type $generated@@389) $generated@@163)) (= ($generated@@0 ($generated@@93 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@93 ($generated@@299 $generated@@388) ($generated@@161 ($generated@@338 $generated@@80 $generated@@389)))) (= ($generated@@93 ($generated@@383 $generated@@388) ($generated@@161 ($generated@@338 $generated@@80 $generated@@389))) ($generated@@162 ($generated@@338 $generated@@80 $generated@@389))))))
 :pattern ( ($generated@@93 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@88 $generated@@163 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@321 (type $generated@@393))))
(let (($generated@@395 ($generated@@320 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@88 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@319 $generated@@163 $generated@@163)) (= (type $generated@@397) $generated@@163)) (= ($generated@@0 ($generated@@93 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@93 ($generated@@317 $generated@@396) ($generated@@161 ($generated@@338 $generated@@80 $generated@@397)))) (= ($generated@@93 ($generated@@391 $generated@@396) ($generated@@161 ($generated@@338 $generated@@80 $generated@@397))) ($generated@@162 ($generated@@338 $generated@@80 $generated@@397))))))
 :pattern ( ($generated@@93 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@302 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@301 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@93 ($generated@@349 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@93 ($generated@@299 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@93 ($generated@@383 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@93 ($generated@@299 $generated@@398) $generated@@402))
 :pattern ( ($generated@@93 ($generated@@383 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@93 ($generated@@349 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@320 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@319 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@93 ($generated@@360 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@93 ($generated@@317 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@93 ($generated@@391 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@93 ($generated@@317 $generated@@403) $generated@@407))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@93 ($generated@@360 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@70)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@301 $generated@@163 $generated@@163)) (= (type $generated@@412) $generated@@70)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@299 $generated@@411) $generated@@415))) (and ($generated@@258 ($generated@@93 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@258 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@93 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@93 ($generated@@299 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@70)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@319 $generated@@163 $generated@@163)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@317 $generated@@419) $generated@@423))) (and ($generated@@258 ($generated@@93 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@258 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@93 ($generated@@317 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@86 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 Int) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@257 $generated@@425)) (= ($generated@@86 ($generated@@280 $generated@@424) $generated@@342 $generated@@425) ($generated@@86 ($generated@@8 $generated@@424) $generated@@144 $generated@@425)))
 :pattern ( ($generated@@86 ($generated@@280 $generated@@424) $generated@@342 $generated@@425))
)))
(assert (forall (($generated@@426 Bool) ) (! (= ($generated@@81 ($generated@@284 $generated@@426)) $generated@@426)
 :pattern ( ($generated@@284 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@80) ($generated@@151 $generated@@427 $generated@@342)) (or ($generated@@147 $generated@@427) ($generated@@79 $generated@@427)))
 :pattern ( ($generated@@79 $generated@@427) ($generated@@151 $generated@@427 $generated@@342))
 :pattern ( ($generated@@147 $generated@@427) ($generated@@151 $generated@@427 $generated@@342))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@88 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@321 (type $generated@@430))))
(let (($generated@@432 ($generated@@320 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@319 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@318 $generated@@432 $generated@@431)) (= ($generated@@317 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@317 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@321 (type $generated@@433))))
(let (($generated@@435 ($generated@@320 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@319 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@318 $generated@@435 $generated@@434)) (= ($generated@@360 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@360 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@321 (type $generated@@436))))
(let (($generated@@438 ($generated@@320 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@319 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@318 $generated@@438 $generated@@437)) (= ($generated@@390 $generated@@436) ($generated@@428 $generated@@163))))))
 :pattern ( ($generated@@390 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@303 (type $generated@@439))))
(let (($generated@@441 ($generated@@302 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@301 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@300 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@163) (= (type $generated@@443) $generated@@163)) ($generated@@0 ($generated@@93 ($generated@@382 $generated@@439) ($generated@@288 ($generated@@229 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@382 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@321 (type $generated@@444))))
(let (($generated@@446 ($generated@@320 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@319 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@318 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@163) (= (type $generated@@448) $generated@@163)) ($generated@@0 ($generated@@93 ($generated@@390 $generated@@444) ($generated@@288 ($generated@@229 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@390 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@163) ($generated@@230 $generated@@449 $generated@@46)) (and (= ($generated@@288 ($generated@@338 $generated@@2 $generated@@449)) $generated@@449) ($generated@@151 ($generated@@338 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@163) ($generated@@230 $generated@@450 $generated@@47)) (and (= ($generated@@288 ($generated@@338 $generated@@3 $generated@@450)) $generated@@450) ($generated@@151 ($generated@@338 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@163) ($generated@@230 $generated@@451 $generated@@44)) (and (= ($generated@@288 ($generated@@338 $generated@@4 $generated@@451)) $generated@@451) ($generated@@151 ($generated@@338 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@163) ($generated@@230 $generated@@453 $generated@@45)) (and (= ($generated@@288 ($generated@@338 $generated@@452 $generated@@453)) $generated@@453) ($generated@@151 ($generated@@338 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@70) (= ($generated@@230 ($generated@@288 $generated@@454) $generated@@455) ($generated@@151 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@230 ($generated@@288 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@91 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@88 $generated@@457 $generated@@2)) (<= 0 ($generated@@293 $generated@@456))))
 :pattern ( ($generated@@293 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@275 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@274 $generated@@459)) (<= 0 ($generated@@273 $generated@@458))))
 :pattern ( ($generated@@273 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@460 ($generated@@408 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@408 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@408 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@408 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@84 ($generated@@408 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@408 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@474 ($generated@@416 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@416 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@84 ($generated@@416 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@416 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@163) (= (type $generated@@481) $generated@@163)) (= ($generated@@264 ($generated@@229 $generated@@480 $generated@@481)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@154 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@154 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@486 ($generated@@154 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@154 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@163) (= (type $generated@@491) $generated@@163)) (= ($generated@@161 ($generated@@229 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@229 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@163) (= (type $generated@@493) $generated@@163)) (= ($generated@@162 ($generated@@229 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@229 $generated@@492 $generated@@493))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ($generated@@498 Int) ) (! (let (($generated@@499 ($generated@@275 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497 $generated@@498)) $generated@@499))
 :pattern ( ($generated@@495 $generated@@497 $generated@@498))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@274 $generated@@163)) (= (type $generated@@501) $generated@@70)) (= (type $generated@@502) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@500 ($generated@@494 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@273 $generated@@500))) ($generated@@258 ($generated@@495 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@495 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@86 $generated@@500 ($generated@@494 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@87 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@87 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@506 ($generated@@241 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@241 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@70) (= ($generated@@84 ($generated@@241 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@510 ($generated@@246 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@246 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@84 ($generated@@246 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@514 ($generated@@168 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@168 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@84 ($generated@@168 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@518 ($generated@@494 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@494 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@84 ($generated@@494 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@494 $generated@@521))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@264 ($generated@@280 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@280 $generated@@522))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@148 ($generated@@280 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@280 $generated@@523))
)))
(assert (forall (($generated@@524 Bool) ) (! (= ($generated@@264 ($generated@@284 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@284 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@338 $generated@@526 ($generated@@288 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@288 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@301 $generated@@163 $generated@@163)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@151 $generated@@527 ($generated@@408 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@299 $generated@@527) $generated@@530))) (and ($generated@@230 ($generated@@93 ($generated@@383 $generated@@527) $generated@@530) $generated@@529) ($generated@@230 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@93 ($generated@@383 $generated@@527) $generated@@530))
 :pattern ( ($generated@@93 ($generated@@299 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@151 $generated@@527 ($generated@@408 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@319 $generated@@163 $generated@@163)) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) (= ($generated@@151 $generated@@531 ($generated@@416 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@163) ($generated@@0 ($generated@@93 ($generated@@317 $generated@@531) $generated@@534))) (and ($generated@@230 ($generated@@93 ($generated@@391 $generated@@531) $generated@@534) $generated@@533) ($generated@@230 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@531) $generated@@534))
 :pattern ( ($generated@@93 ($generated@@317 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@151 $generated@@531 ($generated@@416 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@229 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@229 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@163)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@229 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@229 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 Bool) ) (! (= ($generated@@151 ($generated@@284 $generated@@541) $generated@@342) ($generated@@151 ($generated@@11 $generated@@541) $generated@@44))
 :pattern ( ($generated@@151 ($generated@@284 $generated@@541) $generated@@342))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@163) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) ($generated@@230 $generated@@542 ($generated@@408 $generated@@543 $generated@@544))) (and (= ($generated@@288 ($generated@@338 ($generated@@301 $generated@@163 $generated@@163) $generated@@542)) $generated@@542) ($generated@@151 ($generated@@338 ($generated@@301 $generated@@163 $generated@@163) $generated@@542) ($generated@@408 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@230 $generated@@542 ($generated@@408 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@163) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) ($generated@@230 $generated@@545 ($generated@@416 $generated@@546 $generated@@547))) (and (= ($generated@@288 ($generated@@338 ($generated@@319 $generated@@163 $generated@@163) $generated@@545)) $generated@@545) ($generated@@151 ($generated@@338 ($generated@@319 $generated@@163 $generated@@163) $generated@@545) ($generated@@416 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@230 $generated@@545 ($generated@@416 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@70) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@163)) ($generated@@230 $generated@@550 ($generated@@154 $generated@@548 $generated@@549))) (and (= ($generated@@288 ($generated@@338 $generated@@80 $generated@@550)) $generated@@550) ($generated@@151 ($generated@@338 $generated@@80 $generated@@550) ($generated@@154 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@230 $generated@@550 ($generated@@154 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@93 ($generated@@428 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@93 ($generated@@428 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@75)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@70) (= (type $generated@@556) $generated@@70)) (and (= ($generated@@84 ($generated@@154 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@154 $generated@@555 $generated@@556)) $generated@@67)))
 :pattern ( ($generated@@154 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@80) (= (type $generated@@558) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@257 $generated@@558) (and ($generated@@79 $generated@@557) ($generated@@86 $generated@@557 $generated@@342 $generated@@558)))) ($generated@@86 ($generated@@11 ($generated@@81 $generated@@557)) $generated@@44 $generated@@558))
 :pattern ( ($generated@@86 ($generated@@11 ($generated@@81 $generated@@557)) $generated@@44 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@80) (= ($generated@@535 ($generated@@288 $generated@@559)) ($generated@@536 $generated@@559)))
 :pattern ( ($generated@@535 ($generated@@288 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@163) ($generated@@230 $generated@@560 ($generated@@87 0))) (and (= ($generated@@288 ($generated@@338 $generated@@2 $generated@@560)) $generated@@560) ($generated@@151 ($generated@@338 ($generated@@88 $generated@@163 $generated@@4) $generated@@560) ($generated@@87 0))))
 :pattern ( ($generated@@230 $generated@@560 ($generated@@87 0)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@163) (= (type $generated@@562) $generated@@70)) ($generated@@230 $generated@@561 ($generated@@241 $generated@@562))) (and (= ($generated@@288 ($generated@@338 ($generated@@88 $generated@@163 $generated@@4) $generated@@561)) $generated@@561) ($generated@@151 ($generated@@338 ($generated@@88 $generated@@163 $generated@@4) $generated@@561) ($generated@@241 $generated@@562))))
 :pattern ( ($generated@@230 $generated@@561 ($generated@@241 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@163) (= (type $generated@@564) $generated@@70)) ($generated@@230 $generated@@563 ($generated@@246 $generated@@564))) (and (= ($generated@@288 ($generated@@338 ($generated@@88 $generated@@163 $generated@@4) $generated@@563)) $generated@@563) ($generated@@151 ($generated@@338 ($generated@@88 $generated@@163 $generated@@4) $generated@@563) ($generated@@246 $generated@@564))))
 :pattern ( ($generated@@230 $generated@@563 ($generated@@246 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@163) (= (type $generated@@566) $generated@@70)) ($generated@@230 $generated@@565 ($generated@@168 $generated@@566))) (and (= ($generated@@288 ($generated@@338 ($generated@@88 $generated@@163 $generated@@2) $generated@@565)) $generated@@565) ($generated@@151 ($generated@@338 ($generated@@88 $generated@@163 $generated@@2) $generated@@565) ($generated@@168 $generated@@566))))
 :pattern ( ($generated@@230 $generated@@565 ($generated@@168 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@163) (= (type $generated@@568) $generated@@70)) ($generated@@230 $generated@@567 ($generated@@494 $generated@@568))) (and (= ($generated@@288 ($generated@@338 ($generated@@274 $generated@@163) $generated@@567)) $generated@@567) ($generated@@151 ($generated@@338 ($generated@@274 $generated@@163) $generated@@567) ($generated@@494 $generated@@568))))
 :pattern ( ($generated@@230 $generated@@567 ($generated@@494 $generated@@568)))
)))
(assert (= ($generated@@84 $generated@@144) $generated@@63))
(assert (= ($generated@@553 $generated@@144) $generated@@68))
(assert (= ($generated@@84 $generated@@342) $generated@@65))
(assert (= ($generated@@553 $generated@@342) $generated@@69))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@88 $generated@@163 $generated@@2)) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@569 ($generated@@168 $generated@@570) $generated@@571) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@163) (< 0 ($generated ($generated@@93 $generated@@569 $generated@@572)))) ($generated@@258 $generated@@572 $generated@@570 $generated@@571))
 :pattern ( ($generated@@93 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@86 $generated@@569 ($generated@@168 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@80) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@257 $generated@@575) (and ($generated@@153 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@70) ($generated@@86 $generated@@573 ($generated@@154 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@86 $generated@@573 ($generated@@154 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@258 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@258 ($generated@@161 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@80) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@257 $generated@@579) (and ($generated@@153 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@86 $generated@@577 ($generated@@154 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@86 $generated@@577 ($generated@@154 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@258 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@258 ($generated@@162 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@80) (= (type $generated@@582) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@257 $generated@@582) (and ($generated@@147 $generated@@581) ($generated@@86 $generated@@581 $generated@@342 $generated@@582)))) ($generated@@86 ($generated@@8 ($generated@@148 $generated@@581)) $generated@@144 $generated@@582))
 :pattern ( ($generated@@86 ($generated@@8 ($generated@@148 $generated@@581)) $generated@@144 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) (= ($generated@@151 $generated@@583 $generated@@144)  (and (<= ($generated@@251 0) ($generated $generated@@583)) (< ($generated $generated@@583) 4294967296))))
 :pattern ( ($generated@@151 $generated@@583 $generated@@144))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@163) (= (type $generated@@585) $generated@@163)) (= ($generated@@229 ($generated@@253 $generated@@584) ($generated@@253 $generated@@585)) ($generated@@253 ($generated@@229 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@229 ($generated@@253 $generated@@584) ($generated@@253 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@251 $generated@@586))) ($generated@@253 ($generated@@288 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@251 $generated@@586))))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@280 ($generated@@251 $generated@@587)) ($generated@@253 ($generated@@280 $generated@@587)))
 :pattern ( ($generated@@280 ($generated@@251 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@4) (= ($generated@@284 ($generated@@0 ($generated@@253 $generated@@588))) ($generated@@253 ($generated@@284 ($generated@@0 $generated@@588)))))
 :pattern ( ($generated@@284 ($generated@@0 ($generated@@253 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@288 ($generated@@253 $generated@@589)) ($generated@@253 ($generated@@288 $generated@@589)))
 :pattern ( ($generated@@288 ($generated@@253 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@275 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@274 $generated@@591)) (= ($generated@@273 $generated@@590) 0)) (= $generated@@590 ($generated@@272 $generated@@591))))
 :pattern ( ($generated@@273 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@88 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@293 ($generated@@94 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@293 $generated@@592) ($generated ($generated@@93 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@293 ($generated@@94 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@597) $generated@@2)) ($generated@@86 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@86 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@599) $generated@@3)) ($generated@@86 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@86 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@601) $generated@@4)) ($generated@@86 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@86 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@603) $generated@@452)) ($generated@@86 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@86 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@605) $generated@@163)) ($generated@@86 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@86 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@274 $generated@@163)) (= (type $generated@@607) $generated@@70)) (= ($generated@@151 $generated@@606 ($generated@@494 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@273 $generated@@606))) ($generated@@230 ($generated@@495 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@495 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@151 $generated@@606 ($generated@@494 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@274 $generated@@163)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@273 $generated@@610))) (< ($generated@@536 ($generated@@338 $generated@@80 ($generated@@495 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@536 ($generated@@338 $generated@@80 ($generated@@495 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@301 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) $generated@@70)) ($generated@@151 $generated@@612 ($generated@@408 $generated@@613 $generated@@614))) (and (and ($generated@@151 ($generated@@299 $generated@@612) ($generated@@241 $generated@@613)) ($generated@@151 ($generated@@349 $generated@@612) ($generated@@241 $generated@@614))) ($generated@@151 ($generated@@382 $generated@@612) ($generated@@241 ($generated@@154 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@151 $generated@@612 ($generated@@408 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@319 $generated@@163 $generated@@163)) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) $generated@@70)) ($generated@@151 $generated@@615 ($generated@@416 $generated@@616 $generated@@617))) (and (and ($generated@@151 ($generated@@317 $generated@@615) ($generated@@246 $generated@@616)) ($generated@@151 ($generated@@360 $generated@@615) ($generated@@246 $generated@@617))) ($generated@@151 ($generated@@390 $generated@@615) ($generated@@246 ($generated@@154 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@151 $generated@@615 ($generated@@416 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@151 $generated@@618 $generated@@46))
 :pattern ( ($generated@@151 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@151 $generated@@619 $generated@@47))
 :pattern ( ($generated@@151 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@151 $generated@@620 $generated@@44))
 :pattern ( ($generated@@151 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@452) ($generated@@151 $generated@@621 $generated@@45))
 :pattern ( ($generated@@151 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@163) ($generated@@151 $generated@@622 $generated@@48))
 :pattern ( ($generated@@151 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (= (type $generated@@624) $generated@@80) (= (type $generated@@626) ($generated@@175 $generated@@89 $generated@@4))) (= (type $generated@@627) $generated@@89)) (= (type $generated@@628) ($generated@@88 $generated@@89 $generated@@90))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@631  (=> (= $generated@@623 ($generated@@251 0)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= ($generated@@251 0) $generated@@623) (< $generated@@623 4294967296))) (=> (and (<= ($generated@@251 0) $generated@@623) (< $generated@@623 4294967296)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@0 ($generated@@253 ($generated@@11 ($generated@@147 ($generated@@253 ($generated@@280 ($generated@@251 0)))))))) (=> (= (ControlFlow 0 5) (- 0 4)) (= ($generated@@251 ($generated@@148 ($generated@@253 ($generated@@280 ($generated@@251 0))))) ($generated@@251 0)))))))))
(let (($generated@@632  (=> ($generated@@147 $generated@@624) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@147 $generated@@624)) (=> ($generated@@147 $generated@@624) (=> (and (= $generated@@625 ($generated@@251 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@251 0) $generated@@625) (< $generated@@625 4294967296))))))))
(let (($generated@@633  (=> (= $generated@@626 ($generated@@174 $generated@@627 $generated@@628 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@632) (=> (= (ControlFlow 0 8) 5) $generated@@631)))))
(let (($generated@@634  (=> (and (and (and ($generated@@257 $generated@@628) ($generated@@629 $generated@@628)) ($generated@@151 $generated@@624 $generated@@342)) (and (= 2 $generated@@630) (= (ControlFlow 0 9) 8))) $generated@@633)))
$generated@@634)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int Bool) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@628 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert (= ($generated@@1 $generated@@83) 11))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (and (= (type $generated@@86) $generated@@83) (= (type $generated@@87) $generated@@83)) true) (= ($generated@@82 $generated@@86 $generated@@87)  (and (= ($generated@@84 $generated@@86) ($generated@@84 $generated@@87)) (= ($generated@@85 $generated@@86) ($generated@@85 $generated@@87)))))
 :pattern ( ($generated@@82 $generated@@86 $generated@@87))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@75 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@75 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@72)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@72))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@147 $generated@@146 $generated@@148))
 :pattern ( ($generated@@88 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@89 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@89 0)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@72)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@72) (= (type $generated@@156) $generated@@72)) (= (type $generated@@157) $generated@@83)) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@83) (= (type $generated@@165) $generated@@83)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@72)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@90 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@72)) ($generated@@149 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@149 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@91 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@75 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@91) (= (type $generated@@221) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@222) ($generated@@74 $generated@@4))) (= (type $generated@@224) $generated@@91)) (= (type $generated@@225) ($generated@@74 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (= (type $generated@@228) $generated@@72))
(assert (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@83) ($generated@@149 $generated@@229 $generated@@228)) ($generated@@227 $generated@@229))
 :pattern ( ($generated@@227 $generated@@229) ($generated@@149 $generated@@229 $generated@@228))
)))
(assert (= (type $generated@@231) $generated@@72))
(assert (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@83) ($generated@@149 $generated@@232 $generated@@231)) ($generated@@230 $generated@@232))
 :pattern ( ($generated@@230 $generated@@232) ($generated@@149 $generated@@232 $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@83)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@72) (= (type $generated@@238) $generated@@72)) (= (type $generated@@239) $generated@@161)) (= (type $generated@@240) $generated@@161)) (= ($generated@@149 ($generated@@233 $generated@@239 $generated@@240) ($generated@@152 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@149 ($generated@@233 $generated@@239 $generated@@240) ($generated@@152 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@83) (= (type $generated@@242) $generated@@83)) (= ($generated@@158 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@158 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@83) (= (type $generated@@244) $generated@@83)) (= ($generated@@82 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@82 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@83) (= (type $generated@@247) $generated@@83)) (= ($generated@@245 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@72)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@90 $generated@@161 $generated@@4)) (= (type $generated@@251) $generated@@72)) (= ($generated@@149 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@161) ($generated@@0 ($generated@@95 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@95 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@149 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@72)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@90 $generated@@161 $generated@@4)) (= (type $generated@@256) $generated@@72)) (= ($generated@@149 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@161) ($generated@@0 ($generated@@95 $generated@@255 $generated@@257))) ($generated@@234 $generated@@257 $generated@@256))
 :pattern ( ($generated@@95 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@149 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@72) (= (type $generated@@267) $generated@@72)) (= (type $generated@@268) $generated@@161)) (= (type $generated@@269) $generated@@161)) (= (type $generated@@270) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@264 $generated@@270)) (= ($generated@@88 ($generated@@233 $generated@@268 $generated@@269) ($generated@@152 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@88 ($generated@@233 $generated@@268 $generated@@269) ($generated@@152 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@76)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@83) (= ($generated@@151 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@83) (= ($generated@@227 $generated@@274) (= ($generated@@271 $generated@@274) $generated@@64)))
 :pattern ( ($generated@@227 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@83) (= ($generated@@230 $generated@@275) (= ($generated@@271 $generated@@275) $generated@@66)))
 :pattern ( ($generated@@230 $generated@@275))
)))
(assert (forall (($generated@@277 Int) ($generated@@278 Bool) ) (! (= (type ($generated@@276 $generated@@277 $generated@@278)) $generated@@83)
 :pattern ( ($generated@@276 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 Int) ($generated@@280 Bool) ) (! (= ($generated@@149 ($generated@@276 $generated@@279 $generated@@280) $generated@@228)  (and ($generated@@149 ($generated@@8 $generated@@279) $generated@@146) ($generated@@149 ($generated@@11 $generated@@280) $generated@@44)))
 :pattern ( ($generated@@149 ($generated@@276 $generated@@279 $generated@@280) $generated@@228))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@83) ($generated@@151 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@161) (= (type $generated@@283) $generated@@161)) (= $generated@@281 ($generated@@233 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@151 $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@83) ($generated@@227 $generated@@284)) (exists (($generated@@285 Int) ($generated@@286 Bool) ) (= $generated@@284 ($generated@@276 $generated@@285 $generated@@286))))
 :pattern ( ($generated@@227 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@83)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@83) ($generated@@230 $generated@@297)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@83) (= $generated@@297 ($generated@@295 $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@230 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@161)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@72) (= (type $generated@@303) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@265 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@88 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@265 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@90 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@93 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@90 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@95 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@90 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@95 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@95 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@90 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@95 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@95 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@93 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@90 $generated@@347 $generated@@2)) (= ($generated@@167 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@95 $generated@@346 $generated@@348))) (<= ($generated ($generated@@95 $generated@@346 $generated@@348)) ($generated@@304 $generated@@346))))
 :pattern ( ($generated@@95 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@167 $generated@@346))
)))
(assert (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@161) ($generated@@234 $generated@@352 $generated@@146)) (and (= ($generated@@299 ($generated@@349 $generated@@2 $generated@@352)) $generated@@352) ($generated@@149 ($generated@@349 $generated@@2 $generated@@352) $generated@@146)))
 :pattern ( ($generated@@234 $generated@@352 $generated@@146))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@161) ($generated@@234 $generated@@353 $generated@@228)) (and (= ($generated@@299 ($generated@@349 $generated@@83 $generated@@353)) $generated@@353) ($generated@@149 ($generated@@349 $generated@@83 $generated@@353) $generated@@228)))
 :pattern ( ($generated@@234 $generated@@353 $generated@@228))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@161) ($generated@@234 $generated@@354 $generated@@231)) (and (= ($generated@@299 ($generated@@349 $generated@@83 $generated@@354)) $generated@@354) ($generated@@149 ($generated@@349 $generated@@83 $generated@@354) $generated@@231)))
 :pattern ( ($generated@@234 $generated@@354 $generated@@231))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@83) (= ($generated@@149 ($generated@@295 $generated@@355) $generated@@231) ($generated@@149 $generated@@355 $generated@@228)))
 :pattern ( ($generated@@149 ($generated@@295 $generated@@355) $generated@@231))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(let (($generated@@358 ($generated@@313 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@312 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@311 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@95 ($generated@@310 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@310 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@314 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@90 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@314 (type $generated@@363))))
(let (($generated@@365 ($generated@@313 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@312 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@311 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@95 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(let (($generated@@369 ($generated@@331 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@330 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@329 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@95 ($generated@@328 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@328 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@332 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@90 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@332 (type $generated@@374))))
(let (($generated@@376 ($generated@@331 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@330 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@329 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@95 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@90 $generated@@161 $generated@@2)) (= (type $generated@@379) $generated@@72)) (= ($generated@@149 $generated@@378 ($generated@@166 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@161) (< 0 ($generated ($generated@@95 $generated@@378 $generated@@380)))) ($generated@@234 $generated@@380 $generated@@379))
 :pattern ( ($generated@@95 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@149 $generated@@378 ($generated@@166 $generated@@379)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@90 $generated@@161 $generated@@4)) (= (type $generated@@382) $generated@@72)) (= (type $generated@@383) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@381 ($generated@@248 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@161) ($generated@@0 ($generated@@95 $generated@@381 $generated@@384))) ($generated@@265 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@95 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@88 $generated@@381 ($generated@@248 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@90 $generated@@161 $generated@@4)) (= (type $generated@@386) $generated@@72)) (= (type $generated@@387) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@385 ($generated@@253 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@161) ($generated@@0 ($generated@@95 $generated@@385 $generated@@388))) ($generated@@265 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@95 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@88 $generated@@385 ($generated@@253 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(= ($generated ($generated@@95 ($generated@@305 $generated@@390) $generated@@389)) 0))
 :pattern ( (let (($generated@@390 (type $generated@@389)))
($generated@@95 ($generated@@305 $generated@@390) $generated@@389)))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@90 $generated@@161 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@314 (type $generated@@394))))
(let (($generated@@396 ($generated@@313 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@90 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@312 $generated@@161 $generated@@161)) (= (type $generated@@398) $generated@@161)) (= ($generated@@0 ($generated@@95 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@95 ($generated@@310 $generated@@397) ($generated@@159 ($generated@@349 $generated@@83 $generated@@398)))) (= ($generated@@95 ($generated@@392 $generated@@397) ($generated@@159 ($generated@@349 $generated@@83 $generated@@398))) ($generated@@160 ($generated@@349 $generated@@83 $generated@@398))))))
 :pattern ( ($generated@@95 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@90 $generated@@161 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@332 (type $generated@@402))))
(let (($generated@@404 ($generated@@331 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@90 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@330 $generated@@161 $generated@@161)) (= (type $generated@@406) $generated@@161)) (= ($generated@@0 ($generated@@95 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@95 ($generated@@328 $generated@@405) ($generated@@159 ($generated@@349 $generated@@83 $generated@@406)))) (= ($generated@@95 ($generated@@400 $generated@@405) ($generated@@159 ($generated@@349 $generated@@83 $generated@@406))) ($generated@@160 ($generated@@349 $generated@@83 $generated@@406))))))
 :pattern ( ($generated@@95 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@313 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@312 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@95 ($generated@@360 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@95 ($generated@@310 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@95 ($generated@@392 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@95 ($generated@@310 $generated@@407) $generated@@411))
 :pattern ( ($generated@@95 ($generated@@392 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@95 ($generated@@360 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@331 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@330 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@95 ($generated@@371 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@95 ($generated@@328 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@95 ($generated@@400 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@95 ($generated@@328 $generated@@412) $generated@@416))
 :pattern ( ($generated@@95 ($generated@@400 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@95 ($generated@@371 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@72)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@312 $generated@@161 $generated@@161)) (= (type $generated@@421) $generated@@72)) (= (type $generated@@422) $generated@@72)) (= (type $generated@@423) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@161) ($generated@@0 ($generated@@95 ($generated@@310 $generated@@420) $generated@@424))) (and ($generated@@265 ($generated@@95 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@265 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@95 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@95 ($generated@@310 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@88 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@72)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@330 $generated@@161 $generated@@161)) (= (type $generated@@429) $generated@@72)) (= (type $generated@@430) $generated@@72)) (= (type $generated@@431) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@161) ($generated@@0 ($generated@@95 ($generated@@328 $generated@@428) $generated@@432))) (and ($generated@@265 ($generated@@95 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@265 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@95 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@95 ($generated@@328 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@88 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 Int) ($generated@@434 Bool) ) (! (= ($generated@@85 ($generated@@276 $generated@@433 $generated@@434)) $generated@@434)
 :pattern ( ($generated@@276 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@435) $generated@@83) (= (type $generated@@436) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@264 $generated@@436)) (= ($generated@@88 ($generated@@295 $generated@@435) $generated@@231 $generated@@436) ($generated@@88 $generated@@435 $generated@@228 $generated@@436)))
 :pattern ( ($generated@@88 ($generated@@295 $generated@@435) $generated@@231 $generated@@436))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@90 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@332 (type $generated@@439))))
(let (($generated@@441 ($generated@@331 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@330 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@329 $generated@@441 $generated@@440)) (= ($generated@@328 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@328 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@371 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@371 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@399 $generated@@445) ($generated@@437 $generated@@161))))))
 :pattern ( ($generated@@399 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@314 (type $generated@@448))))
(let (($generated@@450 ($generated@@313 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@312 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@311 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@161) (= (type $generated@@452) $generated@@161)) ($generated@@0 ($generated@@95 ($generated@@391 $generated@@448) ($generated@@299 ($generated@@233 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@391 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@332 (type $generated@@453))))
(let (($generated@@455 ($generated@@331 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@330 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@329 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@161) (= (type $generated@@457) $generated@@161)) ($generated@@0 ($generated@@95 ($generated@@399 $generated@@453) ($generated@@299 ($generated@@233 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@399 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@161) ($generated@@234 $generated@@458 $generated@@46)) (and (= ($generated@@299 ($generated@@349 $generated@@2 $generated@@458)) $generated@@458) ($generated@@149 ($generated@@349 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@161) ($generated@@234 $generated@@459 $generated@@47)) (and (= ($generated@@299 ($generated@@349 $generated@@3 $generated@@459)) $generated@@459) ($generated@@149 ($generated@@349 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@161) ($generated@@234 $generated@@460 $generated@@44)) (and (= ($generated@@299 ($generated@@349 $generated@@4 $generated@@460)) $generated@@460) ($generated@@149 ($generated@@349 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@161) ($generated@@234 $generated@@462 $generated@@45)) (and (= ($generated@@299 ($generated@@349 $generated@@461 $generated@@462)) $generated@@462) ($generated@@149 ($generated@@349 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@72) (= ($generated@@234 ($generated@@299 $generated@@463) $generated@@464) ($generated@@149 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@234 ($generated@@299 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@93 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@90 $generated@@466 $generated@@2)) (<= 0 ($generated@@304 $generated@@465))))
 :pattern ( ($generated@@304 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@290 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@289 $generated@@468)) (<= 0 ($generated@@288 $generated@@467))))
 :pattern ( ($generated@@288 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@72)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@72) (= (type $generated@@472) $generated@@72)) (= ($generated@@469 ($generated@@417 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@417 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@72)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@72) (= (type $generated@@476) $generated@@72)) (= ($generated@@473 ($generated@@417 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@72) (= (type $generated@@478) $generated@@72)) (= ($generated@@80 ($generated@@417 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@72)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@72) (= (type $generated@@482) $generated@@72)) (= ($generated@@479 ($generated@@425 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@425 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@72)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@72) (= (type $generated@@486) $generated@@72)) (= ($generated@@483 ($generated@@425 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@425 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@72) (= (type $generated@@488) $generated@@72)) (= ($generated@@80 ($generated@@425 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@161) (= (type $generated@@490) $generated@@161)) (= ($generated@@271 ($generated@@233 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@72)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@72) (= (type $generated@@494) $generated@@72)) (= ($generated@@491 ($generated@@152 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@152 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@72)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@72) (= (type $generated@@498) $generated@@72)) (= ($generated@@495 ($generated@@152 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@152 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@161) (= (type $generated@@500) $generated@@161)) (= ($generated@@159 ($generated@@233 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@233 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@161) (= (type $generated@@502) $generated@@161)) (= ($generated@@160 ($generated@@233 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@233 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 Int) ($generated@@504 Bool) ) (! (= ($generated@@271 ($generated@@276 $generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@276 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 Int) ($generated@@506 Bool) ) (! (= ($generated@@84 ($generated@@276 $generated@@505 $generated@@506)) $generated@@505)
 :pattern ( ($generated@@276 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@72)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@290 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@289 $generated@@161)) (= (type $generated@@514) $generated@@72)) (= (type $generated@@515) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@288 $generated@@513))) ($generated@@265 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@88 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@89 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@89 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@72)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@72) (= ($generated@@519 ($generated@@248 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@248 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@72) (= ($generated@@80 ($generated@@248 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@72)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@72) (= ($generated@@523 ($generated@@253 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@253 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@80 ($generated@@253 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@72)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@72) (= ($generated@@527 ($generated@@166 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@166 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@80 ($generated@@166 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@72)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@72) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@80 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@83) (= ($generated@@271 ($generated@@295 $generated@@535)) $generated@@66))
 :pattern ( ($generated@@295 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@83)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@83) (= ($generated@@536 ($generated@@295 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@295 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@349 $generated@@540 ($generated@@299 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@299 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@312 $generated@@161 $generated@@161)) (= (type $generated@@542) $generated@@72)) (= (type $generated@@543) $generated@@72)) (= ($generated@@149 $generated@@541 ($generated@@417 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@161) ($generated@@0 ($generated@@95 ($generated@@310 $generated@@541) $generated@@544))) (and ($generated@@234 ($generated@@95 ($generated@@392 $generated@@541) $generated@@544) $generated@@543) ($generated@@234 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@95 ($generated@@392 $generated@@541) $generated@@544))
 :pattern ( ($generated@@95 ($generated@@310 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@149 $generated@@541 ($generated@@417 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@330 $generated@@161 $generated@@161)) (= (type $generated@@546) $generated@@72)) (= (type $generated@@547) $generated@@72)) (= ($generated@@149 $generated@@545 ($generated@@425 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@161) ($generated@@0 ($generated@@95 ($generated@@328 $generated@@545) $generated@@548))) (and ($generated@@234 ($generated@@95 ($generated@@400 $generated@@545) $generated@@548) $generated@@547) ($generated@@234 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@95 ($generated@@400 $generated@@545) $generated@@548))
 :pattern ( ($generated@@95 ($generated@@328 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@149 $generated@@545 ($generated@@425 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@161) (= (type $generated@@552) $generated@@161)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@233 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@233 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@161) (= (type $generated@@554) $generated@@161)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@233 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@233 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@83) (= (type $generated@@556) $generated@@83)) true) (= ($generated@@245 $generated@@555 $generated@@556) ($generated@@82 ($generated@@536 $generated@@555) ($generated@@536 $generated@@556))))
 :pattern ( ($generated@@245 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@161) (= (type $generated@@558) $generated@@72)) (= (type $generated@@559) $generated@@72)) ($generated@@234 $generated@@557 ($generated@@417 $generated@@558 $generated@@559))) (and (= ($generated@@299 ($generated@@349 ($generated@@312 $generated@@161 $generated@@161) $generated@@557)) $generated@@557) ($generated@@149 ($generated@@349 ($generated@@312 $generated@@161 $generated@@161) $generated@@557) ($generated@@417 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@417 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@72)) (= (type $generated@@562) $generated@@72)) ($generated@@234 $generated@@560 ($generated@@425 $generated@@561 $generated@@562))) (and (= ($generated@@299 ($generated@@349 ($generated@@330 $generated@@161 $generated@@161) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@349 ($generated@@330 $generated@@161 $generated@@161) $generated@@560) ($generated@@425 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@234 $generated@@560 ($generated@@425 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@72) (= (type $generated@@564) $generated@@72)) (= (type $generated@@565) $generated@@161)) ($generated@@234 $generated@@565 ($generated@@152 $generated@@563 $generated@@564))) (and (= ($generated@@299 ($generated@@349 $generated@@83 $generated@@565)) $generated@@565) ($generated@@149 ($generated@@349 $generated@@83 $generated@@565) ($generated@@152 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@234 $generated@@565 ($generated@@152 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@83) (< ($generated@@550 $generated@@566) ($generated@@550 ($generated@@295 $generated@@566))))
 :pattern ( ($generated@@295 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@95 ($generated@@437 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@95 ($generated@@437 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@152 $generated@@571 $generated@@572)) $generated@@62) (= ($generated@@569 ($generated@@152 $generated@@571 $generated@@572)) $generated@@68)))
 :pattern ( ($generated@@152 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@83) (= (type $generated@@574) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@264 $generated@@574) (and ($generated@@227 $generated@@573) ($generated@@88 $generated@@573 $generated@@228 $generated@@574)))) ($generated@@88 ($generated@@11 ($generated@@85 $generated@@573)) $generated@@44 $generated@@574))
 :pattern ( ($generated@@88 ($generated@@11 ($generated@@85 $generated@@573)) $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@83) (= ($generated@@549 ($generated@@299 $generated@@575)) ($generated@@550 $generated@@575)))
 :pattern ( ($generated@@549 ($generated@@299 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@161) ($generated@@234 $generated@@576 ($generated@@89 0))) (and (= ($generated@@299 ($generated@@349 $generated@@2 $generated@@576)) $generated@@576) ($generated@@149 ($generated@@349 ($generated@@90 $generated@@161 $generated@@4) $generated@@576) ($generated@@89 0))))
 :pattern ( ($generated@@234 $generated@@576 ($generated@@89 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@161) (= (type $generated@@578) $generated@@72)) ($generated@@234 $generated@@577 ($generated@@248 $generated@@578))) (and (= ($generated@@299 ($generated@@349 ($generated@@90 $generated@@161 $generated@@4) $generated@@577)) $generated@@577) ($generated@@149 ($generated@@349 ($generated@@90 $generated@@161 $generated@@4) $generated@@577) ($generated@@248 $generated@@578))))
 :pattern ( ($generated@@234 $generated@@577 ($generated@@248 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@161) (= (type $generated@@580) $generated@@72)) ($generated@@234 $generated@@579 ($generated@@253 $generated@@580))) (and (= ($generated@@299 ($generated@@349 ($generated@@90 $generated@@161 $generated@@4) $generated@@579)) $generated@@579) ($generated@@149 ($generated@@349 ($generated@@90 $generated@@161 $generated@@4) $generated@@579) ($generated@@253 $generated@@580))))
 :pattern ( ($generated@@234 $generated@@579 ($generated@@253 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@161) (= (type $generated@@582) $generated@@72)) ($generated@@234 $generated@@581 ($generated@@166 $generated@@582))) (and (= ($generated@@299 ($generated@@349 ($generated@@90 $generated@@161 $generated@@2) $generated@@581)) $generated@@581) ($generated@@149 ($generated@@349 ($generated@@90 $generated@@161 $generated@@2) $generated@@581) ($generated@@166 $generated@@582))))
 :pattern ( ($generated@@234 $generated@@581 ($generated@@166 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@161) (= (type $generated@@584) $generated@@72)) ($generated@@234 $generated@@583 ($generated@@507 $generated@@584))) (and (= ($generated@@299 ($generated@@349 ($generated@@289 $generated@@161) $generated@@583)) $generated@@583) ($generated@@149 ($generated@@349 ($generated@@289 $generated@@161) $generated@@583) ($generated@@507 $generated@@584))))
 :pattern ( ($generated@@234 $generated@@583 ($generated@@507 $generated@@584)))
)))
(assert (= ($generated@@80 $generated@@146) $generated@@63))
(assert (= ($generated@@569 $generated@@146) $generated@@69))
(assert (= ($generated@@80 $generated@@228) $generated@@65))
(assert (= ($generated@@569 $generated@@228) $generated@@70))
(assert (= ($generated@@80 $generated@@231) $generated@@67))
(assert (= ($generated@@569 $generated@@231) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@90 $generated@@161 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@585 ($generated@@166 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@161) (< 0 ($generated ($generated@@95 $generated@@585 $generated@@588)))) ($generated@@265 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@95 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@88 $generated@@585 ($generated@@166 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@83) (= (type $generated@@590) $generated@@72)) (= (type $generated@@591) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@264 $generated@@591) (and ($generated@@151 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@72) ($generated@@88 $generated@@589 ($generated@@152 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@88 $generated@@589 ($generated@@152 $generated@@590 $generated@@592) $generated@@591))
))))) ($generated@@265 ($generated@@159 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@265 ($generated@@159 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@83) (= (type $generated@@594) $generated@@72)) (= (type $generated@@595) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@264 $generated@@595) (and ($generated@@151 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@72) ($generated@@88 $generated@@593 ($generated@@152 $generated@@596 $generated@@594) $generated@@595))
 :pattern ( ($generated@@88 $generated@@593 ($generated@@152 $generated@@596 $generated@@594) $generated@@595))
))))) ($generated@@265 ($generated@@160 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@265 ($generated@@160 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@83) (= (type $generated@@598) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@264 $generated@@598) (and ($generated@@227 $generated@@597) ($generated@@88 $generated@@597 $generated@@228 $generated@@598)))) ($generated@@88 ($generated@@8 ($generated@@84 $generated@@597)) $generated@@146 $generated@@598))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@84 $generated@@597)) $generated@@146 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@83) (= (type $generated@@600) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@264 $generated@@600) (and ($generated@@230 $generated@@599) ($generated@@88 $generated@@599 $generated@@231 $generated@@600)))) ($generated@@88 ($generated@@536 $generated@@599) $generated@@228 $generated@@600))
 :pattern ( ($generated@@88 ($generated@@536 $generated@@599) $generated@@228 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) (= ($generated@@149 $generated@@601 $generated@@146)  (and (<= ($generated@@258 0) ($generated $generated@@601)) (< ($generated $generated@@601) 4294967296))))
 :pattern ( ($generated@@149 $generated@@601 $generated@@146))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@161) (= (type $generated@@603) $generated@@161)) (= ($generated@@233 ($generated@@260 $generated@@602) ($generated@@260 $generated@@603)) ($generated@@260 ($generated@@233 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@233 ($generated@@260 $generated@@602) ($generated@@260 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) (= ($generated@@276 ($generated@@258 $generated@@604) ($generated@@0 ($generated@@260 $generated@@605))) ($generated@@260 ($generated@@276 $generated@@604 ($generated@@0 $generated@@605)))))
 :pattern ( ($generated@@276 ($generated@@258 $generated@@604) ($generated@@0 ($generated@@260 $generated@@605))))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@258 $generated@@606))) ($generated@@260 ($generated@@299 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@258 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@83) (= ($generated@@295 ($generated@@260 $generated@@607)) ($generated@@260 ($generated@@295 $generated@@607))))
 :pattern ( ($generated@@295 ($generated@@260 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@299 ($generated@@260 $generated@@608)) ($generated@@260 ($generated@@299 $generated@@608)))
 :pattern ( ($generated@@299 ($generated@@260 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@290 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@289 $generated@@610)) (= ($generated@@288 $generated@@609) 0)) (= $generated@@609 ($generated@@287 $generated@@610))))
 :pattern ( ($generated@@288 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@90 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@304 ($generated@@96 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@304 $generated@@611) ($generated ($generated@@95 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@304 ($generated@@96 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@616) $generated@@2)) ($generated@@88 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@88 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@618) $generated@@3)) ($generated@@88 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@88 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@620) $generated@@4)) ($generated@@88 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@88 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@622) $generated@@461)) ($generated@@88 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@88 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@624) $generated@@161)) ($generated@@88 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@88 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@289 $generated@@161)) (= (type $generated@@626) $generated@@72)) (= ($generated@@149 $generated@@625 ($generated@@507 $generated@@626)) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@288 $generated@@625))) ($generated@@234 ($generated@@508 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@508 $generated@@625 $generated@@627))
))))
 :pattern ( ($generated@@149 $generated@@625 ($generated@@507 $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) ($generated@@289 $generated@@161)) (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@288 $generated@@629))) (< ($generated@@550 ($generated@@349 $generated@@83 ($generated@@508 $generated@@629 $generated@@630))) ($generated@@628 $generated@@629))))
 :pattern ( ($generated@@550 ($generated@@349 $generated@@83 ($generated@@508 $generated@@629 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@312 $generated@@161 $generated@@161)) (= (type $generated@@632) $generated@@72)) (= (type $generated@@633) $generated@@72)) ($generated@@149 $generated@@631 ($generated@@417 $generated@@632 $generated@@633))) (and (and ($generated@@149 ($generated@@310 $generated@@631) ($generated@@248 $generated@@632)) ($generated@@149 ($generated@@360 $generated@@631) ($generated@@248 $generated@@633))) ($generated@@149 ($generated@@391 $generated@@631) ($generated@@248 ($generated@@152 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@149 $generated@@631 ($generated@@417 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@330 $generated@@161 $generated@@161)) (= (type $generated@@635) $generated@@72)) (= (type $generated@@636) $generated@@72)) ($generated@@149 $generated@@634 ($generated@@425 $generated@@635 $generated@@636))) (and (and ($generated@@149 ($generated@@328 $generated@@634) ($generated@@253 $generated@@635)) ($generated@@149 ($generated@@371 $generated@@634) ($generated@@253 $generated@@636))) ($generated@@149 ($generated@@399 $generated@@634) ($generated@@253 ($generated@@152 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@149 $generated@@634 ($generated@@425 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@2) ($generated@@149 $generated@@637 $generated@@46))
 :pattern ( ($generated@@149 $generated@@637 $generated@@46))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@3) ($generated@@149 $generated@@638 $generated@@47))
 :pattern ( ($generated@@149 $generated@@638 $generated@@47))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@4) ($generated@@149 $generated@@639 $generated@@44))
 :pattern ( ($generated@@149 $generated@@639 $generated@@44))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@461) ($generated@@149 $generated@@640 $generated@@45))
 :pattern ( ($generated@@149 $generated@@640 $generated@@45))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@161) ($generated@@149 $generated@@641 $generated@@48))
 :pattern ( ($generated@@149 $generated@@641 $generated@@48))
)))
(assert (forall (($generated@@642 Int) ($generated@@643 Bool) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@264 $generated@@644)) (= ($generated@@88 ($generated@@276 $generated@@642 $generated@@643) $generated@@228 $generated@@644)  (and ($generated@@88 ($generated@@8 $generated@@642) $generated@@146 $generated@@644) ($generated@@88 ($generated@@11 $generated@@643) $generated@@44 $generated@@644))))
 :pattern ( ($generated@@88 ($generated@@276 $generated@@642 $generated@@643) $generated@@228 $generated@@644))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(assert  (and (and (and (= (type $generated@@646) ($generated@@173 $generated@@91 $generated@@4)) (= (type $generated@@647) $generated@@91)) (= (type $generated@@648) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@650) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@652  (=> (= $generated@@645 ($generated@@258 42)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@258 0) $generated@@645) (< $generated@@645 4294967296))) (=> (and (<= ($generated@@258 0) $generated@@645) (< $generated@@645 4294967296)) (=> (and (and ($generated@@230 ($generated@@260 ($generated@@295 ($generated@@260 ($generated@@276 ($generated@@258 42) ($generated@@0 ($generated@@260 ($generated@@11 true)))))))) ($generated@@227 ($generated@@260 ($generated@@536 ($generated@@260 ($generated@@295 ($generated@@260 ($generated@@276 ($generated@@258 42) ($generated@@0 ($generated@@260 ($generated@@11 true))))))))))) (= (ControlFlow 0 3) (- 0 2))) ($generated@@0 ($generated@@260 ($generated@@11 ($generated@@85 ($generated@@260 ($generated@@536 ($generated@@260 ($generated@@295 ($generated@@260 ($generated@@276 ($generated@@258 42) ($generated@@0 ($generated@@260 ($generated@@11 true)))))))))))))))))))
(let (($generated@@653 true))
(let (($generated@@654  (=> (= $generated@@646 ($generated@@172 $generated@@647 $generated@@648 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@653) (=> (= (ControlFlow 0 5) 3) $generated@@652)))))
(let (($generated@@655  (=> (and (and (and ($generated@@264 $generated@@648) ($generated@@649 $generated@@648)) ($generated@@149 $generated@@650 $generated@@231)) (and (= 3 $generated@@651) (= (ControlFlow 0 6) 5))) $generated@@654)))
$generated@@655)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@593 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@78 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@67)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@67)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@67) (= (type $generated@@162) $generated@@139)) ($generated@@135 $generated@@162 ($generated@@159 $generated@@161))) ($generated@@158 $generated@@162))
 :pattern ( ($generated@@158 $generated@@162) ($generated@@135 $generated@@162 ($generated@@159 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@80 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@70 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@80) (= (type $generated@@213) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@214) ($generated@@69 $generated@@4))) (= (type $generated@@216) $generated@@80)) (= (type $generated@@217) ($generated@@69 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@221 $generated@@222)) $generated@@139)
 :pattern ( ($generated@@219 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@223) $generated@@67) (= (type $generated@@224) $generated@@67)) (= (type $generated@@225) $generated@@148)) (= (type $generated@@226) $generated@@148)) (= ($generated@@135 ($generated@@219 $generated@@225 $generated@@226) ($generated@@138 $generated@@223 $generated@@224))  (and ($generated@@220 $generated@@225 $generated@@223) ($generated@@220 $generated@@226 $generated@@224))))
 :pattern ( ($generated@@135 ($generated@@219 $generated@@225 $generated@@226) ($generated@@138 $generated@@223 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@139) (= (type $generated@@228) $generated@@139)) (= ($generated@@145 $generated@@227 $generated@@228) (= $generated@@227 $generated@@228)))
 :pattern ( ($generated@@145 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@139) (= (type $generated@@231) $generated@@139)) (= ($generated@@229 $generated@@230 $generated@@231) (= $generated@@230 $generated@@231)))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@67)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@235) $generated@@67)) (= ($generated@@135 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@148) ($generated@@0 ($generated@@84 $generated@@234 $generated@@236))) ($generated@@220 $generated@@236 $generated@@235))
 :pattern ( ($generated@@84 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@135 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@67)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@240) $generated@@67)) (= ($generated@@135 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@148) ($generated@@0 ($generated@@84 $generated@@239 $generated@@241))) ($generated@@220 $generated@@241 $generated@@240))
 :pattern ( ($generated@@84 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@135 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@67) (= (type $generated@@249) $generated@@67)) (= (type $generated@@250) $generated@@148)) (= (type $generated@@251) $generated@@148)) (= (type $generated@@252) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@246 $generated@@252)) (= ($generated@@77 ($generated@@219 $generated@@250 $generated@@251) ($generated@@138 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@77 ($generated@@219 $generated@@250 $generated@@251) ($generated@@138 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@71)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@139) (= ($generated@@137 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@139) (= ($generated@@158 $generated@@256) (= ($generated@@253 $generated@@256) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@139) ($generated@@137 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@148) (= (type $generated@@259) $generated@@148)) (= $generated@@257 ($generated@@219 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@137 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@148)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (= (type $generated@@270) $generated@@139) (= (type $generated@@271) $generated@@139)) true) (= ($generated@@229 $generated@@270 $generated@@271) (= ($generated@@268 $generated@@270) ($generated@@268 $generated@@271))))
 :pattern ( ($generated@@229 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@139)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@139) ($generated@@158 $generated@@274)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@148) (= $generated@@274 ($generated@@272 $generated@@275)))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@158 $generated@@274))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@148)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@67) (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@247 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@77 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@247 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@79 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@82 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@79 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@84 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@72)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@67) (and (= ($generated@@75 ($generated@@159 $generated@@289)) $generated@@64) (= ($generated@@287 ($generated@@159 $generated@@289)) $generated@@66)))
 :pattern ( ($generated@@159 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 18)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@79 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@84 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@84 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 19)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@79 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@84 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@84 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@82 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@79 $generated@@327 $generated@@2)) (= ($generated@@154 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@84 $generated@@326 $generated@@328))) (<= ($generated ($generated@@84 $generated@@326 $generated@@328)) ($generated@@281 $generated@@326))))
 :pattern ( ($generated@@84 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@154 $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@294 (type $generated@@329))))
(let (($generated@@331 ($generated@@293 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@292 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@291 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@84 ($generated@@290 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@290 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@294 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@79 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@294 (type $generated@@336))))
(let (($generated@@338 ($generated@@293 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@292 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@291 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@312 (type $generated@@340))))
(let (($generated@@342 ($generated@@311 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@310 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@309 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@308 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@312 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@79 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@312 (type $generated@@347))))
(let (($generated@@349 ($generated@@311 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@310 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@309 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@84 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@352) $generated@@67)) (= ($generated@@135 $generated@@351 ($generated@@153 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@351 $generated@@353)))) ($generated@@220 $generated@@353 $generated@@352))
 :pattern ( ($generated@@84 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@135 $generated@@351 ($generated@@153 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (and (= (type $generated@@354) $generated@@67) (= (type $generated@@355) $generated@@148)) (= (type $generated@@356) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@246 $generated@@356)) (= ($generated@@77 ($generated@@272 $generated@@355) ($generated@@159 $generated@@354) $generated@@356) ($generated@@247 $generated@@355 $generated@@354 $generated@@356)))
 :pattern ( ($generated@@77 ($generated@@272 $generated@@355) ($generated@@159 $generated@@354) $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@358) $generated@@67)) (= (type $generated@@359) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@357 ($generated@@232 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@148) ($generated@@0 ($generated@@84 $generated@@357 $generated@@360))) ($generated@@247 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@84 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@77 $generated@@357 ($generated@@232 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@362) $generated@@67)) (= (type $generated@@363) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@361 ($generated@@237 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@148) ($generated@@0 ($generated@@84 $generated@@361 $generated@@364))) ($generated@@247 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@84 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@77 $generated@@361 ($generated@@237 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@84 ($generated@@282 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@84 ($generated@@282 $generated@@366) $generated@@365)))
)))
(assert  (and (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@370)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@367 $generated@@370))
)) (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@368 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@368 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@294 (type $generated@@373))))
(let (($generated@@375 ($generated@@293 (type $generated@@373))))
(= (type ($generated@@369 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@369 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@292 $generated@@148 $generated@@148)) (= (type $generated@@377) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@367 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@290 $generated@@376) ($generated@@146 ($generated@@368 $generated@@139 $generated@@377)))) (= ($generated@@84 ($generated@@369 $generated@@376) ($generated@@146 ($generated@@368 $generated@@139 $generated@@377))) ($generated@@147 ($generated@@368 $generated@@139 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@312 (type $generated@@381))))
(let (($generated@@383 ($generated@@311 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@79 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@310 $generated@@148 $generated@@148)) (= (type $generated@@385) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@84 ($generated@@308 $generated@@384) ($generated@@146 ($generated@@368 $generated@@139 $generated@@385)))) (= ($generated@@84 ($generated@@379 $generated@@384) ($generated@@146 ($generated@@368 $generated@@139 $generated@@385))) ($generated@@147 ($generated@@368 $generated@@139 $generated@@385))))))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@293 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@292 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@84 ($generated@@333 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@84 ($generated@@290 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@84 ($generated@@369 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@84 ($generated@@290 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@84 ($generated@@333 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@311 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@310 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@84 ($generated@@344 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@84 ($generated@@308 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@84 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@84 ($generated@@344 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@292 $generated@@148 $generated@@148)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@290 $generated@@399) $generated@@403))) (and ($generated@@247 ($generated@@84 ($generated@@369 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@247 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@290 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@67)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@310 $generated@@148 $generated@@148)) (= (type $generated@@408) $generated@@67)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@407) $generated@@411))) (and ($generated@@247 ($generated@@84 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@247 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@77 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@79 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@312 (type $generated@@414))))
(let (($generated@@416 ($generated@@311 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@310 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@309 $generated@@416 $generated@@415)) (= ($generated@@308 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@308 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@312 (type $generated@@417))))
(let (($generated@@419 ($generated@@311 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@310 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@309 $generated@@419 $generated@@418)) (= ($generated@@344 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@344 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@312 (type $generated@@420))))
(let (($generated@@422 ($generated@@311 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@310 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@309 $generated@@422 $generated@@421)) (= ($generated@@378 $generated@@420) ($generated@@412 $generated@@148))))))
 :pattern ( ($generated@@378 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@294 (type $generated@@423))))
(let (($generated@@425 ($generated@@293 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@292 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@291 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@148) (= (type $generated@@427) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@367 $generated@@423) ($generated@@276 ($generated@@219 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@367 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@312 (type $generated@@428))))
(let (($generated@@430 ($generated@@311 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@310 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@309 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@148) (= (type $generated@@432) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@378 $generated@@428) ($generated@@276 ($generated@@219 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@378 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@148) ($generated@@220 $generated@@433 $generated@@46)) (and (= ($generated@@276 ($generated@@368 $generated@@2 $generated@@433)) $generated@@433) ($generated@@135 ($generated@@368 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@148) ($generated@@220 $generated@@434 $generated@@47)) (and (= ($generated@@276 ($generated@@368 $generated@@3 $generated@@434)) $generated@@434) ($generated@@135 ($generated@@368 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@148) ($generated@@220 $generated@@435 $generated@@44)) (and (= ($generated@@276 ($generated@@368 $generated@@4 $generated@@435)) $generated@@435) ($generated@@135 ($generated@@368 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 20))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@148) ($generated@@220 $generated@@437 $generated@@45)) (and (= ($generated@@276 ($generated@@368 $generated@@436 $generated@@437)) $generated@@437) ($generated@@135 ($generated@@368 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@67) (= ($generated@@220 ($generated@@276 $generated@@438) $generated@@439) ($generated@@135 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@220 ($generated@@276 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@82 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@79 $generated@@441 $generated@@2)) (<= 0 ($generated@@281 $generated@@440))))
 :pattern ( ($generated@@281 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@263 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@262 $generated@@443)) (<= 0 ($generated@@261 $generated@@442))))
 :pattern ( ($generated@@261 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@444 ($generated@@396 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@396 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@448 ($generated@@396 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@404 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@404 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@404 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@75 ($generated@@404 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@148) (= (type $generated@@465) $generated@@148)) (= ($generated@@253 ($generated@@219 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@219 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@138 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@138 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@138 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@138 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@148) (= (type $generated@@475) $generated@@148)) (= ($generated@@146 ($generated@@219 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@219 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@148) (= (type $generated@@477) $generated@@148)) (= ($generated@@147 ($generated@@219 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@219 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ($generated@@482 Int) ) (! (let (($generated@@483 ($generated@@263 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481 $generated@@482)) $generated@@483))
 :pattern ( ($generated@@479 $generated@@481 $generated@@482))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@262 $generated@@148)) (= (type $generated@@485) $generated@@67)) (= (type $generated@@486) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@484 ($generated@@478 $generated@@485) $generated@@486) (forall (($generated@@487 Int) ) (!  (=> (and (<= 0 $generated@@487) (< $generated@@487 ($generated@@261 $generated@@484))) ($generated@@247 ($generated@@479 $generated@@484 $generated@@487) $generated@@485 $generated@@486))
 :pattern ( ($generated@@479 $generated@@484 $generated@@487))
))))
 :pattern ( ($generated@@77 $generated@@484 ($generated@@478 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@78 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@78 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@232 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@232 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@232 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@232 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@237 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@237 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@237 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@237 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@153 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@153 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@75 ($generated@@153 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@478 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@478 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@75 ($generated@@478 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@478 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@148) (= ($generated@@253 ($generated@@272 $generated@@506)) $generated@@63))
 :pattern ( ($generated@@272 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@159 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@159 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@148) (= ($generated@@268 ($generated@@272 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@272 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@368 $generated@@512 ($generated@@276 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@276 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@292 $generated@@148 $generated@@148)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@135 $generated@@513 ($generated@@396 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@290 $generated@@513) $generated@@516))) (and ($generated@@220 ($generated@@84 ($generated@@369 $generated@@513) $generated@@516) $generated@@515) ($generated@@220 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@290 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@135 $generated@@513 ($generated@@396 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@310 $generated@@148 $generated@@148)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@135 $generated@@517 ($generated@@404 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@517) $generated@@520))) (and ($generated@@220 ($generated@@84 ($generated@@379 $generated@@517) $generated@@520) $generated@@519) ($generated@@220 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@135 $generated@@517 ($generated@@404 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@148)) (= ($generated@@135 ($generated@@272 $generated@@522) ($generated@@159 $generated@@521)) ($generated@@220 $generated@@522 $generated@@521)))
 :pattern ( ($generated@@135 ($generated@@272 $generated@@522) ($generated@@159 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@148) (= (type $generated@@526) $generated@@148)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@219 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@219 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@148) (= (type $generated@@528) $generated@@148)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@219 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@219 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@148) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@220 $generated@@529 ($generated@@396 $generated@@530 $generated@@531))) (and (= ($generated@@276 ($generated@@368 ($generated@@292 $generated@@148 $generated@@148) $generated@@529)) $generated@@529) ($generated@@135 ($generated@@368 ($generated@@292 $generated@@148 $generated@@148) $generated@@529) ($generated@@396 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@220 $generated@@529 ($generated@@396 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@148) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@220 $generated@@532 ($generated@@404 $generated@@533 $generated@@534))) (and (= ($generated@@276 ($generated@@368 ($generated@@310 $generated@@148 $generated@@148) $generated@@532)) $generated@@532) ($generated@@135 ($generated@@368 ($generated@@310 $generated@@148 $generated@@148) $generated@@532) ($generated@@404 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@220 $generated@@532 ($generated@@404 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@148)) ($generated@@220 $generated@@537 ($generated@@138 $generated@@535 $generated@@536))) (and (= ($generated@@276 ($generated@@368 $generated@@139 $generated@@537)) $generated@@537) ($generated@@135 ($generated@@368 $generated@@139 $generated@@537) ($generated@@138 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@220 $generated@@537 ($generated@@138 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@148) (< ($generated@@523 $generated@@538) ($generated@@524 ($generated@@272 $generated@@538))))
 :pattern ( ($generated@@272 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@139) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@541) (and ($generated@@158 $generated@@539) ($generated@@77 $generated@@539 ($generated@@159 $generated@@540) $generated@@541)))) ($generated@@247 ($generated@@268 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@84 ($generated@@412 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@84 ($generated@@412 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (and (= ($generated@@75 ($generated@@138 $generated@@544 $generated@@545)) $generated@@62) (= ($generated@@287 ($generated@@138 $generated@@544 $generated@@545)) $generated@@65)))
 :pattern ( ($generated@@138 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@139) (= ($generated@@523 ($generated@@276 $generated@@546)) ($generated@@524 $generated@@546)))
 :pattern ( ($generated@@523 ($generated@@276 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@148) ($generated@@220 $generated@@547 ($generated@@78 0))) (and (= ($generated@@276 ($generated@@368 $generated@@2 $generated@@547)) $generated@@547) ($generated@@135 ($generated@@368 ($generated@@79 $generated@@148 $generated@@4) $generated@@547) ($generated@@78 0))))
 :pattern ( ($generated@@220 $generated@@547 ($generated@@78 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@148) (= (type $generated@@549) $generated@@67)) ($generated@@220 $generated@@548 ($generated@@232 $generated@@549))) (and (= ($generated@@276 ($generated@@368 ($generated@@79 $generated@@148 $generated@@4) $generated@@548)) $generated@@548) ($generated@@135 ($generated@@368 ($generated@@79 $generated@@148 $generated@@4) $generated@@548) ($generated@@232 $generated@@549))))
 :pattern ( ($generated@@220 $generated@@548 ($generated@@232 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@148) (= (type $generated@@551) $generated@@67)) ($generated@@220 $generated@@550 ($generated@@237 $generated@@551))) (and (= ($generated@@276 ($generated@@368 ($generated@@79 $generated@@148 $generated@@4) $generated@@550)) $generated@@550) ($generated@@135 ($generated@@368 ($generated@@79 $generated@@148 $generated@@4) $generated@@550) ($generated@@237 $generated@@551))))
 :pattern ( ($generated@@220 $generated@@550 ($generated@@237 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@148) (= (type $generated@@553) $generated@@67)) ($generated@@220 $generated@@552 ($generated@@153 $generated@@553))) (and (= ($generated@@276 ($generated@@368 ($generated@@79 $generated@@148 $generated@@2) $generated@@552)) $generated@@552) ($generated@@135 ($generated@@368 ($generated@@79 $generated@@148 $generated@@2) $generated@@552) ($generated@@153 $generated@@553))))
 :pattern ( ($generated@@220 $generated@@552 ($generated@@153 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@148) (= (type $generated@@555) $generated@@67)) ($generated@@220 $generated@@554 ($generated@@478 $generated@@555))) (and (= ($generated@@276 ($generated@@368 ($generated@@262 $generated@@148) $generated@@554)) $generated@@554) ($generated@@135 ($generated@@368 ($generated@@262 $generated@@148) $generated@@554) ($generated@@478 $generated@@555))))
 :pattern ( ($generated@@220 $generated@@554 ($generated@@478 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@148)) ($generated@@220 $generated@@557 ($generated@@159 $generated@@556))) (and (= ($generated@@276 ($generated@@368 $generated@@139 $generated@@557)) $generated@@557) ($generated@@135 ($generated@@368 $generated@@139 $generated@@557) ($generated@@159 $generated@@556))))
 :pattern ( ($generated@@220 $generated@@557 ($generated@@159 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@153 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@247 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@153 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@139) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@564) (and ($generated@@137 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@138 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@138 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@247 ($generated@@146 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@247 ($generated@@146 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@139) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@568) (and ($generated@@137 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@138 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@138 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@247 ($generated@@147 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@247 ($generated@@147 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@148) (= (type $generated@@571) $generated@@148)) (= ($generated@@219 ($generated@@242 $generated@@570) ($generated@@242 $generated@@571)) ($generated@@242 ($generated@@219 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@219 ($generated@@242 $generated@@570) ($generated@@242 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@148) (= ($generated@@272 ($generated@@242 $generated@@572)) ($generated@@242 ($generated@@272 $generated@@572))))
 :pattern ( ($generated@@272 ($generated@@242 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@276 ($generated@@242 $generated@@573)) ($generated@@242 ($generated@@276 $generated@@573)))
 :pattern ( ($generated@@276 ($generated@@242 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@263 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@262 $generated@@575)) (= ($generated@@261 $generated@@574) 0)) (= $generated@@574 ($generated@@260 $generated@@575))))
 :pattern ( ($generated@@261 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@79 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@281 ($generated@@85 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@281 $generated@@576) ($generated ($generated@@84 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@281 ($generated@@85 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@2)) ($generated@@77 $generated@@581 $generated@@46 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@46 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@3)) ($generated@@77 $generated@@583 $generated@@47 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@47 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@4)) ($generated@@77 $generated@@585 $generated@@44 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@44 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@587) $generated@@436)) ($generated@@77 $generated@@587 $generated@@45 $generated@@586))
 :pattern ( ($generated@@77 $generated@@587 $generated@@45 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@589) $generated@@148)) ($generated@@77 $generated@@589 $generated@@48 $generated@@588))
 :pattern ( ($generated@@77 $generated@@589 $generated@@48 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@262 $generated@@148)) (= (type $generated@@591) $generated@@67)) (= ($generated@@135 $generated@@590 ($generated@@478 $generated@@591)) (forall (($generated@@592 Int) ) (!  (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@261 $generated@@590))) ($generated@@220 ($generated@@479 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@479 $generated@@590 $generated@@592))
))))
 :pattern ( ($generated@@135 $generated@@590 ($generated@@478 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) ($generated@@262 $generated@@148)) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@261 $generated@@594))) (< ($generated@@524 ($generated@@368 $generated@@139 ($generated@@479 $generated@@594 $generated@@595))) ($generated@@593 $generated@@594))))
 :pattern ( ($generated@@524 ($generated@@368 $generated@@139 ($generated@@479 $generated@@594 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@292 $generated@@148 $generated@@148)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@67)) ($generated@@135 $generated@@596 ($generated@@396 $generated@@597 $generated@@598))) (and (and ($generated@@135 ($generated@@290 $generated@@596) ($generated@@232 $generated@@597)) ($generated@@135 ($generated@@333 $generated@@596) ($generated@@232 $generated@@598))) ($generated@@135 ($generated@@367 $generated@@596) ($generated@@232 ($generated@@138 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@135 $generated@@596 ($generated@@396 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@310 $generated@@148 $generated@@148)) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) ($generated@@135 $generated@@599 ($generated@@404 $generated@@600 $generated@@601))) (and (and ($generated@@135 ($generated@@308 $generated@@599) ($generated@@237 $generated@@600)) ($generated@@135 ($generated@@344 $generated@@599) ($generated@@237 $generated@@601))) ($generated@@135 ($generated@@378 $generated@@599) ($generated@@237 ($generated@@138 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@135 $generated@@599 ($generated@@404 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@2) ($generated@@135 $generated@@602 $generated@@46))
 :pattern ( ($generated@@135 $generated@@602 $generated@@46))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@3) ($generated@@135 $generated@@603 $generated@@47))
 :pattern ( ($generated@@135 $generated@@603 $generated@@47))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@4) ($generated@@135 $generated@@604 $generated@@44))
 :pattern ( ($generated@@135 $generated@@604 $generated@@44))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@436) ($generated@@135 $generated@@605 $generated@@45))
 :pattern ( ($generated@@135 $generated@@605 $generated@@45))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@148) ($generated@@135 $generated@@606 $generated@@48))
 :pattern ( ($generated@@135 $generated@@606 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Bool)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@607) ($generated@@165 $generated@@80 $generated@@4)) (= (type $generated@@608) $generated@@80)) (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@610) $generated@@139)) (= (type $generated@@611) $generated@@148)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@615) $generated@@139)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@617  (=> (= $generated@@607 ($generated@@164 $generated@@608 $generated@@609 $generated@@60 false)) (=> (and (= $generated@@610 ($generated@@272 $generated@@611)) (= (ControlFlow 0 2) (- 0 1))) true))))
(let (($generated@@618  (=> (and ($generated@@246 $generated@@609) ($generated@@612 $generated@@609)) (=> (and (and (and ($generated@@220 $generated@@611 $generated@@613) ($generated@@247 $generated@@611 $generated@@613 $generated@@609)) (=> $generated@@614 (and ($generated@@135 $generated@@615 ($generated@@159 $generated@@613)) ($generated@@77 $generated@@615 ($generated@@159 $generated@@613) $generated@@609)))) (and (= 1 $generated@@616) (= (ControlFlow 0 3) 2))) $generated@@617))))
$generated@@618)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@77 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@66)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@66) (= (type $generated@@146) $generated@@66)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@66)) ($generated@@138 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@138 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@79 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@69 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@79) (= (type $generated@@211) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@212) ($generated@@68 $generated@@4))) (= (type $generated@@214) $generated@@79)) (= (type $generated@@215) ($generated@@68 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@219 $generated@@220)) $generated@@142)
 :pattern ( ($generated@@217 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@66) (= (type $generated@@222) $generated@@66)) (= (type $generated@@223) $generated@@151)) (= (type $generated@@224) $generated@@151)) (= ($generated@@138 ($generated@@217 $generated@@223 $generated@@224) ($generated@@141 $generated@@221 $generated@@222))  (and ($generated@@218 $generated@@223 $generated@@221) ($generated@@218 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@138 ($generated@@217 $generated@@223 $generated@@224) ($generated@@141 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@142) (= (type $generated@@226) $generated@@142)) (= ($generated@@148 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@148 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@66)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@230) $generated@@66)) (= ($generated@@138 $generated@@229 ($generated@@227 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@151) ($generated@@0 ($generated@@83 $generated@@229 $generated@@231))) ($generated@@218 $generated@@231 $generated@@230))
 :pattern ( ($generated@@83 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@138 $generated@@229 ($generated@@227 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@66)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@235) $generated@@66)) (= ($generated@@138 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@151) ($generated@@0 ($generated@@83 $generated@@234 $generated@@236))) ($generated@@218 $generated@@236 $generated@@235))
 :pattern ( ($generated@@83 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@138 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@66) (= (type $generated@@244) $generated@@66)) (= (type $generated@@245) $generated@@151)) (= (type $generated@@246) $generated@@151)) (= (type $generated@@247) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@241 $generated@@247)) (= ($generated@@76 ($generated@@217 $generated@@245 $generated@@246) ($generated@@141 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@76 ($generated@@217 $generated@@245 $generated@@246) ($generated@@141 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@70)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@142) (= ($generated@@140 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@142) ($generated@@140 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@151) (= (type $generated@@253) $generated@@151)) (= $generated@@251 ($generated@@217 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@140 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@151)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@66) (= (type $generated@@266) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@76 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@269) $generated@@151)) (= (type $generated@@270) $generated@@66)) ($generated@@134 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@134 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@274) $generated@@66)) ($generated@@134 $generated@@271 $generated@@272)) ($generated@@76 $generated@@273 $generated@@274 $generated@@271)) ($generated@@76 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@134 $generated@@271 $generated@@272) ($generated@@76 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@78 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@81 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@78 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@83 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (forall (($generated@@283 T@U) ) (! (= (type ($generated@@281 $generated@@283)) $generated@@66)
 :pattern ( ($generated@@281 $generated@@283))
)) (forall (($generated@@284 T@U) ) (! (= (type ($generated@@282 $generated@@284)) $generated@@71)
 :pattern ( ($generated@@282 $generated@@284))
))))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@66) (and (= ($generated@@74 ($generated@@281 $generated@@285)) $generated@@63) (= ($generated@@282 ($generated@@281 $generated@@285)) $generated@@65)))
 :pattern ( ($generated@@281 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@78 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@81 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@78 $generated@@323 $generated@@2)) (= ($generated@@157 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@83 $generated@@322 $generated@@324))) (<= ($generated ($generated@@83 $generated@@322 $generated@@324)) ($generated@@275 $generated@@322))))
 :pattern ( ($generated@@83 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@157 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@290 (type $generated@@325))))
(let (($generated@@327 ($generated@@289 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@288 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@287 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@286 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@290 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@78 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@290 (type $generated@@332))))
(let (($generated@@334 ($generated@@289 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@288 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@287 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@83 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@308 (type $generated@@336))))
(let (($generated@@338 ($generated@@307 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@306 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@305 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@304 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@308 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@78 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@308 (type $generated@@343))))
(let (($generated@@345 ($generated@@307 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@306 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@305 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@83 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@348) $generated@@66)) (= ($generated@@138 $generated@@347 ($generated@@156 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@347 $generated@@349)))) ($generated@@218 $generated@@349 $generated@@348))
 :pattern ( ($generated@@83 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@138 $generated@@347 ($generated@@156 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@351) $generated@@66)) (= (type $generated@@352) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@350 ($generated@@227 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@151) ($generated@@0 ($generated@@83 $generated@@350 $generated@@353))) ($generated@@242 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@83 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@76 $generated@@350 ($generated@@227 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@355) $generated@@66)) (= (type $generated@@356) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@354 ($generated@@232 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@151) ($generated@@0 ($generated@@83 $generated@@354 $generated@@357))) ($generated@@242 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@83 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@76 $generated@@354 ($generated@@232 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated ($generated@@83 ($generated@@276 $generated@@359) $generated@@358)) 0))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@83 ($generated@@276 $generated@@359) $generated@@358)))
)))
(assert  (and (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@360 $generated@@363)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@360 $generated@@363))
)) (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@361 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@361 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@290 (type $generated@@366))))
(let (($generated@@368 ($generated@@289 (type $generated@@366))))
(= (type ($generated@@362 $generated@@366)) ($generated@@78 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@362 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@288 $generated@@151 $generated@@151)) (= (type $generated@@370) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@360 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@369) ($generated@@149 ($generated@@361 $generated@@142 $generated@@370)))) (= ($generated@@83 ($generated@@362 $generated@@369) ($generated@@149 ($generated@@361 $generated@@142 $generated@@370))) ($generated@@150 ($generated@@361 $generated@@142 $generated@@370))))))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@308 (type $generated@@374))))
(let (($generated@@376 ($generated@@307 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@306 $generated@@151 $generated@@151)) (= (type $generated@@378) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@377) ($generated@@149 ($generated@@361 $generated@@142 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@149 ($generated@@361 $generated@@142 $generated@@378))) ($generated@@150 ($generated@@361 $generated@@142 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@289 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@288 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@83 ($generated@@329 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@83 ($generated@@362 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@379) $generated@@383))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@83 ($generated@@329 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@307 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@306 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@83 ($generated@@340 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@384) $generated@@388))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@83 ($generated@@340 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@66)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@288 $generated@@151 $generated@@151)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@392) $generated@@396))) (and ($generated@@242 ($generated@@83 ($generated@@362 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@242 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@306 $generated@@151 $generated@@151)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@400) $generated@@404))) (and ($generated@@242 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@242 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@406) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@405 $generated@@407))) (and ($generated@@134 $generated@@405 $generated@@406) ($generated@@134 $generated@@406 $generated@@407))) ($generated@@134 $generated@@405 $generated@@407))
 :pattern ( ($generated@@134 $generated@@405 $generated@@406) ($generated@@134 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@78 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@308 (type $generated@@410))))
(let (($generated@@412 ($generated@@307 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@306 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@305 $generated@@412 $generated@@411)) (= ($generated@@304 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@304 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@308 (type $generated@@413))))
(let (($generated@@415 ($generated@@307 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@306 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@305 $generated@@415 $generated@@414)) (= ($generated@@340 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@340 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@308 (type $generated@@416))))
(let (($generated@@418 ($generated@@307 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@306 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@305 $generated@@418 $generated@@417)) (= ($generated@@371 $generated@@416) ($generated@@408 $generated@@151))))))
 :pattern ( ($generated@@371 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@290 (type $generated@@419))))
(let (($generated@@421 ($generated@@289 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@288 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@287 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@151) (= (type $generated@@423) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@360 $generated@@419) ($generated@@262 ($generated@@217 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@360 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@308 (type $generated@@424))))
(let (($generated@@426 ($generated@@307 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@306 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@305 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@151) (= (type $generated@@428) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@424) ($generated@@262 ($generated@@217 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@151) ($generated@@218 $generated@@429 $generated@@46)) (and (= ($generated@@262 ($generated@@361 $generated@@2 $generated@@429)) $generated@@429) ($generated@@138 ($generated@@361 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@218 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@151) ($generated@@218 $generated@@430 $generated@@47)) (and (= ($generated@@262 ($generated@@361 $generated@@3 $generated@@430)) $generated@@430) ($generated@@138 ($generated@@361 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@218 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@151) ($generated@@218 $generated@@431 $generated@@44)) (and (= ($generated@@262 ($generated@@361 $generated@@4 $generated@@431)) $generated@@431) ($generated@@138 ($generated@@361 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@218 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@151) ($generated@@218 $generated@@433 $generated@@45)) (and (= ($generated@@262 ($generated@@361 $generated@@432 $generated@@433)) $generated@@433) ($generated@@138 ($generated@@361 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@218 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@66) (= ($generated@@218 ($generated@@262 $generated@@434) $generated@@435) ($generated@@138 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@218 ($generated@@262 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@81 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@78 $generated@@437 $generated@@2)) (<= 0 ($generated@@275 $generated@@436))))
 :pattern ( ($generated@@275 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@257 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@256 $generated@@439)) (<= 0 ($generated@@255 $generated@@438))))
 :pattern ( ($generated@@255 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@66) (= (type $generated@@443) $generated@@66)) (= ($generated@@440 ($generated@@389 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@389 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@66)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@66) (= (type $generated@@447) $generated@@66)) (= ($generated@@444 ($generated@@389 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@389 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@74 ($generated@@389 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@397 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@66)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@66) (= (type $generated@@457) $generated@@66)) (= ($generated@@454 ($generated@@397 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@397 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@151) (= (type $generated@@461) $generated@@151)) (= ($generated@@248 ($generated@@217 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@217 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@141 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@141 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@141 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@141 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@151) (= (type $generated@@471) $generated@@151)) (= ($generated@@149 ($generated@@217 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@217 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@151) (= (type $generated@@473) $generated@@151)) (= ($generated@@150 ($generated@@217 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@217 $generated@@472 $generated@@473))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@257 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@475 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@256 $generated@@151)) (= (type $generated@@481) $generated@@66)) (= (type $generated@@482) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@480 ($generated@@474 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@255 $generated@@480))) ($generated@@242 ($generated@@475 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@475 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@76 $generated@@480 ($generated@@474 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@77 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@77 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@486 ($generated@@227 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@227 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@74 ($generated@@227 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@227 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@232 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@232 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@232 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@232 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@494 ($generated@@156 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@156 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@74 ($generated@@156 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@474 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@474 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@474 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@474 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@281 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@281 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@361 $generated@@506 ($generated@@262 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@262 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@288 $generated@@151 $generated@@151)) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) (= ($generated@@138 $generated@@507 ($generated@@389 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@507) $generated@@510))) (and ($generated@@218 ($generated@@83 ($generated@@362 $generated@@507) $generated@@510) $generated@@509) ($generated@@218 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@507) $generated@@510))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@138 $generated@@507 ($generated@@389 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@306 $generated@@151 $generated@@151)) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@66)) (= ($generated@@138 $generated@@511 ($generated@@397 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@511) $generated@@514))) (and ($generated@@218 ($generated@@83 ($generated@@372 $generated@@511) $generated@@514) $generated@@513) ($generated@@218 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@511) $generated@@514))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@138 $generated@@511 ($generated@@397 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@151) (= (type $generated@@518) $generated@@151)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@217 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@217 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@151) (= (type $generated@@520) $generated@@151)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@217 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@217 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@151) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@66)) ($generated@@218 $generated@@521 ($generated@@389 $generated@@522 $generated@@523))) (and (= ($generated@@262 ($generated@@361 ($generated@@288 $generated@@151 $generated@@151) $generated@@521)) $generated@@521) ($generated@@138 ($generated@@361 ($generated@@288 $generated@@151 $generated@@151) $generated@@521) ($generated@@389 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@218 $generated@@521 ($generated@@389 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@151) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) ($generated@@218 $generated@@524 ($generated@@397 $generated@@525 $generated@@526))) (and (= ($generated@@262 ($generated@@361 ($generated@@306 $generated@@151 $generated@@151) $generated@@524)) $generated@@524) ($generated@@138 ($generated@@361 ($generated@@306 $generated@@151 $generated@@151) $generated@@524) ($generated@@397 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@218 $generated@@524 ($generated@@397 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@66) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@151)) ($generated@@218 $generated@@529 ($generated@@141 $generated@@527 $generated@@528))) (and (= ($generated@@262 ($generated@@361 $generated@@142 $generated@@529)) $generated@@529) ($generated@@138 ($generated@@361 $generated@@142 $generated@@529) ($generated@@141 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@218 $generated@@529 ($generated@@141 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@83 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@83 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@141 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@282 ($generated@@141 $generated@@532 $generated@@533)) $generated@@64)))
 :pattern ( ($generated@@141 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@142) (= ($generated@@515 ($generated@@262 $generated@@534)) ($generated@@516 $generated@@534)))
 :pattern ( ($generated@@515 ($generated@@262 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@151) ($generated@@218 $generated@@535 ($generated@@77 0))) (and (= ($generated@@262 ($generated@@361 $generated@@2 $generated@@535)) $generated@@535) ($generated@@138 ($generated@@361 ($generated@@78 $generated@@151 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@218 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@151) (= (type $generated@@537) $generated@@66)) ($generated@@218 $generated@@536 ($generated@@227 $generated@@537))) (and (= ($generated@@262 ($generated@@361 ($generated@@78 $generated@@151 $generated@@4) $generated@@536)) $generated@@536) ($generated@@138 ($generated@@361 ($generated@@78 $generated@@151 $generated@@4) $generated@@536) ($generated@@227 $generated@@537))))
 :pattern ( ($generated@@218 $generated@@536 ($generated@@227 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@151) (= (type $generated@@539) $generated@@66)) ($generated@@218 $generated@@538 ($generated@@232 $generated@@539))) (and (= ($generated@@262 ($generated@@361 ($generated@@78 $generated@@151 $generated@@4) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@361 ($generated@@78 $generated@@151 $generated@@4) $generated@@538) ($generated@@232 $generated@@539))))
 :pattern ( ($generated@@218 $generated@@538 ($generated@@232 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@151) (= (type $generated@@541) $generated@@66)) ($generated@@218 $generated@@540 ($generated@@156 $generated@@541))) (and (= ($generated@@262 ($generated@@361 ($generated@@78 $generated@@151 $generated@@2) $generated@@540)) $generated@@540) ($generated@@138 ($generated@@361 ($generated@@78 $generated@@151 $generated@@2) $generated@@540) ($generated@@156 $generated@@541))))
 :pattern ( ($generated@@218 $generated@@540 ($generated@@156 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@151) (= (type $generated@@543) $generated@@66)) ($generated@@218 $generated@@542 ($generated@@474 $generated@@543))) (and (= ($generated@@262 ($generated@@361 ($generated@@256 $generated@@151) $generated@@542)) $generated@@542) ($generated@@138 ($generated@@361 ($generated@@256 $generated@@151) $generated@@542) ($generated@@474 $generated@@543))))
 :pattern ( ($generated@@218 $generated@@542 ($generated@@474 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@151)) ($generated@@218 $generated@@545 ($generated@@281 $generated@@544))) (and (= ($generated@@262 ($generated@@361 $generated@@142 $generated@@545)) $generated@@545) ($generated@@138 ($generated@@361 $generated@@142 $generated@@545) ($generated@@281 $generated@@544))))
 :pattern ( ($generated@@218 $generated@@545 ($generated@@281 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@546 ($generated@@156 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@546 $generated@@549)))) ($generated@@242 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@83 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@76 $generated@@546 ($generated@@156 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@142) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@241 $generated@@552) (and ($generated@@140 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@66) ($generated@@76 $generated@@550 ($generated@@141 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@141 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@242 ($generated@@149 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@242 ($generated@@149 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@142) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@241 $generated@@556) (and ($generated@@140 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@66) ($generated@@76 $generated@@554 ($generated@@141 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@141 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@242 ($generated@@150 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@242 ($generated@@150 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@151) (= (type $generated@@559) $generated@@151)) (= ($generated@@217 ($generated@@237 $generated@@558) ($generated@@237 $generated@@559)) ($generated@@237 ($generated@@217 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@217 ($generated@@237 $generated@@558) ($generated@@237 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@560)) ($generated@@237 ($generated@@262 $generated@@560)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@257 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@256 $generated@@562)) (= ($generated@@255 $generated@@561) 0)) (= $generated@@561 ($generated@@254 $generated@@562))))
 :pattern ( ($generated@@255 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@275 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@275 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@275 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@432)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@151)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@256 $generated@@151)) (= (type $generated@@578) $generated@@66)) (= ($generated@@138 $generated@@577 ($generated@@474 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@255 $generated@@577))) ($generated@@218 ($generated@@475 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@475 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@138 $generated@@577 ($generated@@474 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@256 $generated@@151)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@255 $generated@@581))) (< ($generated@@516 ($generated@@361 $generated@@142 ($generated@@475 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@516 ($generated@@361 $generated@@142 ($generated@@475 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@288 $generated@@151 $generated@@151)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@138 $generated@@583 ($generated@@389 $generated@@584 $generated@@585))) (and (and ($generated@@138 ($generated@@286 $generated@@583) ($generated@@227 $generated@@584)) ($generated@@138 ($generated@@329 $generated@@583) ($generated@@227 $generated@@585))) ($generated@@138 ($generated@@360 $generated@@583) ($generated@@227 ($generated@@141 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@138 $generated@@583 ($generated@@389 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@306 $generated@@151 $generated@@151)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@138 $generated@@586 ($generated@@397 $generated@@587 $generated@@588))) (and (and ($generated@@138 ($generated@@304 $generated@@586) ($generated@@232 $generated@@587)) ($generated@@138 ($generated@@340 $generated@@586) ($generated@@232 $generated@@588))) ($generated@@138 ($generated@@371 $generated@@586) ($generated@@232 ($generated@@141 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@138 $generated@@586 ($generated@@397 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@138 $generated@@589 $generated@@46))
 :pattern ( ($generated@@138 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@138 $generated@@590 $generated@@47))
 :pattern ( ($generated@@138 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@138 $generated@@591 $generated@@44))
 :pattern ( ($generated@@138 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@432) ($generated@@138 $generated@@592 $generated@@45))
 :pattern ( ($generated@@138 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@151) ($generated@@138 $generated@@593 $generated@@48))
 :pattern ( ($generated@@138 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@268 (Int Bool) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@T) T@U)
(declare-fun $generated@@445 () T@T)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (= ($generated@@1 $generated@@80) 11))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and (= (type $generated@@83) $generated@@80) (= (type $generated@@84) $generated@@80)) true) (= ($generated@@79 $generated@@83 $generated@@84)  (and (= ($generated@@81 $generated@@83) ($generated@@81 $generated@@84)) (= ($generated@@82 $generated@@83) ($generated@@82 $generated@@84)))))
 :pattern ( ($generated@@79 $generated@@83 $generated@@84))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 12)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@72 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@72 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (= (type $generated@@143) $generated@@69))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@144 $generated@@143 $generated@@145))
 :pattern ( ($generated@@85 $generated@@144 $generated@@143 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@80) ($generated@@146 $generated@@148)) ($generated@@147 $generated@@148))
 :pattern ( ($generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@86 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@86 0)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@69)) (= (type $generated@@157) $generated@@80)) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156))) ($generated@@151 $generated@@157))
 :pattern ( ($generated@@151 $generated@@157) ($generated@@149 $generated@@157 ($generated@@152 $generated@@155 $generated@@156)))
)))
(assert  (and (and (= ($generated@@1 $generated@@161) 15) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@159 $generated@@162))
))) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@161)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@80) (= (type $generated@@165) $generated@@80)) true) (= ($generated@@158 $generated@@164 $generated@@165)  (and (= ($generated@@159 $generated@@164) ($generated@@159 $generated@@165)) (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)))))
 :pattern ( ($generated@@158 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@69)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@87 $generated@@161 $generated@@2)) (= (type $generated@@170) $generated@@69)) ($generated@@149 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@149 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@88 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@72 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@88) (= (type $generated@@221) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@222) ($generated@@71 $generated@@4))) (= (type $generated@@224) $generated@@88)) (= (type $generated@@225) ($generated@@71 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (= (type $generated@@227) $generated@@69))
(assert (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@80) ($generated@@149 $generated@@228 $generated@@227)) ($generated@@147 $generated@@228))
 :pattern ( ($generated@@147 $generated@@228) ($generated@@149 $generated@@228 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@80)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@69) (= (type $generated@@234) $generated@@69)) (= (type $generated@@235) $generated@@161)) (= (type $generated@@236) $generated@@161)) (= ($generated@@149 ($generated@@229 $generated@@235 $generated@@236) ($generated@@152 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@149 ($generated@@229 $generated@@235 $generated@@236) ($generated@@152 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@80) (= (type $generated@@238) $generated@@80)) (= ($generated@@158 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@158 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@80) (= (type $generated@@240) $generated@@80)) (= ($generated@@79 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@79 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@69)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@87 $generated@@161 $generated@@4)) (= (type $generated@@244) $generated@@69)) (= ($generated@@149 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@161) ($generated@@0 ($generated@@92 $generated@@243 $generated@@245))) ($generated@@230 $generated@@245 $generated@@244))
 :pattern ( ($generated@@92 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@149 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@69)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@87 $generated@@161 $generated@@4)) (= (type $generated@@249) $generated@@69)) (= ($generated@@149 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@161) ($generated@@0 ($generated@@92 $generated@@248 $generated@@250))) ($generated@@230 $generated@@250 $generated@@249))
 :pattern ( ($generated@@92 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@149 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@69) (= (type $generated@@260) $generated@@69)) (= (type $generated@@261) $generated@@161)) (= (type $generated@@262) $generated@@161)) (= (type $generated@@263) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@257 $generated@@263)) (= ($generated@@85 ($generated@@229 $generated@@261 $generated@@262) ($generated@@152 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@85 ($generated@@229 $generated@@261 $generated@@262) ($generated@@152 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@73)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@80) (= ($generated@@151 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@80) (= ($generated@@147 $generated@@267) (= ($generated@@264 $generated@@267) $generated@@64)))
 :pattern ( ($generated@@147 $generated@@267))
)))
(assert (forall (($generated@@269 Int) ($generated@@270 Bool) ) (! (= (type ($generated@@268 $generated@@269 $generated@@270)) $generated@@80)
 :pattern ( ($generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 Int) ($generated@@272 Bool) ) (! (= ($generated@@149 ($generated@@268 $generated@@271 $generated@@272) $generated@@227)  (and ($generated@@149 ($generated@@8 $generated@@271) $generated@@143) ($generated@@149 ($generated@@11 $generated@@272) $generated@@44)))
 :pattern ( ($generated@@149 ($generated@@268 $generated@@271 $generated@@272) $generated@@227))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@80) ($generated@@151 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@161) (= (type $generated@@275) $generated@@161)) (= $generated@@273 ($generated@@229 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@151 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@80) ($generated@@147 $generated@@276)) (exists (($generated@@277 Int) ($generated@@278 Bool) ) (= $generated@@276 ($generated@@268 $generated@@277 $generated@@278))))
 :pattern ( ($generated@@147 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@161)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@69) (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@258 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@85 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@258 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@87 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@90 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@87 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@92 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@87 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@92 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@92 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@87 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@92 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@92 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@90 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@87 $generated@@335 $generated@@2)) (= ($generated@@167 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@92 $generated@@334 $generated@@336))) (<= ($generated ($generated@@92 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@92 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@167 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@161) ($generated@@230 $generated@@340 $generated@@143)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@340)) $generated@@340) ($generated@@149 ($generated@@337 $generated@@2 $generated@@340) $generated@@143)))
 :pattern ( ($generated@@230 $generated@@340 $generated@@143))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@161) ($generated@@230 $generated@@341 $generated@@227)) (and (= ($generated@@287 ($generated@@337 $generated@@80 $generated@@341)) $generated@@341) ($generated@@149 ($generated@@337 $generated@@80 $generated@@341) $generated@@227)))
 :pattern ( ($generated@@230 $generated@@341 $generated@@227))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@302 (type $generated@@342))))
(let (($generated@@344 ($generated@@301 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@300 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@299 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@92 ($generated@@298 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@298 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@302 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@87 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@302 (type $generated@@349))))
(let (($generated@@351 ($generated@@301 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@300 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@299 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@92 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@320 (type $generated@@353))))
(let (($generated@@355 ($generated@@319 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@318 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@317 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@316 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@320 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@87 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@320 (type $generated@@360))))
(let (($generated@@362 ($generated@@319 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@318 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@317 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@92 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@87 $generated@@161 $generated@@2)) (= (type $generated@@365) $generated@@69)) (= ($generated@@149 $generated@@364 ($generated@@166 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@161) (< 0 ($generated ($generated@@92 $generated@@364 $generated@@366)))) ($generated@@230 $generated@@366 $generated@@365))
 :pattern ( ($generated@@92 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@149 $generated@@364 ($generated@@166 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@87 $generated@@161 $generated@@4)) (= (type $generated@@368) $generated@@69)) (= (type $generated@@369) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@367 ($generated@@241 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@161) ($generated@@0 ($generated@@92 $generated@@367 $generated@@370))) ($generated@@258 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@92 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@85 $generated@@367 ($generated@@241 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@87 $generated@@161 $generated@@4)) (= (type $generated@@372) $generated@@69)) (= (type $generated@@373) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@371 ($generated@@246 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@161) ($generated@@0 ($generated@@92 $generated@@371 $generated@@374))) ($generated@@258 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@92 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@85 $generated@@371 ($generated@@246 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated ($generated@@92 ($generated@@293 $generated@@376) $generated@@375)) 0))
 :pattern ( (let (($generated@@376 (type $generated@@375)))
($generated@@92 ($generated@@293 $generated@@376) $generated@@375)))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@87 $generated@@161 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@302 (type $generated@@380))))
(let (($generated@@382 ($generated@@301 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@87 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@300 $generated@@161 $generated@@161)) (= (type $generated@@384) $generated@@161)) (= ($generated@@0 ($generated@@92 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@92 ($generated@@298 $generated@@383) ($generated@@159 ($generated@@337 $generated@@80 $generated@@384)))) (= ($generated@@92 ($generated@@378 $generated@@383) ($generated@@159 ($generated@@337 $generated@@80 $generated@@384))) ($generated@@160 ($generated@@337 $generated@@80 $generated@@384))))))
 :pattern ( ($generated@@92 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@87 $generated@@161 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@320 (type $generated@@388))))
(let (($generated@@390 ($generated@@319 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@87 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@318 $generated@@161 $generated@@161)) (= (type $generated@@392) $generated@@161)) (= ($generated@@0 ($generated@@92 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@92 ($generated@@316 $generated@@391) ($generated@@159 ($generated@@337 $generated@@80 $generated@@392)))) (= ($generated@@92 ($generated@@386 $generated@@391) ($generated@@159 ($generated@@337 $generated@@80 $generated@@392))) ($generated@@160 ($generated@@337 $generated@@80 $generated@@392))))))
 :pattern ( ($generated@@92 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@301 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@300 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@92 ($generated@@346 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@92 ($generated@@298 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@92 ($generated@@378 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@92 ($generated@@298 $generated@@393) $generated@@397))
 :pattern ( ($generated@@92 ($generated@@378 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@92 ($generated@@346 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@319 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@318 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@92 ($generated@@357 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@92 ($generated@@316 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@92 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@398) $generated@@402))
 :pattern ( ($generated@@92 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@92 ($generated@@357 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@69)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@300 $generated@@161 $generated@@161)) (= (type $generated@@407) $generated@@69)) (= (type $generated@@408) $generated@@69)) (= (type $generated@@409) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@161) ($generated@@0 ($generated@@92 ($generated@@298 $generated@@406) $generated@@410))) (and ($generated@@258 ($generated@@92 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@258 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@92 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@92 ($generated@@298 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@85 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@69)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@318 $generated@@161 $generated@@161)) (= (type $generated@@415) $generated@@69)) (= (type $generated@@416) $generated@@69)) (= (type $generated@@417) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@161) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@414) $generated@@418))) (and ($generated@@258 ($generated@@92 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@258 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@92 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@85 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 Int) ($generated@@420 Bool) ) (! (= ($generated@@82 ($generated@@268 $generated@@419 $generated@@420)) $generated@@420)
 :pattern ( ($generated@@268 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@T) ) (! (= (type ($generated@@421 $generated@@422)) ($generated@@87 $generated@@422 $generated@@4))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@320 (type $generated@@423))))
(let (($generated@@425 ($generated@@319 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@318 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@317 $generated@@425 $generated@@424)) (= ($generated@@316 $generated@@423) ($generated@@421 $generated@@425))))))
 :pattern ( ($generated@@316 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@320 (type $generated@@426))))
(let (($generated@@428 ($generated@@319 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@318 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@317 $generated@@428 $generated@@427)) (= ($generated@@357 $generated@@426) ($generated@@421 $generated@@427))))))
 :pattern ( ($generated@@357 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@320 (type $generated@@429))))
(let (($generated@@431 ($generated@@319 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@318 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@317 $generated@@431 $generated@@430)) (= ($generated@@385 $generated@@429) ($generated@@421 $generated@@161))))))
 :pattern ( ($generated@@385 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@302 (type $generated@@432))))
(let (($generated@@434 ($generated@@301 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@300 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@299 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@161) (= (type $generated@@436) $generated@@161)) ($generated@@0 ($generated@@92 ($generated@@377 $generated@@432) ($generated@@287 ($generated@@229 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@377 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@320 (type $generated@@437))))
(let (($generated@@439 ($generated@@319 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@318 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@317 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@161) (= (type $generated@@441) $generated@@161)) ($generated@@0 ($generated@@92 ($generated@@385 $generated@@437) ($generated@@287 ($generated@@229 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@385 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@161) ($generated@@230 $generated@@442 $generated@@46)) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@442)) $generated@@442) ($generated@@149 ($generated@@337 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@161) ($generated@@230 $generated@@443 $generated@@47)) (and (= ($generated@@287 ($generated@@337 $generated@@3 $generated@@443)) $generated@@443) ($generated@@149 ($generated@@337 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@161) ($generated@@230 $generated@@444 $generated@@44)) (and (= ($generated@@287 ($generated@@337 $generated@@4 $generated@@444)) $generated@@444) ($generated@@149 ($generated@@337 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@444 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@445) 20))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@161) ($generated@@230 $generated@@446 $generated@@45)) (and (= ($generated@@287 ($generated@@337 $generated@@445 $generated@@446)) $generated@@446) ($generated@@149 ($generated@@337 $generated@@445 $generated@@446) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@446 $generated@@45))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@69) (= ($generated@@230 ($generated@@287 $generated@@447) $generated@@448) ($generated@@149 $generated@@447 $generated@@448)))
 :pattern ( ($generated@@230 ($generated@@287 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@90 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@87 $generated@@450 $generated@@2)) (<= 0 ($generated@@292 $generated@@449))))
 :pattern ( ($generated@@292 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@282 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@281 $generated@@452)) (<= 0 ($generated@@280 $generated@@451))))
 :pattern ( ($generated@@280 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@69)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@69) (= (type $generated@@456) $generated@@69)) (= ($generated@@453 ($generated@@403 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@403 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@69)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@69) (= (type $generated@@460) $generated@@69)) (= ($generated@@457 ($generated@@403 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@69) (= (type $generated@@462) $generated@@69)) (= ($generated@@77 ($generated@@403 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@69)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@69) (= (type $generated@@466) $generated@@69)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@69)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@467 ($generated@@411 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@69) (= (type $generated@@472) $generated@@69)) (= ($generated@@77 ($generated@@411 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@161) (= (type $generated@@474) $generated@@161)) (= ($generated@@264 ($generated@@229 $generated@@473 $generated@@474)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@152 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@152 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@152 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@152 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@161) (= (type $generated@@484) $generated@@161)) (= ($generated@@159 ($generated@@229 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@229 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@161) (= (type $generated@@486) $generated@@161)) (= ($generated@@160 ($generated@@229 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@229 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 Int) ($generated@@488 Bool) ) (! (= ($generated@@264 ($generated@@268 $generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@268 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 Int) ($generated@@490 Bool) ) (! (= ($generated@@81 ($generated@@268 $generated@@489 $generated@@490)) $generated@@489)
 :pattern ( ($generated@@268 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@282 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@281 $generated@@161)) (= (type $generated@@498) $generated@@69)) (= (type $generated@@499) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@280 $generated@@497))) ($generated@@258 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@85 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@86 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@86 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@503 ($generated@@241 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@241 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@77 ($generated@@241 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@507 ($generated@@246 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@246 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@77 ($generated@@246 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@166 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@166 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@77 ($generated@@166 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@337 $generated@@520 ($generated@@287 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@287 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@300 $generated@@161 $generated@@161)) (= (type $generated@@522) $generated@@69)) (= (type $generated@@523) $generated@@69)) (= ($generated@@149 $generated@@521 ($generated@@403 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@161) ($generated@@0 ($generated@@92 ($generated@@298 $generated@@521) $generated@@524))) (and ($generated@@230 ($generated@@92 ($generated@@378 $generated@@521) $generated@@524) $generated@@523) ($generated@@230 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@92 ($generated@@378 $generated@@521) $generated@@524))
 :pattern ( ($generated@@92 ($generated@@298 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@149 $generated@@521 ($generated@@403 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@318 $generated@@161 $generated@@161)) (= (type $generated@@526) $generated@@69)) (= (type $generated@@527) $generated@@69)) (= ($generated@@149 $generated@@525 ($generated@@411 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@161) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@525) $generated@@528))) (and ($generated@@230 ($generated@@92 ($generated@@386 $generated@@525) $generated@@528) $generated@@527) ($generated@@230 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@92 ($generated@@386 $generated@@525) $generated@@528))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@149 $generated@@525 ($generated@@411 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@161) (= (type $generated@@532) $generated@@161)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@229 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@161) (= (type $generated@@534) $generated@@161)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@229 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@161) (= (type $generated@@536) $generated@@69)) (= (type $generated@@537) $generated@@69)) ($generated@@230 $generated@@535 ($generated@@403 $generated@@536 $generated@@537))) (and (= ($generated@@287 ($generated@@337 ($generated@@300 $generated@@161 $generated@@161) $generated@@535)) $generated@@535) ($generated@@149 ($generated@@337 ($generated@@300 $generated@@161 $generated@@161) $generated@@535) ($generated@@403 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@230 $generated@@535 ($generated@@403 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@161) (= (type $generated@@539) $generated@@69)) (= (type $generated@@540) $generated@@69)) ($generated@@230 $generated@@538 ($generated@@411 $generated@@539 $generated@@540))) (and (= ($generated@@287 ($generated@@337 ($generated@@318 $generated@@161 $generated@@161) $generated@@538)) $generated@@538) ($generated@@149 ($generated@@337 ($generated@@318 $generated@@161 $generated@@161) $generated@@538) ($generated@@411 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@411 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@69) (= (type $generated@@542) $generated@@69)) (= (type $generated@@543) $generated@@161)) ($generated@@230 $generated@@543 ($generated@@152 $generated@@541 $generated@@542))) (and (= ($generated@@287 ($generated@@337 $generated@@80 $generated@@543)) $generated@@543) ($generated@@149 ($generated@@337 $generated@@80 $generated@@543) ($generated@@152 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@230 $generated@@543 ($generated@@152 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@92 ($generated@@421 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@92 ($generated@@421 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@74)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@69) (= (type $generated@@549) $generated@@69)) (and (= ($generated@@77 ($generated@@152 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@152 $generated@@548 $generated@@549)) $generated@@66)))
 :pattern ( ($generated@@152 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@80) (= (type $generated@@551) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@257 $generated@@551) (and ($generated@@147 $generated@@550) ($generated@@85 $generated@@550 $generated@@227 $generated@@551)))) ($generated@@85 ($generated@@11 ($generated@@82 $generated@@550)) $generated@@44 $generated@@551))
 :pattern ( ($generated@@85 ($generated@@11 ($generated@@82 $generated@@550)) $generated@@44 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@80) (= ($generated@@529 ($generated@@287 $generated@@552)) ($generated@@530 $generated@@552)))
 :pattern ( ($generated@@529 ($generated@@287 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@161) ($generated@@230 $generated@@553 ($generated@@86 0))) (and (= ($generated@@287 ($generated@@337 $generated@@2 $generated@@553)) $generated@@553) ($generated@@149 ($generated@@337 ($generated@@87 $generated@@161 $generated@@4) $generated@@553) ($generated@@86 0))))
 :pattern ( ($generated@@230 $generated@@553 ($generated@@86 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@161) (= (type $generated@@555) $generated@@69)) ($generated@@230 $generated@@554 ($generated@@241 $generated@@555))) (and (= ($generated@@287 ($generated@@337 ($generated@@87 $generated@@161 $generated@@4) $generated@@554)) $generated@@554) ($generated@@149 ($generated@@337 ($generated@@87 $generated@@161 $generated@@4) $generated@@554) ($generated@@241 $generated@@555))))
 :pattern ( ($generated@@230 $generated@@554 ($generated@@241 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@161) (= (type $generated@@557) $generated@@69)) ($generated@@230 $generated@@556 ($generated@@246 $generated@@557))) (and (= ($generated@@287 ($generated@@337 ($generated@@87 $generated@@161 $generated@@4) $generated@@556)) $generated@@556) ($generated@@149 ($generated@@337 ($generated@@87 $generated@@161 $generated@@4) $generated@@556) ($generated@@246 $generated@@557))))
 :pattern ( ($generated@@230 $generated@@556 ($generated@@246 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@161) (= (type $generated@@559) $generated@@69)) ($generated@@230 $generated@@558 ($generated@@166 $generated@@559))) (and (= ($generated@@287 ($generated@@337 ($generated@@87 $generated@@161 $generated@@2) $generated@@558)) $generated@@558) ($generated@@149 ($generated@@337 ($generated@@87 $generated@@161 $generated@@2) $generated@@558) ($generated@@166 $generated@@559))))
 :pattern ( ($generated@@230 $generated@@558 ($generated@@166 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@161) (= (type $generated@@561) $generated@@69)) ($generated@@230 $generated@@560 ($generated@@491 $generated@@561))) (and (= ($generated@@287 ($generated@@337 ($generated@@281 $generated@@161) $generated@@560)) $generated@@560) ($generated@@149 ($generated@@337 ($generated@@281 $generated@@161) $generated@@560) ($generated@@491 $generated@@561))))
 :pattern ( ($generated@@230 $generated@@560 ($generated@@491 $generated@@561)))
)))
(assert (= ($generated@@77 $generated@@143) $generated@@63))
(assert (= ($generated@@546 $generated@@143) $generated@@67))
(assert (= ($generated@@77 $generated@@227) $generated@@65))
(assert (= ($generated@@546 $generated@@227) $generated@@68))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@87 $generated@@161 $generated@@2)) (= (type $generated@@563) $generated@@69)) (= (type $generated@@564) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@562 ($generated@@166 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@161) (< 0 ($generated ($generated@@92 $generated@@562 $generated@@565)))) ($generated@@258 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@92 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@85 $generated@@562 ($generated@@166 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@80) (= (type $generated@@567) $generated@@69)) (= (type $generated@@568) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@257 $generated@@568) (and ($generated@@151 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@69) ($generated@@85 $generated@@566 ($generated@@152 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@85 $generated@@566 ($generated@@152 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@258 ($generated@@159 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@258 ($generated@@159 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@80) (= (type $generated@@571) $generated@@69)) (= (type $generated@@572) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@257 $generated@@572) (and ($generated@@151 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@69) ($generated@@85 $generated@@570 ($generated@@152 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@85 $generated@@570 ($generated@@152 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@258 ($generated@@160 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@258 ($generated@@160 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@80) (= (type $generated@@575) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@257 $generated@@575) (and ($generated@@147 $generated@@574) ($generated@@85 $generated@@574 $generated@@227 $generated@@575)))) ($generated@@85 ($generated@@8 ($generated@@81 $generated@@574)) $generated@@143 $generated@@575))
 :pattern ( ($generated@@85 ($generated@@8 ($generated@@81 $generated@@574)) $generated@@143 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@2) (= ($generated@@149 $generated@@576 $generated@@143)  (and (<= ($generated@@251 0) ($generated $generated@@576)) (< ($generated $generated@@576) 4294967296))))
 :pattern ( ($generated@@149 $generated@@576 $generated@@143))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@161) (= (type $generated@@578) $generated@@161)) (= ($generated@@229 ($generated@@253 $generated@@577) ($generated@@253 $generated@@578)) ($generated@@253 ($generated@@229 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@229 ($generated@@253 $generated@@577) ($generated@@253 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@4) (= ($generated@@268 ($generated@@251 $generated@@579) ($generated@@0 ($generated@@253 $generated@@580))) ($generated@@253 ($generated@@268 $generated@@579 ($generated@@0 $generated@@580)))))
 :pattern ( ($generated@@268 ($generated@@251 $generated@@579) ($generated@@0 ($generated@@253 $generated@@580))))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@251 $generated@@581))) ($generated@@253 ($generated@@287 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@251 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@287 ($generated@@253 $generated@@582)) ($generated@@253 ($generated@@287 $generated@@582)))
 :pattern ( ($generated@@287 ($generated@@253 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@282 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@281 $generated@@584)) (= ($generated@@280 $generated@@583) 0)) (= $generated@@583 ($generated@@279 $generated@@584))))
 :pattern ( ($generated@@280 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@87 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@292 ($generated@@93 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@292 $generated@@585) ($generated ($generated@@92 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@292 ($generated@@93 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@590) $generated@@2)) ($generated@@85 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@85 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@592) $generated@@3)) ($generated@@85 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@85 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@594) $generated@@4)) ($generated@@85 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@85 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@596) $generated@@445)) ($generated@@85 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@85 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@598) $generated@@161)) ($generated@@85 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@85 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@281 $generated@@161)) (= (type $generated@@600) $generated@@69)) (= ($generated@@149 $generated@@599 ($generated@@491 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@280 $generated@@599))) ($generated@@230 ($generated@@492 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@492 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@149 $generated@@599 ($generated@@491 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@281 $generated@@161)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@280 $generated@@603))) (< ($generated@@530 ($generated@@337 $generated@@80 ($generated@@492 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@530 ($generated@@337 $generated@@80 ($generated@@492 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@300 $generated@@161 $generated@@161)) (= (type $generated@@606) $generated@@69)) (= (type $generated@@607) $generated@@69)) ($generated@@149 $generated@@605 ($generated@@403 $generated@@606 $generated@@607))) (and (and ($generated@@149 ($generated@@298 $generated@@605) ($generated@@241 $generated@@606)) ($generated@@149 ($generated@@346 $generated@@605) ($generated@@241 $generated@@607))) ($generated@@149 ($generated@@377 $generated@@605) ($generated@@241 ($generated@@152 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@149 $generated@@605 ($generated@@403 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@318 $generated@@161 $generated@@161)) (= (type $generated@@609) $generated@@69)) (= (type $generated@@610) $generated@@69)) ($generated@@149 $generated@@608 ($generated@@411 $generated@@609 $generated@@610))) (and (and ($generated@@149 ($generated@@316 $generated@@608) ($generated@@246 $generated@@609)) ($generated@@149 ($generated@@357 $generated@@608) ($generated@@246 $generated@@610))) ($generated@@149 ($generated@@385 $generated@@608) ($generated@@246 ($generated@@152 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@149 $generated@@608 ($generated@@411 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@149 $generated@@611 $generated@@46))
 :pattern ( ($generated@@149 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@149 $generated@@612 $generated@@47))
 :pattern ( ($generated@@149 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@149 $generated@@613 $generated@@44))
 :pattern ( ($generated@@149 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@445) ($generated@@149 $generated@@614 $generated@@45))
 :pattern ( ($generated@@149 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@161) ($generated@@149 $generated@@615 $generated@@48))
 :pattern ( ($generated@@149 $generated@@615 $generated@@48))
)))
(assert (forall (($generated@@616 Int) ($generated@@617 Bool) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@87 $generated@@88 $generated@@89)) ($generated@@257 $generated@@618)) (= ($generated@@85 ($generated@@268 $generated@@616 $generated@@617) $generated@@227 $generated@@618)  (and ($generated@@85 ($generated@@8 $generated@@616) $generated@@143 $generated@@618) ($generated@@85 ($generated@@11 $generated@@617) $generated@@44 $generated@@618))))
 :pattern ( ($generated@@85 ($generated@@268 $generated@@616 $generated@@617) $generated@@227 $generated@@618))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 (T@U) Bool)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@619) ($generated@@173 $generated@@88 $generated@@4)) (= (type $generated@@620) $generated@@88)) (= (type $generated@@621) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@622) $generated@@80)) (= (type $generated@@623) $generated@@80)) (= (type $generated@@624) $generated@@80)) (= (type $generated@@628) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@630  (=> (= $generated@@619 ($generated@@172 $generated@@620 $generated@@621 $generated@@60 false)) (=> (and (and (and (and ($generated@@149 $generated@@622 $generated@@227) ($generated@@85 $generated@@622 $generated@@227 $generated@@621)) (= $generated@@623 $generated@@624)) (and ($generated@@149 $generated@@623 $generated@@227) (= $generated@@622 $generated@@623))) (and (and (<= ($generated@@251 0) $generated@@625) (< $generated@@625 4294967296)) (and (= $generated@@626 ($generated@@251 0)) (= (ControlFlow 0 2) (- 0 1))))) (and (<= ($generated@@251 0) $generated@@626) (< $generated@@626 4294967296))))))
(let (($generated@@631  (=> (and ($generated@@257 $generated@@621) ($generated@@627 $generated@@621)) (=> (and (and ($generated@@149 $generated@@624 $generated@@227) ($generated@@85 $generated@@624 $generated@@227 $generated@@621)) ($generated@@146 $generated@@624)) (=> (and (and (and ($generated@@149 $generated@@628 $generated@@227) ($generated@@85 $generated@@628 $generated@@227 $generated@@621)) true) (and (= 2 $generated@@629) (= (ControlFlow 0 3) 2))) $generated@@630)))))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (Int Bool) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@335 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (= ($generated@@1 $generated@@80) 11))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and (= (type $generated@@83) $generated@@80) (= (type $generated@@84) $generated@@80)) true) (= ($generated@@79 $generated@@83 $generated@@84)  (and (= ($generated@@81 $generated@@83) ($generated@@81 $generated@@84)) (= ($generated@@82 $generated@@83) ($generated@@82 $generated@@84)))))
 :pattern ( ($generated@@79 $generated@@83 $generated@@84))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 12)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@72 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@72 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (= (type $generated@@143) $generated@@69))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@144 $generated@@143 $generated@@145))
 :pattern ( ($generated@@85 $generated@@144 $generated@@143 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@86 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@86 0)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@150 $generated@@151)) $generated@@69)
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@69) (= (type $generated@@153) $generated@@69)) (= (type $generated@@154) $generated@@80)) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153))) ($generated@@148 $generated@@154))
 :pattern ( ($generated@@148 $generated@@154) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@80) (= (type $generated@@162) $generated@@80)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@69)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@87 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@69)) ($generated@@146 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@146 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@88 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@72 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@88) (= (type $generated@@218) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@219) ($generated@@71 $generated@@4))) (= (type $generated@@221) $generated@@88)) (= (type $generated@@222) ($generated@@71 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (= (type $generated@@225) $generated@@69))
(assert (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) ($generated@@146 $generated@@226 $generated@@225)) ($generated@@224 $generated@@226))
 :pattern ( ($generated@@224 $generated@@226) ($generated@@146 $generated@@226 $generated@@225))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@80)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@69) (= (type $generated@@232) $generated@@69)) (= (type $generated@@233) $generated@@158)) (= (type $generated@@234) $generated@@158)) (= ($generated@@146 ($generated@@227 $generated@@233 $generated@@234) ($generated@@149 $generated@@231 $generated@@232))  (and ($generated@@228 $generated@@233 $generated@@231) ($generated@@228 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@146 ($generated@@227 $generated@@233 $generated@@234) ($generated@@149 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@80) (= (type $generated@@236) $generated@@80)) (= ($generated@@155 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@155 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@80) (= (type $generated@@238) $generated@@80)) (= ($generated@@79 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@79 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@69)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@87 $generated@@158 $generated@@4)) (= (type $generated@@242) $generated@@69)) (= ($generated@@146 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@158) ($generated@@0 ($generated@@92 $generated@@241 $generated@@243))) ($generated@@228 $generated@@243 $generated@@242))
 :pattern ( ($generated@@92 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@146 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@69)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@158 $generated@@4)) (= (type $generated@@247) $generated@@69)) (= ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@158) ($generated@@0 ($generated@@92 $generated@@246 $generated@@248))) ($generated@@228 $generated@@248 $generated@@247))
 :pattern ( ($generated@@92 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@146 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@69) (= (type $generated@@258) $generated@@69)) (= (type $generated@@259) $generated@@158)) (= (type $generated@@260) $generated@@158)) (= (type $generated@@261) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@255 $generated@@261)) (= ($generated@@85 ($generated@@227 $generated@@259 $generated@@260) ($generated@@149 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@85 ($generated@@227 $generated@@259 $generated@@260) ($generated@@149 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@73)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@80) (= ($generated@@148 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@80) (= ($generated@@224 $generated@@265) (= ($generated@@262 $generated@@265) $generated@@64)))
 :pattern ( ($generated@@224 $generated@@265))
)))
(assert (forall (($generated@@267 Int) ($generated@@268 Bool) ) (! (= (type ($generated@@266 $generated@@267 $generated@@268)) $generated@@80)
 :pattern ( ($generated@@266 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 Int) ($generated@@270 Bool) ) (! (= ($generated@@146 ($generated@@266 $generated@@269 $generated@@270) $generated@@225)  (and ($generated@@146 ($generated@@8 $generated@@269) $generated@@143) ($generated@@146 ($generated@@11 $generated@@270) $generated@@44)))
 :pattern ( ($generated@@146 ($generated@@266 $generated@@269 $generated@@270) $generated@@225))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@80) ($generated@@148 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@158) (= (type $generated@@273) $generated@@158)) (= $generated@@271 ($generated@@227 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@148 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@80) ($generated@@224 $generated@@274)) (exists (($generated@@275 Int) ($generated@@276 Bool) ) (= $generated@@274 ($generated@@266 $generated@@275 $generated@@276))))
 :pattern ( ($generated@@224 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@158)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@69) (= (type $generated@@289) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@256 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@85 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@256 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@87 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@90 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@87 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@92 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@87 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@92 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@92 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@87 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@92 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@92 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@90 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@87 $generated@@333 $generated@@2)) (= ($generated@@164 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@92 $generated@@332 $generated@@334))) (<= ($generated ($generated@@92 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@92 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@164 $generated@@332))
)))
(assert (forall (($generated@@336 T@T) ($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@158) ($generated@@228 $generated@@338 $generated@@143)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@338)) $generated@@338) ($generated@@146 ($generated@@335 $generated@@2 $generated@@338) $generated@@143)))
 :pattern ( ($generated@@228 $generated@@338 $generated@@143))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@158) ($generated@@228 $generated@@339 $generated@@225)) (and (= ($generated@@285 ($generated@@335 $generated@@80 $generated@@339)) $generated@@339) ($generated@@146 ($generated@@335 $generated@@80 $generated@@339) $generated@@225)))
 :pattern ( ($generated@@228 $generated@@339 $generated@@225))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@300 (type $generated@@340))))
(let (($generated@@342 ($generated@@299 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@298 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@297 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@92 ($generated@@296 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@296 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@300 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@87 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@300 (type $generated@@347))))
(let (($generated@@349 ($generated@@299 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@298 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@297 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@92 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@318 (type $generated@@351))))
(let (($generated@@353 ($generated@@317 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@316 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@315 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@92 ($generated@@314 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@314 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@318 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@87 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@318 (type $generated@@358))))
(let (($generated@@360 ($generated@@317 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@316 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@315 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@92 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@87 $generated@@158 $generated@@2)) (= (type $generated@@363) $generated@@69)) (= ($generated@@146 $generated@@362 ($generated@@163 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@158) (< 0 ($generated ($generated@@92 $generated@@362 $generated@@364)))) ($generated@@228 $generated@@364 $generated@@363))
 :pattern ( ($generated@@92 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@146 $generated@@362 ($generated@@163 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@87 $generated@@158 $generated@@4)) (= (type $generated@@366) $generated@@69)) (= (type $generated@@367) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@365 ($generated@@239 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@158) ($generated@@0 ($generated@@92 $generated@@365 $generated@@368))) ($generated@@256 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@92 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@85 $generated@@365 ($generated@@239 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@87 $generated@@158 $generated@@4)) (= (type $generated@@370) $generated@@69)) (= (type $generated@@371) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@369 ($generated@@244 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@158) ($generated@@0 ($generated@@92 $generated@@369 $generated@@372))) ($generated@@256 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@92 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@85 $generated@@369 ($generated@@244 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@92 ($generated@@291 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@92 ($generated@@291 $generated@@374) $generated@@373)))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@87 $generated@@158 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@300 (type $generated@@378))))
(let (($generated@@380 ($generated@@299 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@87 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@298 $generated@@158 $generated@@158)) (= (type $generated@@382) $generated@@158)) (= ($generated@@0 ($generated@@92 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@92 ($generated@@296 $generated@@381) ($generated@@156 ($generated@@335 $generated@@80 $generated@@382)))) (= ($generated@@92 ($generated@@376 $generated@@381) ($generated@@156 ($generated@@335 $generated@@80 $generated@@382))) ($generated@@157 ($generated@@335 $generated@@80 $generated@@382))))))
 :pattern ( ($generated@@92 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@87 $generated@@158 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@318 (type $generated@@386))))
(let (($generated@@388 ($generated@@317 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@87 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@316 $generated@@158 $generated@@158)) (= (type $generated@@390) $generated@@158)) (= ($generated@@0 ($generated@@92 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@92 ($generated@@314 $generated@@389) ($generated@@156 ($generated@@335 $generated@@80 $generated@@390)))) (= ($generated@@92 ($generated@@384 $generated@@389) ($generated@@156 ($generated@@335 $generated@@80 $generated@@390))) ($generated@@157 ($generated@@335 $generated@@80 $generated@@390))))))
 :pattern ( ($generated@@92 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@299 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@298 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@92 ($generated@@344 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@92 ($generated@@296 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@92 ($generated@@376 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@92 ($generated@@296 $generated@@391) $generated@@395))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@92 ($generated@@344 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@317 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@316 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@92 ($generated@@355 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@92 ($generated@@314 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@92 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@396) $generated@@400))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@92 ($generated@@355 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@69)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@298 $generated@@158 $generated@@158)) (= (type $generated@@405) $generated@@69)) (= (type $generated@@406) $generated@@69)) (= (type $generated@@407) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@158) ($generated@@0 ($generated@@92 ($generated@@296 $generated@@404) $generated@@408))) (and ($generated@@256 ($generated@@92 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@256 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@92 ($generated@@296 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@85 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@69)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@316 $generated@@158 $generated@@158)) (= (type $generated@@413) $generated@@69)) (= (type $generated@@414) $generated@@69)) (= (type $generated@@415) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@158) ($generated@@0 ($generated@@92 ($generated@@314 $generated@@412) $generated@@416))) (and ($generated@@256 ($generated@@92 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@256 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@85 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Bool) ) (! (= ($generated@@82 ($generated@@266 $generated@@417 $generated@@418)) $generated@@418)
 :pattern ( ($generated@@266 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@87 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@318 (type $generated@@421))))
(let (($generated@@423 ($generated@@317 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@316 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@315 $generated@@423 $generated@@422)) (= ($generated@@314 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@314 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@318 (type $generated@@424))))
(let (($generated@@426 ($generated@@317 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@316 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@315 $generated@@426 $generated@@425)) (= ($generated@@355 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@355 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@318 (type $generated@@427))))
(let (($generated@@429 ($generated@@317 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@316 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@315 $generated@@429 $generated@@428)) (= ($generated@@383 $generated@@427) ($generated@@419 $generated@@158))))))
 :pattern ( ($generated@@383 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@300 (type $generated@@430))))
(let (($generated@@432 ($generated@@299 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@298 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@297 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@92 ($generated@@375 $generated@@430) ($generated@@285 ($generated@@227 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@375 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@318 (type $generated@@435))))
(let (($generated@@437 ($generated@@317 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@316 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@315 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@158) (= (type $generated@@439) $generated@@158)) ($generated@@0 ($generated@@92 ($generated@@383 $generated@@435) ($generated@@285 ($generated@@227 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@383 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@228 $generated@@440 $generated@@46)) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@440)) $generated@@440) ($generated@@146 ($generated@@335 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@228 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@158) ($generated@@228 $generated@@441 $generated@@47)) (and (= ($generated@@285 ($generated@@335 $generated@@3 $generated@@441)) $generated@@441) ($generated@@146 ($generated@@335 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@228 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@228 $generated@@442 $generated@@44)) (and (= ($generated@@285 ($generated@@335 $generated@@4 $generated@@442)) $generated@@442) ($generated@@146 ($generated@@335 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@228 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@228 $generated@@444 $generated@@45)) (and (= ($generated@@285 ($generated@@335 $generated@@443 $generated@@444)) $generated@@444) ($generated@@146 ($generated@@335 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@228 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@69) (= ($generated@@228 ($generated@@285 $generated@@445) $generated@@446) ($generated@@146 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@228 ($generated@@285 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@90 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@87 $generated@@448 $generated@@2)) (<= 0 ($generated@@290 $generated@@447))))
 :pattern ( ($generated@@290 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@280 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@279 $generated@@450)) (<= 0 ($generated@@278 $generated@@449))))
 :pattern ( ($generated@@278 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@69)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@69) (= (type $generated@@454) $generated@@69)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@69)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@69) (= (type $generated@@458) $generated@@69)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@69) (= (type $generated@@460) $generated@@69)) (= ($generated@@77 ($generated@@401 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@69)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@69)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@69) (= (type $generated@@468) $generated@@69)) (= ($generated@@465 ($generated@@409 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@409 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@77 ($generated@@409 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@158) (= (type $generated@@472) $generated@@158)) (= ($generated@@262 ($generated@@227 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@227 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@69)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@473 ($generated@@149 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@149 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@69)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@477 ($generated@@149 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@149 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@158) (= (type $generated@@482) $generated@@158)) (= ($generated@@156 ($generated@@227 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@227 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@158) (= (type $generated@@484) $generated@@158)) (= ($generated@@157 ($generated@@227 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@227 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 Int) ($generated@@486 Bool) ) (! (= ($generated@@262 ($generated@@266 $generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 Int) ($generated@@488 Bool) ) (! (= ($generated@@81 ($generated@@266 $generated@@487 $generated@@488)) $generated@@487)
 :pattern ( ($generated@@266 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@69)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@280 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@279 $generated@@158)) (= (type $generated@@496) $generated@@69)) (= (type $generated@@497) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@278 $generated@@495))) ($generated@@256 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@85 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@86 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@86 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@69) (= ($generated@@501 ($generated@@239 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@77 ($generated@@239 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@69) (= ($generated@@505 ($generated@@244 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@244 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@77 ($generated@@244 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@69) (= ($generated@@509 ($generated@@163 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@163 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@69) (= ($generated@@77 ($generated@@163 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@69)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@69) (= ($generated@@77 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@335 $generated@@518 ($generated@@285 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@285 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@298 $generated@@158 $generated@@158)) (= (type $generated@@520) $generated@@69)) (= (type $generated@@521) $generated@@69)) (= ($generated@@146 $generated@@519 ($generated@@401 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@158) ($generated@@0 ($generated@@92 ($generated@@296 $generated@@519) $generated@@522))) (and ($generated@@228 ($generated@@92 ($generated@@376 $generated@@519) $generated@@522) $generated@@521) ($generated@@228 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@519) $generated@@522))
 :pattern ( ($generated@@92 ($generated@@296 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@146 $generated@@519 ($generated@@401 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@316 $generated@@158 $generated@@158)) (= (type $generated@@524) $generated@@69)) (= (type $generated@@525) $generated@@69)) (= ($generated@@146 $generated@@523 ($generated@@409 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@158) ($generated@@0 ($generated@@92 ($generated@@314 $generated@@523) $generated@@526))) (and ($generated@@228 ($generated@@92 ($generated@@384 $generated@@523) $generated@@526) $generated@@525) ($generated@@228 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@523) $generated@@526))
 :pattern ( ($generated@@92 ($generated@@314 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@146 $generated@@523 ($generated@@409 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@158) (= (type $generated@@530) $generated@@158)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@227 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@227 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) (= (type $generated@@532) $generated@@158)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@227 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@227 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@158) (= (type $generated@@534) $generated@@69)) (= (type $generated@@535) $generated@@69)) ($generated@@228 $generated@@533 ($generated@@401 $generated@@534 $generated@@535))) (and (= ($generated@@285 ($generated@@335 ($generated@@298 $generated@@158 $generated@@158) $generated@@533)) $generated@@533) ($generated@@146 ($generated@@335 ($generated@@298 $generated@@158 $generated@@158) $generated@@533) ($generated@@401 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@228 $generated@@533 ($generated@@401 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@158) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@69)) ($generated@@228 $generated@@536 ($generated@@409 $generated@@537 $generated@@538))) (and (= ($generated@@285 ($generated@@335 ($generated@@316 $generated@@158 $generated@@158) $generated@@536)) $generated@@536) ($generated@@146 ($generated@@335 ($generated@@316 $generated@@158 $generated@@158) $generated@@536) ($generated@@409 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@228 $generated@@536 ($generated@@409 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@69) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@158)) ($generated@@228 $generated@@541 ($generated@@149 $generated@@539 $generated@@540))) (and (= ($generated@@285 ($generated@@335 $generated@@80 $generated@@541)) $generated@@541) ($generated@@146 ($generated@@335 $generated@@80 $generated@@541) ($generated@@149 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@228 $generated@@541 ($generated@@149 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@92 ($generated@@419 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@92 ($generated@@419 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@74)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@69) (= (type $generated@@547) $generated@@69)) (and (= ($generated@@77 ($generated@@149 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@149 $generated@@546 $generated@@547)) $generated@@66)))
 :pattern ( ($generated@@149 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@80) (= (type $generated@@549) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@255 $generated@@549) (and ($generated@@224 $generated@@548) ($generated@@85 $generated@@548 $generated@@225 $generated@@549)))) ($generated@@85 ($generated@@11 ($generated@@82 $generated@@548)) $generated@@44 $generated@@549))
 :pattern ( ($generated@@85 ($generated@@11 ($generated@@82 $generated@@548)) $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@80) (= ($generated@@527 ($generated@@285 $generated@@550)) ($generated@@528 $generated@@550)))
 :pattern ( ($generated@@527 ($generated@@285 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@158) ($generated@@228 $generated@@551 ($generated@@86 0))) (and (= ($generated@@285 ($generated@@335 $generated@@2 $generated@@551)) $generated@@551) ($generated@@146 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@551) ($generated@@86 0))))
 :pattern ( ($generated@@228 $generated@@551 ($generated@@86 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@158) (= (type $generated@@553) $generated@@69)) ($generated@@228 $generated@@552 ($generated@@239 $generated@@553))) (and (= ($generated@@285 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@552)) $generated@@552) ($generated@@146 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@552) ($generated@@239 $generated@@553))))
 :pattern ( ($generated@@228 $generated@@552 ($generated@@239 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@158) (= (type $generated@@555) $generated@@69)) ($generated@@228 $generated@@554 ($generated@@244 $generated@@555))) (and (= ($generated@@285 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@554)) $generated@@554) ($generated@@146 ($generated@@335 ($generated@@87 $generated@@158 $generated@@4) $generated@@554) ($generated@@244 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@554 ($generated@@244 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@158) (= (type $generated@@557) $generated@@69)) ($generated@@228 $generated@@556 ($generated@@163 $generated@@557))) (and (= ($generated@@285 ($generated@@335 ($generated@@87 $generated@@158 $generated@@2) $generated@@556)) $generated@@556) ($generated@@146 ($generated@@335 ($generated@@87 $generated@@158 $generated@@2) $generated@@556) ($generated@@163 $generated@@557))))
 :pattern ( ($generated@@228 $generated@@556 ($generated@@163 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@158) (= (type $generated@@559) $generated@@69)) ($generated@@228 $generated@@558 ($generated@@489 $generated@@559))) (and (= ($generated@@285 ($generated@@335 ($generated@@279 $generated@@158) $generated@@558)) $generated@@558) ($generated@@146 ($generated@@335 ($generated@@279 $generated@@158) $generated@@558) ($generated@@489 $generated@@559))))
 :pattern ( ($generated@@228 $generated@@558 ($generated@@489 $generated@@559)))
)))
(assert (= ($generated@@77 $generated@@143) $generated@@63))
(assert (= ($generated@@544 $generated@@143) $generated@@67))
(assert (= ($generated@@77 $generated@@225) $generated@@65))
(assert (= ($generated@@544 $generated@@225) $generated@@68))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@87 $generated@@158 $generated@@2)) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@560 ($generated@@163 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@158) (< 0 ($generated ($generated@@92 $generated@@560 $generated@@563)))) ($generated@@256 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@92 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@85 $generated@@560 ($generated@@163 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@80) (= (type $generated@@565) $generated@@69)) (= (type $generated@@566) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@255 $generated@@566) (and ($generated@@148 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@69) ($generated@@85 $generated@@564 ($generated@@149 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@85 $generated@@564 ($generated@@149 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@256 ($generated@@156 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@256 ($generated@@156 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@80) (= (type $generated@@569) $generated@@69)) (= (type $generated@@570) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@255 $generated@@570) (and ($generated@@148 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@69) ($generated@@85 $generated@@568 ($generated@@149 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@85 $generated@@568 ($generated@@149 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@256 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@256 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@80) (= (type $generated@@573) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@255 $generated@@573) (and ($generated@@224 $generated@@572) ($generated@@85 $generated@@572 $generated@@225 $generated@@573)))) ($generated@@85 ($generated@@8 ($generated@@81 $generated@@572)) $generated@@143 $generated@@573))
 :pattern ( ($generated@@85 ($generated@@8 ($generated@@81 $generated@@572)) $generated@@143 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) (= ($generated@@146 $generated@@574 $generated@@143)  (and (<= ($generated@@249 0) ($generated $generated@@574)) (< ($generated $generated@@574) 4294967296))))
 :pattern ( ($generated@@146 $generated@@574 $generated@@143))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@158) (= (type $generated@@576) $generated@@158)) (= ($generated@@227 ($generated@@251 $generated@@575) ($generated@@251 $generated@@576)) ($generated@@251 ($generated@@227 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@227 ($generated@@251 $generated@@575) ($generated@@251 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@4) (= ($generated@@266 ($generated@@249 $generated@@577) ($generated@@0 ($generated@@251 $generated@@578))) ($generated@@251 ($generated@@266 $generated@@577 ($generated@@0 $generated@@578)))))
 :pattern ( ($generated@@266 ($generated@@249 $generated@@577) ($generated@@0 ($generated@@251 $generated@@578))))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@249 $generated@@579))) ($generated@@251 ($generated@@285 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@249 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@285 ($generated@@251 $generated@@580)) ($generated@@251 ($generated@@285 $generated@@580)))
 :pattern ( ($generated@@285 ($generated@@251 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@280 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@279 $generated@@582)) (= ($generated@@278 $generated@@581) 0)) (= $generated@@581 ($generated@@277 $generated@@582))))
 :pattern ( ($generated@@278 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@87 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@290 ($generated@@93 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@290 $generated@@583) ($generated ($generated@@92 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@290 ($generated@@93 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@588) $generated@@2)) ($generated@@85 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@85 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@590) $generated@@3)) ($generated@@85 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@85 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@592) $generated@@4)) ($generated@@85 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@85 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@594) $generated@@443)) ($generated@@85 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@85 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@596) $generated@@158)) ($generated@@85 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@85 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@279 $generated@@158)) (= (type $generated@@598) $generated@@69)) (= ($generated@@146 $generated@@597 ($generated@@489 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@278 $generated@@597))) ($generated@@228 ($generated@@490 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@490 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@146 $generated@@597 ($generated@@489 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@279 $generated@@158)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@278 $generated@@601))) (< ($generated@@528 ($generated@@335 $generated@@80 ($generated@@490 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@528 ($generated@@335 $generated@@80 ($generated@@490 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@298 $generated@@158 $generated@@158)) (= (type $generated@@604) $generated@@69)) (= (type $generated@@605) $generated@@69)) ($generated@@146 $generated@@603 ($generated@@401 $generated@@604 $generated@@605))) (and (and ($generated@@146 ($generated@@296 $generated@@603) ($generated@@239 $generated@@604)) ($generated@@146 ($generated@@344 $generated@@603) ($generated@@239 $generated@@605))) ($generated@@146 ($generated@@375 $generated@@603) ($generated@@239 ($generated@@149 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@146 $generated@@603 ($generated@@401 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@316 $generated@@158 $generated@@158)) (= (type $generated@@607) $generated@@69)) (= (type $generated@@608) $generated@@69)) ($generated@@146 $generated@@606 ($generated@@409 $generated@@607 $generated@@608))) (and (and ($generated@@146 ($generated@@314 $generated@@606) ($generated@@244 $generated@@607)) ($generated@@146 ($generated@@355 $generated@@606) ($generated@@244 $generated@@608))) ($generated@@146 ($generated@@383 $generated@@606) ($generated@@244 ($generated@@149 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@146 $generated@@606 ($generated@@409 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@146 $generated@@609 $generated@@46))
 :pattern ( ($generated@@146 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@146 $generated@@610 $generated@@47))
 :pattern ( ($generated@@146 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@146 $generated@@611 $generated@@44))
 :pattern ( ($generated@@146 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@443) ($generated@@146 $generated@@612 $generated@@45))
 :pattern ( ($generated@@146 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@158) ($generated@@146 $generated@@613 $generated@@48))
 :pattern ( ($generated@@146 $generated@@613 $generated@@48))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 Bool) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) ($generated@@255 $generated@@616)) (= ($generated@@85 ($generated@@266 $generated@@614 $generated@@615) $generated@@225 $generated@@616)  (and ($generated@@85 ($generated@@8 $generated@@614) $generated@@143 $generated@@616) ($generated@@85 ($generated@@11 $generated@@615) $generated@@44 $generated@@616))))
 :pattern ( ($generated@@85 ($generated@@266 $generated@@614 $generated@@615) $generated@@225 $generated@@616))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(assert  (and (and (and (and (= (type $generated@@618) ($generated@@170 $generated@@88 $generated@@4)) (= (type $generated@@619) $generated@@88)) (= (type $generated@@620) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@622) $generated@@80)) (= (type $generated@@625) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@628  (=> (and (not (= $generated@@617 ($generated@@249 22))) (= (ControlFlow 0 3) (- 0 2))) ($generated@@0 ($generated@@251 ($generated@@11 false))))))
(let (($generated@@629 true))
(let (($generated@@630  (=> (and (= $generated@@618 ($generated@@169 $generated@@619 $generated@@620 $generated@@60 false)) (= $generated@@621 ($generated@@249 22))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= ($generated@@249 0) $generated@@621) (< $generated@@621 4294967296))) (=> (and (<= ($generated@@249 0) $generated@@621) (< $generated@@621 4294967296)) (=> (= $generated@@622 ($generated@@251 ($generated@@266 ($generated@@249 22) ($generated@@0 ($generated@@251 ($generated@@11 false)))))) (=> (and (and ($generated@@224 $generated@@622) ($generated@@224 $generated@@622)) (and (= $generated@@617 ($generated@@81 $generated@@622)) (= $generated@@623 ($generated@@249 22)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= ($generated@@249 0) $generated@@623) (< $generated@@623 4294967296))) (=> (and (<= ($generated@@249 0) $generated@@623) (< $generated@@623 4294967296)) (and (=> (= (ControlFlow 0 4) 1) $generated@@629) (=> (= (ControlFlow 0 4) 3) $generated@@628)))))))))))
(let (($generated@@631  (=> (and ($generated@@255 $generated@@620) ($generated@@624 $generated@@620)) (=> (and (and ($generated@@146 $generated@@625 $generated@@225) ($generated@@85 $generated@@625 $generated@@225 $generated@@620)) true) (=> (and (and (and (<= ($generated@@249 0) $generated@@626) (< $generated@@626 4294967296)) true) (and (= 2 $generated@@627) (= (ControlFlow 0 7) 4))) $generated@@630)))))
$generated@@631)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (Int) Int)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@286 (T@U T@U T@U) Bool)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (Bool) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@334 (T@U) Int)
(declare-fun $generated@@335 (T@T) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@T) T@U)
(declare-fun $generated@@366 (T@T T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@385 (T@T T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@486 (T@T) T@U)
(declare-fun $generated@@510 () T@T)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@553 (T@U Int) T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@608 (T@U) Int)
(declare-fun $generated@@687 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@76 $generated@@81))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@61) $generated@@78)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@78)) (= (type $generated@@65) $generated@@75)) (= (type $generated@@66) $generated@@78)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@78)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@79)) (= (type $generated@@72) $generated@@79)) (= (type $generated@@73) $generated@@79)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert (= ($generated@@1 $generated@@84) 11))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (and (= (type $generated@@86) $generated@@84) (= (type $generated@@87) $generated@@84)) (and ($generated@@83 $generated@@86) ($generated@@83 $generated@@87))) (= ($generated@@82 $generated@@86 $generated@@87) (= ($generated@@85 $generated@@86) ($generated@@85 $generated@@87))))
 :pattern ( ($generated@@82 $generated@@86 $generated@@87) ($generated@@83 $generated@@86))
 :pattern ( ($generated@@82 $generated@@86 $generated@@87) ($generated@@83 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@75)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 12)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@77 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@77 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@74)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@150) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@93) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@99 ($generated@@97 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (= (type $generated@@152) $generated@@74))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@2) (= (type $generated@@154) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@153 $generated@@152 $generated@@154))
 :pattern ( ($generated@@90 $generated@@153 $generated@@152 $generated@@154))
)))
(assert  (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@84) (= (type $generated@@161) $generated@@84)) (and ($generated@@156 $generated@@160) ($generated@@156 $generated@@161))) (= ($generated@@155 $generated@@160 $generated@@161) (= ($generated@@157 $generated@@160) ($generated@@157 $generated@@161))))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161) ($generated@@156 $generated@@160))
 :pattern ( ($generated@@155 $generated@@160 $generated@@161) ($generated@@156 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@158)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@84) (= (type $generated@@166) $generated@@84)) (and ($generated@@162 $generated@@165) ($generated@@162 $generated@@166))) (= ($generated@@82 $generated@@165 $generated@@166) (= ($generated@@163 $generated@@165) ($generated@@163 $generated@@166))))
 :pattern ( ($generated@@82 $generated@@165 $generated@@166) ($generated@@162 $generated@@165))
 :pattern ( ($generated@@82 $generated@@165 $generated@@166) ($generated@@162 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@91 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@91 0)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@74)
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@74) (= (type $generated@@174) $generated@@74)) (= (type $generated@@175) $generated@@84)) ($generated@@167 $generated@@175 ($generated@@170 $generated@@173 $generated@@174))) ($generated@@169 $generated@@175))
 :pattern ( ($generated@@169 $generated@@175) ($generated@@167 $generated@@175 ($generated@@170 $generated@@173 $generated@@174)))
)))
(assert  (and (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@158)
 :pattern ( ($generated@@177 $generated@@179))
)) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@158)
 :pattern ( ($generated@@178 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@84) (= (type $generated@@182) $generated@@84)) true) (= ($generated@@176 $generated@@181 $generated@@182)  (and (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)) (= ($generated@@178 $generated@@181) ($generated@@178 $generated@@182)))))
 :pattern ( ($generated@@176 $generated@@181 $generated@@182))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@78)
 :pattern ( ($generated@@183 $generated@@185))
)) (= (type $generated@@184) $generated@@84)))
(assert (= ($generated@@183 $generated@@184) $generated@@64))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@74)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@92 $generated@@158 $generated@@2)) (= (type $generated@@190) $generated@@74)) ($generated@@167 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@167 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 16)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@93 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@77 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@93) (= (type $generated@@241) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@242) ($generated@@76 $generated@@4))) (= (type $generated@@244) $generated@@93)) (= (type $generated@@245) ($generated@@76 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@247 $generated@@249)) $generated@@74)
 :pattern ( ($generated@@247 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (= (type $generated@@250) $generated@@74) (= (type $generated@@251) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@248 $generated@@251)) ($generated@@90 $generated@@184 ($generated@@247 $generated@@250) $generated@@251))
 :pattern ( ($generated@@90 $generated@@184 ($generated@@247 $generated@@250) $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@84)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@74) (= (type $generated@@257) $generated@@74)) (= (type $generated@@258) $generated@@158)) (= (type $generated@@259) $generated@@158)) (= ($generated@@167 ($generated@@252 $generated@@258 $generated@@259) ($generated@@170 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@167 ($generated@@252 $generated@@258 $generated@@259) ($generated@@170 $generated@@256 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@74) ($generated@@167 $generated@@184 ($generated@@247 $generated@@260)))
 :pattern ( ($generated@@167 $generated@@184 ($generated@@247 $generated@@260)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@84) (= (type $generated@@262) $generated@@84)) (= ($generated@@176 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@176 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@84) (= (type $generated@@264) $generated@@84)) (= ($generated@@155 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@155 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@84) (= (type $generated@@266) $generated@@84)) (= ($generated@@82 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@82 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@74)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@92 $generated@@158 $generated@@4)) (= (type $generated@@270) $generated@@74)) (= ($generated@@167 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@158) ($generated@@0 ($generated@@97 $generated@@269 $generated@@271))) ($generated@@253 $generated@@271 $generated@@270))
 :pattern ( ($generated@@97 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@167 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@92 $generated@@158 $generated@@4)) (= (type $generated@@275) $generated@@74)) (= ($generated@@167 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@158) ($generated@@0 ($generated@@97 $generated@@274 $generated@@276))) ($generated@@253 $generated@@276 $generated@@275))
 :pattern ( ($generated@@97 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@167 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@277 $generated@@278) $generated@@278)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@284) $generated@@84) (= (type $generated@@285) $generated@@84)) (and ($generated@@283 $generated@@284) ($generated@@283 $generated@@285))) (= ($generated@@155 $generated@@284 $generated@@285) true))
 :pattern ( ($generated@@155 $generated@@284 $generated@@285) ($generated@@283 $generated@@284))
 :pattern ( ($generated@@155 $generated@@284 $generated@@285) ($generated@@283 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) $generated@@74) (= (type $generated@@288) $generated@@74)) (= (type $generated@@289) $generated@@158)) (= (type $generated@@290) $generated@@158)) (= (type $generated@@291) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@248 $generated@@291)) (= ($generated@@90 ($generated@@252 $generated@@289 $generated@@290) ($generated@@170 $generated@@287 $generated@@288) $generated@@291)  (and ($generated@@286 $generated@@289 $generated@@287 $generated@@291) ($generated@@286 $generated@@290 $generated@@288 $generated@@291))))
 :pattern ( ($generated@@90 ($generated@@252 $generated@@289 $generated@@290) ($generated@@170 $generated@@287 $generated@@288) $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@84) (= ($generated@@169 $generated@@292) (= ($generated@@183 $generated@@292) $generated@@61)))
 :pattern ( ($generated@@169 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@84) (= ($generated@@283 $generated@@293) (= ($generated@@183 $generated@@293) $generated@@64)))
 :pattern ( ($generated@@283 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@84) (= ($generated@@156 $generated@@294) (= ($generated@@183 $generated@@294) $generated@@66)))
 :pattern ( ($generated@@156 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@84) (= ($generated@@83 $generated@@295) (= ($generated@@183 $generated@@295) $generated@@67)))
 :pattern ( ($generated@@83 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@84) (= ($generated@@162 $generated@@296) (= ($generated@@183 $generated@@296) $generated@@69)))
 :pattern ( ($generated@@162 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@84) ($generated@@169 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@158) (= (type $generated@@299) $generated@@158)) (= $generated@@297 ($generated@@252 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@169 $generated@@297))
)))
(assert  (and (and (forall (($generated@@304 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@304)) 17)) (forall (($generated@@305 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@302 $generated@@305))
))) (forall (($generated@@306 T@T) ) (! (= (type ($generated@@300 $generated@@306)) ($generated@@302 $generated@@306))
 :pattern ( ($generated@@300 $generated@@306))
))))
(assert (forall (($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@307)) 0)
 :pattern ( ($generated@@300 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@84) ($generated@@283 $generated@@308)) (= $generated@@308 $generated@@184))
 :pattern ( ($generated@@283 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@84)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@84) ($generated@@156 $generated@@311)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@158) (= $generated@@311 ($generated@@309 $generated@@312)))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@156 $generated@@311))
)))
(assert (forall (($generated@@314 Bool) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@84)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@84) ($generated@@83 $generated@@315)) (exists (($generated@@316 Bool) ) (= $generated@@315 ($generated@@313 $generated@@316))))
 :pattern ( ($generated@@83 $generated@@315))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@84)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@84) ($generated@@162 $generated@@319)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@158) (= $generated@@319 ($generated@@317 $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@162 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@158)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@74) (= (type $generated@@325) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@286 ($generated@@321 $generated@@323) $generated@@324 $generated@@325) ($generated@@90 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@286 ($generated@@321 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@326) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@327) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@328) $generated@@158)) (= (type $generated@@329) $generated@@74)) ($generated@@148 $generated@@326 $generated@@327)) ($generated@@286 $generated@@328 $generated@@329 $generated@@326)) ($generated@@286 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@148 $generated@@326 $generated@@327) ($generated@@286 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@330) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@331) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@333) $generated@@74)) ($generated@@148 $generated@@330 $generated@@331)) ($generated@@90 $generated@@332 $generated@@333 $generated@@330)) ($generated@@90 $generated@@332 $generated@@333 $generated@@331))
 :pattern ( ($generated@@148 $generated@@330 $generated@@331) ($generated@@90 $generated@@332 $generated@@333 $generated@@330))
)))
(assert (forall (($generated@@336 T@T) ) (! (= (type ($generated@@335 $generated@@336)) ($generated@@92 $generated@@336 $generated@@2))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@95 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@92 $generated@@338 $generated@@2)) (and (= (= ($generated@@334 $generated@@337) 0) (= $generated@@337 ($generated@@335 $generated@@338))) (=> (not (= ($generated@@334 $generated@@337) 0)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) (< 0 ($generated ($generated@@97 $generated@@337 $generated@@339))))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@79)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@74) (and (= ($generated@@88 ($generated@@247 $generated@@342)) $generated@@65) (= ($generated@@340 ($generated@@247 $generated@@342)) $generated@@72)))
 :pattern ( ($generated@@247 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@74)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@74) (and (= ($generated@@88 ($generated@@343 $generated@@345)) $generated@@68) (= ($generated@@340 ($generated@@343 $generated@@345)) $generated@@73)))
 :pattern ( ($generated@@343 $generated@@345))
)))
(assert  (and (and (and (and (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (= ($generated@@1 ($generated@@348 $generated@@351 $generated@@352)) 18)) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@348 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@348 $generated@@355 $generated@@356)) $generated@@356)
 :pattern ( ($generated@@348 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@349 (type $generated@@357))))
(= (type ($generated@@346 $generated@@357)) ($generated@@92 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@357))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= (type ($generated@@347 $generated@@359 $generated@@360)) ($generated@@348 $generated@@359 $generated@@360))
 :pattern ( ($generated@@347 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@T) ) (! (let (($generated@@363 (type $generated@@361)))
 (not ($generated@@0 ($generated@@97 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361))))
 :pattern ( (let (($generated@@363 (type $generated@@361)))
($generated@@97 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361)))
)))
(assert  (and (and (and (and (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (= ($generated@@1 ($generated@@366 $generated@@369 $generated@@370)) 19)) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@367 ($generated@@366 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@366 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@368 ($generated@@366 $generated@@373 $generated@@374)) $generated@@374)
 :pattern ( ($generated@@366 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@367 (type $generated@@375))))
(= (type ($generated@@364 $generated@@375)) ($generated@@92 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@375))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= (type ($generated@@365 $generated@@377 $generated@@378)) ($generated@@366 $generated@@377 $generated@@378))
 :pattern ( ($generated@@365 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@T) ) (! (let (($generated@@381 (type $generated@@379)))
 (not ($generated@@0 ($generated@@97 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379))))
 :pattern ( (let (($generated@@381 (type $generated@@379)))
($generated@@97 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@95 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@92 $generated@@383 $generated@@2)) (= ($generated@@187 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@97 $generated@@382 $generated@@384))) (<= ($generated ($generated@@97 $generated@@382 $generated@@384)) ($generated@@334 $generated@@382))))
 :pattern ( ($generated@@97 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@187 $generated@@382))
)))
(assert (forall (($generated@@386 T@T) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@158) ($generated@@253 $generated@@388 $generated@@152)) (and (= ($generated@@321 ($generated@@385 $generated@@2 $generated@@388)) $generated@@388) ($generated@@167 ($generated@@385 $generated@@2 $generated@@388) $generated@@152)))
 :pattern ( ($generated@@253 $generated@@388 $generated@@152))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@350 (type $generated@@389))))
(let (($generated@@391 ($generated@@349 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@348 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@347 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@97 ($generated@@346 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@346 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@350 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@92 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@350 (type $generated@@396))))
(let (($generated@@398 ($generated@@349 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@348 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@347 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@97 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@368 (type $generated@@400))))
(let (($generated@@402 ($generated@@367 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@366 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@365 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@97 ($generated@@364 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@364 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@368 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@92 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@368 (type $generated@@407))))
(let (($generated@@409 ($generated@@367 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@366 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@365 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@97 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@411) $generated@@84) (= (type $generated@@412) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@248 $generated@@412) (and ($generated@@83 $generated@@411) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@74) ($generated@@90 $generated@@411 ($generated@@343 $generated@@413) $generated@@412))
 :pattern ( ($generated@@90 $generated@@411 ($generated@@343 $generated@@413) $generated@@412))
))))) ($generated@@90 ($generated@@11 ($generated@@85 $generated@@411)) $generated@@44 $generated@@412))
 :pattern ( ($generated@@90 ($generated@@11 ($generated@@85 $generated@@411)) $generated@@44 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@92 $generated@@158 $generated@@2)) (= (type $generated@@415) $generated@@74)) (= ($generated@@167 $generated@@414 ($generated@@186 $generated@@415)) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@158) (< 0 ($generated ($generated@@97 $generated@@414 $generated@@416)))) ($generated@@253 $generated@@416 $generated@@415))
 :pattern ( ($generated@@97 $generated@@414 $generated@@416))
))))
 :pattern ( ($generated@@167 $generated@@414 ($generated@@186 $generated@@415)))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) $generated@@74) (= (type $generated@@418) $generated@@158)) (= (type $generated@@419) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@248 $generated@@419)) (= ($generated@@90 ($generated@@309 $generated@@418) ($generated@@247 $generated@@417) $generated@@419) ($generated@@286 $generated@@418 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@90 ($generated@@309 $generated@@418) ($generated@@247 $generated@@417) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 Bool) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) $generated@@74) (= (type $generated@@422) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@248 $generated@@422)) (= ($generated@@90 ($generated@@313 $generated@@421) ($generated@@343 $generated@@420) $generated@@422) ($generated@@90 ($generated@@11 $generated@@421) $generated@@44 $generated@@422)))
 :pattern ( ($generated@@90 ($generated@@313 $generated@@421) ($generated@@343 $generated@@420) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) $generated@@74) (= (type $generated@@424) $generated@@158)) (= (type $generated@@425) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@248 $generated@@425)) (= ($generated@@90 ($generated@@317 $generated@@424) ($generated@@343 $generated@@423) $generated@@425) ($generated@@286 $generated@@424 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@90 ($generated@@317 $generated@@424) ($generated@@343 $generated@@423) $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@92 $generated@@158 $generated@@4)) (= (type $generated@@427) $generated@@74)) (= (type $generated@@428) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@426 ($generated@@267 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@158) ($generated@@0 ($generated@@97 $generated@@426 $generated@@429))) ($generated@@286 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@97 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@90 $generated@@426 ($generated@@267 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@92 $generated@@158 $generated@@4)) (= (type $generated@@431) $generated@@74)) (= (type $generated@@432) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@430 ($generated@@272 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@158) ($generated@@0 ($generated@@97 $generated@@430 $generated@@433))) ($generated@@286 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@97 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@90 $generated@@430 ($generated@@272 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= ($generated ($generated@@97 ($generated@@335 $generated@@435) $generated@@434)) 0))
 :pattern ( (let (($generated@@435 (type $generated@@434)))
($generated@@97 ($generated@@335 $generated@@435) $generated@@434)))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@92 $generated@@158 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@350 (type $generated@@439))))
(let (($generated@@441 ($generated@@349 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@92 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@348 $generated@@158 $generated@@158)) (= (type $generated@@443) $generated@@158)) (= ($generated@@0 ($generated@@97 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@97 ($generated@@346 $generated@@442) ($generated@@177 ($generated@@385 $generated@@84 $generated@@443)))) (= ($generated@@97 ($generated@@437 $generated@@442) ($generated@@177 ($generated@@385 $generated@@84 $generated@@443))) ($generated@@178 ($generated@@385 $generated@@84 $generated@@443))))))
 :pattern ( ($generated@@97 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert  (and (forall (($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@446)) ($generated@@92 $generated@@158 $generated@@4))
 :pattern ( ($generated@@444 $generated@@446))
)) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@368 (type $generated@@447))))
(let (($generated@@449 ($generated@@367 (type $generated@@447))))
(= (type ($generated@@445 $generated@@447)) ($generated@@92 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@445 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@366 $generated@@158 $generated@@158)) (= (type $generated@@451) $generated@@158)) (= ($generated@@0 ($generated@@97 ($generated@@444 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@97 ($generated@@364 $generated@@450) ($generated@@177 ($generated@@385 $generated@@84 $generated@@451)))) (= ($generated@@97 ($generated@@445 $generated@@450) ($generated@@177 ($generated@@385 $generated@@84 $generated@@451))) ($generated@@178 ($generated@@385 $generated@@84 $generated@@451))))))
 :pattern ( ($generated@@97 ($generated@@444 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@349 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@348 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@97 ($generated@@393 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@97 ($generated@@346 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@97 ($generated@@437 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@97 ($generated@@346 $generated@@452) $generated@@456))
 :pattern ( ($generated@@97 ($generated@@437 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@97 ($generated@@393 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@367 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@366 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@97 ($generated@@404 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@97 ($generated@@364 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@97 ($generated@@445 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@97 ($generated@@364 $generated@@457) $generated@@461))
 :pattern ( ($generated@@97 ($generated@@445 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@97 ($generated@@404 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@74)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@348 $generated@@158 $generated@@158)) (= (type $generated@@466) $generated@@74)) (= (type $generated@@467) $generated@@74)) (= (type $generated@@468) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@158) ($generated@@0 ($generated@@97 ($generated@@346 $generated@@465) $generated@@469))) (and ($generated@@286 ($generated@@97 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@286 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@97 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@97 ($generated@@346 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@90 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@74)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@366 $generated@@158 $generated@@158)) (= (type $generated@@474) $generated@@74)) (= (type $generated@@475) $generated@@74)) (= (type $generated@@476) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@158) ($generated@@0 ($generated@@97 ($generated@@364 $generated@@473) $generated@@477))) (and ($generated@@286 ($generated@@97 ($generated@@445 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@286 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@97 ($generated@@445 $generated@@473) $generated@@477))
 :pattern ( ($generated@@97 ($generated@@364 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@90 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@478) $generated@@74) (= (type $generated@@479) $generated@@84)) ($generated@@167 $generated@@479 ($generated@@247 $generated@@478))) (or ($generated@@283 $generated@@479) ($generated@@156 $generated@@479)))
 :pattern ( ($generated@@156 $generated@@479) ($generated@@167 $generated@@479 ($generated@@247 $generated@@478)))
 :pattern ( ($generated@@283 $generated@@479) ($generated@@167 $generated@@479 ($generated@@247 $generated@@478)))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@480) $generated@@74) (= (type $generated@@481) $generated@@84)) ($generated@@167 $generated@@481 ($generated@@343 $generated@@480))) (or ($generated@@83 $generated@@481) ($generated@@162 $generated@@481)))
 :pattern ( ($generated@@162 $generated@@481) ($generated@@167 $generated@@481 ($generated@@343 $generated@@480)))
 :pattern ( ($generated@@83 $generated@@481) ($generated@@167 $generated@@481 ($generated@@343 $generated@@480)))
)))
(assert (forall (($generated@@482 Bool) ) (! (= ($generated@@85 ($generated@@313 $generated@@482)) $generated@@482)
 :pattern ( ($generated@@313 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@483) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@484) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@485) ($generated@@92 $generated@@93 $generated@@94))) (not (= $generated@@483 $generated@@485))) (and ($generated@@148 $generated@@483 $generated@@484) ($generated@@148 $generated@@484 $generated@@485))) ($generated@@148 $generated@@483 $generated@@485))
 :pattern ( ($generated@@148 $generated@@483 $generated@@484) ($generated@@148 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@T) ) (! (= (type ($generated@@486 $generated@@487)) ($generated@@92 $generated@@487 $generated@@4))
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@368 (type $generated@@488))))
(let (($generated@@490 ($generated@@367 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@366 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@365 $generated@@490 $generated@@489)) (= ($generated@@364 $generated@@488) ($generated@@486 $generated@@490))))))
 :pattern ( ($generated@@364 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@368 (type $generated@@491))))
(let (($generated@@493 ($generated@@367 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@366 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@365 $generated@@493 $generated@@492)) (= ($generated@@404 $generated@@491) ($generated@@486 $generated@@492))))))
 :pattern ( ($generated@@404 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@368 (type $generated@@494))))
(let (($generated@@496 ($generated@@367 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@366 $generated@@496 $generated@@495)) (= (= $generated@@494 ($generated@@365 $generated@@496 $generated@@495)) (= ($generated@@444 $generated@@494) ($generated@@486 $generated@@158))))))
 :pattern ( ($generated@@444 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@350 (type $generated@@497))))
(let (($generated@@499 ($generated@@349 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@348 $generated@@499 $generated@@498)) (or (= $generated@@497 ($generated@@347 $generated@@499 $generated@@498)) (exists (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (and (and (= (type $generated@@500) $generated@@158) (= (type $generated@@501) $generated@@158)) ($generated@@0 ($generated@@97 ($generated@@436 $generated@@497) ($generated@@321 ($generated@@252 $generated@@500 $generated@@501)))))
 :no-pattern (type $generated@@500)
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@436 $generated@@497))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@368 (type $generated@@502))))
(let (($generated@@504 ($generated@@367 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@366 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@365 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (and (and (= (type $generated@@505) $generated@@158) (= (type $generated@@506) $generated@@158)) ($generated@@0 ($generated@@97 ($generated@@444 $generated@@502) ($generated@@321 ($generated@@252 $generated@@505 $generated@@506)))))
 :no-pattern (type $generated@@505)
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
))))))
 :pattern ( ($generated@@444 $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@158) ($generated@@253 $generated@@507 $generated@@46)) (and (= ($generated@@321 ($generated@@385 $generated@@2 $generated@@507)) $generated@@507) ($generated@@167 ($generated@@385 $generated@@2 $generated@@507) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@507 $generated@@46))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@158) ($generated@@253 $generated@@508 $generated@@47)) (and (= ($generated@@321 ($generated@@385 $generated@@3 $generated@@508)) $generated@@508) ($generated@@167 ($generated@@385 $generated@@3 $generated@@508) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@508 $generated@@47))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@158) ($generated@@253 $generated@@509 $generated@@44)) (and (= ($generated@@321 ($generated@@385 $generated@@4 $generated@@509)) $generated@@509) ($generated@@167 ($generated@@385 $generated@@4 $generated@@509) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@509 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@510) 20))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@158) ($generated@@253 $generated@@511 $generated@@45)) (and (= ($generated@@321 ($generated@@385 $generated@@510 $generated@@511)) $generated@@511) ($generated@@167 ($generated@@385 $generated@@510 $generated@@511) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@511 $generated@@45))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@74) (= ($generated@@253 ($generated@@321 $generated@@512) $generated@@513) ($generated@@167 $generated@@512 $generated@@513)))
 :pattern ( ($generated@@253 ($generated@@321 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@95 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@92 $generated@@515 $generated@@2)) (<= 0 ($generated@@334 $generated@@514))))
 :pattern ( ($generated@@334 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@303 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@302 $generated@@517)) (<= 0 ($generated@@301 $generated@@516))))
 :pattern ( ($generated@@301 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@74)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@74) (= (type $generated@@521) $generated@@74)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@74)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@74) (= (type $generated@@525) $generated@@74)) (= ($generated@@522 ($generated@@462 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@462 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@74) (= (type $generated@@527) $generated@@74)) (= ($generated@@88 ($generated@@462 $generated@@526 $generated@@527)) $generated@@58))
 :pattern ( ($generated@@462 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@74)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@74) (= (type $generated@@531) $generated@@74)) (= ($generated@@528 ($generated@@470 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@470 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@74)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@74) (= (type $generated@@535) $generated@@74)) (= ($generated@@532 ($generated@@470 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@470 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@74) (= (type $generated@@537) $generated@@74)) (= ($generated@@88 ($generated@@470 $generated@@536 $generated@@537)) $generated@@59))
 :pattern ( ($generated@@470 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@158)) (= ($generated@@183 ($generated@@252 $generated@@538 $generated@@539)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@74)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@74) (= (type $generated@@543) $generated@@74)) (= ($generated@@540 ($generated@@170 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@170 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@74)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@74) (= (type $generated@@547) $generated@@74)) (= ($generated@@544 ($generated@@170 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@170 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) (= (type $generated@@549) $generated@@158)) (= ($generated@@177 ($generated@@252 $generated@@548 $generated@@549)) $generated@@548))
 :pattern ( ($generated@@252 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@158) (= (type $generated@@551) $generated@@158)) (= ($generated@@178 ($generated@@252 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@252 $generated@@550 $generated@@551))
)))
(assert  (and (forall (($generated@@554 T@U) ) (! (= (type ($generated@@552 $generated@@554)) $generated@@74)
 :pattern ( ($generated@@552 $generated@@554))
)) (forall (($generated@@555 T@U) ($generated@@556 Int) ) (! (let (($generated@@557 ($generated@@303 (type $generated@@555))))
(= (type ($generated@@553 $generated@@555 $generated@@556)) $generated@@557))
 :pattern ( ($generated@@553 $generated@@555 $generated@@556))
))))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@302 $generated@@158)) (= (type $generated@@559) $generated@@74)) (= (type $generated@@560) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@558 ($generated@@552 $generated@@559) $generated@@560) (forall (($generated@@561 Int) ) (!  (=> (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@301 $generated@@558))) ($generated@@286 ($generated@@553 $generated@@558 $generated@@561) $generated@@559 $generated@@560))
 :pattern ( ($generated@@553 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@90 $generated@@558 ($generated@@552 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@562 ($generated@@91 $generated@@563)) $generated@@563)
 :pattern ( ($generated@@91 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@74)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@74) (= ($generated@@564 ($generated@@267 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@267 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@74) (= ($generated@@88 ($generated@@267 $generated@@567)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@74)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@74) (= ($generated@@568 ($generated@@272 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@272 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@74) (= ($generated@@88 ($generated@@272 $generated@@571)) $generated@@55))
 :pattern ( ($generated@@272 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@74)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@74) (= ($generated@@572 ($generated@@186 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@186 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@74) (= ($generated@@88 ($generated@@186 $generated@@575)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@74)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@74) (= ($generated@@576 ($generated@@552 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@552 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@74) (= ($generated@@88 ($generated@@552 $generated@@579)) $generated@@57))
 :pattern ( ($generated@@552 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@74)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@74) (= ($generated@@580 ($generated@@247 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@247 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@158) (= ($generated@@183 ($generated@@309 $generated@@583)) $generated@@66))
 :pattern ( ($generated@@309 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@158) (= ($generated@@157 ($generated@@309 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@309 $generated@@584))
)))
(assert (forall (($generated@@585 Bool) ) (! (= ($generated@@183 ($generated@@313 $generated@@585)) $generated@@67)
 :pattern ( ($generated@@313 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@74)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@74) (= ($generated@@586 ($generated@@343 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@343 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@158) (= ($generated@@183 ($generated@@317 $generated@@589)) $generated@@69))
 :pattern ( ($generated@@317 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@158) (= ($generated@@163 ($generated@@317 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@317 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
(= ($generated@@385 $generated@@592 ($generated@@321 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@321 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@348 $generated@@158 $generated@@158)) (= (type $generated@@594) $generated@@74)) (= (type $generated@@595) $generated@@74)) (= ($generated@@167 $generated@@593 ($generated@@462 $generated@@594 $generated@@595)) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@158) ($generated@@0 ($generated@@97 ($generated@@346 $generated@@593) $generated@@596))) (and ($generated@@253 ($generated@@97 ($generated@@437 $generated@@593) $generated@@596) $generated@@595) ($generated@@253 $generated@@596 $generated@@594)))
 :pattern ( ($generated@@97 ($generated@@437 $generated@@593) $generated@@596))
 :pattern ( ($generated@@97 ($generated@@346 $generated@@593) $generated@@596))
))))
 :pattern ( ($generated@@167 $generated@@593 ($generated@@462 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@366 $generated@@158 $generated@@158)) (= (type $generated@@598) $generated@@74)) (= (type $generated@@599) $generated@@74)) (= ($generated@@167 $generated@@597 ($generated@@470 $generated@@598 $generated@@599)) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@158) ($generated@@0 ($generated@@97 ($generated@@364 $generated@@597) $generated@@600))) (and ($generated@@253 ($generated@@97 ($generated@@445 $generated@@597) $generated@@600) $generated@@599) ($generated@@253 $generated@@600 $generated@@598)))
 :pattern ( ($generated@@97 ($generated@@445 $generated@@597) $generated@@600))
 :pattern ( ($generated@@97 ($generated@@364 $generated@@597) $generated@@600))
))))
 :pattern ( ($generated@@167 $generated@@597 ($generated@@470 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@74) (= (type $generated@@602) $generated@@158)) (= ($generated@@167 ($generated@@309 $generated@@602) ($generated@@247 $generated@@601)) ($generated@@253 $generated@@602 $generated@@601)))
 :pattern ( ($generated@@167 ($generated@@309 $generated@@602) ($generated@@247 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Bool) ) (!  (=> (= (type $generated@@603) $generated@@74) (= ($generated@@167 ($generated@@313 $generated@@604) ($generated@@343 $generated@@603)) ($generated@@167 ($generated@@11 $generated@@604) $generated@@44)))
 :pattern ( ($generated@@167 ($generated@@313 $generated@@604) ($generated@@343 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@74) (= (type $generated@@606) $generated@@158)) (= ($generated@@167 ($generated@@317 $generated@@606) ($generated@@343 $generated@@605)) ($generated@@253 $generated@@606 $generated@@605)))
 :pattern ( ($generated@@167 ($generated@@317 $generated@@606) ($generated@@343 $generated@@605)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@158) (= (type $generated@@610) $generated@@158)) (< ($generated@@607 $generated@@609) ($generated@@608 ($generated@@252 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@252 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@158) (= (type $generated@@612) $generated@@158)) (< ($generated@@607 $generated@@612) ($generated@@608 ($generated@@252 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@252 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@158) (= (type $generated@@614) $generated@@74)) (= (type $generated@@615) $generated@@74)) ($generated@@253 $generated@@613 ($generated@@462 $generated@@614 $generated@@615))) (and (= ($generated@@321 ($generated@@385 ($generated@@348 $generated@@158 $generated@@158) $generated@@613)) $generated@@613) ($generated@@167 ($generated@@385 ($generated@@348 $generated@@158 $generated@@158) $generated@@613) ($generated@@462 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@253 $generated@@613 ($generated@@462 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@158) (= (type $generated@@617) $generated@@74)) (= (type $generated@@618) $generated@@74)) ($generated@@253 $generated@@616 ($generated@@470 $generated@@617 $generated@@618))) (and (= ($generated@@321 ($generated@@385 ($generated@@366 $generated@@158 $generated@@158) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@385 ($generated@@366 $generated@@158 $generated@@158) $generated@@616) ($generated@@470 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@253 $generated@@616 ($generated@@470 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@74) (= (type $generated@@620) $generated@@74)) (= (type $generated@@621) $generated@@158)) ($generated@@253 $generated@@621 ($generated@@170 $generated@@619 $generated@@620))) (and (= ($generated@@321 ($generated@@385 $generated@@84 $generated@@621)) $generated@@621) ($generated@@167 ($generated@@385 $generated@@84 $generated@@621) ($generated@@170 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@253 $generated@@621 ($generated@@170 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@158) (< ($generated@@607 $generated@@622) ($generated@@608 ($generated@@309 $generated@@622))))
 :pattern ( ($generated@@309 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@158) (< ($generated@@607 $generated@@623) ($generated@@608 ($generated@@317 $generated@@623))))
 :pattern ( ($generated@@317 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@84) (= (type $generated@@625) $generated@@74)) (= (type $generated@@626) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@248 $generated@@626) (and ($generated@@156 $generated@@624) ($generated@@90 $generated@@624 ($generated@@247 $generated@@625) $generated@@626)))) ($generated@@286 ($generated@@157 $generated@@624) $generated@@625 $generated@@626))
 :pattern ( ($generated@@286 ($generated@@157 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@84) (= (type $generated@@628) $generated@@74)) (= (type $generated@@629) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@248 $generated@@629) (and ($generated@@162 $generated@@627) ($generated@@90 $generated@@627 ($generated@@343 $generated@@628) $generated@@629)))) ($generated@@286 ($generated@@163 $generated@@627) $generated@@628 $generated@@629))
 :pattern ( ($generated@@286 ($generated@@163 $generated@@627) $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@630)))
 (not ($generated@@0 ($generated@@97 ($generated@@486 $generated@@631) $generated@@630))))
 :pattern ( (let (($generated@@631 (type $generated@@630)))
($generated@@97 ($generated@@486 $generated@@631) $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@74) (= (type $generated@@633) $generated@@74)) (and (= ($generated@@88 ($generated@@170 $generated@@632 $generated@@633)) $generated@@62) (= ($generated@@340 ($generated@@170 $generated@@632 $generated@@633)) $generated@@70)))
 :pattern ( ($generated@@170 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@84) (= ($generated@@607 ($generated@@321 $generated@@634)) ($generated@@608 $generated@@634)))
 :pattern ( ($generated@@607 ($generated@@321 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@158) ($generated@@253 $generated@@635 ($generated@@91 0))) (and (= ($generated@@321 ($generated@@385 $generated@@2 $generated@@635)) $generated@@635) ($generated@@167 ($generated@@385 ($generated@@92 $generated@@158 $generated@@4) $generated@@635) ($generated@@91 0))))
 :pattern ( ($generated@@253 $generated@@635 ($generated@@91 0)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@158) (= (type $generated@@637) $generated@@74)) ($generated@@253 $generated@@636 ($generated@@267 $generated@@637))) (and (= ($generated@@321 ($generated@@385 ($generated@@92 $generated@@158 $generated@@4) $generated@@636)) $generated@@636) ($generated@@167 ($generated@@385 ($generated@@92 $generated@@158 $generated@@4) $generated@@636) ($generated@@267 $generated@@637))))
 :pattern ( ($generated@@253 $generated@@636 ($generated@@267 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@158) (= (type $generated@@639) $generated@@74)) ($generated@@253 $generated@@638 ($generated@@272 $generated@@639))) (and (= ($generated@@321 ($generated@@385 ($generated@@92 $generated@@158 $generated@@4) $generated@@638)) $generated@@638) ($generated@@167 ($generated@@385 ($generated@@92 $generated@@158 $generated@@4) $generated@@638) ($generated@@272 $generated@@639))))
 :pattern ( ($generated@@253 $generated@@638 ($generated@@272 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@158) (= (type $generated@@641) $generated@@74)) ($generated@@253 $generated@@640 ($generated@@186 $generated@@641))) (and (= ($generated@@321 ($generated@@385 ($generated@@92 $generated@@158 $generated@@2) $generated@@640)) $generated@@640) ($generated@@167 ($generated@@385 ($generated@@92 $generated@@158 $generated@@2) $generated@@640) ($generated@@186 $generated@@641))))
 :pattern ( ($generated@@253 $generated@@640 ($generated@@186 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) $generated@@158) (= (type $generated@@643) $generated@@74)) ($generated@@253 $generated@@642 ($generated@@552 $generated@@643))) (and (= ($generated@@321 ($generated@@385 ($generated@@302 $generated@@158) $generated@@642)) $generated@@642) ($generated@@167 ($generated@@385 ($generated@@302 $generated@@158) $generated@@642) ($generated@@552 $generated@@643))))
 :pattern ( ($generated@@253 $generated@@642 ($generated@@552 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@74) (= (type $generated@@645) $generated@@158)) ($generated@@253 $generated@@645 ($generated@@247 $generated@@644))) (and (= ($generated@@321 ($generated@@385 $generated@@84 $generated@@645)) $generated@@645) ($generated@@167 ($generated@@385 $generated@@84 $generated@@645) ($generated@@247 $generated@@644))))
 :pattern ( ($generated@@253 $generated@@645 ($generated@@247 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@74) (= (type $generated@@647) $generated@@158)) ($generated@@253 $generated@@647 ($generated@@343 $generated@@646))) (and (= ($generated@@321 ($generated@@385 $generated@@84 $generated@@647)) $generated@@647) ($generated@@167 ($generated@@385 $generated@@84 $generated@@647) ($generated@@343 $generated@@646))))
 :pattern ( ($generated@@253 $generated@@647 ($generated@@343 $generated@@646)))
)))
(assert (= ($generated@@88 $generated@@152) $generated@@63))
(assert (= ($generated@@340 $generated@@152) $generated@@71))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@92 $generated@@158 $generated@@2)) (= (type $generated@@649) $generated@@74)) (= (type $generated@@650) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@648 ($generated@@186 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@158) (< 0 ($generated ($generated@@97 $generated@@648 $generated@@651)))) ($generated@@286 $generated@@651 $generated@@649 $generated@@650))
 :pattern ( ($generated@@97 $generated@@648 $generated@@651))
))))
 :pattern ( ($generated@@90 $generated@@648 ($generated@@186 $generated@@649) $generated@@650))
)))
(assert (= $generated@@184 ($generated@@279 $generated@@184)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@84) (= (type $generated@@653) $generated@@74)) (= (type $generated@@654) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@248 $generated@@654) (and ($generated@@169 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@74) ($generated@@90 $generated@@652 ($generated@@170 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@90 $generated@@652 ($generated@@170 $generated@@653 $generated@@655) $generated@@654))
))))) ($generated@@286 ($generated@@177 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@286 ($generated@@177 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@84) (= (type $generated@@657) $generated@@74)) (= (type $generated@@658) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@248 $generated@@658) (and ($generated@@169 $generated@@656) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@74) ($generated@@90 $generated@@656 ($generated@@170 $generated@@659 $generated@@657) $generated@@658))
 :pattern ( ($generated@@90 $generated@@656 ($generated@@170 $generated@@659 $generated@@657) $generated@@658))
))))) ($generated@@286 ($generated@@178 $generated@@656) $generated@@657 $generated@@658))
 :pattern ( ($generated@@286 ($generated@@178 $generated@@656) $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@2) (= ($generated@@167 $generated@@660 $generated@@152)  (and (<= ($generated@@277 0) ($generated $generated@@660)) (< ($generated $generated@@660) 4294967296))))
 :pattern ( ($generated@@167 $generated@@660 $generated@@152))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@158) (= (type $generated@@662) $generated@@158)) (= ($generated@@252 ($generated@@279 $generated@@661) ($generated@@279 $generated@@662)) ($generated@@279 ($generated@@252 $generated@@661 $generated@@662))))
 :pattern ( ($generated@@252 ($generated@@279 $generated@@661) ($generated@@279 $generated@@662)))
)))
(assert (forall (($generated@@663 Int) ) (! (= ($generated@@321 ($generated@@8 ($generated@@277 $generated@@663))) ($generated@@279 ($generated@@321 ($generated@@8 $generated@@663))))
 :pattern ( ($generated@@321 ($generated@@8 ($generated@@277 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@158) (= ($generated@@309 ($generated@@279 $generated@@664)) ($generated@@279 ($generated@@309 $generated@@664))))
 :pattern ( ($generated@@309 ($generated@@279 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@4) (= ($generated@@313 ($generated@@0 ($generated@@279 $generated@@665))) ($generated@@279 ($generated@@313 ($generated@@0 $generated@@665)))))
 :pattern ( ($generated@@313 ($generated@@0 ($generated@@279 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@158) (= ($generated@@317 ($generated@@279 $generated@@666)) ($generated@@279 ($generated@@317 $generated@@666))))
 :pattern ( ($generated@@317 ($generated@@279 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (! (= ($generated@@321 ($generated@@279 $generated@@667)) ($generated@@279 ($generated@@321 $generated@@667)))
 :pattern ( ($generated@@321 ($generated@@279 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 ($generated@@303 (type $generated@@668))))
 (=> (and (= (type $generated@@668) ($generated@@302 $generated@@669)) (= ($generated@@301 $generated@@668) 0)) (= $generated@@668 ($generated@@300 $generated@@669))))
 :pattern ( ($generated@@301 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (! (let (($generated@@673 (type $generated@@671)))
 (=> (and (and (= (type $generated@@670) ($generated@@92 $generated@@673 $generated@@2)) (= (type $generated@@672) $generated@@2)) (<= 0 ($generated $generated@@672))) (= ($generated@@334 ($generated@@98 $generated@@670 $generated@@671 $generated@@672)) (+ (- ($generated@@334 $generated@@670) ($generated ($generated@@97 $generated@@670 $generated@@671))) ($generated $generated@@672)))))
 :pattern ( ($generated@@334 ($generated@@98 $generated@@670 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@675) $generated@@2)) ($generated@@90 $generated@@675 $generated@@46 $generated@@674))
 :pattern ( ($generated@@90 $generated@@675 $generated@@46 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@677) $generated@@3)) ($generated@@90 $generated@@677 $generated@@47 $generated@@676))
 :pattern ( ($generated@@90 $generated@@677 $generated@@47 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@679) $generated@@4)) ($generated@@90 $generated@@679 $generated@@44 $generated@@678))
 :pattern ( ($generated@@90 $generated@@679 $generated@@44 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@681) $generated@@510)) ($generated@@90 $generated@@681 $generated@@45 $generated@@680))
 :pattern ( ($generated@@90 $generated@@681 $generated@@45 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@683) $generated@@158)) ($generated@@90 $generated@@683 $generated@@48 $generated@@682))
 :pattern ( ($generated@@90 $generated@@683 $generated@@48 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@302 $generated@@158)) (= (type $generated@@685) $generated@@74)) (= ($generated@@167 $generated@@684 ($generated@@552 $generated@@685)) (forall (($generated@@686 Int) ) (!  (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@301 $generated@@684))) ($generated@@253 ($generated@@553 $generated@@684 $generated@@686) $generated@@685))
 :pattern ( ($generated@@553 $generated@@684 $generated@@686))
))))
 :pattern ( ($generated@@167 $generated@@684 ($generated@@552 $generated@@685)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 Int) ) (!  (=> (= (type $generated@@688) ($generated@@302 $generated@@158)) (=> (and (<= 0 $generated@@689) (< $generated@@689 ($generated@@301 $generated@@688))) (< ($generated@@608 ($generated@@385 $generated@@84 ($generated@@553 $generated@@688 $generated@@689))) ($generated@@687 $generated@@688))))
 :pattern ( ($generated@@608 ($generated@@385 $generated@@84 ($generated@@553 $generated@@688 $generated@@689))))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@348 $generated@@158 $generated@@158)) (= (type $generated@@691) $generated@@74)) (= (type $generated@@692) $generated@@74)) ($generated@@167 $generated@@690 ($generated@@462 $generated@@691 $generated@@692))) (and (and ($generated@@167 ($generated@@346 $generated@@690) ($generated@@267 $generated@@691)) ($generated@@167 ($generated@@393 $generated@@690) ($generated@@267 $generated@@692))) ($generated@@167 ($generated@@436 $generated@@690) ($generated@@267 ($generated@@170 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@167 $generated@@690 ($generated@@462 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) ($generated@@366 $generated@@158 $generated@@158)) (= (type $generated@@694) $generated@@74)) (= (type $generated@@695) $generated@@74)) ($generated@@167 $generated@@693 ($generated@@470 $generated@@694 $generated@@695))) (and (and ($generated@@167 ($generated@@364 $generated@@693) ($generated@@272 $generated@@694)) ($generated@@167 ($generated@@404 $generated@@693) ($generated@@272 $generated@@695))) ($generated@@167 ($generated@@444 $generated@@693) ($generated@@272 ($generated@@170 $generated@@694 $generated@@695)))))
 :pattern ( ($generated@@167 $generated@@693 ($generated@@470 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@2) ($generated@@167 $generated@@696 $generated@@46))
 :pattern ( ($generated@@167 $generated@@696 $generated@@46))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@3) ($generated@@167 $generated@@697 $generated@@47))
 :pattern ( ($generated@@167 $generated@@697 $generated@@47))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@4) ($generated@@167 $generated@@698 $generated@@44))
 :pattern ( ($generated@@167 $generated@@698 $generated@@44))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@510) ($generated@@167 $generated@@699 $generated@@45))
 :pattern ( ($generated@@167 $generated@@699 $generated@@45))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@158) ($generated@@167 $generated@@700 $generated@@48))
 :pattern ( ($generated@@167 $generated@@700 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 (T@U) Bool)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@701) $generated@@84) (= (type $generated@@702) ($generated@@193 $generated@@93 $generated@@4))) (= (type $generated@@703) $generated@@93)) (= (type $generated@@704) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@707) $generated@@84)) (= (type $generated@@708) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@710) $generated@@84)) (= (type $generated@@711) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@712) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@714 true))
(let (($generated@@715  (=> (and ($generated@@156 $generated@@701) (= (ControlFlow 0 2) (- 0 1))) ($generated@@156 $generated@@701))))
(let (($generated@@716  (=> (and (= $generated@@702 ($generated@@192 $generated@@703 $generated@@704 $generated@@60 false)) (= $generated@@705 ($generated@@277 32))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= ($generated@@277 0) $generated@@705) (< $generated@@705 4294967296))) (=> (and (<= ($generated@@277 0) $generated@@705) (< $generated@@705 4294967296)) (=> (and (= $generated@@701 ($generated@@279 ($generated@@309 ($generated@@321 ($generated@@8 ($generated@@277 32)))))) (= $generated@@706 ($generated@@277 42))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= ($generated@@277 0) $generated@@706) (< $generated@@706 4294967296))) (=> (and (<= ($generated@@277 0) $generated@@706) (< $generated@@706 4294967296)) (=> (= $generated@@707 ($generated@@279 ($generated@@317 ($generated@@321 ($generated@@8 ($generated@@277 42)))))) (=> (and (and (and (and ($generated@@248 $generated@@708) ($generated@@709 $generated@@708)) (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@93) (=> (and (not (= $generated@@717 $generated@@703)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@704 $generated@@717) $generated@@60))) (= ($generated@@97 $generated@@708 $generated@@717) ($generated@@97 $generated@@704 $generated@@717))))
 :pattern ( ($generated@@97 $generated@@708 $generated@@717))
))) (and ($generated@@148 $generated@@704 $generated@@708) (= $generated@@710 ($generated@@279 ($generated@@313 ($generated@@0 ($generated@@279 ($generated@@11 true)))))))) (and (and ($generated@@248 $generated@@711) ($generated@@709 $generated@@711)) (and (forall (($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@93) (=> (and (not (= $generated@@718 $generated@@703)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@708 $generated@@718) $generated@@60))) (= ($generated@@97 $generated@@711 $generated@@718) ($generated@@97 $generated@@708 $generated@@718))))
 :pattern ( ($generated@@97 $generated@@711 $generated@@718))
)) ($generated@@148 $generated@@708 $generated@@711)))) (and (=> (= (ControlFlow 0 4) 2) $generated@@715) (=> (= (ControlFlow 0 4) 3) $generated@@714))))))))))))
(let (($generated@@719  (=> (and ($generated@@248 $generated@@704) ($generated@@709 $generated@@704)) (=> (and (and (and ($generated@@167 $generated@@712 ($generated@@247 $generated@@152)) ($generated@@90 $generated@@712 ($generated@@247 $generated@@152) $generated@@704)) true) (and (= 2 $generated@@713) (= (ControlFlow 0 7) 4))) $generated@@716))))
$generated@@719)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Bool Int) T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@144 (Int) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) Int)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (Int) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@471 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@518 (T@U Int) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@635 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@95 $generated@@96)) 11)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@83 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@89 ($generated@@83 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@83 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@89 (type $generated@@101))))
(= (type ($generated@@90 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@91 $generated@@104 $generated@@105 $generated@@106)) ($generated@@83 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@91 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@89 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@90 ($generated@@91 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@90 ($generated@@91 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@90 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@90 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@73 (type $generated@@122))))
(= (type ($generated@@92 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@92 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@93 $generated@@124 $generated@@125 $generated@@126)) $generated@@85)
 :pattern ( ($generated@@93 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@73 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@92 ($generated@@93 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@92 ($generated@@93 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@92 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@92 $generated@@136 $generated@@138)))
 :weight 0
)))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@139 Bool) ($generated@@140 Int) ) (! (= (type ($generated@@81 $generated@@139 $generated@@140)) $generated@@94)
 :pattern ( ($generated@@81 $generated@@139 $generated@@140))
))) (= (type $generated@@82) $generated@@70)) (= (type $generated@@87) $generated@@70)))
(assert (forall (($generated@@141 Bool) ($generated@@142 Int) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@86 $generated@@143)) (= ($generated@@80 ($generated@@81 $generated@@141 $generated@@142) $generated@@82 $generated@@143)  (and ($generated@@80 ($generated@@11 $generated@@141) $generated@@44 $generated@@143) ($generated@@80 ($generated@@8 $generated@@142) $generated@@87 $generated@@143))))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@141 $generated@@142) $generated@@82 $generated@@143))
)))
(assert (forall (($generated@@145 Int) ) (! (= (type ($generated@@144 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@80 $generated@@146 ($generated@@144 0) $generated@@147))
 :pattern ( ($generated@@80 $generated@@146 ($generated@@144 0) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@150) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@84) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@80 $generated@@152 $generated@@87 $generated@@153))
 :pattern ( ($generated@@80 $generated@@152 $generated@@87 $generated@@153))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@94) (= (type $generated@@158) $generated@@94)) (and ($generated@@155 $generated@@157) ($generated@@155 $generated@@158))) (= ($generated@@154 $generated@@157 $generated@@158) (= ($generated@@156 $generated@@157) ($generated@@156 $generated@@158))))
 :pattern ( ($generated@@154 $generated@@157 $generated@@158) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@154 $generated@@157 $generated@@158) ($generated@@155 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@144 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@144 0)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@163 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@70) (= (type $generated@@166) $generated@@70)) (= (type $generated@@167) $generated@@94)) ($generated@@159 $generated@@167 ($generated@@162 $generated@@165 $generated@@166))) ($generated@@161 $generated@@167))
 :pattern ( ($generated@@161 $generated@@167) ($generated@@159 $generated@@167 ($generated@@162 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@94) (= (type $generated@@175) $generated@@94)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@70)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@83 $generated@@171 $generated@@2)) (= (type $generated@@180) $generated@@70)) ($generated@@159 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@159 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@84 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@84) (= (type $generated@@231) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@84)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@94)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@70) (= (type $generated@@242) $generated@@70)) (= (type $generated@@243) $generated@@171)) (= (type $generated@@244) $generated@@171)) (= ($generated@@159 ($generated@@237 $generated@@243 $generated@@244) ($generated@@162 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@159 ($generated@@237 $generated@@243 $generated@@244) ($generated@@162 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@94) (= (type $generated@@246) $generated@@94)) (= ($generated@@168 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@168 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@94) (= (type $generated@@248) $generated@@94)) (= ($generated@@154 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@154 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@83 $generated@@171 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@159 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@171) ($generated@@0 ($generated@@90 $generated@@251 $generated@@253))) ($generated@@238 $generated@@253 $generated@@252))
 :pattern ( ($generated@@90 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@159 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@83 $generated@@171 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@159 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@171) ($generated@@0 ($generated@@90 $generated@@256 $generated@@258))) ($generated@@238 $generated@@258 $generated@@257))
 :pattern ( ($generated@@90 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@159 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@94) (= (type $generated@@268) $generated@@94)) (and ($generated@@265 $generated@@267) ($generated@@265 $generated@@268))) (= ($generated@@154 $generated@@267 $generated@@268)  (and (= ($generated@@266 $generated@@267) ($generated@@266 $generated@@268)) (= ($generated@@156 $generated@@267) ($generated@@156 $generated@@268)))))
 :pattern ( ($generated@@154 $generated@@267 $generated@@268) ($generated@@265 $generated@@267))
 :pattern ( ($generated@@154 $generated@@267 $generated@@268) ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@171)) (= (type $generated@@273) $generated@@171)) (= (type $generated@@274) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@86 $generated@@274)) (= ($generated@@80 ($generated@@237 $generated@@272 $generated@@273) ($generated@@162 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@80 ($generated@@237 $generated@@272 $generated@@273) ($generated@@162 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@94) (= ($generated@@161 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@161 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@94) (= ($generated@@265 $generated@@278) (= ($generated@@275 $generated@@278) $generated@@64)))
 :pattern ( ($generated@@265 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@94) (= ($generated@@155 $generated@@279) (= ($generated@@275 $generated@@279) $generated@@66)))
 :pattern ( ($generated@@155 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@94) ($generated@@161 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@171) (= (type $generated@@282) $generated@@171)) (= $generated@@280 ($generated@@237 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@161 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@94) ($generated@@265 $generated@@283)) (exists (($generated@@284 Bool) ($generated@@285 Int) ) (= $generated@@283 ($generated@@81 $generated@@284 $generated@@285))))
 :pattern ( ($generated@@265 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@295 Int) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@94)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@94) ($generated@@155 $generated@@296)) (exists (($generated@@297 Int) ) (= $generated@@296 ($generated@@294 $generated@@297))))
 :pattern ( ($generated@@155 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@171)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@70) (= (type $generated@@302) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@269 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@80 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@269 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@304) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@305) $generated@@171)) (= (type $generated@@306) $generated@@70)) ($generated@@148 $generated@@303 $generated@@304)) ($generated@@269 $generated@@305 $generated@@306 $generated@@303)) ($generated@@269 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@148 $generated@@303 $generated@@304) ($generated@@269 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@307) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@308) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@310) $generated@@70)) ($generated@@148 $generated@@307 $generated@@308)) ($generated@@80 $generated@@309 $generated@@310 $generated@@307)) ($generated@@80 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@148 $generated@@307 $generated@@308) ($generated@@80 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@83 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@88 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@83 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@90 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@83 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@90 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@90 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@83 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@90 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@90 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@88 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@83 $generated@@354 $generated@@2)) (= ($generated@@177 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@90 $generated@@353 $generated@@355))) (<= ($generated ($generated@@90 $generated@@353 $generated@@355)) ($generated@@311 $generated@@353))))
 :pattern ( ($generated@@90 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@177 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@171) ($generated@@238 $generated@@359 $generated@@87)) (and (= ($generated@@298 ($generated@@356 $generated@@2 $generated@@359)) $generated@@359) ($generated@@159 ($generated@@356 $generated@@2 $generated@@359) $generated@@87)))
 :pattern ( ($generated@@238 $generated@@359 $generated@@87))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@238 $generated@@360 $generated@@82)) (and (= ($generated@@298 ($generated@@356 $generated@@94 $generated@@360)) $generated@@360) ($generated@@159 ($generated@@356 $generated@@94 $generated@@360) $generated@@82)))
 :pattern ( ($generated@@238 $generated@@360 $generated@@82))
)))
(assert (forall (($generated@@361 Int) ) (! (= ($generated@@159 ($generated@@294 $generated@@361) $generated@@82) ($generated@@159 ($generated@@8 $generated@@361) $generated@@87))
 :pattern ( ($generated@@159 ($generated@@294 $generated@@361) $generated@@82))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@321 (type $generated@@362))))
(let (($generated@@364 ($generated@@320 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@319 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@318 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@90 ($generated@@317 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@317 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@321 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@83 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(let (($generated@@371 ($generated@@320 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@319 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@318 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@90 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@339 (type $generated@@373))))
(let (($generated@@375 ($generated@@338 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@337 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@336 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@90 ($generated@@335 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@335 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@339 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@83 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(let (($generated@@382 ($generated@@338 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@337 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@336 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@90 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@83 $generated@@171 $generated@@2)) (= (type $generated@@385) $generated@@70)) (= ($generated@@159 $generated@@384 ($generated@@176 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@171) (< 0 ($generated ($generated@@90 $generated@@384 $generated@@386)))) ($generated@@238 $generated@@386 $generated@@385))
 :pattern ( ($generated@@90 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@159 $generated@@384 ($generated@@176 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@83 $generated@@171 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@80 $generated@@387 ($generated@@249 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@171) ($generated@@0 ($generated@@90 $generated@@387 $generated@@390))) ($generated@@269 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@90 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@249 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@83 $generated@@171 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@80 $generated@@391 ($generated@@254 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@171) ($generated@@0 ($generated@@90 $generated@@391 $generated@@394))) ($generated@@269 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@90 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@254 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@90 ($generated@@312 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@90 ($generated@@312 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@83 $generated@@171 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@321 (type $generated@@400))))
(let (($generated@@402 ($generated@@320 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@83 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@319 $generated@@171 $generated@@171)) (= (type $generated@@404) $generated@@171)) (= ($generated@@0 ($generated@@90 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@90 ($generated@@317 $generated@@403) ($generated@@169 ($generated@@356 $generated@@94 $generated@@404)))) (= ($generated@@90 ($generated@@398 $generated@@403) ($generated@@169 ($generated@@356 $generated@@94 $generated@@404))) ($generated@@170 ($generated@@356 $generated@@94 $generated@@404))))))
 :pattern ( ($generated@@90 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@83 $generated@@171 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@339 (type $generated@@408))))
(let (($generated@@410 ($generated@@338 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@83 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@337 $generated@@171 $generated@@171)) (= (type $generated@@412) $generated@@171)) (= ($generated@@0 ($generated@@90 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@90 ($generated@@335 $generated@@411) ($generated@@169 ($generated@@356 $generated@@94 $generated@@412)))) (= ($generated@@90 ($generated@@406 $generated@@411) ($generated@@169 ($generated@@356 $generated@@94 $generated@@412))) ($generated@@170 ($generated@@356 $generated@@94 $generated@@412))))))
 :pattern ( ($generated@@90 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@320 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@319 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@90 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@90 ($generated@@317 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@90 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@90 ($generated@@317 $generated@@413) $generated@@417))
 :pattern ( ($generated@@90 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@90 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@338 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@337 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@90 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@90 ($generated@@335 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@90 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@90 ($generated@@335 $generated@@418) $generated@@422))
 :pattern ( ($generated@@90 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@90 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@319 $generated@@171 $generated@@171)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@171) ($generated@@0 ($generated@@90 ($generated@@317 $generated@@426) $generated@@430))) (and ($generated@@269 ($generated@@90 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@269 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@90 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@90 ($generated@@317 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@337 $generated@@171 $generated@@171)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@171) ($generated@@0 ($generated@@90 ($generated@@335 $generated@@434) $generated@@438))) (and ($generated@@269 ($generated@@90 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@269 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@90 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@90 ($generated@@335 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 Bool) ($generated@@440 Int) ) (! (= ($generated@@266 ($generated@@81 $generated@@439 $generated@@440)) $generated@@439)
 :pattern ( ($generated@@81 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 Int) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@86 $generated@@442)) (= ($generated@@80 ($generated@@294 $generated@@441) $generated@@82 $generated@@442) ($generated@@80 ($generated@@8 $generated@@441) $generated@@87 $generated@@442)))
 :pattern ( ($generated@@80 ($generated@@294 $generated@@441) $generated@@82 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@94) ($generated@@159 $generated@@443 $generated@@82)) (or ($generated@@265 $generated@@443) ($generated@@155 $generated@@443)))
 :pattern ( ($generated@@155 $generated@@443) ($generated@@159 $generated@@443 $generated@@82))
 :pattern ( ($generated@@265 $generated@@443) ($generated@@159 $generated@@443 $generated@@82))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@445) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@446) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@444 $generated@@446))) (and ($generated@@148 $generated@@444 $generated@@445) ($generated@@148 $generated@@445 $generated@@446))) ($generated@@148 $generated@@444 $generated@@446))
 :pattern ( ($generated@@148 $generated@@444 $generated@@445) ($generated@@148 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@83 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@339 (type $generated@@449))))
(let (($generated@@451 ($generated@@338 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@337 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@336 $generated@@451 $generated@@450)) (= ($generated@@335 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@335 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@339 (type $generated@@452))))
(let (($generated@@454 ($generated@@338 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@337 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@336 $generated@@454 $generated@@453)) (= ($generated@@377 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@377 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@339 (type $generated@@455))))
(let (($generated@@457 ($generated@@338 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@337 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@336 $generated@@457 $generated@@456)) (= ($generated@@405 $generated@@455) ($generated@@447 $generated@@171))))))
 :pattern ( ($generated@@405 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@321 (type $generated@@458))))
(let (($generated@@460 ($generated@@320 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@319 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@318 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@171) (= (type $generated@@462) $generated@@171)) ($generated@@0 ($generated@@90 ($generated@@397 $generated@@458) ($generated@@298 ($generated@@237 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@397 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@339 (type $generated@@463))))
(let (($generated@@465 ($generated@@338 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@337 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@336 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@171) (= (type $generated@@467) $generated@@171)) ($generated@@0 ($generated@@90 ($generated@@405 $generated@@463) ($generated@@298 ($generated@@237 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@405 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@238 $generated@@468 $generated@@46)) (and (= ($generated@@298 ($generated@@356 $generated@@2 $generated@@468)) $generated@@468) ($generated@@159 ($generated@@356 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@238 $generated@@469 $generated@@47)) (and (= ($generated@@298 ($generated@@356 $generated@@3 $generated@@469)) $generated@@469) ($generated@@159 ($generated@@356 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@171) ($generated@@238 $generated@@470 $generated@@44)) (and (= ($generated@@298 ($generated@@356 $generated@@4 $generated@@470)) $generated@@470) ($generated@@159 ($generated@@356 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@470 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@471) 20))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@171) ($generated@@238 $generated@@472 $generated@@45)) (and (= ($generated@@298 ($generated@@356 $generated@@471 $generated@@472)) $generated@@472) ($generated@@159 ($generated@@356 $generated@@471 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@238 ($generated@@298 $generated@@473) $generated@@474) ($generated@@159 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@238 ($generated@@298 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@88 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@83 $generated@@476 $generated@@2)) (<= 0 ($generated@@311 $generated@@475))))
 :pattern ( ($generated@@311 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@289 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@288 $generated@@478)) (<= 0 ($generated@@287 $generated@@477))))
 :pattern ( ($generated@@287 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@431 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@431 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@493 ($generated@@431 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@431 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@78 ($generated@@431 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@171) (= (type $generated@@500) $generated@@171)) (= ($generated@@275 ($generated@@237 $generated@@499 $generated@@500)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@501 ($generated@@162 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@162 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@505 ($generated@@162 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@162 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@171) (= (type $generated@@510) $generated@@171)) (= ($generated@@169 ($generated@@237 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@237 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@171) (= (type $generated@@512) $generated@@171)) (= ($generated@@170 ($generated@@237 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@237 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 Bool) ($generated@@514 Int) ) (! (= ($generated@@275 ($generated@@81 $generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@81 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 Bool) ($generated@@516 Int) ) (! (= ($generated@@156 ($generated@@81 $generated@@515 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@81 $generated@@515 $generated@@516))
)))
(assert  (and (forall (($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@519)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@519))
)) (forall (($generated@@520 T@U) ($generated@@521 Int) ) (! (let (($generated@@522 ($generated@@289 (type $generated@@520))))
(= (type ($generated@@518 $generated@@520 $generated@@521)) $generated@@522))
 :pattern ( ($generated@@518 $generated@@520 $generated@@521))
))))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@288 $generated@@171)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@80 $generated@@523 ($generated@@517 $generated@@524) $generated@@525) (forall (($generated@@526 Int) ) (!  (=> (and (<= 0 $generated@@526) (< $generated@@526 ($generated@@287 $generated@@523))) ($generated@@269 ($generated@@518 $generated@@523 $generated@@526) $generated@@524 $generated@@525))
 :pattern ( ($generated@@518 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@80 $generated@@523 ($generated@@517 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@527 ($generated@@144 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@144 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@249 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@249 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@532)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@254 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@254 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@536)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@176 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@176 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@78 ($generated@@176 $generated@@540)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@70)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@541 ($generated@@517 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@517 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@78 ($generated@@517 $generated@@544)) $generated@@57))
 :pattern ( ($generated@@517 $generated@@544))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@275 ($generated@@294 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@294 $generated@@545))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@156 ($generated@@294 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@294 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@356 $generated@@548 ($generated@@298 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@298 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@319 $generated@@171 $generated@@171)) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@70)) (= ($generated@@159 $generated@@549 ($generated@@423 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) ($generated@@0 ($generated@@90 ($generated@@317 $generated@@549) $generated@@552))) (and ($generated@@238 ($generated@@90 ($generated@@398 $generated@@549) $generated@@552) $generated@@551) ($generated@@238 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@90 ($generated@@398 $generated@@549) $generated@@552))
 :pattern ( ($generated@@90 ($generated@@317 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@159 $generated@@549 ($generated@@423 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@337 $generated@@171 $generated@@171)) (= (type $generated@@554) $generated@@70)) (= (type $generated@@555) $generated@@70)) (= ($generated@@159 $generated@@553 ($generated@@431 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@171) ($generated@@0 ($generated@@90 ($generated@@335 $generated@@553) $generated@@556))) (and ($generated@@238 ($generated@@90 ($generated@@406 $generated@@553) $generated@@556) $generated@@555) ($generated@@238 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@90 ($generated@@406 $generated@@553) $generated@@556))
 :pattern ( ($generated@@90 ($generated@@335 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@159 $generated@@553 ($generated@@431 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@171)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@237 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@237 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@171) (= (type $generated@@562) $generated@@171)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@237 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@237 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@171) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@238 $generated@@563 ($generated@@423 $generated@@564 $generated@@565))) (and (= ($generated@@298 ($generated@@356 ($generated@@319 $generated@@171 $generated@@171) $generated@@563)) $generated@@563) ($generated@@159 ($generated@@356 ($generated@@319 $generated@@171 $generated@@171) $generated@@563) ($generated@@423 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@238 $generated@@563 ($generated@@423 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@171) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@70)) ($generated@@238 $generated@@566 ($generated@@431 $generated@@567 $generated@@568))) (and (= ($generated@@298 ($generated@@356 ($generated@@337 $generated@@171 $generated@@171) $generated@@566)) $generated@@566) ($generated@@159 ($generated@@356 ($generated@@337 $generated@@171 $generated@@171) $generated@@566) ($generated@@431 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@238 $generated@@566 ($generated@@431 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) $generated@@171)) ($generated@@238 $generated@@571 ($generated@@162 $generated@@569 $generated@@570))) (and (= ($generated@@298 ($generated@@356 $generated@@94 $generated@@571)) $generated@@571) ($generated@@159 ($generated@@356 $generated@@94 $generated@@571) ($generated@@162 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@238 $generated@@571 ($generated@@162 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@90 ($generated@@447 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@90 ($generated@@447 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@75)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@70) (= (type $generated@@577) $generated@@70)) (and (= ($generated@@78 ($generated@@162 $generated@@576 $generated@@577)) $generated@@62) (= ($generated@@574 ($generated@@162 $generated@@576 $generated@@577)) $generated@@67)))
 :pattern ( ($generated@@162 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@94) (= (type $generated@@579) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@579) (and ($generated@@265 $generated@@578) ($generated@@80 $generated@@578 $generated@@82 $generated@@579)))) ($generated@@80 ($generated@@11 ($generated@@266 $generated@@578)) $generated@@44 $generated@@579))
 :pattern ( ($generated@@80 ($generated@@11 ($generated@@266 $generated@@578)) $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@94) (= ($generated@@557 ($generated@@298 $generated@@580)) ($generated@@558 $generated@@580)))
 :pattern ( ($generated@@557 ($generated@@298 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@171) ($generated@@238 $generated@@581 ($generated@@144 0))) (and (= ($generated@@298 ($generated@@356 $generated@@2 $generated@@581)) $generated@@581) ($generated@@159 ($generated@@356 ($generated@@83 $generated@@171 $generated@@4) $generated@@581) ($generated@@144 0))))
 :pattern ( ($generated@@238 $generated@@581 ($generated@@144 0)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@171) (= (type $generated@@583) $generated@@70)) ($generated@@238 $generated@@582 ($generated@@249 $generated@@583))) (and (= ($generated@@298 ($generated@@356 ($generated@@83 $generated@@171 $generated@@4) $generated@@582)) $generated@@582) ($generated@@159 ($generated@@356 ($generated@@83 $generated@@171 $generated@@4) $generated@@582) ($generated@@249 $generated@@583))))
 :pattern ( ($generated@@238 $generated@@582 ($generated@@249 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@171) (= (type $generated@@585) $generated@@70)) ($generated@@238 $generated@@584 ($generated@@254 $generated@@585))) (and (= ($generated@@298 ($generated@@356 ($generated@@83 $generated@@171 $generated@@4) $generated@@584)) $generated@@584) ($generated@@159 ($generated@@356 ($generated@@83 $generated@@171 $generated@@4) $generated@@584) ($generated@@254 $generated@@585))))
 :pattern ( ($generated@@238 $generated@@584 ($generated@@254 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@171) (= (type $generated@@587) $generated@@70)) ($generated@@238 $generated@@586 ($generated@@176 $generated@@587))) (and (= ($generated@@298 ($generated@@356 ($generated@@83 $generated@@171 $generated@@2) $generated@@586)) $generated@@586) ($generated@@159 ($generated@@356 ($generated@@83 $generated@@171 $generated@@2) $generated@@586) ($generated@@176 $generated@@587))))
 :pattern ( ($generated@@238 $generated@@586 ($generated@@176 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@171) (= (type $generated@@589) $generated@@70)) ($generated@@238 $generated@@588 ($generated@@517 $generated@@589))) (and (= ($generated@@298 ($generated@@356 ($generated@@288 $generated@@171) $generated@@588)) $generated@@588) ($generated@@159 ($generated@@356 ($generated@@288 $generated@@171) $generated@@588) ($generated@@517 $generated@@589))))
 :pattern ( ($generated@@238 $generated@@588 ($generated@@517 $generated@@589)))
)))
(assert (= ($generated@@78 $generated@@87) $generated@@63))
(assert (= ($generated@@574 $generated@@87) $generated@@68))
(assert (= ($generated@@78 $generated@@82) $generated@@65))
(assert (= ($generated@@574 $generated@@82) $generated@@69))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@83 $generated@@171 $generated@@2)) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@80 $generated@@590 ($generated@@176 $generated@@591) $generated@@592) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@171) (< 0 ($generated ($generated@@90 $generated@@590 $generated@@593)))) ($generated@@269 $generated@@593 $generated@@591 $generated@@592))
 :pattern ( ($generated@@90 $generated@@590 $generated@@593))
))))
 :pattern ( ($generated@@80 $generated@@590 ($generated@@176 $generated@@591) $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@94) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@596) (and ($generated@@161 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@80 $generated@@594 ($generated@@162 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@80 $generated@@594 ($generated@@162 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@269 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@269 ($generated@@169 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@94) (= (type $generated@@599) $generated@@70)) (= (type $generated@@600) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@600) (and ($generated@@161 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@70) ($generated@@80 $generated@@598 ($generated@@162 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@80 $generated@@598 ($generated@@162 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@269 ($generated@@170 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@269 ($generated@@170 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@94) (= (type $generated@@603) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@603) (and ($generated@@265 $generated@@602) ($generated@@80 $generated@@602 $generated@@82 $generated@@603)))) ($generated@@80 ($generated@@8 ($generated@@156 $generated@@602)) $generated@@87 $generated@@603))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@156 $generated@@602)) $generated@@87 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@94) (= (type $generated@@605) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@605) (and ($generated@@155 $generated@@604) ($generated@@80 $generated@@604 $generated@@82 $generated@@605)))) ($generated@@80 ($generated@@8 ($generated@@156 $generated@@604)) $generated@@87 $generated@@605))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@156 $generated@@604)) $generated@@87 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) (= ($generated@@159 $generated@@606 $generated@@87)  (and (<= ($generated@@259 0) ($generated $generated@@606)) (< ($generated $generated@@606) 4294967296))))
 :pattern ( ($generated@@159 $generated@@606 $generated@@87))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@171) (= (type $generated@@608) $generated@@171)) (= ($generated@@237 ($generated@@261 $generated@@607) ($generated@@261 $generated@@608)) ($generated@@261 ($generated@@237 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@237 ($generated@@261 $generated@@607) ($generated@@261 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) $generated@@4) (= ($generated@@81 ($generated@@0 ($generated@@261 $generated@@609)) ($generated@@259 $generated@@610)) ($generated@@261 ($generated@@81 ($generated@@0 $generated@@609) $generated@@610))))
 :pattern ( ($generated@@81 ($generated@@0 ($generated@@261 $generated@@609)) ($generated@@259 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@298 ($generated@@8 ($generated@@259 $generated@@611))) ($generated@@261 ($generated@@298 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@298 ($generated@@8 ($generated@@259 $generated@@611))))
)))
(assert (forall (($generated@@612 Int) ) (! (= ($generated@@294 ($generated@@259 $generated@@612)) ($generated@@261 ($generated@@294 $generated@@612)))
 :pattern ( ($generated@@294 ($generated@@259 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (= ($generated@@298 ($generated@@261 $generated@@613)) ($generated@@261 ($generated@@298 $generated@@613)))
 :pattern ( ($generated@@298 ($generated@@261 $generated@@613)))
)))
(assert (forall (($generated@@614 Bool) ($generated@@615 Int) ) (! (= ($generated@@159 ($generated@@81 $generated@@614 $generated@@615) $generated@@82)  (and ($generated@@159 ($generated@@11 $generated@@614) $generated@@44) ($generated@@159 ($generated@@8 $generated@@615) $generated@@87)))
 :pattern ( ($generated@@159 ($generated@@81 $generated@@614 $generated@@615) $generated@@82))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@289 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@288 $generated@@617)) (= ($generated@@287 $generated@@616) 0)) (= $generated@@616 ($generated@@286 $generated@@617))))
 :pattern ( ($generated@@287 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@83 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@311 ($generated@@91 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@311 $generated@@618) ($generated ($generated@@90 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@311 ($generated@@91 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@623) $generated@@2)) ($generated@@80 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@80 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@625) $generated@@3)) ($generated@@80 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@80 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@627) $generated@@4)) ($generated@@80 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@80 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@629) $generated@@471)) ($generated@@80 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@80 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@631) $generated@@171)) ($generated@@80 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@80 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@288 $generated@@171)) (= (type $generated@@633) $generated@@70)) (= ($generated@@159 $generated@@632 ($generated@@517 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@287 $generated@@632))) ($generated@@238 ($generated@@518 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@518 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@159 $generated@@632 ($generated@@517 $generated@@633)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (= (type $generated@@636) ($generated@@288 $generated@@171)) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@287 $generated@@636))) (< ($generated@@558 ($generated@@356 $generated@@94 ($generated@@518 $generated@@636 $generated@@637))) ($generated@@635 $generated@@636))))
 :pattern ( ($generated@@558 ($generated@@356 $generated@@94 ($generated@@518 $generated@@636 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@319 $generated@@171 $generated@@171)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@159 $generated@@638 ($generated@@423 $generated@@639 $generated@@640))) (and (and ($generated@@159 ($generated@@317 $generated@@638) ($generated@@249 $generated@@639)) ($generated@@159 ($generated@@366 $generated@@638) ($generated@@249 $generated@@640))) ($generated@@159 ($generated@@397 $generated@@638) ($generated@@249 ($generated@@162 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@159 $generated@@638 ($generated@@423 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@337 $generated@@171 $generated@@171)) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) $generated@@70)) ($generated@@159 $generated@@641 ($generated@@431 $generated@@642 $generated@@643))) (and (and ($generated@@159 ($generated@@335 $generated@@641) ($generated@@254 $generated@@642)) ($generated@@159 ($generated@@377 $generated@@641) ($generated@@254 $generated@@643))) ($generated@@159 ($generated@@405 $generated@@641) ($generated@@254 ($generated@@162 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@159 $generated@@641 ($generated@@431 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) ($generated@@159 $generated@@644 $generated@@46))
 :pattern ( ($generated@@159 $generated@@644 $generated@@46))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@3) ($generated@@159 $generated@@645 $generated@@47))
 :pattern ( ($generated@@159 $generated@@645 $generated@@47))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@4) ($generated@@159 $generated@@646 $generated@@44))
 :pattern ( ($generated@@159 $generated@@646 $generated@@44))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@471) ($generated@@159 $generated@@647 $generated@@45))
 :pattern ( ($generated@@159 $generated@@647 $generated@@45))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@171) ($generated@@159 $generated@@648 $generated@@48))
 :pattern ( ($generated@@159 $generated@@648 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 (T@U) Bool)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(assert  (and (and (and (and (= (type $generated@@649) ($generated@@183 $generated@@84 $generated@@4)) (= (type $generated@@650) $generated@@84)) (= (type $generated@@651) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@653) $generated@@94)) (= (type $generated@@654) ($generated@@83 $generated@@84 $generated@@85))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@658  (=> (and (= $generated@@649 ($generated@@182 $generated@@650 $generated@@651 $generated@@60 false)) (= $generated@@652 ($generated@@259 42))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@259 0) $generated@@652) (< $generated@@652 4294967296))) (=> (and (<= ($generated@@259 0) $generated@@652) (< $generated@@652 4294967296)) (=> (= $generated@@653 ($generated@@261 ($generated@@81 ($generated@@0 ($generated@@261 ($generated@@11 false))) ($generated@@259 42)))) (=> (and ($generated@@86 $generated@@654) ($generated@@655 $generated@@654)) (=> (and (and (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@84) (=> (and (not (= $generated@@659 $generated@@650)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@651 $generated@@659) $generated@@60))) (= ($generated@@90 $generated@@654 $generated@@659) ($generated@@90 $generated@@651 $generated@@659))))
 :pattern ( ($generated@@90 $generated@@654 $generated@@659))
)) ($generated@@148 $generated@@651 $generated@@654)) (and (= $generated@@656 ($generated@@259 330)) (= (ControlFlow 0 2) (- 0 1)))) (and (<= ($generated@@259 0) $generated@@656) (< $generated@@656 4294967296))))))))))
(let (($generated@@660  (=> (and (and ($generated@@86 $generated@@651) ($generated@@655 $generated@@651)) (and (= 3 $generated@@657) (= (ControlFlow 0 4) 2))) $generated@@658)))
$generated@@660)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (Int T@U) T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@388 (T@U) Bool)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@83) 11) (forall (($generated@@85 Int) ($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@85 $generated@@86)) $generated@@83)
 :pattern ( ($generated@@81 $generated@@85 $generated@@86))
))) (= (type $generated@@82) $generated@@70)) (= (type $generated@@84) $generated@@70)))
(assert (forall (($generated@@87 Int) ($generated@@88 T@U) ) (!  (=> (= (type $generated@@88) $generated@@83) (= ($generated@@80 ($generated@@81 $generated@@87 $generated@@88) $generated@@82)  (and ($generated@@80 ($generated@@8 $generated@@87) $generated@@84) ($generated@@80 $generated@@88 $generated@@82))))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@87 $generated@@88) $generated@@82))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@73 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@73 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@149) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@151 $generated@@84 $generated@@152))
 :pattern ( ($generated@@89 $generated@@151 $generated@@84 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@80 $generated@@153 ($generated@@90 0)))
 :pattern ( ($generated@@80 $generated@@153 ($generated@@90 0)))
)))
(assert (forall (($generated@@155 Int) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@83) (= (type $generated@@157) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@154 $generated@@157)) (= ($generated@@89 ($generated@@81 $generated@@155 $generated@@156) $generated@@82 $generated@@157)  (and ($generated@@89 ($generated@@8 $generated@@155) $generated@@84 $generated@@157) ($generated@@89 $generated@@156 $generated@@82 $generated@@157))))
 :pattern ( ($generated@@89 ($generated@@81 $generated@@155 $generated@@156) $generated@@82 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@70)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@70) (= (type $generated@@163) $generated@@70)) (= (type $generated@@164) $generated@@83)) ($generated@@80 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@80 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@83) (= (type $generated@@172) $generated@@83)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@74)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@83)))
(assert (= ($generated@@173 $generated@@174) $generated@@64))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@70)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@91 $generated@@168 $generated@@2)) (= (type $generated@@180) $generated@@70)) ($generated@@80 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@80 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@92 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@92) (= (type $generated@@231) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@92)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@83)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@70) (= (type $generated@@242) $generated@@70)) (= (type $generated@@243) $generated@@168)) (= (type $generated@@244) $generated@@168)) (= ($generated@@80 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@80 ($generated@@237 $generated@@243 $generated@@244) ($generated@@159 $generated@@241 $generated@@242)))
)))
(assert ($generated@@80 $generated@@174 $generated@@82))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@91 $generated@@92 $generated@@93)) ($generated@@154 $generated@@245)) ($generated@@89 $generated@@174 $generated@@82 $generated@@245))
 :pattern ( ($generated@@89 $generated@@174 $generated@@82 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@83) (= (type $generated@@247) $generated@@83)) (= ($generated@@165 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@165 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@83) (= (type $generated@@250) $generated@@83)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@83)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@83) (= (type $generated@@256) $generated@@83)) (and ($generated@@251 $generated@@255) ($generated@@251 $generated@@256))) (= ($generated@@248 $generated@@255 $generated@@256)  (and (= ($generated@@252 $generated@@255) ($generated@@252 $generated@@256)) ($generated@@248 ($generated@@253 $generated@@255) ($generated@@253 $generated@@256)))))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@255))
 :pattern ( ($generated@@248 $generated@@255 $generated@@256) ($generated@@251 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@91 $generated@@168 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@80 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@168) ($generated@@0 ($generated@@96 $generated@@259 $generated@@261))) ($generated@@238 $generated@@261 $generated@@260))
 :pattern ( ($generated@@96 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@80 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@91 $generated@@168 $generated@@4)) (= (type $generated@@265) $generated@@70)) (= ($generated@@80 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@168) ($generated@@0 ($generated@@96 $generated@@264 $generated@@266))) ($generated@@238 $generated@@266 $generated@@265))
 :pattern ( ($generated@@96 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@80 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@267 $generated@@268) $generated@@268)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@83) (= (type $generated@@275) $generated@@83)) (and ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))) (= ($generated@@248 $generated@@274 $generated@@275) true))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@274))
 :pattern ( ($generated@@248 $generated@@274 $generated@@275) ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@70) (= (type $generated@@278) $generated@@70)) (= (type $generated@@279) $generated@@168)) (= (type $generated@@280) $generated@@168)) (= (type $generated@@281) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@154 $generated@@281)) (= ($generated@@89 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@89 ($generated@@237 $generated@@279 $generated@@280) ($generated@@159 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@83) (= ($generated@@158 $generated@@282) (= ($generated@@173 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@83) (= ($generated@@273 $generated@@283) (= ($generated@@173 $generated@@283) $generated@@64)))
 :pattern ( ($generated@@273 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@83) (= ($generated@@251 $generated@@284) (= ($generated@@173 $generated@@284) $generated@@66)))
 :pattern ( ($generated@@251 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@83) ($generated@@158 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@168) (= (type $generated@@287) $generated@@168)) (= $generated@@285 ($generated@@237 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@158 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@83) ($generated@@251 $generated@@288)) (exists (($generated@@289 Int) ($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@83) (= $generated@@288 ($generated@@81 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@251 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@83) ($generated@@273 $generated@@299)) (= $generated@@299 $generated@@174))
 :pattern ( ($generated@@273 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@168)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@70) (= (type $generated@@304) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@276 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@89 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@276 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@306) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@307) $generated@@168)) (= (type $generated@@308) $generated@@70)) ($generated@@147 $generated@@305 $generated@@306)) ($generated@@276 $generated@@307 $generated@@308 $generated@@305)) ($generated@@276 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@147 $generated@@305 $generated@@306) ($generated@@276 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@310) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@312) $generated@@70)) ($generated@@147 $generated@@309 $generated@@310)) ($generated@@89 $generated@@311 $generated@@312 $generated@@309)) ($generated@@89 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@147 $generated@@309 $generated@@310) ($generated@@89 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@315 T@T) ) (! (= (type ($generated@@314 $generated@@315)) ($generated@@91 $generated@@315 $generated@@2))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@94 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@91 $generated@@317 $generated@@2)) (and (= (= ($generated@@313 $generated@@316) 0) (= $generated@@316 ($generated@@314 $generated@@317))) (=> (not (= ($generated@@313 $generated@@316) 0)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) (< 0 ($generated ($generated@@96 $generated@@316 $generated@@318))))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 18)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@91 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@96 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@96 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 19)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@91 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@96 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@96 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@94 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@91 $generated@@356 $generated@@2)) (= ($generated@@177 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@96 $generated@@355 $generated@@357))) (<= ($generated ($generated@@96 $generated@@355 $generated@@357)) ($generated@@313 $generated@@355))))
 :pattern ( ($generated@@96 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@177 $generated@@355))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@168) ($generated@@238 $generated@@361 $generated@@84)) (and (= ($generated@@300 ($generated@@358 $generated@@2 $generated@@361)) $generated@@361) ($generated@@80 ($generated@@358 $generated@@2 $generated@@361) $generated@@84)))
 :pattern ( ($generated@@238 $generated@@361 $generated@@84))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@168) ($generated@@238 $generated@@362 $generated@@82)) (and (= ($generated@@300 ($generated@@358 $generated@@83 $generated@@362)) $generated@@362) ($generated@@80 ($generated@@358 $generated@@83 $generated@@362) $generated@@82)))
 :pattern ( ($generated@@238 $generated@@362 $generated@@82))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@323 (type $generated@@363))))
(let (($generated@@365 ($generated@@322 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@321 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@320 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@96 ($generated@@319 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@319 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@323 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@91 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@323 (type $generated@@370))))
(let (($generated@@372 ($generated@@322 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@321 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@320 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@96 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@341 (type $generated@@374))))
(let (($generated@@376 ($generated@@340 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@339 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@338 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@337 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@341 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@91 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@341 (type $generated@@381))))
(let (($generated@@383 ($generated@@340 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@339 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@338 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@96 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@91 $generated@@168 $generated@@2)) (= (type $generated@@386) $generated@@70)) (= ($generated@@80 $generated@@385 ($generated@@176 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@168) (< 0 ($generated ($generated@@96 $generated@@385 $generated@@387)))) ($generated@@238 $generated@@387 $generated@@386))
 :pattern ( ($generated@@96 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@80 $generated@@385 ($generated@@176 $generated@@386)))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@83) ($generated@@388 $generated@@389)) (or ($generated@@273 $generated@@389) ($generated@@251 $generated@@389)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@91 $generated@@168 $generated@@4)) (= (type $generated@@391) $generated@@70)) (= (type $generated@@392) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@390 ($generated@@257 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@168) ($generated@@0 ($generated@@96 $generated@@390 $generated@@393))) ($generated@@276 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@96 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@89 $generated@@390 ($generated@@257 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@91 $generated@@168 $generated@@4)) (= (type $generated@@395) $generated@@70)) (= (type $generated@@396) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@394 ($generated@@262 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@168) ($generated@@0 ($generated@@96 $generated@@394 $generated@@397))) ($generated@@276 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@96 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@89 $generated@@394 ($generated@@262 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated ($generated@@96 ($generated@@314 $generated@@399) $generated@@398)) 0))
 :pattern ( (let (($generated@@399 (type $generated@@398)))
($generated@@96 ($generated@@314 $generated@@399) $generated@@398)))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@91 $generated@@168 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@323 (type $generated@@403))))
(let (($generated@@405 ($generated@@322 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@91 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@321 $generated@@168 $generated@@168)) (= (type $generated@@407) $generated@@168)) (= ($generated@@0 ($generated@@96 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@96 ($generated@@319 $generated@@406) ($generated@@166 ($generated@@358 $generated@@83 $generated@@407)))) (= ($generated@@96 ($generated@@401 $generated@@406) ($generated@@166 ($generated@@358 $generated@@83 $generated@@407))) ($generated@@167 ($generated@@358 $generated@@83 $generated@@407))))))
 :pattern ( ($generated@@96 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@91 $generated@@168 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@341 (type $generated@@411))))
(let (($generated@@413 ($generated@@340 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@91 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@339 $generated@@168 $generated@@168)) (= (type $generated@@415) $generated@@168)) (= ($generated@@0 ($generated@@96 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@96 ($generated@@337 $generated@@414) ($generated@@166 ($generated@@358 $generated@@83 $generated@@415)))) (= ($generated@@96 ($generated@@409 $generated@@414) ($generated@@166 ($generated@@358 $generated@@83 $generated@@415))) ($generated@@167 ($generated@@358 $generated@@83 $generated@@415))))))
 :pattern ( ($generated@@96 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@322 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@321 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@96 ($generated@@367 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@96 ($generated@@319 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@96 ($generated@@401 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@96 ($generated@@319 $generated@@416) $generated@@420))
 :pattern ( ($generated@@96 ($generated@@401 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@96 ($generated@@367 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@340 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@339 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@96 ($generated@@378 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@96 ($generated@@337 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@96 ($generated@@409 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@96 ($generated@@337 $generated@@421) $generated@@425))
 :pattern ( ($generated@@96 ($generated@@409 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@96 ($generated@@378 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@321 $generated@@168 $generated@@168)) (= (type $generated@@430) $generated@@70)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@168) ($generated@@0 ($generated@@96 ($generated@@319 $generated@@429) $generated@@433))) (and ($generated@@276 ($generated@@96 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@276 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@96 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@96 ($generated@@319 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@89 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@70)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@339 $generated@@168 $generated@@168)) (= (type $generated@@438) $generated@@70)) (= (type $generated@@439) $generated@@70)) (= (type $generated@@440) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@168) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@437) $generated@@441))) (and ($generated@@276 ($generated@@96 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@276 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@96 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@96 ($generated@@337 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@89 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@83) ($generated@@80 $generated@@442 $generated@@82)) (or ($generated@@273 $generated@@442) ($generated@@251 $generated@@442)))
 :pattern ( ($generated@@251 $generated@@442) ($generated@@80 $generated@@442 $generated@@82))
 :pattern ( ($generated@@273 $generated@@442) ($generated@@80 $generated@@442 $generated@@82))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@443) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@444) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@445) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@443 $generated@@445))) (and ($generated@@147 $generated@@443 $generated@@444) ($generated@@147 $generated@@444 $generated@@445))) ($generated@@147 $generated@@443 $generated@@445))
 :pattern ( ($generated@@147 $generated@@443 $generated@@444) ($generated@@147 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@91 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@341 (type $generated@@448))))
(let (($generated@@450 ($generated@@340 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@339 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@338 $generated@@450 $generated@@449)) (= ($generated@@337 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@337 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@341 (type $generated@@451))))
(let (($generated@@453 ($generated@@340 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@339 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@338 $generated@@453 $generated@@452)) (= ($generated@@378 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@378 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@341 (type $generated@@454))))
(let (($generated@@456 ($generated@@340 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@339 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@338 $generated@@456 $generated@@455)) (= ($generated@@408 $generated@@454) ($generated@@446 $generated@@168))))))
 :pattern ( ($generated@@408 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@323 (type $generated@@457))))
(let (($generated@@459 ($generated@@322 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@321 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@320 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@168) (= (type $generated@@461) $generated@@168)) ($generated@@0 ($generated@@96 ($generated@@400 $generated@@457) ($generated@@300 ($generated@@237 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@400 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@341 (type $generated@@462))))
(let (($generated@@464 ($generated@@340 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@339 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@338 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@168) (= (type $generated@@466) $generated@@168)) ($generated@@0 ($generated@@96 ($generated@@408 $generated@@462) ($generated@@300 ($generated@@237 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@408 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@168) ($generated@@238 $generated@@467 $generated@@46)) (and (= ($generated@@300 ($generated@@358 $generated@@2 $generated@@467)) $generated@@467) ($generated@@80 ($generated@@358 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@168) ($generated@@238 $generated@@468 $generated@@47)) (and (= ($generated@@300 ($generated@@358 $generated@@3 $generated@@468)) $generated@@468) ($generated@@80 ($generated@@358 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@168) ($generated@@238 $generated@@469 $generated@@44)) (and (= ($generated@@300 ($generated@@358 $generated@@4 $generated@@469)) $generated@@469) ($generated@@80 ($generated@@358 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@168) ($generated@@238 $generated@@471 $generated@@45)) (and (= ($generated@@300 ($generated@@358 $generated@@470 $generated@@471)) $generated@@471) ($generated@@80 ($generated@@358 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@238 ($generated@@300 $generated@@472) $generated@@473) ($generated@@80 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@238 ($generated@@300 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@94 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@91 $generated@@475 $generated@@2)) (<= 0 ($generated@@313 $generated@@474))))
 :pattern ( ($generated@@313 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@294 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@293 $generated@@477)) (<= 0 ($generated@@292 $generated@@476))))
 :pattern ( ($generated@@292 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@426 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@426 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@426 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@426 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@78 ($generated@@426 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@426 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@434 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@434 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@434 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@434 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@78 ($generated@@434 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@434 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@168) (= (type $generated@@499) $generated@@168)) (= ($generated@@173 ($generated@@237 $generated@@498 $generated@@499)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@159 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@159 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@159 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@159 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@168) (= (type $generated@@509) $generated@@168)) (= ($generated@@166 ($generated@@237 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@237 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@168) (= (type $generated@@511) $generated@@168)) (= ($generated@@167 ($generated@@237 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@237 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 Int) ($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@83) (= ($generated@@173 ($generated@@81 $generated@@512 $generated@@513)) $generated@@66))
 :pattern ( ($generated@@81 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 Int) ($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@83) (= ($generated@@252 ($generated@@81 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@81 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 Int) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@83) (= ($generated@@253 ($generated@@81 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@81 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@294 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@293 $generated@@168)) (= (type $generated@@525) $generated@@70)) (= (type $generated@@526) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@292 $generated@@524))) ($generated@@276 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@89 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@90 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@90 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@530 ($generated@@257 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@257 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@78 ($generated@@257 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@262 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@262 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@78 ($generated@@262 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@538 ($generated@@176 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@176 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@78 ($generated@@176 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@70)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@78 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@358 $generated@@547 ($generated@@300 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@300 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@321 $generated@@168 $generated@@168)) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) (= ($generated@@80 $generated@@548 ($generated@@426 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@168) ($generated@@0 ($generated@@96 ($generated@@319 $generated@@548) $generated@@551))) (and ($generated@@238 ($generated@@96 ($generated@@401 $generated@@548) $generated@@551) $generated@@550) ($generated@@238 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@96 ($generated@@401 $generated@@548) $generated@@551))
 :pattern ( ($generated@@96 ($generated@@319 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@80 $generated@@548 ($generated@@426 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@339 $generated@@168 $generated@@168)) (= (type $generated@@553) $generated@@70)) (= (type $generated@@554) $generated@@70)) (= ($generated@@80 $generated@@552 ($generated@@434 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@168) ($generated@@0 ($generated@@96 ($generated@@337 $generated@@552) $generated@@555))) (and ($generated@@238 ($generated@@96 ($generated@@409 $generated@@552) $generated@@555) $generated@@554) ($generated@@238 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@96 ($generated@@409 $generated@@552) $generated@@555))
 :pattern ( ($generated@@96 ($generated@@337 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@80 $generated@@552 ($generated@@434 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@168) (= (type $generated@@559) $generated@@168)) (< ($generated@@556 $generated@@558) ($generated@@557 ($generated@@237 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@237 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@168) (= (type $generated@@561) $generated@@168)) (< ($generated@@556 $generated@@561) ($generated@@557 ($generated@@237 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@237 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 Int) ($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@83) (< ($generated@@557 $generated@@563) ($generated@@557 ($generated@@81 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@81 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@168) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) $generated@@70)) ($generated@@238 $generated@@564 ($generated@@426 $generated@@565 $generated@@566))) (and (= ($generated@@300 ($generated@@358 ($generated@@321 $generated@@168 $generated@@168) $generated@@564)) $generated@@564) ($generated@@80 ($generated@@358 ($generated@@321 $generated@@168 $generated@@168) $generated@@564) ($generated@@426 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@238 $generated@@564 ($generated@@426 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@168) (= (type $generated@@568) $generated@@70)) (= (type $generated@@569) $generated@@70)) ($generated@@238 $generated@@567 ($generated@@434 $generated@@568 $generated@@569))) (and (= ($generated@@300 ($generated@@358 ($generated@@339 $generated@@168 $generated@@168) $generated@@567)) $generated@@567) ($generated@@80 ($generated@@358 ($generated@@339 $generated@@168 $generated@@168) $generated@@567) ($generated@@434 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@238 $generated@@567 ($generated@@434 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@70) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) $generated@@168)) ($generated@@238 $generated@@572 ($generated@@159 $generated@@570 $generated@@571))) (and (= ($generated@@300 ($generated@@358 $generated@@83 $generated@@572)) $generated@@572) ($generated@@80 ($generated@@358 $generated@@83 $generated@@572) ($generated@@159 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@238 $generated@@572 ($generated@@159 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@96 ($generated@@446 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@96 ($generated@@446 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@75)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@70) (= (type $generated@@578) $generated@@70)) (and (= ($generated@@78 ($generated@@159 $generated@@577 $generated@@578)) $generated@@62) (= ($generated@@575 ($generated@@159 $generated@@577 $generated@@578)) $generated@@67)))
 :pattern ( ($generated@@159 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@83) (= ($generated@@556 ($generated@@300 $generated@@579)) ($generated@@557 $generated@@579)))
 :pattern ( ($generated@@556 ($generated@@300 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@168) ($generated@@238 $generated@@580 ($generated@@90 0))) (and (= ($generated@@300 ($generated@@358 $generated@@2 $generated@@580)) $generated@@580) ($generated@@80 ($generated@@358 ($generated@@91 $generated@@168 $generated@@4) $generated@@580) ($generated@@90 0))))
 :pattern ( ($generated@@238 $generated@@580 ($generated@@90 0)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@168) (= (type $generated@@582) $generated@@70)) ($generated@@238 $generated@@581 ($generated@@257 $generated@@582))) (and (= ($generated@@300 ($generated@@358 ($generated@@91 $generated@@168 $generated@@4) $generated@@581)) $generated@@581) ($generated@@80 ($generated@@358 ($generated@@91 $generated@@168 $generated@@4) $generated@@581) ($generated@@257 $generated@@582))))
 :pattern ( ($generated@@238 $generated@@581 ($generated@@257 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@168) (= (type $generated@@584) $generated@@70)) ($generated@@238 $generated@@583 ($generated@@262 $generated@@584))) (and (= ($generated@@300 ($generated@@358 ($generated@@91 $generated@@168 $generated@@4) $generated@@583)) $generated@@583) ($generated@@80 ($generated@@358 ($generated@@91 $generated@@168 $generated@@4) $generated@@583) ($generated@@262 $generated@@584))))
 :pattern ( ($generated@@238 $generated@@583 ($generated@@262 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@168) (= (type $generated@@586) $generated@@70)) ($generated@@238 $generated@@585 ($generated@@176 $generated@@586))) (and (= ($generated@@300 ($generated@@358 ($generated@@91 $generated@@168 $generated@@2) $generated@@585)) $generated@@585) ($generated@@80 ($generated@@358 ($generated@@91 $generated@@168 $generated@@2) $generated@@585) ($generated@@176 $generated@@586))))
 :pattern ( ($generated@@238 $generated@@585 ($generated@@176 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@168) (= (type $generated@@588) $generated@@70)) ($generated@@238 $generated@@587 ($generated@@518 $generated@@588))) (and (= ($generated@@300 ($generated@@358 ($generated@@293 $generated@@168) $generated@@587)) $generated@@587) ($generated@@80 ($generated@@358 ($generated@@293 $generated@@168) $generated@@587) ($generated@@518 $generated@@588))))
 :pattern ( ($generated@@238 $generated@@587 ($generated@@518 $generated@@588)))
)))
(assert (= ($generated@@78 $generated@@84) $generated@@63))
(assert (= ($generated@@575 $generated@@84) $generated@@68))
(assert (= ($generated@@78 $generated@@82) $generated@@65))
(assert (= ($generated@@575 $generated@@82) $generated@@69))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@91 $generated@@168 $generated@@2)) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@589 ($generated@@176 $generated@@590) $generated@@591) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@168) (< 0 ($generated ($generated@@96 $generated@@589 $generated@@592)))) ($generated@@276 $generated@@592 $generated@@590 $generated@@591))
 :pattern ( ($generated@@96 $generated@@589 $generated@@592))
))))
 :pattern ( ($generated@@89 $generated@@589 ($generated@@176 $generated@@590) $generated@@591))
)))
(assert (= $generated@@174 ($generated@@269 $generated@@174)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@83) (= (type $generated@@594) $generated@@70)) (= (type $generated@@595) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@154 $generated@@595) (and ($generated@@158 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@70) ($generated@@89 $generated@@593 ($generated@@159 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@89 $generated@@593 ($generated@@159 $generated@@594 $generated@@596) $generated@@595))
))))) ($generated@@276 ($generated@@166 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@276 ($generated@@166 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@83) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@154 $generated@@599) (and ($generated@@158 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@70) ($generated@@89 $generated@@597 ($generated@@159 $generated@@600 $generated@@598) $generated@@599))
 :pattern ( ($generated@@89 $generated@@597 ($generated@@159 $generated@@600 $generated@@598) $generated@@599))
))))) ($generated@@276 ($generated@@167 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@276 ($generated@@167 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@83) (= (type $generated@@602) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@154 $generated@@602) (and ($generated@@251 $generated@@601) ($generated@@89 $generated@@601 $generated@@82 $generated@@602)))) ($generated@@89 ($generated@@8 ($generated@@252 $generated@@601)) $generated@@84 $generated@@602))
 :pattern ( ($generated@@89 ($generated@@8 ($generated@@252 $generated@@601)) $generated@@84 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@83) (= (type $generated@@604) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@154 $generated@@604) (and ($generated@@251 $generated@@603) ($generated@@89 $generated@@603 $generated@@82 $generated@@604)))) ($generated@@89 ($generated@@253 $generated@@603) $generated@@82 $generated@@604))
 :pattern ( ($generated@@89 ($generated@@253 $generated@@603) $generated@@82 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) (= ($generated@@80 $generated@@605 $generated@@84)  (and (<= ($generated@@267 0) ($generated $generated@@605)) (< ($generated $generated@@605) 4294967296))))
 :pattern ( ($generated@@80 $generated@@605 $generated@@84))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@168) (= (type $generated@@607) $generated@@168)) (= ($generated@@237 ($generated@@269 $generated@@606) ($generated@@269 $generated@@607)) ($generated@@269 ($generated@@237 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@237 ($generated@@269 $generated@@606) ($generated@@269 $generated@@607)))
)))
(assert (forall (($generated@@608 Int) ($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@83) (= ($generated@@81 ($generated@@267 $generated@@608) ($generated@@269 $generated@@609)) ($generated@@269 ($generated@@81 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@608) ($generated@@269 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@267 $generated@@610))) ($generated@@269 ($generated@@300 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@267 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@300 ($generated@@269 $generated@@611)) ($generated@@269 ($generated@@300 $generated@@611)))
 :pattern ( ($generated@@300 ($generated@@269 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@294 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@293 $generated@@613)) (= ($generated@@292 $generated@@612) 0)) (= $generated@@612 ($generated@@291 $generated@@613))))
 :pattern ( ($generated@@292 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@91 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@313 ($generated@@97 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@313 $generated@@614) ($generated ($generated@@96 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@313 ($generated@@97 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@619) $generated@@2)) ($generated@@89 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@89 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@621) $generated@@3)) ($generated@@89 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@89 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@623) $generated@@4)) ($generated@@89 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@89 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@625) $generated@@470)) ($generated@@89 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@89 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@627) $generated@@168)) ($generated@@89 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@89 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@293 $generated@@168)) (= (type $generated@@629) $generated@@70)) (= ($generated@@80 $generated@@628 ($generated@@518 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@292 $generated@@628))) ($generated@@238 ($generated@@519 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@519 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@80 $generated@@628 ($generated@@518 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@293 $generated@@168)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@292 $generated@@632))) (< ($generated@@557 ($generated@@358 $generated@@83 ($generated@@519 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@557 ($generated@@358 $generated@@83 ($generated@@519 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@321 $generated@@168 $generated@@168)) (= (type $generated@@635) $generated@@70)) (= (type $generated@@636) $generated@@70)) ($generated@@80 $generated@@634 ($generated@@426 $generated@@635 $generated@@636))) (and (and ($generated@@80 ($generated@@319 $generated@@634) ($generated@@257 $generated@@635)) ($generated@@80 ($generated@@367 $generated@@634) ($generated@@257 $generated@@636))) ($generated@@80 ($generated@@400 $generated@@634) ($generated@@257 ($generated@@159 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@80 $generated@@634 ($generated@@426 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@339 $generated@@168 $generated@@168)) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@70)) ($generated@@80 $generated@@637 ($generated@@434 $generated@@638 $generated@@639))) (and (and ($generated@@80 ($generated@@337 $generated@@637) ($generated@@262 $generated@@638)) ($generated@@80 ($generated@@378 $generated@@637) ($generated@@262 $generated@@639))) ($generated@@80 ($generated@@408 $generated@@637) ($generated@@262 ($generated@@159 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@80 $generated@@637 ($generated@@434 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@80 $generated@@640 $generated@@46))
 :pattern ( ($generated@@80 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@80 $generated@@641 $generated@@47))
 :pattern ( ($generated@@80 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@80 $generated@@642 $generated@@44))
 :pattern ( ($generated@@80 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@470) ($generated@@80 $generated@@643 $generated@@45))
 :pattern ( ($generated@@80 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@168) ($generated@@80 $generated@@644 $generated@@48))
 :pattern ( ($generated@@80 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 (T@U) Bool)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@648) $generated@@83) (= (type $generated@@650) $generated@@83)) (= (type $generated@@651) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@652) $generated@@83)) (= (type $generated@@653) $generated@@83)) (= (type $generated@@657) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@659) $generated@@92)) (= (type $generated@@662) ($generated@@183 $generated@@92 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@666 true))
(let (($generated@@667  (=> (and (< $generated@@645 4294967295) (= $generated@@646 ($generated@@267 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= ($generated@@267 0) $generated@@646) (< $generated@@646 4294967296))) (=> (and (<= ($generated@@267 0) $generated@@646) (< $generated@@646 4294967296)) (=> (and (= $generated@@647 (+ $generated@@645 1)) (= (ControlFlow 0 5) (- 0 4))) (and (<= ($generated@@267 0) $generated@@647) (< $generated@@647 4294967296))))))))
(let (($generated@@668  (=> (= $generated@@648 ($generated@@81 $generated@@649 $generated@@650)) (=> (and (and (<= ($generated@@267 0) $generated@@649) (< $generated@@649 4294967296)) (and ($generated@@80 $generated@@650 $generated@@82) ($generated@@89 $generated@@650 $generated@@82 $generated@@651))) (=> (and (and (and (and ($generated@@80 $generated@@652 $generated@@82) ($generated@@89 $generated@@652 $generated@@82 $generated@@651)) (= $generated@@653 $generated@@650)) (and ($generated@@80 $generated@@653 $generated@@82) (= $generated@@652 $generated@@653))) (and (and (and (<= ($generated@@267 0) $generated@@654) (< $generated@@654 4294967296)) (= $generated@@655 $generated@@649)) (and ($generated@@80 ($generated@@8 $generated@@655) $generated@@84) (= $generated@@654 $generated@@655)))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (< ($generated@@557 $generated@@652) ($generated@@557 $generated@@648))) (=> (< ($generated@@557 $generated@@652) ($generated@@557 $generated@@648)) (=> (and (and (<= ($generated@@267 0) $generated@@656) (< $generated@@656 4294967296)) (and ($generated@@154 $generated@@657) ($generated@@658 $generated@@657))) (=> (and (and (and (<= ($generated@@267 0) $generated@@645) (< $generated@@645 4294967296)) (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@92) (=> (and (not (= $generated@@669 $generated@@659)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@651 $generated@@669) $generated@@60))) (= ($generated@@96 $generated@@657 $generated@@669) ($generated@@96 $generated@@651 $generated@@669))))
 :pattern ( ($generated@@96 $generated@@657 $generated@@669))
))) (and ($generated@@147 $generated@@651 $generated@@657) (= $generated@@660 ($generated@@267 4294967295)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= ($generated@@267 0) $generated@@660) (< $generated@@660 4294967296))) (=> (and (<= ($generated@@267 0) $generated@@660) (< $generated@@660 4294967296)) (and (=> (= (ControlFlow 0 8) 5) $generated@@667) (=> (= (ControlFlow 0 8) 7) $generated@@666)))))))))))))
(let (($generated@@670 true))
(let (($generated@@671  (=> (not (= $generated@@648 $generated@@174)) (and (=> (= (ControlFlow 0 11) 8) $generated@@668) (=> (= (ControlFlow 0 11) 3) $generated@@670)))))
(let (($generated@@672  (=> (= $generated@@648 $generated@@174) (=> (and (= $generated@@661 ($generated@@267 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@267 0) $generated@@661) (< $generated@@661 4294967296))))))
(let (($generated@@673  (=> (= $generated@@662 ($generated@@182 $generated@@659 $generated@@651 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 2) $generated@@672) (=> (= (ControlFlow 0 12) 11) $generated@@671)))))
(let (($generated@@674  (=> (and ($generated@@154 $generated@@651) ($generated@@658 $generated@@651)) (=> (and (and (and (and ($generated@@80 $generated@@648 $generated@@82) ($generated@@89 $generated@@648 $generated@@82 $generated@@651)) ($generated@@388 $generated@@648)) (and (<= ($generated@@267 0) $generated@@663) (< $generated@@663 4294967296))) (and (and (and (<= ($generated@@267 0) $generated@@664) (< $generated@@664 4294967296)) true) (and (= 2 $generated@@665) (= (ControlFlow 0 13) 12)))) $generated@@673))))
$generated@@674)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) Int)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@102 (T@U T@U) Bool)
(declare-fun $generated@@103 (Int T@U) T@U)
(declare-fun $generated@@104 () T@U)
(declare-fun $generated@@105 () T@U)
(declare-fun $generated@@110 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (Int) T@U)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) Int)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U) Bool)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 () T@T)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@208 (T@U T@U T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@285 (T@U T@U) Bool)
(declare-fun $generated@@288 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@U) Bool)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@307 (Int) Int)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@313 (T@U) Bool)
(declare-fun $generated@@316 (T@U) Bool)
(declare-fun $generated@@319 (T@U) Bool)
(declare-fun $generated@@322 (T@U T@U T@U) Bool)
(declare-fun $generated@@336 (Int Bool) T@U)
(declare-fun $generated@@350 (T@T) T@U)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@361 (Int) T@U)
(declare-fun $generated@@365 (Bool) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@382 (T@U) Int)
(declare-fun $generated@@383 (T@T) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@T T@T) T@U)
(declare-fun $generated@@390 (T@T T@T) T@T)
(declare-fun $generated@@391 (T@T) T@T)
(declare-fun $generated@@392 (T@T) T@T)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@T T@T) T@U)
(declare-fun $generated@@408 (T@T T@T) T@T)
(declare-fun $generated@@409 (T@T) T@T)
(declare-fun $generated@@410 (T@T) T@T)
(declare-fun $generated@@427 (T@T T@U) T@U)
(declare-fun $generated@@432 () T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@500 (T@U T@U) T@U)
(declare-fun $generated@@508 (T@U T@U) T@U)
(declare-fun $generated@@527 (T@T) T@U)
(declare-fun $generated@@551 () T@T)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@604 (T@U Int) T@U)
(declare-fun $generated@@613 (T@U) Int)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@644 (T@U) Int)
(declare-fun $generated@@645 (T@U) Int)
(declare-fun $generated@@664 (T@U) T@U)
(declare-fun $generated@@732 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 6) (= (type $generated@@44) $generated@@81)) (= (type $generated@@45) $generated@@81)) (= (type $generated@@46) $generated@@81)) (= (type $generated@@47) $generated@@81)) (= (type $generated@@48) $generated@@81)) (= ($generated@@1 $generated@@82) 7)) (= (type $generated@@49) $generated@@82)) (= (type $generated@@50) $generated@@82)) (= (type $generated@@51) $generated@@82)) (= (type $generated@@52) $generated@@82)) (= (type $generated@@53) $generated@@82)) (= (type $generated@@54) $generated@@82)) (= (type $generated@@55) $generated@@82)) (= (type $generated@@56) $generated@@82)) (= (type $generated@@57) $generated@@82)) (= (type $generated@@58) $generated@@82)) (= (type $generated@@59) $generated@@82)) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@87)) 8))) (forall (($generated@@88 T@T) ) (! (= ($generated@@84 ($generated@@83 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@83 $generated@@88))
))) (= (type $generated@@60) ($generated@@83 $generated@@4))) (= ($generated@@1 $generated@@85) 9)) (= (type $generated@@61) $generated@@85)) (= (type $generated@@62) $generated@@82)) (= (type $generated@@63) $generated@@82)) (= (type $generated@@64) $generated@@85)) (= (type $generated@@65) $generated@@82)) (= (type $generated@@66) $generated@@85)) (= (type $generated@@67) $generated@@82)) (= (type $generated@@68) $generated@@85)) (= (type $generated@@69) $generated@@85)) (= (type $generated@@70) $generated@@82)) (= (type $generated@@71) $generated@@85)) (= (type $generated@@72) $generated@@85)) (= (type $generated@@73) $generated@@82)) (= (type $generated@@74) $generated@@85)) (= ($generated@@1 $generated@@86) 10)) (= (type $generated@@75) $generated@@86)) (= (type $generated@@76) $generated@@86)) (= (type $generated@@77) $generated@@86)) (= (type $generated@@78) $generated@@86)) (= (type $generated@@79) $generated@@86)) (= (type $generated@@80) $generated@@86)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80)
)
(assert (= ($generated@@1 $generated@@91) 11))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and (and (= (type $generated@@93) $generated@@91) (= (type $generated@@94) $generated@@91)) (and ($generated@@90 $generated@@93) ($generated@@90 $generated@@94))) (= ($generated@@89 $generated@@93 $generated@@94) (= ($generated@@92 $generated@@93) ($generated@@92 $generated@@94))))
 :pattern ( ($generated@@89 $generated@@93 $generated@@94) ($generated@@90 $generated@@93))
 :pattern ( ($generated@@89 $generated@@93 $generated@@94) ($generated@@90 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= (type ($generated@@95 $generated@@96)) $generated@@82)
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (= ($generated@@95 $generated@@44) $generated@@49))
(assert (= ($generated@@95 $generated@@45) $generated@@50))
(assert (= ($generated@@95 $generated@@46) $generated@@51))
(assert (= ($generated@@95 $generated@@47) $generated@@52))
(assert (= ($generated@@95 $generated@@48) $generated@@53))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and (and (= (type $generated@@100) $generated@@91) (= (type $generated@@101) $generated@@91)) true) (= ($generated@@97 $generated@@100 $generated@@101)  (and (= ($generated@@98 $generated@@100) ($generated@@98 $generated@@101)) (= ($generated@@99 $generated@@100) ($generated@@99 $generated@@101)))))
 :pattern ( ($generated@@97 $generated@@100 $generated@@101))
)))
(assert  (and (and (forall (($generated@@106 Int) ($generated@@107 T@U) ) (! (= (type ($generated@@103 $generated@@106 $generated@@107)) $generated@@91)
 :pattern ( ($generated@@103 $generated@@106 $generated@@107))
)) (= (type $generated@@104) $generated@@81)) (= (type $generated@@105) $generated@@81)))
(assert (forall (($generated@@108 Int) ($generated@@109 T@U) ) (!  (=> (= (type $generated@@109) $generated@@91) (= ($generated@@102 ($generated@@103 $generated@@108 $generated@@109) $generated@@104)  (and ($generated@@102 ($generated@@8 $generated@@108) $generated@@105) ($generated@@102 $generated@@109 $generated@@104))))
 :pattern ( ($generated@@102 ($generated@@103 $generated@@108 $generated@@109) $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@1 ($generated@@112 $generated@@121 $generated@@122)) 12)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@115 ($generated@@112 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@112 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@116 ($generated@@112 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@112 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@116 (type $generated@@127))))
(= (type ($generated@@117 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@117 $generated@@127 $generated@@128))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 (type $generated@@132)))
(let (($generated@@134 (type $generated@@131)))
(= (type ($generated@@118 $generated@@130 $generated@@131 $generated@@132)) ($generated@@112 $generated@@134 $generated@@133))))
 :pattern ( ($generated@@118 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@116 (type $generated@@135))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@117 ($generated@@118 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@117 ($generated@@118 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@117 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@117 $generated@@144 $generated@@146)))
 :weight 0
)))) (= ($generated@@1 $generated@@113) 13)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@84 (type $generated@@148))))
(= (type ($generated@@119 $generated@@147 $generated@@148)) $generated@@149))
 :pattern ( ($generated@@119 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@114) 14)) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@120 $generated@@150 $generated@@151 $generated@@152)) $generated@@114)
 :pattern ( ($generated@@120 $generated@@150 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@84 (type $generated@@154))))
 (=> (= (type $generated@@155) $generated@@156) (= ($generated@@119 ($generated@@120 $generated@@153 $generated@@154 $generated@@155) $generated@@154) $generated@@155)))
 :weight 0
))) (and (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@159 $generated@@160) (= ($generated@@119 ($generated@@120 $generated@@158 $generated@@159 $generated@@157) $generated@@160) ($generated@@119 $generated@@158 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or true (= ($generated@@119 ($generated@@120 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@119 $generated@@162 $generated@@164)))
 :weight 0
)))) (forall (($generated@@165 Int) ) (! (= (type ($generated@@111 $generated@@165)) $generated@@81)
 :pattern ( ($generated@@111 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@110 $generated@@166 ($generated@@111 0) $generated@@167))
 :pattern ( ($generated@@110 $generated@@166 ($generated@@111 0) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@170) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@168 $generated@@169 $generated@@170)) (forall (($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@113) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@169 $generated@@171) $generated@@60))) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@170 $generated@@171) $generated@@60)))
 :pattern ( ($generated@@119 ($generated@@117 $generated@@170 $generated@@171) $generated@@60))
)))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@2) (= (type $generated@@173) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@110 $generated@@172 $generated@@105 $generated@@173))
 :pattern ( ($generated@@110 $generated@@172 $generated@@105 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@91) (= (type $generated@@177) $generated@@91)) (and ($generated@@174 $generated@@176) ($generated@@174 $generated@@177))) (= ($generated@@89 $generated@@176 $generated@@177) (= ($generated@@175 $generated@@176) ($generated@@175 $generated@@177))))
 :pattern ( ($generated@@89 $generated@@176 $generated@@177) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@89 $generated@@176 $generated@@177) ($generated@@174 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@102 $generated@@178 ($generated@@111 0)))
 :pattern ( ($generated@@102 $generated@@178 ($generated@@111 0)))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@91) (= (type $generated@@182) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@179 $generated@@182)) (= ($generated@@110 ($generated@@103 $generated@@180 $generated@@181) $generated@@104 $generated@@182)  (and ($generated@@110 ($generated@@8 $generated@@180) $generated@@105 $generated@@182) ($generated@@110 $generated@@181 $generated@@104 $generated@@182))))
 :pattern ( ($generated@@110 ($generated@@103 $generated@@180 $generated@@181) $generated@@104 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@185 $generated@@186)) $generated@@81)
 :pattern ( ($generated@@184 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@81) (= (type $generated@@188) $generated@@81)) (= (type $generated@@189) $generated@@91)) ($generated@@102 $generated@@189 ($generated@@184 $generated@@187 $generated@@188))) ($generated@@183 $generated@@189))
 :pattern ( ($generated@@183 $generated@@189) ($generated@@102 $generated@@189 ($generated@@184 $generated@@187 $generated@@188)))
)))
(assert  (and (and (= ($generated@@1 $generated@@193) 15) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@191 $generated@@194))
))) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@195)) $generated@@193)
 :pattern ( ($generated@@192 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@91) (= (type $generated@@197) $generated@@91)) true) (= ($generated@@190 $generated@@196 $generated@@197)  (and (= ($generated@@191 $generated@@196) ($generated@@191 $generated@@197)) (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)))))
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
)))
(assert  (and (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@85)
 :pattern ( ($generated@@198 $generated@@200))
)) (= (type $generated@@199) $generated@@91)))
(assert (= ($generated@@198 $generated@@199) $generated@@69))
(assert (= (type $generated@@201) $generated@@91))
(assert (= ($generated@@198 $generated@@201) $generated@@71))
(assert (= (type $generated@@202) $generated@@91))
(assert (= ($generated@@198 $generated@@202) $generated@@72))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@205)) $generated@@81)
 :pattern ( ($generated@@203 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (= (type $generated@@206) ($generated@@112 $generated@@193 $generated@@2)) (= (type $generated@@207) $generated@@81)) ($generated@@102 $generated@@206 ($generated@@203 $generated@@207))) ($generated@@204 $generated@@206))
 :pattern ( ($generated@@102 $generated@@206 ($generated@@203 $generated@@207)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@214 $generated@@215)) 16)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@210 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@218 $generated@@219)) $generated@@219)
 :pattern ( ($generated@@210 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@212 (type $generated@@220))))
(= (type ($generated@@208 $generated@@220 $generated@@221 $generated@@222)) $generated@@223))
 :pattern ( ($generated@@208 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 (type $generated@@227)))
(let (($generated@@229 (type $generated@@225)))
(= (type ($generated@@213 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@210 $generated@@229 $generated@@228))))
 :pattern ( ($generated@@213 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@212 (type $generated@@230))))
 (=> (= (type $generated@@233) $generated@@234) (= ($generated@@208 ($generated@@213 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@231 $generated@@232) $generated@@233)))
 :weight 0
))) (and (and (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@208 ($generated@@213 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@208 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or (= $generated@@244 $generated@@246) (= ($generated@@208 ($generated@@213 $generated@@242 $generated@@243 $generated@@244 $generated@@241) $generated@@245 $generated@@246) ($generated@@208 $generated@@242 $generated@@245 $generated@@246)))
 :weight 0
))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (or true (= ($generated@@208 ($generated@@213 $generated@@248 $generated@@249 $generated@@250 $generated@@247) $generated@@251 $generated@@252) ($generated@@208 $generated@@248 $generated@@251 $generated@@252)))
 :weight 0
)))) (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 Bool) ) (! (= (type ($generated@@209 $generated@@253 $generated@@254 $generated@@255 $generated@@256)) ($generated@@210 $generated@@113 $generated@@4))
 :pattern ( ($generated@@209 $generated@@253 $generated@@254 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 Bool) ($generated@@261 T@U) ($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@84 (type $generated@@262))))
 (=> (and (and (and (and (= (type $generated@@257) $generated@@113) (= (type $generated@@258) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@259) ($generated@@83 $generated@@4))) (= (type $generated@@261) $generated@@113)) (= (type $generated@@262) ($generated@@83 $generated@@263))) (= ($generated@@0 ($generated@@208 ($generated@@209 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))  (=> (and (not (= $generated@@261 $generated@@257)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@258 $generated@@261) $generated@@259))) $generated@@260))))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (= (type $generated@@265) $generated@@81))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@91) ($generated@@102 $generated@@266 $generated@@265)) ($generated@@264 $generated@@266))
 :pattern ( ($generated@@264 $generated@@266) ($generated@@102 $generated@@266 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@91)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) $generated@@81) (= (type $generated@@272) $generated@@81)) (= (type $generated@@273) $generated@@193)) (= (type $generated@@274) $generated@@193)) (= ($generated@@102 ($generated@@267 $generated@@273 $generated@@274) ($generated@@184 $generated@@271 $generated@@272))  (and ($generated@@268 $generated@@273 $generated@@271) ($generated@@268 $generated@@274 $generated@@272))))
 :pattern ( ($generated@@102 ($generated@@267 $generated@@273 $generated@@274) ($generated@@184 $generated@@271 $generated@@272)))
)))
(assert (= (type $generated@@275) $generated@@81))
(assert ($generated@@102 $generated@@199 $generated@@275))
(assert ($generated@@102 $generated@@201 $generated@@275))
(assert ($generated@@102 $generated@@202 $generated@@104))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@112 $generated@@113 $generated@@114)) ($generated@@179 $generated@@276)) ($generated@@110 $generated@@199 $generated@@275 $generated@@276))
 :pattern ( ($generated@@110 $generated@@199 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@112 $generated@@113 $generated@@114)) ($generated@@179 $generated@@277)) ($generated@@110 $generated@@201 $generated@@275 $generated@@277))
 :pattern ( ($generated@@110 $generated@@201 $generated@@275 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@112 $generated@@113 $generated@@114)) ($generated@@179 $generated@@278)) ($generated@@110 $generated@@202 $generated@@104 $generated@@278))
 :pattern ( ($generated@@110 $generated@@202 $generated@@104 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@91) (= (type $generated@@280) $generated@@91)) (= ($generated@@190 $generated@@279 $generated@@280) (= $generated@@279 $generated@@280)))
 :pattern ( ($generated@@190 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@91) (= (type $generated@@282) $generated@@91)) (= ($generated@@97 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@97 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@91) (= (type $generated@@284) $generated@@91)) (= ($generated@@89 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@89 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@91) (= (type $generated@@287) $generated@@91)) (= ($generated@@285 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@91) (= (type $generated@@290) $generated@@91)) (= ($generated@@288 $generated@@289 $generated@@290) (= $generated@@289 $generated@@290)))
 :pattern ( ($generated@@288 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@91)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@91) (= (type $generated@@296) $generated@@91)) (and ($generated@@291 $generated@@295) ($generated@@291 $generated@@296))) (= ($generated@@288 $generated@@295 $generated@@296)  (and (= ($generated@@292 $generated@@295) ($generated@@292 $generated@@296)) ($generated@@288 ($generated@@293 $generated@@295) ($generated@@293 $generated@@296)))))
 :pattern ( ($generated@@288 $generated@@295 $generated@@296) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@288 $generated@@295 $generated@@296) ($generated@@291 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@81)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) ($generated@@112 $generated@@193 $generated@@4)) (= (type $generated@@300) $generated@@81)) (= ($generated@@102 $generated@@299 ($generated@@297 $generated@@300)) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@193) ($generated@@0 ($generated@@117 $generated@@299 $generated@@301))) ($generated@@268 $generated@@301 $generated@@300))
 :pattern ( ($generated@@117 $generated@@299 $generated@@301))
))))
 :pattern ( ($generated@@102 $generated@@299 ($generated@@297 $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@81)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) ($generated@@112 $generated@@193 $generated@@4)) (= (type $generated@@305) $generated@@81)) (= ($generated@@102 $generated@@304 ($generated@@302 $generated@@305)) (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@193) ($generated@@0 ($generated@@117 $generated@@304 $generated@@306))) ($generated@@268 $generated@@306 $generated@@305))
 :pattern ( ($generated@@117 $generated@@304 $generated@@306))
))))
 :pattern ( ($generated@@102 $generated@@304 ($generated@@302 $generated@@305)))
)))
(assert (forall (($generated@@308 Int) ) (! (= ($generated@@307 $generated@@308) $generated@@308)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 (type $generated@@310)))
(= (type ($generated@@309 $generated@@310)) $generated@@311))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= ($generated@@309 $generated@@312) $generated@@312)
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (= (type $generated@@314) $generated@@91) (= (type $generated@@315) $generated@@91)) (and ($generated@@313 $generated@@314) ($generated@@313 $generated@@315))) (= ($generated@@285 $generated@@314 $generated@@315) true))
 :pattern ( ($generated@@285 $generated@@314 $generated@@315) ($generated@@313 $generated@@314))
 :pattern ( ($generated@@285 $generated@@314 $generated@@315) ($generated@@313 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (= (type $generated@@317) $generated@@91) (= (type $generated@@318) $generated@@91)) (and ($generated@@316 $generated@@317) ($generated@@316 $generated@@318))) (= ($generated@@285 $generated@@317 $generated@@318) true))
 :pattern ( ($generated@@285 $generated@@317 $generated@@318) ($generated@@316 $generated@@317))
 :pattern ( ($generated@@285 $generated@@317 $generated@@318) ($generated@@316 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (= (type $generated@@320) $generated@@91) (= (type $generated@@321) $generated@@91)) (and ($generated@@319 $generated@@320) ($generated@@319 $generated@@321))) (= ($generated@@288 $generated@@320 $generated@@321) true))
 :pattern ( ($generated@@288 $generated@@320 $generated@@321) ($generated@@319 $generated@@320))
 :pattern ( ($generated@@288 $generated@@320 $generated@@321) ($generated@@319 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@323) $generated@@81) (= (type $generated@@324) $generated@@81)) (= (type $generated@@325) $generated@@193)) (= (type $generated@@326) $generated@@193)) (= (type $generated@@327) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@179 $generated@@327)) (= ($generated@@110 ($generated@@267 $generated@@325 $generated@@326) ($generated@@184 $generated@@323 $generated@@324) $generated@@327)  (and ($generated@@322 $generated@@325 $generated@@323 $generated@@327) ($generated@@322 $generated@@326 $generated@@324 $generated@@327))))
 :pattern ( ($generated@@110 ($generated@@267 $generated@@325 $generated@@326) ($generated@@184 $generated@@323 $generated@@324) $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@91) (= ($generated@@183 $generated@@328) (= ($generated@@198 $generated@@328) $generated@@61)))
 :pattern ( ($generated@@183 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@91) (= ($generated@@264 $generated@@329) (= ($generated@@198 $generated@@329) $generated@@64)))
 :pattern ( ($generated@@264 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@91) (= ($generated@@174 $generated@@330) (= ($generated@@198 $generated@@330) $generated@@66)))
 :pattern ( ($generated@@174 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@91) (= ($generated@@90 $generated@@331) (= ($generated@@198 $generated@@331) $generated@@68)))
 :pattern ( ($generated@@90 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@91) (= ($generated@@313 $generated@@332) (= ($generated@@198 $generated@@332) $generated@@69)))
 :pattern ( ($generated@@313 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@91) (= ($generated@@316 $generated@@333) (= ($generated@@198 $generated@@333) $generated@@71)))
 :pattern ( ($generated@@316 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@91) (= ($generated@@319 $generated@@334) (= ($generated@@198 $generated@@334) $generated@@72)))
 :pattern ( ($generated@@319 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@91) (= ($generated@@291 $generated@@335) (= ($generated@@198 $generated@@335) $generated@@74)))
 :pattern ( ($generated@@291 $generated@@335))
)))
(assert (forall (($generated@@337 Int) ($generated@@338 Bool) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@91)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 Int) ($generated@@340 Bool) ) (! (= ($generated@@102 ($generated@@336 $generated@@339 $generated@@340) $generated@@265)  (and ($generated@@102 ($generated@@8 $generated@@339) $generated@@105) ($generated@@102 ($generated@@11 $generated@@340) $generated@@44)))
 :pattern ( ($generated@@102 ($generated@@336 $generated@@339 $generated@@340) $generated@@265))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@91) ($generated@@183 $generated@@341)) (exists (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (and (and (= (type $generated@@342) $generated@@193) (= (type $generated@@343) $generated@@193)) (= $generated@@341 ($generated@@267 $generated@@342 $generated@@343)))
 :no-pattern (type $generated@@342)
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
)))
 :pattern ( ($generated@@183 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@91) ($generated@@264 $generated@@344)) (exists (($generated@@345 Int) ($generated@@346 Bool) ) (= $generated@@344 ($generated@@336 $generated@@345 $generated@@346))))
 :pattern ( ($generated@@264 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@91) ($generated@@291 $generated@@347)) (exists (($generated@@348 Int) ($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@91) (= $generated@@347 ($generated@@103 $generated@@348 $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
)))
 :pattern ( ($generated@@291 $generated@@347))
)))
(assert  (and (and (forall (($generated@@354 T@T) ) (= ($generated@@1 ($generated@@352 $generated@@354)) 17)) (forall (($generated@@355 T@T) ) (! (= ($generated@@353 ($generated@@352 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@352 $generated@@355))
))) (forall (($generated@@356 T@T) ) (! (= (type ($generated@@350 $generated@@356)) ($generated@@352 $generated@@356))
 :pattern ( ($generated@@350 $generated@@356))
))))
(assert (forall (($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@357)) 0)
 :pattern ( ($generated@@350 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@91) ($generated@@313 $generated@@358)) (= $generated@@358 $generated@@199))
 :pattern ( ($generated@@313 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@91) ($generated@@316 $generated@@359)) (= $generated@@359 $generated@@201))
 :pattern ( ($generated@@316 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@91) ($generated@@319 $generated@@360)) (= $generated@@360 $generated@@202))
 :pattern ( ($generated@@319 $generated@@360))
)))
(assert (forall (($generated@@362 Int) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@91)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@91) ($generated@@174 $generated@@363)) (exists (($generated@@364 Int) ) (= $generated@@363 ($generated@@361 $generated@@364))))
 :pattern ( ($generated@@174 $generated@@363))
)))
(assert (forall (($generated@@366 Bool) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@91)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@91) ($generated@@90 $generated@@367)) (exists (($generated@@368 Bool) ) (= $generated@@367 ($generated@@365 $generated@@368))))
 :pattern ( ($generated@@90 $generated@@367))
)))
(assert (forall (($generated@@370 T@U) ) (! (= (type ($generated@@369 $generated@@370)) $generated@@193)
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@81) (= (type $generated@@373) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@322 ($generated@@369 $generated@@371) $generated@@372 $generated@@373) ($generated@@110 $generated@@371 $generated@@372 $generated@@373)))
 :pattern ( ($generated@@322 ($generated@@369 $generated@@371) $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@374) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@375) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@376) $generated@@193)) (= (type $generated@@377) $generated@@81)) ($generated@@168 $generated@@374 $generated@@375)) ($generated@@322 $generated@@376 $generated@@377 $generated@@374)) ($generated@@322 $generated@@376 $generated@@377 $generated@@375))
 :pattern ( ($generated@@168 $generated@@374 $generated@@375) ($generated@@322 $generated@@376 $generated@@377 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@378) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@379) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@381) $generated@@81)) ($generated@@168 $generated@@378 $generated@@379)) ($generated@@110 $generated@@380 $generated@@381 $generated@@378)) ($generated@@110 $generated@@380 $generated@@381 $generated@@379))
 :pattern ( ($generated@@168 $generated@@378 $generated@@379) ($generated@@110 $generated@@380 $generated@@381 $generated@@378))
)))
(assert (forall (($generated@@384 T@T) ) (! (= (type ($generated@@383 $generated@@384)) ($generated@@112 $generated@@384 $generated@@2))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@115 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@112 $generated@@386 $generated@@2)) (and (= (= ($generated@@382 $generated@@385) 0) (= $generated@@385 ($generated@@383 $generated@@386))) (=> (not (= ($generated@@382 $generated@@385) 0)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (< 0 ($generated ($generated@@117 $generated@@385 $generated@@387))))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert  (and (and (and (and (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (= ($generated@@1 ($generated@@390 $generated@@393 $generated@@394)) 18)) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@391 ($generated@@390 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@390 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= ($generated@@392 ($generated@@390 $generated@@397 $generated@@398)) $generated@@398)
 :pattern ( ($generated@@390 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@391 (type $generated@@399))))
(= (type ($generated@@388 $generated@@399)) ($generated@@112 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@399))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= (type ($generated@@389 $generated@@401 $generated@@402)) ($generated@@390 $generated@@401 $generated@@402))
 :pattern ( ($generated@@389 $generated@@401 $generated@@402))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@T) ) (! (let (($generated@@405 (type $generated@@403)))
 (not ($generated@@0 ($generated@@117 ($generated@@388 ($generated@@389 $generated@@405 $generated@@404)) $generated@@403))))
 :pattern ( (let (($generated@@405 (type $generated@@403)))
($generated@@117 ($generated@@388 ($generated@@389 $generated@@405 $generated@@404)) $generated@@403)))
)))
(assert  (and (and (and (and (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (= ($generated@@1 ($generated@@408 $generated@@411 $generated@@412)) 19)) (forall (($generated@@413 T@T) ($generated@@414 T@T) ) (! (= ($generated@@409 ($generated@@408 $generated@@413 $generated@@414)) $generated@@413)
 :pattern ( ($generated@@408 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@T) ($generated@@416 T@T) ) (! (= ($generated@@410 ($generated@@408 $generated@@415 $generated@@416)) $generated@@416)
 :pattern ( ($generated@@408 $generated@@415 $generated@@416))
))) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@409 (type $generated@@417))))
(= (type ($generated@@406 $generated@@417)) ($generated@@112 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@406 $generated@@417))
))) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= (type ($generated@@407 $generated@@419 $generated@@420)) ($generated@@408 $generated@@419 $generated@@420))
 :pattern ( ($generated@@407 $generated@@419 $generated@@420))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@T) ) (! (let (($generated@@423 (type $generated@@421)))
 (not ($generated@@0 ($generated@@117 ($generated@@406 ($generated@@407 $generated@@423 $generated@@422)) $generated@@421))))
 :pattern ( (let (($generated@@423 (type $generated@@421)))
($generated@@117 ($generated@@406 ($generated@@407 $generated@@423 $generated@@422)) $generated@@421)))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@115 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@112 $generated@@425 $generated@@2)) (= ($generated@@204 $generated@@424) (forall (($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@425) (and (<= 0 ($generated ($generated@@117 $generated@@424 $generated@@426))) (<= ($generated ($generated@@117 $generated@@424 $generated@@426)) ($generated@@382 $generated@@424))))
 :pattern ( ($generated@@117 $generated@@424 $generated@@426))
)))))
 :pattern ( ($generated@@204 $generated@@424))
)))
(assert (forall (($generated@@428 T@T) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@428)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@193) ($generated@@268 $generated@@430 $generated@@105)) (and (= ($generated@@369 ($generated@@427 $generated@@2 $generated@@430)) $generated@@430) ($generated@@102 ($generated@@427 $generated@@2 $generated@@430) $generated@@105)))
 :pattern ( ($generated@@268 $generated@@430 $generated@@105))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@193) ($generated@@268 $generated@@431 $generated@@265)) (and (= ($generated@@369 ($generated@@427 $generated@@91 $generated@@431)) $generated@@431) ($generated@@102 ($generated@@427 $generated@@91 $generated@@431) $generated@@265)))
 :pattern ( ($generated@@268 $generated@@431 $generated@@265))
)))
(assert (= (type $generated@@432) $generated@@81))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@193) ($generated@@268 $generated@@433 $generated@@432)) (and (= ($generated@@369 ($generated@@427 $generated@@91 $generated@@433)) $generated@@433) ($generated@@102 ($generated@@427 $generated@@91 $generated@@433) $generated@@432)))
 :pattern ( ($generated@@268 $generated@@433 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@193) ($generated@@268 $generated@@434 $generated@@275)) (and (= ($generated@@369 ($generated@@427 $generated@@91 $generated@@434)) $generated@@434) ($generated@@102 ($generated@@427 $generated@@91 $generated@@434) $generated@@275)))
 :pattern ( ($generated@@268 $generated@@434 $generated@@275))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@193) ($generated@@268 $generated@@435 $generated@@104)) (and (= ($generated@@369 ($generated@@427 $generated@@91 $generated@@435)) $generated@@435) ($generated@@102 ($generated@@427 $generated@@91 $generated@@435) $generated@@104)))
 :pattern ( ($generated@@268 $generated@@435 $generated@@104))
)))
(assert (forall (($generated@@436 Int) ) (! (= ($generated@@102 ($generated@@361 $generated@@436) $generated@@432) ($generated@@102 ($generated@@8 $generated@@436) $generated@@105))
 :pattern ( ($generated@@102 ($generated@@361 $generated@@436) $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@392 (type $generated@@437))))
(let (($generated@@439 ($generated@@391 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@390 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@389 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) ($generated@@0 ($generated@@117 ($generated@@388 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@388 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@392 (type $generated@@442))))
(= (type ($generated@@441 $generated@@442)) ($generated@@112 $generated@@443 $generated@@4)))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@392 (type $generated@@444))))
(let (($generated@@446 ($generated@@391 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@390 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@389 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@445) ($generated@@0 ($generated@@117 ($generated@@441 $generated@@444) $generated@@447)))
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@441 $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@410 (type $generated@@448))))
(let (($generated@@450 ($generated@@409 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@408 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@407 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) ($generated@@0 ($generated@@117 ($generated@@406 $generated@@448) $generated@@451)))
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@406 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@410 (type $generated@@453))))
(= (type ($generated@@452 $generated@@453)) ($generated@@112 $generated@@454 $generated@@4)))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@410 (type $generated@@455))))
(let (($generated@@457 ($generated@@409 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@408 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@407 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@456) ($generated@@0 ($generated@@117 ($generated@@452 $generated@@455) $generated@@458)))
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@452 $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@112 $generated@@193 $generated@@2)) (= (type $generated@@460) $generated@@81)) (= ($generated@@102 $generated@@459 ($generated@@203 $generated@@460)) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@193) (< 0 ($generated ($generated@@117 $generated@@459 $generated@@461)))) ($generated@@268 $generated@@461 $generated@@460))
 :pattern ( ($generated@@117 $generated@@459 $generated@@461))
))))
 :pattern ( ($generated@@102 $generated@@459 ($generated@@203 $generated@@460)))
)))
(assert (forall (($generated@@462 Bool) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@112 $generated@@113 $generated@@114)) ($generated@@179 $generated@@463)) (= ($generated@@110 ($generated@@365 $generated@@462) $generated@@432 $generated@@463) ($generated@@110 ($generated@@11 $generated@@462) $generated@@44 $generated@@463)))
 :pattern ( ($generated@@110 ($generated@@365 $generated@@462) $generated@@432 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@112 $generated@@193 $generated@@4)) (= (type $generated@@465) $generated@@81)) (= (type $generated@@466) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@464 ($generated@@297 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@193) ($generated@@0 ($generated@@117 $generated@@464 $generated@@467))) ($generated@@322 $generated@@467 $generated@@465 $generated@@466))
 :pattern ( ($generated@@117 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@110 $generated@@464 ($generated@@297 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@112 $generated@@193 $generated@@4)) (= (type $generated@@469) $generated@@81)) (= (type $generated@@470) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@468 ($generated@@302 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@193) ($generated@@0 ($generated@@117 $generated@@468 $generated@@471))) ($generated@@322 $generated@@471 $generated@@469 $generated@@470))
 :pattern ( ($generated@@117 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@110 $generated@@468 ($generated@@302 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 (type $generated@@472)))
(= ($generated ($generated@@117 ($generated@@383 $generated@@473) $generated@@472)) 0))
 :pattern ( (let (($generated@@473 (type $generated@@472)))
($generated@@117 ($generated@@383 $generated@@473) $generated@@472)))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) ($generated@@112 $generated@@193 $generated@@4))
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@392 (type $generated@@477))))
(let (($generated@@479 ($generated@@391 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477)) ($generated@@112 $generated@@479 $generated@@478))))
 :pattern ( ($generated@@475 $generated@@477))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) ($generated@@390 $generated@@193 $generated@@193)) (= (type $generated@@481) $generated@@193)) (= ($generated@@0 ($generated@@117 ($generated@@474 $generated@@480) $generated@@481))  (and ($generated@@0 ($generated@@117 ($generated@@388 $generated@@480) ($generated@@191 ($generated@@427 $generated@@91 $generated@@481)))) (= ($generated@@117 ($generated@@475 $generated@@480) ($generated@@191 ($generated@@427 $generated@@91 $generated@@481))) ($generated@@192 ($generated@@427 $generated@@91 $generated@@481))))))
 :pattern ( ($generated@@117 ($generated@@474 $generated@@480) $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) ($generated@@112 $generated@@193 $generated@@4))
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@410 (type $generated@@485))))
(let (($generated@@487 ($generated@@409 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485)) ($generated@@112 $generated@@487 $generated@@486))))
 :pattern ( ($generated@@483 $generated@@485))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) ($generated@@408 $generated@@193 $generated@@193)) (= (type $generated@@489) $generated@@193)) (= ($generated@@0 ($generated@@117 ($generated@@482 $generated@@488) $generated@@489))  (and ($generated@@0 ($generated@@117 ($generated@@406 $generated@@488) ($generated@@191 ($generated@@427 $generated@@91 $generated@@489)))) (= ($generated@@117 ($generated@@483 $generated@@488) ($generated@@191 ($generated@@427 $generated@@91 $generated@@489))) ($generated@@192 ($generated@@427 $generated@@91 $generated@@489))))))
 :pattern ( ($generated@@117 ($generated@@482 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(let (($generated@@493 ($generated@@391 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@390 $generated@@493 $generated@@492)) (= ($generated@@0 ($generated@@117 ($generated@@441 $generated@@490) $generated@@491)) (exists (($generated@@494 T@U) ) (!  (and (= (type $generated@@494) $generated@@493) (and ($generated@@0 ($generated@@117 ($generated@@388 $generated@@490) $generated@@494)) (= $generated@@491 ($generated@@117 ($generated@@475 $generated@@490) $generated@@494))))
 :pattern ( ($generated@@117 ($generated@@388 $generated@@490) $generated@@494))
 :pattern ( ($generated@@117 ($generated@@475 $generated@@490) $generated@@494))
))))))
 :pattern ( ($generated@@117 ($generated@@441 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(let (($generated@@498 ($generated@@409 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@408 $generated@@498 $generated@@497)) (= ($generated@@0 ($generated@@117 ($generated@@452 $generated@@495) $generated@@496)) (exists (($generated@@499 T@U) ) (!  (and (= (type $generated@@499) $generated@@498) (and ($generated@@0 ($generated@@117 ($generated@@406 $generated@@495) $generated@@499)) (= $generated@@496 ($generated@@117 ($generated@@483 $generated@@495) $generated@@499))))
 :pattern ( ($generated@@117 ($generated@@406 $generated@@495) $generated@@499))
 :pattern ( ($generated@@117 ($generated@@483 $generated@@495) $generated@@499))
))))))
 :pattern ( ($generated@@117 ($generated@@452 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@501 $generated@@502)) $generated@@81)
 :pattern ( ($generated@@500 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) ($generated@@390 $generated@@193 $generated@@193)) (= (type $generated@@504) $generated@@81)) (= (type $generated@@505) $generated@@81)) (= (type $generated@@506) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@503 ($generated@@500 $generated@@504 $generated@@505) $generated@@506) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@193) ($generated@@0 ($generated@@117 ($generated@@388 $generated@@503) $generated@@507))) (and ($generated@@322 ($generated@@117 ($generated@@475 $generated@@503) $generated@@507) $generated@@505 $generated@@506) ($generated@@322 $generated@@507 $generated@@504 $generated@@506)))
 :pattern ( ($generated@@117 ($generated@@475 $generated@@503) $generated@@507))
 :pattern ( ($generated@@117 ($generated@@388 $generated@@503) $generated@@507))
))))
 :pattern ( ($generated@@110 $generated@@503 ($generated@@500 $generated@@504 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@509 $generated@@510)) $generated@@81)
 :pattern ( ($generated@@508 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) ($generated@@408 $generated@@193 $generated@@193)) (= (type $generated@@512) $generated@@81)) (= (type $generated@@513) $generated@@81)) (= (type $generated@@514) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@511 ($generated@@508 $generated@@512 $generated@@513) $generated@@514) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@193) ($generated@@0 ($generated@@117 ($generated@@406 $generated@@511) $generated@@515))) (and ($generated@@322 ($generated@@117 ($generated@@483 $generated@@511) $generated@@515) $generated@@513 $generated@@514) ($generated@@322 $generated@@515 $generated@@512 $generated@@514)))
 :pattern ( ($generated@@117 ($generated@@483 $generated@@511) $generated@@515))
 :pattern ( ($generated@@117 ($generated@@406 $generated@@511) $generated@@515))
))))
 :pattern ( ($generated@@110 $generated@@511 ($generated@@508 $generated@@512 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@516 Int) ($generated@@517 Bool) ) (! (= ($generated@@99 ($generated@@336 $generated@@516 $generated@@517)) $generated@@517)
 :pattern ( ($generated@@336 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 Int) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) ($generated@@112 $generated@@113 $generated@@114)) ($generated@@179 $generated@@519)) (= ($generated@@110 ($generated@@361 $generated@@518) $generated@@432 $generated@@519) ($generated@@110 ($generated@@8 $generated@@518) $generated@@105 $generated@@519)))
 :pattern ( ($generated@@110 ($generated@@361 $generated@@518) $generated@@432 $generated@@519))
)))
(assert (forall (($generated@@520 Bool) ) (! (= ($generated@@92 ($generated@@365 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@365 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@91) ($generated@@102 $generated@@521 $generated@@432)) (or ($generated@@174 $generated@@521) ($generated@@90 $generated@@521)))
 :pattern ( ($generated@@90 $generated@@521) ($generated@@102 $generated@@521 $generated@@432))
 :pattern ( ($generated@@174 $generated@@521) ($generated@@102 $generated@@521 $generated@@432))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@91) ($generated@@102 $generated@@522 $generated@@275)) (or ($generated@@313 $generated@@522) ($generated@@316 $generated@@522)))
 :pattern ( ($generated@@316 $generated@@522) ($generated@@102 $generated@@522 $generated@@275))
 :pattern ( ($generated@@313 $generated@@522) ($generated@@102 $generated@@522 $generated@@275))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@91) ($generated@@102 $generated@@523 $generated@@104)) (or ($generated@@319 $generated@@523) ($generated@@291 $generated@@523)))
 :pattern ( ($generated@@291 $generated@@523) ($generated@@102 $generated@@523 $generated@@104))
 :pattern ( ($generated@@319 $generated@@523) ($generated@@102 $generated@@523 $generated@@104))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@524) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@525) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@526) ($generated@@112 $generated@@113 $generated@@114))) (not (= $generated@@524 $generated@@526))) (and ($generated@@168 $generated@@524 $generated@@525) ($generated@@168 $generated@@525 $generated@@526))) ($generated@@168 $generated@@524 $generated@@526))
 :pattern ( ($generated@@168 $generated@@524 $generated@@525) ($generated@@168 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@T) ) (! (= (type ($generated@@527 $generated@@528)) ($generated@@112 $generated@@528 $generated@@4))
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@410 (type $generated@@529))))
(let (($generated@@531 ($generated@@409 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@408 $generated@@531 $generated@@530)) (= (= $generated@@529 ($generated@@407 $generated@@531 $generated@@530)) (= ($generated@@406 $generated@@529) ($generated@@527 $generated@@531))))))
 :pattern ( ($generated@@406 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@410 (type $generated@@532))))
(let (($generated@@534 ($generated@@409 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@408 $generated@@534 $generated@@533)) (= (= $generated@@532 ($generated@@407 $generated@@534 $generated@@533)) (= ($generated@@452 $generated@@532) ($generated@@527 $generated@@533))))))
 :pattern ( ($generated@@452 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@410 (type $generated@@535))))
(let (($generated@@537 ($generated@@409 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@408 $generated@@537 $generated@@536)) (= (= $generated@@535 ($generated@@407 $generated@@537 $generated@@536)) (= ($generated@@482 $generated@@535) ($generated@@527 $generated@@193))))))
 :pattern ( ($generated@@482 $generated@@535))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@392 (type $generated@@538))))
(let (($generated@@540 ($generated@@391 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@390 $generated@@540 $generated@@539)) (or (= $generated@@538 ($generated@@389 $generated@@540 $generated@@539)) (exists (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (and (and (= (type $generated@@541) $generated@@193) (= (type $generated@@542) $generated@@193)) ($generated@@0 ($generated@@117 ($generated@@474 $generated@@538) ($generated@@369 ($generated@@267 $generated@@541 $generated@@542)))))
 :no-pattern (type $generated@@541)
 :no-pattern (type $generated@@542)
 :no-pattern ($generated $generated@@541)
 :no-pattern ($generated@@0 $generated@@541)
 :no-pattern ($generated $generated@@542)
 :no-pattern ($generated@@0 $generated@@542)
))))))
 :pattern ( ($generated@@474 $generated@@538))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@410 (type $generated@@543))))
(let (($generated@@545 ($generated@@409 (type $generated@@543))))
 (=> (= (type $generated@@543) ($generated@@408 $generated@@545 $generated@@544)) (or (= $generated@@543 ($generated@@407 $generated@@545 $generated@@544)) (exists (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (and (and (= (type $generated@@546) $generated@@193) (= (type $generated@@547) $generated@@193)) ($generated@@0 ($generated@@117 ($generated@@482 $generated@@543) ($generated@@369 ($generated@@267 $generated@@546 $generated@@547)))))
 :no-pattern (type $generated@@546)
 :no-pattern (type $generated@@547)
 :no-pattern ($generated $generated@@546)
 :no-pattern ($generated@@0 $generated@@546)
 :no-pattern ($generated $generated@@547)
 :no-pattern ($generated@@0 $generated@@547)
))))))
 :pattern ( ($generated@@482 $generated@@543))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@193) ($generated@@268 $generated@@548 $generated@@46)) (and (= ($generated@@369 ($generated@@427 $generated@@2 $generated@@548)) $generated@@548) ($generated@@102 ($generated@@427 $generated@@2 $generated@@548) $generated@@46)))
 :pattern ( ($generated@@268 $generated@@548 $generated@@46))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@193) ($generated@@268 $generated@@549 $generated@@47)) (and (= ($generated@@369 ($generated@@427 $generated@@3 $generated@@549)) $generated@@549) ($generated@@102 ($generated@@427 $generated@@3 $generated@@549) $generated@@47)))
 :pattern ( ($generated@@268 $generated@@549 $generated@@47))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@193) ($generated@@268 $generated@@550 $generated@@44)) (and (= ($generated@@369 ($generated@@427 $generated@@4 $generated@@550)) $generated@@550) ($generated@@102 ($generated@@427 $generated@@4 $generated@@550) $generated@@44)))
 :pattern ( ($generated@@268 $generated@@550 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@551) 20))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@193) ($generated@@268 $generated@@552 $generated@@45)) (and (= ($generated@@369 ($generated@@427 $generated@@551 $generated@@552)) $generated@@552) ($generated@@102 ($generated@@427 $generated@@551 $generated@@552) $generated@@45)))
 :pattern ( ($generated@@268 $generated@@552 $generated@@45))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@81) (= ($generated@@268 ($generated@@369 $generated@@553) $generated@@554) ($generated@@102 $generated@@553 $generated@@554)))
 :pattern ( ($generated@@268 ($generated@@369 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@115 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@112 $generated@@556 $generated@@2)) (<= 0 ($generated@@382 $generated@@555))))
 :pattern ( ($generated@@382 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@353 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@352 $generated@@558)) (<= 0 ($generated@@351 $generated@@557))))
 :pattern ( ($generated@@351 $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@81)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@81) (= (type $generated@@562) $generated@@81)) (= ($generated@@559 ($generated@@500 $generated@@561 $generated@@562)) $generated@@561))
 :pattern ( ($generated@@500 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@81)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) (= (type $generated@@566) $generated@@81)) (= ($generated@@563 ($generated@@500 $generated@@565 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@500 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@81) (= (type $generated@@568) $generated@@81)) (= ($generated@@95 ($generated@@500 $generated@@567 $generated@@568)) $generated@@58))
 :pattern ( ($generated@@500 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@81)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@81) (= (type $generated@@572) $generated@@81)) (= ($generated@@569 ($generated@@508 $generated@@571 $generated@@572)) $generated@@571))
 :pattern ( ($generated@@508 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@81)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@81) (= (type $generated@@576) $generated@@81)) (= ($generated@@573 ($generated@@508 $generated@@575 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@508 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@81) (= (type $generated@@578) $generated@@81)) (= ($generated@@95 ($generated@@508 $generated@@577 $generated@@578)) $generated@@59))
 :pattern ( ($generated@@508 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@193) (= (type $generated@@580) $generated@@193)) (= ($generated@@198 ($generated@@267 $generated@@579 $generated@@580)) $generated@@61))
 :pattern ( ($generated@@267 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@81)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@81) (= (type $generated@@584) $generated@@81)) (= ($generated@@581 ($generated@@184 $generated@@583 $generated@@584)) $generated@@583))
 :pattern ( ($generated@@184 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@81)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@81) (= (type $generated@@588) $generated@@81)) (= ($generated@@585 ($generated@@184 $generated@@587 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@184 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@193) (= (type $generated@@590) $generated@@193)) (= ($generated@@191 ($generated@@267 $generated@@589 $generated@@590)) $generated@@589))
 :pattern ( ($generated@@267 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@193) (= (type $generated@@592) $generated@@193)) (= ($generated@@192 ($generated@@267 $generated@@591 $generated@@592)) $generated@@592))
 :pattern ( ($generated@@267 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 Int) ($generated@@594 Bool) ) (! (= ($generated@@198 ($generated@@336 $generated@@593 $generated@@594)) $generated@@64)
 :pattern ( ($generated@@336 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 Int) ($generated@@596 Bool) ) (! (= ($generated@@98 ($generated@@336 $generated@@595 $generated@@596)) $generated@@595)
 :pattern ( ($generated@@336 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 Int) ($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@91) (= ($generated@@198 ($generated@@103 $generated@@597 $generated@@598)) $generated@@74))
 :pattern ( ($generated@@103 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 Int) ($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@91) (= ($generated@@292 ($generated@@103 $generated@@599 $generated@@600)) $generated@@599))
 :pattern ( ($generated@@103 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 Int) ($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@91) (= ($generated@@293 ($generated@@103 $generated@@601 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@103 $generated@@601 $generated@@602))
)))
(assert  (and (forall (($generated@@605 T@U) ) (! (= (type ($generated@@603 $generated@@605)) $generated@@81)
 :pattern ( ($generated@@603 $generated@@605))
)) (forall (($generated@@606 T@U) ($generated@@607 Int) ) (! (let (($generated@@608 ($generated@@353 (type $generated@@606))))
(= (type ($generated@@604 $generated@@606 $generated@@607)) $generated@@608))
 :pattern ( ($generated@@604 $generated@@606 $generated@@607))
))))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@352 $generated@@193)) (= (type $generated@@610) $generated@@81)) (= (type $generated@@611) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@609 ($generated@@603 $generated@@610) $generated@@611) (forall (($generated@@612 Int) ) (!  (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@351 $generated@@609))) ($generated@@322 ($generated@@604 $generated@@609 $generated@@612) $generated@@610 $generated@@611))
 :pattern ( ($generated@@604 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@110 $generated@@609 ($generated@@603 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@613 ($generated@@111 $generated@@614)) $generated@@614)
 :pattern ( ($generated@@111 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@81)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@81) (= ($generated@@615 ($generated@@297 $generated@@617)) $generated@@617))
 :pattern ( ($generated@@297 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@81) (= ($generated@@95 ($generated@@297 $generated@@618)) $generated@@54))
 :pattern ( ($generated@@297 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@81)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@81) (= ($generated@@619 ($generated@@302 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@302 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@81) (= ($generated@@95 ($generated@@302 $generated@@622)) $generated@@55))
 :pattern ( ($generated@@302 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@81)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@81) (= ($generated@@623 ($generated@@203 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@203 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@81) (= ($generated@@95 ($generated@@203 $generated@@626)) $generated@@56))
 :pattern ( ($generated@@203 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@81)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@81) (= ($generated@@627 ($generated@@603 $generated@@629)) $generated@@629))
 :pattern ( ($generated@@603 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@81) (= ($generated@@95 ($generated@@603 $generated@@630)) $generated@@57))
 :pattern ( ($generated@@603 $generated@@630))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@198 ($generated@@361 $generated@@631)) $generated@@66)
 :pattern ( ($generated@@361 $generated@@631))
)))
(assert (forall (($generated@@632 Int) ) (! (= ($generated@@175 ($generated@@361 $generated@@632)) $generated@@632)
 :pattern ( ($generated@@361 $generated@@632))
)))
(assert (forall (($generated@@633 Bool) ) (! (= ($generated@@198 ($generated@@365 $generated@@633)) $generated@@68)
 :pattern ( ($generated@@365 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@634)))
(= ($generated@@427 $generated@@635 ($generated@@369 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@369 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@636) ($generated@@390 $generated@@193 $generated@@193)) (= (type $generated@@637) $generated@@81)) (= (type $generated@@638) $generated@@81)) (= ($generated@@102 $generated@@636 ($generated@@500 $generated@@637 $generated@@638)) (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@193) ($generated@@0 ($generated@@117 ($generated@@388 $generated@@636) $generated@@639))) (and ($generated@@268 ($generated@@117 ($generated@@475 $generated@@636) $generated@@639) $generated@@638) ($generated@@268 $generated@@639 $generated@@637)))
 :pattern ( ($generated@@117 ($generated@@475 $generated@@636) $generated@@639))
 :pattern ( ($generated@@117 ($generated@@388 $generated@@636) $generated@@639))
))))
 :pattern ( ($generated@@102 $generated@@636 ($generated@@500 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@408 $generated@@193 $generated@@193)) (= (type $generated@@641) $generated@@81)) (= (type $generated@@642) $generated@@81)) (= ($generated@@102 $generated@@640 ($generated@@508 $generated@@641 $generated@@642)) (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@193) ($generated@@0 ($generated@@117 ($generated@@406 $generated@@640) $generated@@643))) (and ($generated@@268 ($generated@@117 ($generated@@483 $generated@@640) $generated@@643) $generated@@642) ($generated@@268 $generated@@643 $generated@@641)))
 :pattern ( ($generated@@117 ($generated@@483 $generated@@640) $generated@@643))
 :pattern ( ($generated@@117 ($generated@@406 $generated@@640) $generated@@643))
))))
 :pattern ( ($generated@@102 $generated@@640 ($generated@@508 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@193) (= (type $generated@@647) $generated@@193)) (< ($generated@@644 $generated@@646) ($generated@@645 ($generated@@267 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@267 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@193) (= (type $generated@@649) $generated@@193)) (< ($generated@@644 $generated@@649) ($generated@@645 ($generated@@267 $generated@@648 $generated@@649))))
 :pattern ( ($generated@@267 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 Int) ($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@91) (< ($generated@@645 $generated@@651) ($generated@@645 ($generated@@103 $generated@@650 $generated@@651))))
 :pattern ( ($generated@@103 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 Bool) ) (! (= ($generated@@102 ($generated@@365 $generated@@652) $generated@@432) ($generated@@102 ($generated@@11 $generated@@652) $generated@@44))
 :pattern ( ($generated@@102 ($generated@@365 $generated@@652) $generated@@432))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@193) (= (type $generated@@654) $generated@@81)) (= (type $generated@@655) $generated@@81)) ($generated@@268 $generated@@653 ($generated@@500 $generated@@654 $generated@@655))) (and (= ($generated@@369 ($generated@@427 ($generated@@390 $generated@@193 $generated@@193) $generated@@653)) $generated@@653) ($generated@@102 ($generated@@427 ($generated@@390 $generated@@193 $generated@@193) $generated@@653) ($generated@@500 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@268 $generated@@653 ($generated@@500 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@193) (= (type $generated@@657) $generated@@81)) (= (type $generated@@658) $generated@@81)) ($generated@@268 $generated@@656 ($generated@@508 $generated@@657 $generated@@658))) (and (= ($generated@@369 ($generated@@427 ($generated@@408 $generated@@193 $generated@@193) $generated@@656)) $generated@@656) ($generated@@102 ($generated@@427 ($generated@@408 $generated@@193 $generated@@193) $generated@@656) ($generated@@508 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@268 $generated@@656 ($generated@@508 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@81) (= (type $generated@@660) $generated@@81)) (= (type $generated@@661) $generated@@193)) ($generated@@268 $generated@@661 ($generated@@184 $generated@@659 $generated@@660))) (and (= ($generated@@369 ($generated@@427 $generated@@91 $generated@@661)) $generated@@661) ($generated@@102 ($generated@@427 $generated@@91 $generated@@661) ($generated@@184 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@268 $generated@@661 ($generated@@184 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@662 T@U) ) (! (let (($generated@@663 (type $generated@@662)))
 (not ($generated@@0 ($generated@@117 ($generated@@527 $generated@@663) $generated@@662))))
 :pattern ( (let (($generated@@663 (type $generated@@662)))
($generated@@117 ($generated@@527 $generated@@663) $generated@@662)))
)))
(assert (forall (($generated@@665 T@U) ) (! (= (type ($generated@@664 $generated@@665)) $generated@@86)
 :pattern ( ($generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@81) (= (type $generated@@667) $generated@@81)) (and (= ($generated@@95 ($generated@@184 $generated@@666 $generated@@667)) $generated@@62) (= ($generated@@664 ($generated@@184 $generated@@666 $generated@@667)) $generated@@75)))
 :pattern ( ($generated@@184 $generated@@666 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@91) (= (type $generated@@669) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@179 $generated@@669) (and ($generated@@264 $generated@@668) ($generated@@110 $generated@@668 $generated@@265 $generated@@669)))) ($generated@@110 ($generated@@11 ($generated@@99 $generated@@668)) $generated@@44 $generated@@669))
 :pattern ( ($generated@@110 ($generated@@11 ($generated@@99 $generated@@668)) $generated@@44 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@670) $generated@@91) (= (type $generated@@671) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@179 $generated@@671) (and ($generated@@90 $generated@@670) ($generated@@110 $generated@@670 $generated@@432 $generated@@671)))) ($generated@@110 ($generated@@11 ($generated@@92 $generated@@670)) $generated@@44 $generated@@671))
 :pattern ( ($generated@@110 ($generated@@11 ($generated@@92 $generated@@670)) $generated@@44 $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@91) (= ($generated@@644 ($generated@@369 $generated@@672)) ($generated@@645 $generated@@672)))
 :pattern ( ($generated@@644 ($generated@@369 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@193) ($generated@@268 $generated@@673 ($generated@@111 0))) (and (= ($generated@@369 ($generated@@427 $generated@@2 $generated@@673)) $generated@@673) ($generated@@102 ($generated@@427 ($generated@@112 $generated@@193 $generated@@4) $generated@@673) ($generated@@111 0))))
 :pattern ( ($generated@@268 $generated@@673 ($generated@@111 0)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@674) $generated@@193) (= (type $generated@@675) $generated@@81)) ($generated@@268 $generated@@674 ($generated@@297 $generated@@675))) (and (= ($generated@@369 ($generated@@427 ($generated@@112 $generated@@193 $generated@@4) $generated@@674)) $generated@@674) ($generated@@102 ($generated@@427 ($generated@@112 $generated@@193 $generated@@4) $generated@@674) ($generated@@297 $generated@@675))))
 :pattern ( ($generated@@268 $generated@@674 ($generated@@297 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@676) $generated@@193) (= (type $generated@@677) $generated@@81)) ($generated@@268 $generated@@676 ($generated@@302 $generated@@677))) (and (= ($generated@@369 ($generated@@427 ($generated@@112 $generated@@193 $generated@@4) $generated@@676)) $generated@@676) ($generated@@102 ($generated@@427 ($generated@@112 $generated@@193 $generated@@4) $generated@@676) ($generated@@302 $generated@@677))))
 :pattern ( ($generated@@268 $generated@@676 ($generated@@302 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (= (type $generated@@678) $generated@@193) (= (type $generated@@679) $generated@@81)) ($generated@@268 $generated@@678 ($generated@@203 $generated@@679))) (and (= ($generated@@369 ($generated@@427 ($generated@@112 $generated@@193 $generated@@2) $generated@@678)) $generated@@678) ($generated@@102 ($generated@@427 ($generated@@112 $generated@@193 $generated@@2) $generated@@678) ($generated@@203 $generated@@679))))
 :pattern ( ($generated@@268 $generated@@678 ($generated@@203 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@680) $generated@@193) (= (type $generated@@681) $generated@@81)) ($generated@@268 $generated@@680 ($generated@@603 $generated@@681))) (and (= ($generated@@369 ($generated@@427 ($generated@@352 $generated@@193) $generated@@680)) $generated@@680) ($generated@@102 ($generated@@427 ($generated@@352 $generated@@193) $generated@@680) ($generated@@603 $generated@@681))))
 :pattern ( ($generated@@268 $generated@@680 ($generated@@603 $generated@@681)))
)))
(assert (= ($generated@@95 $generated@@105) $generated@@63))
(assert (= ($generated@@664 $generated@@105) $generated@@76))
(assert (= ($generated@@95 $generated@@265) $generated@@65))
(assert (= ($generated@@664 $generated@@265) $generated@@77))
(assert (= ($generated@@95 $generated@@432) $generated@@67))
(assert (= ($generated@@664 $generated@@432) $generated@@78))
(assert (= ($generated@@95 $generated@@275) $generated@@70))
(assert (= ($generated@@664 $generated@@275) $generated@@79))
(assert (= ($generated@@95 $generated@@104) $generated@@73))
(assert (= ($generated@@664 $generated@@104) $generated@@80))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@682) ($generated@@112 $generated@@193 $generated@@2)) (= (type $generated@@683) $generated@@81)) (= (type $generated@@684) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@682 ($generated@@203 $generated@@683) $generated@@684) (forall (($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@193) (< 0 ($generated ($generated@@117 $generated@@682 $generated@@685)))) ($generated@@322 $generated@@685 $generated@@683 $generated@@684))
 :pattern ( ($generated@@117 $generated@@682 $generated@@685))
))))
 :pattern ( ($generated@@110 $generated@@682 ($generated@@203 $generated@@683) $generated@@684))
)))
(assert (= $generated@@199 ($generated@@309 $generated@@199)))
(assert (= $generated@@201 ($generated@@309 $generated@@201)))
(assert (= $generated@@202 ($generated@@309 $generated@@202)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@91) (= (type $generated@@687) $generated@@81)) (= (type $generated@@688) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@179 $generated@@688) (and ($generated@@183 $generated@@686) (exists (($generated@@689 T@U) ) (!  (and (= (type $generated@@689) $generated@@81) ($generated@@110 $generated@@686 ($generated@@184 $generated@@687 $generated@@689) $generated@@688))
 :pattern ( ($generated@@110 $generated@@686 ($generated@@184 $generated@@687 $generated@@689) $generated@@688))
))))) ($generated@@322 ($generated@@191 $generated@@686) $generated@@687 $generated@@688))
 :pattern ( ($generated@@322 ($generated@@191 $generated@@686) $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) $generated@@91) (= (type $generated@@691) $generated@@81)) (= (type $generated@@692) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@179 $generated@@692) (and ($generated@@183 $generated@@690) (exists (($generated@@693 T@U) ) (!  (and (= (type $generated@@693) $generated@@81) ($generated@@110 $generated@@690 ($generated@@184 $generated@@693 $generated@@691) $generated@@692))
 :pattern ( ($generated@@110 $generated@@690 ($generated@@184 $generated@@693 $generated@@691) $generated@@692))
))))) ($generated@@322 ($generated@@192 $generated@@690) $generated@@691 $generated@@692))
 :pattern ( ($generated@@322 ($generated@@192 $generated@@690) $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@694) $generated@@91) (= (type $generated@@695) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@179 $generated@@695) (and ($generated@@264 $generated@@694) ($generated@@110 $generated@@694 $generated@@265 $generated@@695)))) ($generated@@110 ($generated@@8 ($generated@@98 $generated@@694)) $generated@@105 $generated@@695))
 :pattern ( ($generated@@110 ($generated@@8 ($generated@@98 $generated@@694)) $generated@@105 $generated@@695))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@91) (= (type $generated@@697) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@179 $generated@@697) (and ($generated@@174 $generated@@696) ($generated@@110 $generated@@696 $generated@@432 $generated@@697)))) ($generated@@110 ($generated@@8 ($generated@@175 $generated@@696)) $generated@@105 $generated@@697))
 :pattern ( ($generated@@110 ($generated@@8 ($generated@@175 $generated@@696)) $generated@@105 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@698) $generated@@91) (= (type $generated@@699) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@179 $generated@@699) (and ($generated@@291 $generated@@698) ($generated@@110 $generated@@698 $generated@@104 $generated@@699)))) ($generated@@110 ($generated@@8 ($generated@@292 $generated@@698)) $generated@@105 $generated@@699))
 :pattern ( ($generated@@110 ($generated@@8 ($generated@@292 $generated@@698)) $generated@@105 $generated@@699))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (= (type $generated@@700) $generated@@91) (= (type $generated@@701) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@179 $generated@@701) (and ($generated@@291 $generated@@700) ($generated@@110 $generated@@700 $generated@@104 $generated@@701)))) ($generated@@110 ($generated@@293 $generated@@700) $generated@@104 $generated@@701))
 :pattern ( ($generated@@110 ($generated@@293 $generated@@700) $generated@@104 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@2) (= ($generated@@102 $generated@@702 $generated@@105)  (and (<= ($generated@@307 0) ($generated $generated@@702)) (< ($generated $generated@@702) 4294967296))))
 :pattern ( ($generated@@102 $generated@@702 $generated@@105))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@193) (= (type $generated@@704) $generated@@193)) (= ($generated@@267 ($generated@@309 $generated@@703) ($generated@@309 $generated@@704)) ($generated@@309 ($generated@@267 $generated@@703 $generated@@704))))
 :pattern ( ($generated@@267 ($generated@@309 $generated@@703) ($generated@@309 $generated@@704)))
)))
(assert (forall (($generated@@705 Int) ($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@4) (= ($generated@@336 ($generated@@307 $generated@@705) ($generated@@0 ($generated@@309 $generated@@706))) ($generated@@309 ($generated@@336 $generated@@705 ($generated@@0 $generated@@706)))))
 :pattern ( ($generated@@336 ($generated@@307 $generated@@705) ($generated@@0 ($generated@@309 $generated@@706))))
)))
(assert (forall (($generated@@707 Int) ($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@91) (= ($generated@@103 ($generated@@307 $generated@@707) ($generated@@309 $generated@@708)) ($generated@@309 ($generated@@103 $generated@@707 $generated@@708))))
 :pattern ( ($generated@@103 ($generated@@307 $generated@@707) ($generated@@309 $generated@@708)))
)))
(assert (forall (($generated@@709 Int) ) (! (= ($generated@@369 ($generated@@8 ($generated@@307 $generated@@709))) ($generated@@309 ($generated@@369 ($generated@@8 $generated@@709))))
 :pattern ( ($generated@@369 ($generated@@8 ($generated@@307 $generated@@709))))
)))
(assert (forall (($generated@@710 Int) ) (! (= ($generated@@361 ($generated@@307 $generated@@710)) ($generated@@309 ($generated@@361 $generated@@710)))
 :pattern ( ($generated@@361 ($generated@@307 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@4) (= ($generated@@365 ($generated@@0 ($generated@@309 $generated@@711))) ($generated@@309 ($generated@@365 ($generated@@0 $generated@@711)))))
 :pattern ( ($generated@@365 ($generated@@0 ($generated@@309 $generated@@711))))
)))
(assert (forall (($generated@@712 T@U) ) (! (= ($generated@@369 ($generated@@309 $generated@@712)) ($generated@@309 ($generated@@369 $generated@@712)))
 :pattern ( ($generated@@369 ($generated@@309 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ) (! (let (($generated@@714 ($generated@@353 (type $generated@@713))))
 (=> (and (= (type $generated@@713) ($generated@@352 $generated@@714)) (= ($generated@@351 $generated@@713) 0)) (= $generated@@713 ($generated@@350 $generated@@714))))
 :pattern ( ($generated@@351 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (! (let (($generated@@718 (type $generated@@716)))
 (=> (and (and (= (type $generated@@715) ($generated@@112 $generated@@718 $generated@@2)) (= (type $generated@@717) $generated@@2)) (<= 0 ($generated $generated@@717))) (= ($generated@@382 ($generated@@118 $generated@@715 $generated@@716 $generated@@717)) (+ (- ($generated@@382 $generated@@715) ($generated ($generated@@117 $generated@@715 $generated@@716))) ($generated $generated@@717)))))
 :pattern ( ($generated@@382 ($generated@@118 $generated@@715 $generated@@716 $generated@@717)))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@720) $generated@@2)) ($generated@@110 $generated@@720 $generated@@46 $generated@@719))
 :pattern ( ($generated@@110 $generated@@720 $generated@@46 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@722) $generated@@3)) ($generated@@110 $generated@@722 $generated@@47 $generated@@721))
 :pattern ( ($generated@@110 $generated@@722 $generated@@47 $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@723) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@724) $generated@@4)) ($generated@@110 $generated@@724 $generated@@44 $generated@@723))
 :pattern ( ($generated@@110 $generated@@724 $generated@@44 $generated@@723))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@725) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@726) $generated@@551)) ($generated@@110 $generated@@726 $generated@@45 $generated@@725))
 :pattern ( ($generated@@110 $generated@@726 $generated@@45 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@727) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@728) $generated@@193)) ($generated@@110 $generated@@728 $generated@@48 $generated@@727))
 :pattern ( ($generated@@110 $generated@@728 $generated@@48 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@729) ($generated@@352 $generated@@193)) (= (type $generated@@730) $generated@@81)) (= ($generated@@102 $generated@@729 ($generated@@603 $generated@@730)) (forall (($generated@@731 Int) ) (!  (=> (and (<= 0 $generated@@731) (< $generated@@731 ($generated@@351 $generated@@729))) ($generated@@268 ($generated@@604 $generated@@729 $generated@@731) $generated@@730))
 :pattern ( ($generated@@604 $generated@@729 $generated@@731))
))))
 :pattern ( ($generated@@102 $generated@@729 ($generated@@603 $generated@@730)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 Int) ) (!  (=> (= (type $generated@@733) ($generated@@352 $generated@@193)) (=> (and (<= 0 $generated@@734) (< $generated@@734 ($generated@@351 $generated@@733))) (< ($generated@@645 ($generated@@427 $generated@@91 ($generated@@604 $generated@@733 $generated@@734))) ($generated@@732 $generated@@733))))
 :pattern ( ($generated@@645 ($generated@@427 $generated@@91 ($generated@@604 $generated@@733 $generated@@734))))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (and (= (type $generated@@735) ($generated@@390 $generated@@193 $generated@@193)) (= (type $generated@@736) $generated@@81)) (= (type $generated@@737) $generated@@81)) ($generated@@102 $generated@@735 ($generated@@500 $generated@@736 $generated@@737))) (and (and ($generated@@102 ($generated@@388 $generated@@735) ($generated@@297 $generated@@736)) ($generated@@102 ($generated@@441 $generated@@735) ($generated@@297 $generated@@737))) ($generated@@102 ($generated@@474 $generated@@735) ($generated@@297 ($generated@@184 $generated@@736 $generated@@737)))))
 :pattern ( ($generated@@102 $generated@@735 ($generated@@500 $generated@@736 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (and (and (= (type $generated@@738) ($generated@@408 $generated@@193 $generated@@193)) (= (type $generated@@739) $generated@@81)) (= (type $generated@@740) $generated@@81)) ($generated@@102 $generated@@738 ($generated@@508 $generated@@739 $generated@@740))) (and (and ($generated@@102 ($generated@@406 $generated@@738) ($generated@@302 $generated@@739)) ($generated@@102 ($generated@@452 $generated@@738) ($generated@@302 $generated@@740))) ($generated@@102 ($generated@@482 $generated@@738) ($generated@@302 ($generated@@184 $generated@@739 $generated@@740)))))
 :pattern ( ($generated@@102 $generated@@738 ($generated@@508 $generated@@739 $generated@@740)))
)))
(assert (forall (($generated@@741 T@U) ) (!  (=> (= (type $generated@@741) $generated@@2) ($generated@@102 $generated@@741 $generated@@46))
 :pattern ( ($generated@@102 $generated@@741 $generated@@46))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@3) ($generated@@102 $generated@@742 $generated@@47))
 :pattern ( ($generated@@102 $generated@@742 $generated@@47))
)))
(assert (forall (($generated@@743 T@U) ) (!  (=> (= (type $generated@@743) $generated@@4) ($generated@@102 $generated@@743 $generated@@44))
 :pattern ( ($generated@@102 $generated@@743 $generated@@44))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@551) ($generated@@102 $generated@@744 $generated@@45))
 :pattern ( ($generated@@102 $generated@@744 $generated@@45))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@193) ($generated@@102 $generated@@745 $generated@@48))
 :pattern ( ($generated@@102 $generated@@745 $generated@@48))
)))
(assert (forall (($generated@@746 Int) ($generated@@747 Bool) ($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@748) ($generated@@112 $generated@@113 $generated@@114)) ($generated@@179 $generated@@748)) (= ($generated@@110 ($generated@@336 $generated@@746 $generated@@747) $generated@@265 $generated@@748)  (and ($generated@@110 ($generated@@8 $generated@@746) $generated@@105 $generated@@748) ($generated@@110 ($generated@@11 $generated@@747) $generated@@44 $generated@@748))))
 :pattern ( ($generated@@110 ($generated@@336 $generated@@746 $generated@@747) $generated@@265 $generated@@748))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () Int)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 () Int)
(declare-fun $generated@@755 () T@U)
(declare-fun $generated@@756 () T@U)
(declare-fun $generated@@757 (T@U) Bool)
(declare-fun $generated@@758 () T@U)
(declare-fun $generated@@759 () T@U)
(declare-fun $generated@@760 () T@U)
(declare-fun $generated@@761 () T@U)
(declare-fun $generated@@762 () Int)
(declare-fun $generated@@763 () T@U)
(declare-fun $generated@@764 () Int)
(declare-fun $generated@@765 () T@U)
(declare-fun $generated@@766 () T@U)
(declare-fun $generated@@767 () T@U)
(declare-fun $generated@@768 () T@U)
(declare-fun $generated@@769 () Int)
(declare-fun $generated@@770 () T@U)
(declare-fun $generated@@771 () Int)
(declare-fun $generated@@772 () T@U)
(declare-fun $generated@@773 () T@U)
(declare-fun $generated@@774 () T@U)
(declare-fun $generated@@775 () T@U)
(declare-fun $generated@@776 () Int)
(declare-fun $generated@@777 () T@U)
(declare-fun $generated@@778 () Int)
(declare-fun $generated@@779 () T@U)
(declare-fun $generated@@780 () T@U)
(declare-fun $generated@@781 () T@U)
(declare-fun $generated@@782 () T@U)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () Int)
(declare-fun $generated@@785 () Int)
(declare-fun $generated@@786 () Int)
(declare-fun $generated@@787 () T@U)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () Int)
(declare-fun $generated@@790 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@749) ($generated@@210 $generated@@113 $generated@@4)) (= (type $generated@@750) $generated@@113)) (= (type $generated@@751) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@753) $generated@@91)) (= (type $generated@@755) $generated@@91)) (= (type $generated@@756) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@758) $generated@@91)) (= (type $generated@@759) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@760) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@761) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@763) $generated@@91)) (= (type $generated@@765) $generated@@91)) (= (type $generated@@766) $generated@@91)) (= (type $generated@@767) $generated@@91)) (= (type $generated@@768) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@770) $generated@@91)) (= (type $generated@@772) $generated@@91)) (= (type $generated@@773) $generated@@91)) (= (type $generated@@774) $generated@@91)) (= (type $generated@@775) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@777) $generated@@91)) (= (type $generated@@779) $generated@@91)) (= (type $generated@@780) $generated@@91)) (= (type $generated@@781) $generated@@91)) (= (type $generated@@782) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@783) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@787) $generated@@91)) (= (type $generated@@788) $generated@@91)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@791  (=> (and (= $generated@@749 ($generated@@209 $generated@@750 $generated@@751 $generated@@60 false)) (= $generated@@752 ($generated@@307 22))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@307 0) $generated@@752) (< $generated@@752 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@752) (< $generated@@752 4294967296)) (=> (and (= $generated@@753 ($generated@@309 ($generated@@336 ($generated@@307 22) ($generated@@0 ($generated@@309 ($generated@@11 false)))))) (= $generated@@754 ($generated@@307 42))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@307 0) $generated@@754) (< $generated@@754 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@754) (< $generated@@754 4294967296)) (=> (= $generated@@755 ($generated@@309 ($generated@@361 ($generated@@307 42)))) (=> (and (and (and ($generated@@179 $generated@@756) ($generated@@757 $generated@@756)) (forall (($generated@@792 T@U) ) (!  (=> (= (type $generated@@792) $generated@@113) (=> (and (not (= $generated@@792 $generated@@750)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@751 $generated@@792) $generated@@60))) (= ($generated@@117 $generated@@756 $generated@@792) ($generated@@117 $generated@@751 $generated@@792))))
 :pattern ( ($generated@@117 $generated@@756 $generated@@792))
))) (and ($generated@@168 $generated@@751 $generated@@756) (= $generated@@758 ($generated@@309 ($generated@@365 ($generated@@0 ($generated@@309 ($generated@@11 true)))))))) (=> (and (and (and (and ($generated@@179 $generated@@759) ($generated@@757 $generated@@759)) (and (forall (($generated@@793 T@U) ) (!  (=> (= (type $generated@@793) $generated@@113) (=> (and (not (= $generated@@793 $generated@@750)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@756 $generated@@793) $generated@@60))) (= ($generated@@117 $generated@@759 $generated@@793) ($generated@@117 $generated@@756 $generated@@793))))
 :pattern ( ($generated@@117 $generated@@759 $generated@@793))
)) ($generated@@168 $generated@@756 $generated@@759))) (and (and ($generated@@179 $generated@@760) ($generated@@757 $generated@@760)) (and (forall (($generated@@794 T@U) ) (!  (=> (= (type $generated@@794) $generated@@113) (=> (and (not (= $generated@@794 $generated@@750)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@759 $generated@@794) $generated@@60))) (= ($generated@@117 $generated@@760 $generated@@794) ($generated@@117 $generated@@759 $generated@@794))))
 :pattern ( ($generated@@117 $generated@@760 $generated@@794))
)) ($generated@@168 $generated@@759 $generated@@760)))) (and (and (and ($generated@@179 $generated@@761) ($generated@@757 $generated@@761)) (forall (($generated@@795 T@U) ) (!  (=> (= (type $generated@@795) $generated@@113) (=> (and (not (= $generated@@795 $generated@@750)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@760 $generated@@795) $generated@@60))) (= ($generated@@117 $generated@@761 $generated@@795) ($generated@@117 $generated@@760 $generated@@795))))
 :pattern ( ($generated@@117 $generated@@761 $generated@@795))
))) (and ($generated@@168 $generated@@760 $generated@@761) (= $generated@@762 ($generated@@307 42))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@307 0) $generated@@762) (< $generated@@762 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@762) (< $generated@@762 4294967296)) (=> (and (= $generated@@763 ($generated@@309 ($generated@@336 ($generated@@307 42) ($generated@@0 ($generated@@309 ($generated@@11 true)))))) (= $generated@@764 ($generated@@307 42))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@307 0) $generated@@764) (< $generated@@764 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@764) (< $generated@@764 4294967296)) (=> (= $generated@@765 ($generated@@309 ($generated@@336 ($generated@@307 42) ($generated@@0 ($generated@@309 ($generated@@11 true)))))) (=> (and (= $generated@@766 ($generated@@309 $generated@@201)) (= $generated@@767 ($generated@@309 $generated@@201))) (=> (and (and (and ($generated@@179 $generated@@768) ($generated@@757 $generated@@768)) (forall (($generated@@796 T@U) ) (!  (=> (= (type $generated@@796) $generated@@113) (=> (and (not (= $generated@@796 $generated@@750)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@761 $generated@@796) $generated@@60))) (= ($generated@@117 $generated@@768 $generated@@796) ($generated@@117 $generated@@761 $generated@@796))))
 :pattern ( ($generated@@117 $generated@@768 $generated@@796))
))) (and ($generated@@168 $generated@@761 $generated@@768) (= $generated@@769 ($generated@@307 42)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@307 0) $generated@@769) (< $generated@@769 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@769) (< $generated@@769 4294967296)) (=> (and (= $generated@@770 ($generated@@309 ($generated@@336 ($generated@@307 42) ($generated@@0 ($generated@@309 ($generated@@11 false)))))) (= $generated@@771 ($generated@@307 42))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@307 0) $generated@@771) (< $generated@@771 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@771) (< $generated@@771 4294967296)) (=> (= $generated@@772 ($generated@@309 ($generated@@336 ($generated@@307 42) ($generated@@0 ($generated@@309 ($generated@@11 true)))))) (=> (and (= $generated@@773 ($generated@@309 $generated@@199)) (= $generated@@774 ($generated@@309 $generated@@199))) (=> (and (and (and ($generated@@179 $generated@@775) ($generated@@757 $generated@@775)) (forall (($generated@@797 T@U) ) (!  (=> (= (type $generated@@797) $generated@@113) (=> (and (not (= $generated@@797 $generated@@750)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@768 $generated@@797) $generated@@60))) (= ($generated@@117 $generated@@775 $generated@@797) ($generated@@117 $generated@@768 $generated@@797))))
 :pattern ( ($generated@@117 $generated@@775 $generated@@797))
))) (and ($generated@@168 $generated@@768 $generated@@775) (= $generated@@776 ($generated@@307 2)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@307 0) $generated@@776) (< $generated@@776 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@776) (< $generated@@776 4294967296)) (=> (and (= $generated@@777 ($generated@@309 ($generated@@336 ($generated@@307 2) ($generated@@0 ($generated@@309 ($generated@@11 false)))))) (= $generated@@778 ($generated@@307 42))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@307 0) $generated@@778) (< $generated@@778 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@778) (< $generated@@778 4294967296)) (=> (= $generated@@779 ($generated@@309 ($generated@@336 ($generated@@307 42) ($generated@@0 ($generated@@309 ($generated@@11 false)))))) (=> (and (= $generated@@780 ($generated@@309 $generated@@199)) (= $generated@@781 ($generated@@309 $generated@@201))) (=> (and (and ($generated@@179 $generated@@782) ($generated@@757 $generated@@782)) (and (forall (($generated@@798 T@U) ) (!  (=> (= (type $generated@@798) $generated@@113) (=> (and (not (= $generated@@798 $generated@@750)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@775 $generated@@798) $generated@@60))) (= ($generated@@117 $generated@@782 $generated@@798) ($generated@@117 $generated@@775 $generated@@798))))
 :pattern ( ($generated@@117 $generated@@782 $generated@@798))
)) ($generated@@168 $generated@@775 $generated@@782))) (=> (and (and (and ($generated@@179 $generated@@783) ($generated@@757 $generated@@783)) (forall (($generated@@799 T@U) ) (!  (=> (= (type $generated@@799) $generated@@113) (=> (and (not (= $generated@@799 $generated@@750)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@782 $generated@@799) $generated@@60))) (= ($generated@@117 $generated@@783 $generated@@799) ($generated@@117 $generated@@782 $generated@@799))))
 :pattern ( ($generated@@117 $generated@@783 $generated@@799))
))) (and ($generated@@168 $generated@@782 $generated@@783) (= $generated@@784 ($generated@@307 15)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@307 0) $generated@@784) (< $generated@@784 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@784) (< $generated@@784 4294967296)) (=> (= $generated@@785 ($generated@@307 18)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@307 0) $generated@@785) (< $generated@@785 4294967296))) (=> (and (<= ($generated@@307 0) $generated@@785) (< $generated@@785 4294967296)) (=> (and (= $generated@@786 ($generated@@307 330)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@307 0) $generated@@786) (< $generated@@786 4294967296))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@800  (=> (and ($generated@@179 $generated@@751) ($generated@@757 $generated@@751)) (=> (and (and (and (and ($generated@@102 $generated@@787 $generated@@265) ($generated@@110 $generated@@787 $generated@@265 $generated@@751)) true) (and (and ($generated@@102 $generated@@788 $generated@@432) ($generated@@110 $generated@@788 $generated@@432 $generated@@751)) true)) (and (and (and (<= ($generated@@307 0) $generated@@789) (< $generated@@789 4294967296)) true) (and (= 4 $generated@@790) (= (ControlFlow 0 13) 2)))) $generated@@791))))
$generated@@800)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
