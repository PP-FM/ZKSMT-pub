(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@T) T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert  (and (and (and (forall (($generated@@246 T@T) ) (= ($generated@@1 ($generated@@244 $generated@@246)) 17)) (forall (($generated@@247 T@T) ) (! (= ($generated@@245 ($generated@@244 $generated@@247)) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@242 $generated@@248 $generated@@249)) ($generated@@244 $generated@@250)))
 :pattern ( ($generated@@242 $generated@@248 $generated@@249))
))) (forall (($generated@@251 T@U) ) (! (= (type ($generated@@243 $generated@@251)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) ($generated@@244 $generated@@150)) (= (type $generated@@253) $generated@@150)) (= (type $generated@@254) $generated@@66)) (and ($generated@@137 $generated@@252 ($generated@@243 $generated@@254)) ($generated@@217 $generated@@253 $generated@@254))) ($generated@@137 ($generated@@242 $generated@@252 $generated@@253) ($generated@@243 $generated@@254)))
 :pattern ( ($generated@@137 ($generated@@242 $generated@@252 $generated@@253) ($generated@@243 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@66) (= (type $generated@@258) $generated@@66)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@255 $generated@@261)) (= ($generated@@76 ($generated@@216 $generated@@259 $generated@@260) ($generated@@140 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@259 $generated@@260) ($generated@@140 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@141) (= ($generated@@139 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@141) ($generated@@139 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@150) (= (type $generated@@267) $generated@@150)) (= $generated@@265 ($generated@@216 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@139 $generated@@265))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@268 $generated@@270)) ($generated@@244 $generated@@270))
 :pattern ( ($generated@@268 $generated@@270))
)))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) 0)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
 (=> (= (type $generated@@272) ($generated@@244 $generated@@274)) (= ($generated@@269 ($generated@@242 $generated@@272 $generated@@273)) (+ 1 ($generated@@269 $generated@@272)))))
 :pattern ( ($generated@@242 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@150)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@66) (= (type $generated@@279) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@256 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@76 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@256 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@78 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@81 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@78 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@83 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@78 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@81 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@78 $generated@@323 $generated@@2)) (= ($generated@@156 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@83 $generated@@322 $generated@@324))) (<= ($generated ($generated@@83 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@83 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@156 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@150) ($generated@@217 $generated@@328 $generated@@134)) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@328)) $generated@@328) ($generated@@137 ($generated@@325 $generated@@2 $generated@@328) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@328 $generated@@134))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 Int) ) (! (let (($generated@@332 ($generated@@245 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 Int) ($generated@@335 T@U) ) (! (let (($generated@@336 (type $generated@@335)))
 (=> (= (type $generated@@333) ($generated@@244 $generated@@336)) (and (=> (= $generated@@334 ($generated@@269 $generated@@333)) (= ($generated@@329 ($generated@@242 $generated@@333 $generated@@335) $generated@@334) $generated@@335)) (=> (not (= $generated@@334 ($generated@@269 $generated@@333))) (= ($generated@@329 ($generated@@242 $generated@@333 $generated@@335) $generated@@334) ($generated@@329 $generated@@333 $generated@@334))))))
 :pattern ( ($generated@@329 ($generated@@242 $generated@@333 $generated@@335) $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@290 (type $generated@@337))))
(let (($generated@@339 ($generated@@289 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@288 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@287 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@286 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@290 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@78 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@290 (type $generated@@344))))
(let (($generated@@346 ($generated@@289 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@288 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@287 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@308 (type $generated@@348))))
(let (($generated@@350 ($generated@@307 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@306 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@305 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@304 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@308 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@78 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@308 (type $generated@@355))))
(let (($generated@@357 ($generated@@307 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@306 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@305 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@360) $generated@@66)) (= ($generated@@137 $generated@@359 ($generated@@155 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@359 $generated@@361)))) ($generated@@217 $generated@@361 $generated@@360))
 :pattern ( ($generated@@83 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@137 $generated@@359 ($generated@@155 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@363) $generated@@66)) (= (type $generated@@364) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@362 ($generated@@226 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@150) ($generated@@0 ($generated@@83 $generated@@362 $generated@@365))) ($generated@@256 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@226 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@231 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@150) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@256 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@231 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@83 ($generated@@281 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@83 ($generated@@281 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@290 (type $generated@@375))))
(let (($generated@@377 ($generated@@289 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@288 $generated@@150 $generated@@150)) (= (type $generated@@379) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@378) ($generated@@148 ($generated@@325 $generated@@141 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@148 ($generated@@325 $generated@@141 $generated@@379))) ($generated@@149 ($generated@@325 $generated@@141 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@308 (type $generated@@383))))
(let (($generated@@385 ($generated@@307 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@306 $generated@@150 $generated@@150)) (= (type $generated@@387) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@386) ($generated@@148 ($generated@@325 $generated@@141 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@148 ($generated@@325 $generated@@141 $generated@@387))) ($generated@@149 ($generated@@325 $generated@@141 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@289 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@288 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@307 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@306 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@83 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@288 $generated@@150 $generated@@150)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@401) $generated@@405))) (and ($generated@@256 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@256 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@306 $generated@@150 $generated@@150)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@409) $generated@@413))) (and ($generated@@256 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@256 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@78 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@308 (type $generated@@416))))
(let (($generated@@418 ($generated@@307 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@306 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@305 $generated@@418 $generated@@417)) (= ($generated@@304 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@304 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@308 (type $generated@@419))))
(let (($generated@@421 ($generated@@307 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@306 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@305 $generated@@421 $generated@@420)) (= ($generated@@352 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@352 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@308 (type $generated@@422))))
(let (($generated@@424 ($generated@@307 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@306 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@305 $generated@@424 $generated@@423)) (= ($generated@@380 $generated@@422) ($generated@@414 $generated@@150))))))
 :pattern ( ($generated@@380 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@290 (type $generated@@425))))
(let (($generated@@427 ($generated@@289 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@288 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@287 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@150) (= (type $generated@@429) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@425) ($generated@@275 ($generated@@216 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@308 (type $generated@@430))))
(let (($generated@@432 ($generated@@307 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@306 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@305 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@150) (= (type $generated@@434) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@430) ($generated@@275 ($generated@@216 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@150) ($generated@@217 $generated@@435 $generated@@46)) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@435)) $generated@@435) ($generated@@137 ($generated@@325 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@150) ($generated@@217 $generated@@436 $generated@@47)) (and (= ($generated@@275 ($generated@@325 $generated@@3 $generated@@436)) $generated@@436) ($generated@@137 ($generated@@325 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@150) ($generated@@217 $generated@@437 $generated@@44)) (and (= ($generated@@275 ($generated@@325 $generated@@4 $generated@@437)) $generated@@437) ($generated@@137 ($generated@@325 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@150) ($generated@@217 $generated@@439 $generated@@45)) (and (= ($generated@@275 ($generated@@325 $generated@@438 $generated@@439)) $generated@@439) ($generated@@137 ($generated@@325 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@66) (= ($generated@@217 ($generated@@275 $generated@@440) $generated@@441) ($generated@@137 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@217 ($generated@@275 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@81 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@78 $generated@@443 $generated@@2)) (<= 0 ($generated@@280 $generated@@442))))
 :pattern ( ($generated@@280 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@245 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@244 $generated@@445)) (<= 0 ($generated@@269 $generated@@444))))
 :pattern ( ($generated@@269 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@398 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@398 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) (= (type $generated@@467) $generated@@150)) (= ($generated@@262 ($generated@@216 $generated@@466 $generated@@467)) $generated@@61))
 :pattern ( ($generated@@216 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@140 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@140 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@140 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@140 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@150) (= (type $generated@@477) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@216 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@150) (= (type $generated@@479) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@216 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@244 $generated@@150)) (= (type $generated@@481) $generated@@66)) (= (type $generated@@482) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@480 ($generated@@243 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@269 $generated@@480))) ($generated@@256 ($generated@@329 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@329 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@76 $generated@@480 ($generated@@243 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@77 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@77 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@486 ($generated@@226 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@226 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@231 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@231 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@494 ($generated@@155 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@155 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@243 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@243 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@325 $generated@@503 ($generated@@275 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@275 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@288 $generated@@150 $generated@@150)) (= (type $generated@@505) $generated@@66)) (= (type $generated@@506) $generated@@66)) (= ($generated@@137 $generated@@504 ($generated@@398 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@504) $generated@@507))) (and ($generated@@217 ($generated@@83 ($generated@@373 $generated@@504) $generated@@507) $generated@@506) ($generated@@217 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@504) $generated@@507))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@137 $generated@@504 ($generated@@398 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@306 $generated@@150 $generated@@150)) (= (type $generated@@509) $generated@@66)) (= (type $generated@@510) $generated@@66)) (= ($generated@@137 $generated@@508 ($generated@@406 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@508) $generated@@511))) (and ($generated@@217 ($generated@@83 ($generated@@381 $generated@@508) $generated@@511) $generated@@510) ($generated@@217 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@508) $generated@@511))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@137 $generated@@508 ($generated@@406 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@150) (= (type $generated@@515) $generated@@150)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@216 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@216 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@150) (= (type $generated@@517) $generated@@150)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@216 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@216 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@66)) (= (type $generated@@520) $generated@@66)) ($generated@@217 $generated@@518 ($generated@@398 $generated@@519 $generated@@520))) (and (= ($generated@@275 ($generated@@325 ($generated@@288 $generated@@150 $generated@@150) $generated@@518)) $generated@@518) ($generated@@137 ($generated@@325 ($generated@@288 $generated@@150 $generated@@150) $generated@@518) ($generated@@398 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@217 $generated@@518 ($generated@@398 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@150) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@66)) ($generated@@217 $generated@@521 ($generated@@406 $generated@@522 $generated@@523))) (and (= ($generated@@275 ($generated@@325 ($generated@@306 $generated@@150 $generated@@150) $generated@@521)) $generated@@521) ($generated@@137 ($generated@@325 ($generated@@306 $generated@@150 $generated@@150) $generated@@521) ($generated@@406 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@217 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@66) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@150)) ($generated@@217 $generated@@526 ($generated@@140 $generated@@524 $generated@@525))) (and (= ($generated@@275 ($generated@@325 $generated@@141 $generated@@526)) $generated@@526) ($generated@@137 ($generated@@325 $generated@@141 $generated@@526) ($generated@@140 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@217 $generated@@526 ($generated@@140 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@83 ($generated@@414 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@83 ($generated@@414 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@140 $generated@@531 $generated@@532)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@531 $generated@@532))
)))
(assert  (and (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@245 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535)) ($generated@@244 $generated@@536)))
 :pattern ( ($generated@@533 $generated@@535))
)) (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@245 (type $generated@@537))))
(= (type ($generated@@534 $generated@@537)) $generated@@538))
 :pattern ( ($generated@@534 $generated@@537))
))))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (=> (= (type $generated@@539) ($generated@@244 $generated@@541)) (and (= ($generated@@533 ($generated@@242 $generated@@539 $generated@@540)) $generated@@539) (= ($generated@@534 ($generated@@242 $generated@@539 $generated@@540)) $generated@@540))))
 :pattern ( ($generated@@242 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@141) (= ($generated@@512 ($generated@@275 $generated@@542)) ($generated@@513 $generated@@542)))
 :pattern ( ($generated@@512 ($generated@@275 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@150) ($generated@@217 $generated@@543 ($generated@@77 0))) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@543)) $generated@@543) ($generated@@137 ($generated@@325 ($generated@@78 $generated@@150 $generated@@4) $generated@@543) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@543 ($generated@@77 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) ($generated@@217 $generated@@544 ($generated@@226 $generated@@545))) (and (= ($generated@@275 ($generated@@325 ($generated@@78 $generated@@150 $generated@@4) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@325 ($generated@@78 $generated@@150 $generated@@4) $generated@@544) ($generated@@226 $generated@@545))))
 :pattern ( ($generated@@217 $generated@@544 ($generated@@226 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) ($generated@@217 $generated@@546 ($generated@@231 $generated@@547))) (and (= ($generated@@275 ($generated@@325 ($generated@@78 $generated@@150 $generated@@4) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@325 ($generated@@78 $generated@@150 $generated@@4) $generated@@546) ($generated@@231 $generated@@547))))
 :pattern ( ($generated@@217 $generated@@546 ($generated@@231 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@217 $generated@@548 ($generated@@155 $generated@@549))) (and (= ($generated@@275 ($generated@@325 ($generated@@78 $generated@@150 $generated@@2) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@325 ($generated@@78 $generated@@150 $generated@@2) $generated@@548) ($generated@@155 $generated@@549))))
 :pattern ( ($generated@@217 $generated@@548 ($generated@@155 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@150) (= (type $generated@@551) $generated@@66)) ($generated@@217 $generated@@550 ($generated@@243 $generated@@551))) (and (= ($generated@@275 ($generated@@325 ($generated@@244 $generated@@150) $generated@@550)) $generated@@550) ($generated@@137 ($generated@@325 ($generated@@244 $generated@@150) $generated@@550) ($generated@@243 $generated@@551))))
 :pattern ( ($generated@@217 $generated@@550 ($generated@@243 $generated@@551)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@529 $generated@@134) $generated@@65))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@552 ($generated@@155 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@552 $generated@@555)))) ($generated@@256 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@83 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@155 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@141) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@558) (and ($generated@@139 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@256 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@256 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@141) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@562) (and ($generated@@139 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@66) ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@256 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@256 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@2) (= ($generated@@137 $generated@@564 $generated@@134)  (and (<= ($generated@@236 0) ($generated $generated@@564)) (< ($generated $generated@@564) 4294967296))))
 :pattern ( ($generated@@137 $generated@@564 $generated@@134))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@150) (= (type $generated@@566) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@565) ($generated@@238 $generated@@566)) ($generated@@238 ($generated@@216 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@565) ($generated@@238 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@236 $generated@@567))) ($generated@@238 ($generated@@275 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@236 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@275 ($generated@@238 $generated@@568)) ($generated@@238 ($generated@@275 $generated@@568)))
 :pattern ( ($generated@@275 ($generated@@238 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@245 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@244 $generated@@570)) (= ($generated@@269 $generated@@569) 0)) (= $generated@@569 ($generated@@268 $generated@@570))))
 :pattern ( ($generated@@269 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@78 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@280 ($generated@@84 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@280 $generated@@571) ($generated ($generated@@83 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@280 ($generated@@84 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@2)) ($generated@@76 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@3)) ($generated@@76 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@4)) ($generated@@76 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@582) $generated@@438)) ($generated@@76 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@76 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@150)) ($generated@@76 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@244 $generated@@150)) (= (type $generated@@586) $generated@@66)) (= ($generated@@137 $generated@@585 ($generated@@243 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@269 $generated@@585))) ($generated@@217 ($generated@@329 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@329 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@137 $generated@@585 ($generated@@243 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@244 $generated@@150)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@269 $generated@@589))) (< ($generated@@513 ($generated@@325 $generated@@141 ($generated@@329 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@513 ($generated@@325 $generated@@141 ($generated@@329 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@288 $generated@@150 $generated@@150)) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) $generated@@66)) ($generated@@137 $generated@@591 ($generated@@398 $generated@@592 $generated@@593))) (and (and ($generated@@137 ($generated@@286 $generated@@591) ($generated@@226 $generated@@592)) ($generated@@137 ($generated@@341 $generated@@591) ($generated@@226 $generated@@593))) ($generated@@137 ($generated@@372 $generated@@591) ($generated@@226 ($generated@@140 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@137 $generated@@591 ($generated@@398 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@306 $generated@@150 $generated@@150)) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) $generated@@66)) ($generated@@137 $generated@@594 ($generated@@406 $generated@@595 $generated@@596))) (and (and ($generated@@137 ($generated@@304 $generated@@594) ($generated@@231 $generated@@595)) ($generated@@137 ($generated@@352 $generated@@594) ($generated@@231 $generated@@596))) ($generated@@137 ($generated@@380 $generated@@594) ($generated@@231 ($generated@@140 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@137 $generated@@594 ($generated@@406 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@137 $generated@@597 $generated@@46))
 :pattern ( ($generated@@137 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@137 $generated@@598 $generated@@47))
 :pattern ( ($generated@@137 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@137 $generated@@599 $generated@@44))
 :pattern ( ($generated@@137 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@438) ($generated@@137 $generated@@600 $generated@@45))
 :pattern ( ($generated@@137 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@150) ($generated@@137 $generated@@601 $generated@@48))
 :pattern ( ($generated@@137 $generated@@601 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(assert  (and (and (and (= (type $generated@@604) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@605) $generated@@79)) (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@608) ($generated@@244 $generated@@150))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@610  (=> (= $generated@@602 ($generated@@236 0)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (and (<= ($generated@@236 0) $generated@@602) (< $generated@@602 4294967296))) (=> (and (<= ($generated@@236 0) $generated@@602) (< $generated@@602 4294967296)) (=> (= $generated@@603 ($generated@@236 0)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@236 0) $generated@@603) (< $generated@@603 4294967296))) (=> (and (<= ($generated@@236 0) $generated@@603) (< $generated@@603 4294967296)) (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@269 ($generated@@238 ($generated@@242 ($generated@@242 ($generated@@268 $generated@@150) ($generated@@275 ($generated@@8 ($generated@@236 0)))) ($generated@@275 ($generated@@8 ($generated@@236 0)))))) ($generated@@236 2)))))))))))
(let (($generated@@611 true))
(let (($generated@@612  (=> (= $generated@@604 ($generated@@161 $generated@@605 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@611) (=> (= (ControlFlow 0 6) 3) $generated@@610)))))
(let (($generated@@613  (=> (and (and (and ($generated@@255 $generated@@606) ($generated@@607 $generated@@606)) ($generated@@137 $generated@@608 ($generated@@243 $generated@@134))) (and (= 1 $generated@@609) (= (ControlFlow 0 7) 6))) $generated@@612)))
$generated@@613)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (forall (($generated@@139 T@U) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@66)
 :pattern ( ($generated@@135 $generated@@139))
)) (= (type $generated@@136) $generated@@79)) (forall (($generated@@140 T@U) ) (! (= (type ($generated@@137 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@137 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) $generated@@79)) (and (not (= $generated@@142 $generated@@136)) (= ($generated@@137 $generated@@142) ($generated@@135 $generated@@141)))) ($generated@@138 ($generated@@8 ($generated@@134 $generated@@142)) $generated@@46))
 :pattern ( ($generated@@134 $generated@@142) ($generated@@135 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@66) (= (type $generated@@144) $generated@@79)) (= (type $generated@@145) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@144 ($generated@@135 $generated@@143) $generated@@145)  (or (= $generated@@144 $generated@@136) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@76 $generated@@144 ($generated@@135 $generated@@143) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@66) (= (type $generated@@148) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@149) $generated@@79)) (and (and ($generated@@146 $generated@@148) (and (not (= $generated@@149 $generated@@136)) (= ($generated@@137 $generated@@149) ($generated@@135 $generated@@147)))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@148 $generated@@149) $generated@@60)))) ($generated@@76 ($generated@@8 ($generated@@134 $generated@@149)) $generated@@46 $generated@@148))
 :pattern ( ($generated@@134 $generated@@149) ($generated@@85 ($generated@@83 $generated@@148 $generated@@149) $generated@@60) ($generated@@135 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@138 $generated@@150 ($generated@@77 0)))
 :pattern ( ($generated@@138 $generated@@150 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 14) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@66)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@66) (= (type $generated@@157) $generated@@66)) (= (type $generated@@158) $generated@@153)) ($generated@@138 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@138 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 15) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@153) (= (type $generated@@166) $generated@@153)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@66)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@78 $generated@@162 $generated@@2)) (= (type $generated@@171) $generated@@66)) ($generated@@138 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@138 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 16)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@79 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@153)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@162)) (= (type $generated@@235) $generated@@162)) (= ($generated@@138 ($generated@@228 $generated@@234 $generated@@235) ($generated@@152 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@138 ($generated@@228 $generated@@234 $generated@@235) ($generated@@152 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@153) (= (type $generated@@237) $generated@@153)) (= ($generated@@159 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@159 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@162 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@138 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@162) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@138 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@162 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@138 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@162) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@138 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@66) (= (type $generated@@254) $generated@@66)) (= (type $generated@@255) $generated@@162)) (= (type $generated@@256) $generated@@162)) (= (type $generated@@257) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@146 $generated@@257)) (= ($generated@@76 ($generated@@228 $generated@@255 $generated@@256) ($generated@@152 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@255 $generated@@256) ($generated@@152 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@70)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@153) (= ($generated@@151 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@62)))
 :pattern ( ($generated@@151 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@153) ($generated@@151 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@162) (= (type $generated@@263) $generated@@162)) (= $generated@@261 ($generated@@228 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@151 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 17)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@162)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@66) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@252 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@76 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@252 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@78 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@81 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@78 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@83 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@71)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@66) (and (= ($generated@@74 ($generated@@135 $generated@@285)) $generated@@61) (= ($generated@@283 ($generated@@135 $generated@@285)) $generated@@64)))
 :pattern ( ($generated@@135 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@78 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@83 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@81 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@78 $generated@@323 $generated@@2)) (= ($generated@@168 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@83 $generated@@322 $generated@@324))) (<= ($generated ($generated@@83 $generated@@322 $generated@@324)) ($generated@@277 $generated@@322))))
 :pattern ( ($generated@@83 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@168 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@66) (= (type $generated@@326) $generated@@79)) (= ($generated@@138 $generated@@326 ($generated@@135 $generated@@325))  (or (= $generated@@326 $generated@@136) (= ($generated@@137 $generated@@326) ($generated@@135 $generated@@325)))))
 :pattern ( ($generated@@138 $generated@@326 ($generated@@135 $generated@@325)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@290 (type $generated@@327))))
(let (($generated@@329 ($generated@@289 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@288 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@287 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@286 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@290 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@78 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(let (($generated@@336 ($generated@@289 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@288 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@287 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@308 (type $generated@@338))))
(let (($generated@@340 ($generated@@307 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@306 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@305 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@304 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@308 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@78 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(let (($generated@@347 ($generated@@307 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@306 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@305 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@78 $generated@@162 $generated@@2)) (= (type $generated@@350) $generated@@66)) (= ($generated@@138 $generated@@349 ($generated@@167 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@162) (< 0 ($generated ($generated@@83 $generated@@349 $generated@@351)))) ($generated@@229 $generated@@351 $generated@@350))
 :pattern ( ($generated@@83 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@138 $generated@@349 ($generated@@167 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@78 $generated@@162 $generated@@4)) (= (type $generated@@353) $generated@@66)) (= (type $generated@@354) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@352 ($generated@@238 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@162) ($generated@@0 ($generated@@83 $generated@@352 $generated@@355))) ($generated@@252 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@83 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@76 $generated@@352 ($generated@@238 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@78 $generated@@162 $generated@@4)) (= (type $generated@@357) $generated@@66)) (= (type $generated@@358) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@356 ($generated@@243 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@162) ($generated@@0 ($generated@@83 $generated@@356 $generated@@359))) ($generated@@252 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@83 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@76 $generated@@356 ($generated@@243 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@83 ($generated@@278 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@83 ($generated@@278 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@78 $generated@@162 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@290 (type $generated@@368))))
(let (($generated@@370 ($generated@@289 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@288 $generated@@162 $generated@@162)) (= (type $generated@@372) $generated@@162)) (= ($generated@@0 ($generated@@83 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@371) ($generated@@160 ($generated@@363 $generated@@153 $generated@@372)))) (= ($generated@@83 ($generated@@364 $generated@@371) ($generated@@160 ($generated@@363 $generated@@153 $generated@@372))) ($generated@@161 ($generated@@363 $generated@@153 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@162 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@308 (type $generated@@376))))
(let (($generated@@378 ($generated@@307 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@306 $generated@@162 $generated@@162)) (= (type $generated@@380) $generated@@162)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@379) ($generated@@160 ($generated@@363 $generated@@153 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@160 ($generated@@363 $generated@@153 $generated@@380))) ($generated@@161 ($generated@@363 $generated@@153 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@289 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@288 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@331 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@286 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@307 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@306 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@342 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@342 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@288 $generated@@162 $generated@@162)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@162) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@394) $generated@@398))) (and ($generated@@252 ($generated@@83 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@252 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@306 $generated@@162 $generated@@162)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@162) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@402) $generated@@406))) (and ($generated@@252 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@252 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@78 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@308 (type $generated@@409))))
(let (($generated@@411 ($generated@@307 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@306 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@305 $generated@@411 $generated@@410)) (= ($generated@@304 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@304 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@308 (type $generated@@412))))
(let (($generated@@414 ($generated@@307 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@306 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@305 $generated@@414 $generated@@413)) (= ($generated@@342 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@342 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@308 (type $generated@@415))))
(let (($generated@@417 ($generated@@307 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@306 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@305 $generated@@417 $generated@@416)) (= ($generated@@373 $generated@@415) ($generated@@407 $generated@@162))))))
 :pattern ( ($generated@@373 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@290 (type $generated@@418))))
(let (($generated@@420 ($generated@@289 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@288 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@287 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@162) (= (type $generated@@422) $generated@@162)) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@418) ($generated@@272 ($generated@@228 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@362 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@308 (type $generated@@423))))
(let (($generated@@425 ($generated@@307 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@306 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@305 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@162) (= (type $generated@@427) $generated@@162)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@423) ($generated@@272 ($generated@@228 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@373 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@162) ($generated@@229 $generated@@428 $generated@@46)) (and (= ($generated@@272 ($generated@@363 $generated@@2 $generated@@428)) $generated@@428) ($generated@@138 ($generated@@363 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@162) ($generated@@229 $generated@@429 $generated@@47)) (and (= ($generated@@272 ($generated@@363 $generated@@3 $generated@@429)) $generated@@429) ($generated@@138 ($generated@@363 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@162) ($generated@@229 $generated@@430 $generated@@44)) (and (= ($generated@@272 ($generated@@363 $generated@@4 $generated@@430)) $generated@@430) ($generated@@138 ($generated@@363 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@162) ($generated@@229 $generated@@432 $generated@@45)) (and (= ($generated@@272 ($generated@@363 $generated@@431 $generated@@432)) $generated@@432) ($generated@@138 ($generated@@363 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@66) (= ($generated@@229 ($generated@@272 $generated@@433) $generated@@434) ($generated@@138 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@229 ($generated@@272 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@79) (<= 0 ($generated@@134 $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@81 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@78 $generated@@437 $generated@@2)) (<= 0 ($generated@@277 $generated@@436))))
 :pattern ( ($generated@@277 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@267 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@266 $generated@@439)) (<= 0 ($generated@@265 $generated@@438))))
 :pattern ( ($generated@@265 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@66) (= (type $generated@@443) $generated@@66)) (= ($generated@@440 ($generated@@391 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@391 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@66)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@66) (= (type $generated@@447) $generated@@66)) (= ($generated@@444 ($generated@@391 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@391 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@399 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@399 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@66)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@66) (= (type $generated@@457) $generated@@66)) (= ($generated@@454 ($generated@@399 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@399 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@162) (= (type $generated@@461) $generated@@162)) (= ($generated@@258 ($generated@@228 $generated@@460 $generated@@461)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@152 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@152 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@152 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@152 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@162) (= (type $generated@@471) $generated@@162)) (= ($generated@@160 ($generated@@228 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@228 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@162) (= (type $generated@@473) $generated@@162)) (= ($generated@@161 ($generated@@228 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@228 $generated@@472 $generated@@473))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@267 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@475 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@266 $generated@@162)) (= (type $generated@@481) $generated@@66)) (= (type $generated@@482) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@480 ($generated@@474 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@265 $generated@@480))) ($generated@@252 ($generated@@475 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@475 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@76 $generated@@480 ($generated@@474 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@77 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@77 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@486 ($generated@@238 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@243 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@243 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@494 ($generated@@167 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@167 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@74 ($generated@@167 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@474 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@474 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@474 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@474 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@135 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@135 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@363 $generated@@506 ($generated@@272 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@272 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@288 $generated@@162 $generated@@162)) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) (= ($generated@@138 $generated@@507 ($generated@@391 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@162) ($generated@@0 ($generated@@83 ($generated@@286 $generated@@507) $generated@@510))) (and ($generated@@229 ($generated@@83 ($generated@@364 $generated@@507) $generated@@510) $generated@@509) ($generated@@229 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@507) $generated@@510))
 :pattern ( ($generated@@83 ($generated@@286 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@138 $generated@@507 ($generated@@391 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@306 $generated@@162 $generated@@162)) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@66)) (= ($generated@@138 $generated@@511 ($generated@@399 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@162) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@511) $generated@@514))) (and ($generated@@229 ($generated@@83 ($generated@@374 $generated@@511) $generated@@514) $generated@@513) ($generated@@229 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@511) $generated@@514))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@138 $generated@@511 ($generated@@399 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@162) (= (type $generated@@518) $generated@@162)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@228 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@228 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@162) (= (type $generated@@520) $generated@@162)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@228 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@228 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@162) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@66)) ($generated@@229 $generated@@521 ($generated@@391 $generated@@522 $generated@@523))) (and (= ($generated@@272 ($generated@@363 ($generated@@288 $generated@@162 $generated@@162) $generated@@521)) $generated@@521) ($generated@@138 ($generated@@363 ($generated@@288 $generated@@162 $generated@@162) $generated@@521) ($generated@@391 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@229 $generated@@521 ($generated@@391 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@162) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) ($generated@@229 $generated@@524 ($generated@@399 $generated@@525 $generated@@526))) (and (= ($generated@@272 ($generated@@363 ($generated@@306 $generated@@162 $generated@@162) $generated@@524)) $generated@@524) ($generated@@138 ($generated@@363 ($generated@@306 $generated@@162 $generated@@162) $generated@@524) ($generated@@399 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@229 $generated@@524 ($generated@@399 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@66) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@162)) ($generated@@229 $generated@@529 ($generated@@152 $generated@@527 $generated@@528))) (and (= ($generated@@272 ($generated@@363 $generated@@153 $generated@@529)) $generated@@529) ($generated@@138 ($generated@@363 $generated@@153 $generated@@529) ($generated@@152 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@229 $generated@@529 ($generated@@152 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@83 ($generated@@407 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@83 ($generated@@407 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@152 $generated@@532 $generated@@533)) $generated@@63) (= ($generated@@283 ($generated@@152 $generated@@532 $generated@@533)) $generated@@65)))
 :pattern ( ($generated@@152 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@153) (= ($generated@@515 ($generated@@272 $generated@@534)) ($generated@@516 $generated@@534)))
 :pattern ( ($generated@@515 ($generated@@272 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@162) ($generated@@229 $generated@@535 ($generated@@77 0))) (and (= ($generated@@272 ($generated@@363 $generated@@2 $generated@@535)) $generated@@535) ($generated@@138 ($generated@@363 ($generated@@78 $generated@@162 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@162) (= (type $generated@@537) $generated@@66)) ($generated@@229 $generated@@536 ($generated@@238 $generated@@537))) (and (= ($generated@@272 ($generated@@363 ($generated@@78 $generated@@162 $generated@@4) $generated@@536)) $generated@@536) ($generated@@138 ($generated@@363 ($generated@@78 $generated@@162 $generated@@4) $generated@@536) ($generated@@238 $generated@@537))))
 :pattern ( ($generated@@229 $generated@@536 ($generated@@238 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@162) (= (type $generated@@539) $generated@@66)) ($generated@@229 $generated@@538 ($generated@@243 $generated@@539))) (and (= ($generated@@272 ($generated@@363 ($generated@@78 $generated@@162 $generated@@4) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@363 ($generated@@78 $generated@@162 $generated@@4) $generated@@538) ($generated@@243 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@538 ($generated@@243 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@162) (= (type $generated@@541) $generated@@66)) ($generated@@229 $generated@@540 ($generated@@167 $generated@@541))) (and (= ($generated@@272 ($generated@@363 ($generated@@78 $generated@@162 $generated@@2) $generated@@540)) $generated@@540) ($generated@@138 ($generated@@363 ($generated@@78 $generated@@162 $generated@@2) $generated@@540) ($generated@@167 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@540 ($generated@@167 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@162) (= (type $generated@@543) $generated@@66)) ($generated@@229 $generated@@542 ($generated@@474 $generated@@543))) (and (= ($generated@@272 ($generated@@363 ($generated@@266 $generated@@162) $generated@@542)) $generated@@542) ($generated@@138 ($generated@@363 ($generated@@266 $generated@@162) $generated@@542) ($generated@@474 $generated@@543))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@474 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@162)) ($generated@@229 $generated@@545 ($generated@@135 $generated@@544))) (and (= ($generated@@272 ($generated@@363 $generated@@79 $generated@@545)) $generated@@545) ($generated@@138 ($generated@@363 $generated@@79 $generated@@545) ($generated@@135 $generated@@544))))
 :pattern ( ($generated@@229 $generated@@545 ($generated@@135 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@78 $generated@@162 $generated@@2)) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@546 ($generated@@167 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@162) (< 0 ($generated ($generated@@83 $generated@@546 $generated@@549)))) ($generated@@252 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@83 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@76 $generated@@546 ($generated@@167 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@153) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@146 $generated@@552) (and ($generated@@151 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@66) ($generated@@76 $generated@@550 ($generated@@152 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@152 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@252 ($generated@@160 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@252 ($generated@@160 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@153) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@146 $generated@@556) (and ($generated@@151 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@66) ($generated@@76 $generated@@554 ($generated@@152 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@152 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@252 ($generated@@161 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@252 ($generated@@161 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@162) (= (type $generated@@559) $generated@@162)) (= ($generated@@228 ($generated@@248 $generated@@558) ($generated@@248 $generated@@559)) ($generated@@248 ($generated@@228 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@558) ($generated@@248 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@272 ($generated@@248 $generated@@560)) ($generated@@248 ($generated@@272 $generated@@560)))
 :pattern ( ($generated@@272 ($generated@@248 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@267 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@266 $generated@@562)) (= ($generated@@265 $generated@@561) 0)) (= $generated@@561 ($generated@@264 $generated@@562))))
 :pattern ( ($generated@@265 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@277 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@277 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@277 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@431)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@162)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@266 $generated@@162)) (= (type $generated@@578) $generated@@66)) (= ($generated@@138 $generated@@577 ($generated@@474 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@265 $generated@@577))) ($generated@@229 ($generated@@475 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@475 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@138 $generated@@577 ($generated@@474 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@266 $generated@@162)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@265 $generated@@581))) (< ($generated@@516 ($generated@@363 $generated@@153 ($generated@@475 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@516 ($generated@@363 $generated@@153 ($generated@@475 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@288 $generated@@162 $generated@@162)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@138 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@138 ($generated@@286 $generated@@583) ($generated@@238 $generated@@584)) ($generated@@138 ($generated@@331 $generated@@583) ($generated@@238 $generated@@585))) ($generated@@138 ($generated@@362 $generated@@583) ($generated@@238 ($generated@@152 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@138 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@306 $generated@@162 $generated@@162)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@138 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@138 ($generated@@304 $generated@@586) ($generated@@243 $generated@@587)) ($generated@@138 ($generated@@342 $generated@@586) ($generated@@243 $generated@@588))) ($generated@@138 ($generated@@373 $generated@@586) ($generated@@243 ($generated@@152 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@138 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@138 $generated@@589 $generated@@46))
 :pattern ( ($generated@@138 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@138 $generated@@590 $generated@@47))
 :pattern ( ($generated@@138 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@138 $generated@@591 $generated@@44))
 :pattern ( ($generated@@138 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@431) ($generated@@138 $generated@@592 $generated@@45))
 :pattern ( ($generated@@138 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@162) ($generated@@138 $generated@@593 $generated@@48))
 :pattern ( ($generated@@138 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () Int)
(assert  (and (and (and (= (type $generated@@594) $generated@@79) (= (type $generated@@595) ($generated@@174 $generated@@79 $generated@@4))) (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@598) $generated@@66)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@600  (=> (and (not (= $generated@@594 $generated@@136)) (= (ControlFlow 0 5) (- 0 4))) (not (= $generated@@594 $generated@@136)))))
(let (($generated@@601 true))
(let (($generated@@602  (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@136 $generated@@136) (< ($generated@@134 $generated@@136) 4294967296)))))
(let (($generated@@603  (=> (= $generated@@595 ($generated@@173 $generated@@136 $generated@@596 $generated@@60 false)) (and (and (=> (= (ControlFlow 0 6) 2) $generated@@602) (=> (= (ControlFlow 0 6) 3) $generated@@601)) (=> (= (ControlFlow 0 6) 5) $generated@@600)))))
(let (($generated@@604  (=> (and (and (and ($generated@@146 $generated@@596) ($generated@@597 $generated@@596)) ($generated@@138 $generated@@594 ($generated@@135 $generated@@598))) (and (= 0 $generated@@599) (= (ControlFlow 0 7) 6))) $generated@@603)))
$generated@@604))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@313 (T@T T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@T) T@U)
(declare-fun $generated@@418 () T@T)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 (T@U Int) T@U)
(declare-fun $generated@@470 (T@U) Int)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@150)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267) ($generated@@76 $generated@@265 $generated@@266 $generated@@267)))
 :pattern ( ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@78 $generated@@270 $generated@@2))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@81 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@78 $generated@@272 $generated@@2)) (and (= (= ($generated@@268 $generated@@271) 0) (= $generated@@271 ($generated@@269 $generated@@272))) (=> (not (= ($generated@@268 $generated@@271) 0)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) (< 0 ($generated ($generated@@83 $generated@@271 $generated@@273))))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 18)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@78 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@83 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@83 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 19)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@78 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@83 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@83 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@81 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@78 $generated@@311 $generated@@2)) (= ($generated@@156 $generated@@310) (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@311) (and (<= 0 ($generated ($generated@@83 $generated@@310 $generated@@312))) (<= ($generated ($generated@@83 $generated@@310 $generated@@312)) ($generated@@268 $generated@@310))))
 :pattern ( ($generated@@83 $generated@@310 $generated@@312))
)))))
 :pattern ( ($generated@@156 $generated@@310))
)))
(assert (forall (($generated@@314 T@T) ($generated@@315 T@U) ) (! (= (type ($generated@@313 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@150) ($generated@@217 $generated@@316 $generated@@134)) (and (= ($generated@@263 ($generated@@313 $generated@@2 $generated@@316)) $generated@@316) ($generated@@137 ($generated@@313 $generated@@2 $generated@@316) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@316 $generated@@134))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@278 (type $generated@@317))))
(let (($generated@@319 ($generated@@277 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@276 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@275 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@83 ($generated@@274 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@274 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@278 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@78 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@278 (type $generated@@324))))
(let (($generated@@326 ($generated@@277 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@276 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@275 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@296 (type $generated@@328))))
(let (($generated@@330 ($generated@@295 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@294 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@293 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@292 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@296 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@296 (type $generated@@335))))
(let (($generated@@337 ($generated@@295 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@294 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@293 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@340) $generated@@66)) (= ($generated@@137 $generated@@339 ($generated@@155 $generated@@340)) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@339 $generated@@341)))) ($generated@@217 $generated@@341 $generated@@340))
 :pattern ( ($generated@@83 $generated@@339 $generated@@341))
))))
 :pattern ( ($generated@@137 $generated@@339 ($generated@@155 $generated@@340)))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@343) $generated@@66)) (= (type $generated@@344) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@150) ($generated@@0 ($generated@@83 $generated@@342 $generated@@345))) ($generated@@243 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@83 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@76 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@347) $generated@@66)) (= (type $generated@@348) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@346 ($generated@@231 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@150) ($generated@@0 ($generated@@83 $generated@@346 $generated@@349))) ($generated@@243 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@83 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@76 $generated@@346 ($generated@@231 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= ($generated ($generated@@83 ($generated@@269 $generated@@351) $generated@@350)) 0))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@83 ($generated@@269 $generated@@351) $generated@@350)))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@278 (type $generated@@355))))
(let (($generated@@357 ($generated@@277 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@78 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@359) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@83 ($generated@@274 $generated@@358) ($generated@@148 ($generated@@313 $generated@@141 $generated@@359)))) (= ($generated@@83 ($generated@@353 $generated@@358) ($generated@@148 ($generated@@313 $generated@@141 $generated@@359))) ($generated@@149 ($generated@@313 $generated@@141 $generated@@359))))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert  (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@360 $generated@@362))
)) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@296 (type $generated@@363))))
(let (($generated@@365 ($generated@@295 (type $generated@@363))))
(= (type ($generated@@361 $generated@@363)) ($generated@@78 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@361 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@367) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@360 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@83 ($generated@@292 $generated@@366) ($generated@@148 ($generated@@313 $generated@@141 $generated@@367)))) (= ($generated@@83 ($generated@@361 $generated@@366) ($generated@@148 ($generated@@313 $generated@@141 $generated@@367))) ($generated@@149 ($generated@@313 $generated@@141 $generated@@367))))))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@277 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@276 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@83 ($generated@@321 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@83 ($generated@@274 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@83 ($generated@@353 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@368) $generated@@372))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@295 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@294 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@83 ($generated@@332 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@83 ($generated@@292 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@83 ($generated@@361 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@373) $generated@@377))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@66)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@66)) (= (type $generated@@383) $generated@@66)) (= (type $generated@@384) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@274 $generated@@381) $generated@@385))) (and ($generated@@243 ($generated@@83 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@243 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@76 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@66)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) $generated@@66)) (= (type $generated@@392) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@389) $generated@@393))) (and ($generated@@243 ($generated@@83 ($generated@@361 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@243 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@389) $generated@@393))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@T) ) (! (= (type ($generated@@394 $generated@@395)) ($generated@@78 $generated@@395 $generated@@4))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@296 (type $generated@@396))))
(let (($generated@@398 ($generated@@295 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@294 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@293 $generated@@398 $generated@@397)) (= ($generated@@292 $generated@@396) ($generated@@394 $generated@@398))))))
 :pattern ( ($generated@@292 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@296 (type $generated@@399))))
(let (($generated@@401 ($generated@@295 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@294 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@293 $generated@@401 $generated@@400)) (= ($generated@@332 $generated@@399) ($generated@@394 $generated@@400))))))
 :pattern ( ($generated@@332 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@296 (type $generated@@402))))
(let (($generated@@404 ($generated@@295 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@294 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@293 $generated@@404 $generated@@403)) (= ($generated@@360 $generated@@402) ($generated@@394 $generated@@150))))))
 :pattern ( ($generated@@360 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@278 (type $generated@@405))))
(let (($generated@@407 ($generated@@277 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@276 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@275 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (and (and (= (type $generated@@408) $generated@@150) (= (type $generated@@409) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@405) ($generated@@263 ($generated@@216 $generated@@408 $generated@@409)))))
 :no-pattern (type $generated@@408)
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@352 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@296 (type $generated@@410))))
(let (($generated@@412 ($generated@@295 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@294 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@293 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@150) (= (type $generated@@414) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@360 $generated@@410) ($generated@@263 ($generated@@216 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@360 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@217 $generated@@415 $generated@@46)) (and (= ($generated@@263 ($generated@@313 $generated@@2 $generated@@415)) $generated@@415) ($generated@@137 ($generated@@313 $generated@@2 $generated@@415) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@415 $generated@@46))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@150) ($generated@@217 $generated@@416 $generated@@47)) (and (= ($generated@@263 ($generated@@313 $generated@@3 $generated@@416)) $generated@@416) ($generated@@137 ($generated@@313 $generated@@3 $generated@@416) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@416 $generated@@47))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@150) ($generated@@217 $generated@@417 $generated@@44)) (and (= ($generated@@263 ($generated@@313 $generated@@4 $generated@@417)) $generated@@417) ($generated@@137 ($generated@@313 $generated@@4 $generated@@417) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@417 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@418) 20))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@217 $generated@@419 $generated@@45)) (and (= ($generated@@263 ($generated@@313 $generated@@418 $generated@@419)) $generated@@419) ($generated@@137 ($generated@@313 $generated@@418 $generated@@419) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@419 $generated@@45))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (= (type $generated@@421) $generated@@66) (= ($generated@@217 ($generated@@263 $generated@@420) $generated@@421) ($generated@@137 $generated@@420 $generated@@421)))
 :pattern ( ($generated@@217 ($generated@@263 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@81 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@78 $generated@@423 $generated@@2)) (<= 0 ($generated@@268 $generated@@422))))
 :pattern ( ($generated@@268 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@258 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@257 $generated@@425)) (<= 0 ($generated@@256 $generated@@424))))
 :pattern ( ($generated@@256 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@66)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@66) (= (type $generated@@429) $generated@@66)) (= ($generated@@426 ($generated@@378 $generated@@428 $generated@@429)) $generated@@428))
 :pattern ( ($generated@@378 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@66)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@66) (= (type $generated@@433) $generated@@66)) (= ($generated@@430 ($generated@@378 $generated@@432 $generated@@433)) $generated@@433))
 :pattern ( ($generated@@378 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@66) (= (type $generated@@435) $generated@@66)) (= ($generated@@74 ($generated@@378 $generated@@434 $generated@@435)) $generated@@58))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@66)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@66) (= (type $generated@@439) $generated@@66)) (= ($generated@@436 ($generated@@386 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@386 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@66) (= (type $generated@@443) $generated@@66)) (= ($generated@@440 ($generated@@386 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@386 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@74 ($generated@@386 $generated@@444 $generated@@445)) $generated@@59))
 :pattern ( ($generated@@386 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@150) (= (type $generated@@447) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@446 $generated@@447)) $generated@@61))
 :pattern ( ($generated@@216 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@66)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@448 ($generated@@140 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@140 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@140 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@140 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@150) (= (type $generated@@457) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@216 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) (= (type $generated@@459) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@216 $generated@@458 $generated@@459))
)))
(assert  (and (forall (($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@462))
)) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (! (let (($generated@@465 ($generated@@258 (type $generated@@463))))
(= (type ($generated@@461 $generated@@463 $generated@@464)) $generated@@465))
 :pattern ( ($generated@@461 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@466) ($generated@@257 $generated@@150)) (= (type $generated@@467) $generated@@66)) (= (type $generated@@468) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@466 ($generated@@460 $generated@@467) $generated@@468) (forall (($generated@@469 Int) ) (!  (=> (and (<= 0 $generated@@469) (< $generated@@469 ($generated@@256 $generated@@466))) ($generated@@243 ($generated@@461 $generated@@466 $generated@@469) $generated@@467 $generated@@468))
 :pattern ( ($generated@@461 $generated@@466 $generated@@469))
))))
 :pattern ( ($generated@@76 $generated@@466 ($generated@@460 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 Int) ) (! (= ($generated@@470 ($generated@@77 $generated@@471)) $generated@@471)
 :pattern ( ($generated@@77 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@66) (= ($generated@@472 ($generated@@226 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@226 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@475)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@66) (= ($generated@@476 ($generated@@231 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@231 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@479)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@66) (= ($generated@@480 ($generated@@155 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@155 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@483)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@66) (= ($generated@@484 ($generated@@460 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@460 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@66) (= ($generated@@74 ($generated@@460 $generated@@487)) $generated@@57))
 :pattern ( ($generated@@460 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@313 $generated@@489 ($generated@@263 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@263 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@491) $generated@@66)) (= (type $generated@@492) $generated@@66)) (= ($generated@@137 $generated@@490 ($generated@@378 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@274 $generated@@490) $generated@@493))) (and ($generated@@217 ($generated@@83 ($generated@@353 $generated@@490) $generated@@493) $generated@@492) ($generated@@217 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@490) $generated@@493))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@137 $generated@@490 ($generated@@378 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@495) $generated@@66)) (= (type $generated@@496) $generated@@66)) (= ($generated@@137 $generated@@494 ($generated@@386 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@494) $generated@@497))) (and ($generated@@217 ($generated@@83 ($generated@@361 $generated@@494) $generated@@497) $generated@@496) ($generated@@217 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@494) $generated@@497))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@137 $generated@@494 ($generated@@386 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) (= (type $generated@@501) $generated@@150)) (< ($generated@@498 $generated@@500) ($generated@@499 ($generated@@216 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@216 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@150) (= (type $generated@@503) $generated@@150)) (< ($generated@@498 $generated@@503) ($generated@@499 ($generated@@216 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@216 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@150) (= (type $generated@@505) $generated@@66)) (= (type $generated@@506) $generated@@66)) ($generated@@217 $generated@@504 ($generated@@378 $generated@@505 $generated@@506))) (and (= ($generated@@263 ($generated@@313 ($generated@@276 $generated@@150 $generated@@150) $generated@@504)) $generated@@504) ($generated@@137 ($generated@@313 ($generated@@276 $generated@@150 $generated@@150) $generated@@504) ($generated@@378 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@217 $generated@@504 ($generated@@378 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@150) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) ($generated@@217 $generated@@507 ($generated@@386 $generated@@508 $generated@@509))) (and (= ($generated@@263 ($generated@@313 ($generated@@294 $generated@@150 $generated@@150) $generated@@507)) $generated@@507) ($generated@@137 ($generated@@313 ($generated@@294 $generated@@150 $generated@@150) $generated@@507) ($generated@@386 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@217 $generated@@507 ($generated@@386 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@150)) ($generated@@217 $generated@@512 ($generated@@140 $generated@@510 $generated@@511))) (and (= ($generated@@263 ($generated@@313 $generated@@141 $generated@@512)) $generated@@512) ($generated@@137 ($generated@@313 $generated@@141 $generated@@512) ($generated@@140 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@217 $generated@@512 ($generated@@140 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
 (not ($generated@@0 ($generated@@83 ($generated@@394 $generated@@514) $generated@@513))))
 :pattern ( (let (($generated@@514 (type $generated@@513)))
($generated@@83 ($generated@@394 $generated@@514) $generated@@513)))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@71)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@517 $generated@@518)) $generated@@62) (= ($generated@@515 ($generated@@140 $generated@@517 $generated@@518)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@141) (= ($generated@@498 ($generated@@263 $generated@@519)) ($generated@@499 $generated@@519)))
 :pattern ( ($generated@@498 ($generated@@263 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) ($generated@@217 $generated@@520 ($generated@@77 0))) (and (= ($generated@@263 ($generated@@313 $generated@@2 $generated@@520)) $generated@@520) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@520) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@520 ($generated@@77 0)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@150) (= (type $generated@@522) $generated@@66)) ($generated@@217 $generated@@521 ($generated@@226 $generated@@522))) (and (= ($generated@@263 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@521)) $generated@@521) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@521) ($generated@@226 $generated@@522))))
 :pattern ( ($generated@@217 $generated@@521 ($generated@@226 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@150) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@523 ($generated@@231 $generated@@524))) (and (= ($generated@@263 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@523)) $generated@@523) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@523) ($generated@@231 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@523 ($generated@@231 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@155 $generated@@526))) (and (= ($generated@@263 ($generated@@313 ($generated@@78 $generated@@150 $generated@@2) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@2) $generated@@525) ($generated@@155 $generated@@526))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@155 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@66)) ($generated@@217 $generated@@527 ($generated@@460 $generated@@528))) (and (= ($generated@@263 ($generated@@313 ($generated@@257 $generated@@150) $generated@@527)) $generated@@527) ($generated@@137 ($generated@@313 ($generated@@257 $generated@@150) $generated@@527) ($generated@@460 $generated@@528))))
 :pattern ( ($generated@@217 $generated@@527 ($generated@@460 $generated@@528)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@515 $generated@@134) $generated@@65))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@529 ($generated@@155 $generated@@530) $generated@@531) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@529 $generated@@532)))) ($generated@@243 $generated@@532 $generated@@530 $generated@@531))
 :pattern ( ($generated@@83 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@76 $generated@@529 ($generated@@155 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@141) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@535) (and ($generated@@139 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@66) ($generated@@76 $generated@@533 ($generated@@140 $generated@@534 $generated@@536) $generated@@535))
 :pattern ( ($generated@@76 $generated@@533 ($generated@@140 $generated@@534 $generated@@536) $generated@@535))
))))) ($generated@@243 ($generated@@148 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@141) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@539) (and ($generated@@139 $generated@@537) (exists (($generated@@540 T@U) ) (!  (and (= (type $generated@@540) $generated@@66) ($generated@@76 $generated@@537 ($generated@@140 $generated@@540 $generated@@538) $generated@@539))
 :pattern ( ($generated@@76 $generated@@537 ($generated@@140 $generated@@540 $generated@@538) $generated@@539))
))))) ($generated@@243 ($generated@@149 $generated@@537) $generated@@538 $generated@@539))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@537) $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@2) (= ($generated@@137 $generated@@541 $generated@@134)  (and (<= ($generated@@236 0) ($generated $generated@@541)) (< ($generated $generated@@541) 256))))
 :pattern ( ($generated@@137 $generated@@541 $generated@@134))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@542) ($generated@@238 $generated@@543)) ($generated@@238 ($generated@@216 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@542) ($generated@@238 $generated@@543)))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@263 ($generated@@8 ($generated@@236 $generated@@544))) ($generated@@238 ($generated@@263 ($generated@@8 $generated@@544))))
 :pattern ( ($generated@@263 ($generated@@8 ($generated@@236 $generated@@544))))
)))
(assert (forall (($generated@@545 T@U) ) (! (= ($generated@@263 ($generated@@238 $generated@@545)) ($generated@@238 ($generated@@263 $generated@@545)))
 :pattern ( ($generated@@263 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@258 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@257 $generated@@547)) (= ($generated@@256 $generated@@546) 0)) (= $generated@@546 ($generated@@255 $generated@@547))))
 :pattern ( ($generated@@256 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@549)))
 (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@551 $generated@@2)) (= (type $generated@@550) $generated@@2)) (<= 0 ($generated $generated@@550))) (= ($generated@@268 ($generated@@84 $generated@@548 $generated@@549 $generated@@550)) (+ (- ($generated@@268 $generated@@548) ($generated ($generated@@83 $generated@@548 $generated@@549))) ($generated $generated@@550)))))
 :pattern ( ($generated@@268 ($generated@@84 $generated@@548 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@553) $generated@@2)) ($generated@@76 $generated@@553 $generated@@46 $generated@@552))
 :pattern ( ($generated@@76 $generated@@553 $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@555) $generated@@3)) ($generated@@76 $generated@@555 $generated@@47 $generated@@554))
 :pattern ( ($generated@@76 $generated@@555 $generated@@47 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@557) $generated@@4)) ($generated@@76 $generated@@557 $generated@@44 $generated@@556))
 :pattern ( ($generated@@76 $generated@@557 $generated@@44 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@559) $generated@@418)) ($generated@@76 $generated@@559 $generated@@45 $generated@@558))
 :pattern ( ($generated@@76 $generated@@559 $generated@@45 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@561) $generated@@150)) ($generated@@76 $generated@@561 $generated@@48 $generated@@560))
 :pattern ( ($generated@@76 $generated@@561 $generated@@48 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@257 $generated@@150)) (= (type $generated@@563) $generated@@66)) (= ($generated@@137 $generated@@562 ($generated@@460 $generated@@563)) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@256 $generated@@562))) ($generated@@217 ($generated@@461 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@461 $generated@@562 $generated@@564))
))))
 :pattern ( ($generated@@137 $generated@@562 ($generated@@460 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@256 $generated@@566))) (< ($generated@@499 ($generated@@313 $generated@@141 ($generated@@461 $generated@@566 $generated@@567))) ($generated@@565 $generated@@566))))
 :pattern ( ($generated@@499 ($generated@@313 $generated@@141 ($generated@@461 $generated@@566 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@137 $generated@@568 ($generated@@378 $generated@@569 $generated@@570))) (and (and ($generated@@137 ($generated@@274 $generated@@568) ($generated@@226 $generated@@569)) ($generated@@137 ($generated@@321 $generated@@568) ($generated@@226 $generated@@570))) ($generated@@137 ($generated@@352 $generated@@568) ($generated@@226 ($generated@@140 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@137 $generated@@568 ($generated@@378 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@66)) ($generated@@137 $generated@@571 ($generated@@386 $generated@@572 $generated@@573))) (and (and ($generated@@137 ($generated@@292 $generated@@571) ($generated@@231 $generated@@572)) ($generated@@137 ($generated@@332 $generated@@571) ($generated@@231 $generated@@573))) ($generated@@137 ($generated@@360 $generated@@571) ($generated@@231 ($generated@@140 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@137 $generated@@571 ($generated@@386 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) ($generated@@137 $generated@@574 $generated@@46))
 :pattern ( ($generated@@137 $generated@@574 $generated@@46))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@3) ($generated@@137 $generated@@575 $generated@@47))
 :pattern ( ($generated@@137 $generated@@575 $generated@@47))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@4) ($generated@@137 $generated@@576 $generated@@44))
 :pattern ( ($generated@@137 $generated@@576 $generated@@44))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@418) ($generated@@137 $generated@@577 $generated@@45))
 :pattern ( ($generated@@137 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@150) ($generated@@137 $generated@@578 $generated@@48))
 :pattern ( ($generated@@137 $generated@@578 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () Int)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () Int)
(declare-fun $generated@@586 () Int)
(assert  (and (and (and (= (type $generated@@579) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@580) $generated@@79)) (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@583) ($generated@@257 $generated@@150))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@587  (=> (= $generated@@579 ($generated@@161 $generated@@580 $generated@@581 $generated@@60 false)) (=> (and (= $generated@@582 ($generated@@256 $generated@@583)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@236 0) $generated@@582) (< $generated@@582 4294967296))))))
(let (($generated@@588  (=> (and (and ($generated@@242 $generated@@581) ($generated@@584 $generated@@581)) (and ($generated@@137 $generated@@583 ($generated@@460 $generated@@134)) ($generated@@76 $generated@@583 ($generated@@460 $generated@@134) $generated@@581))) (=> (and (and (and (and (<= ($generated@@236 0) $generated@@585) (< $generated@@585 4294967296)) true) (= 1 $generated@@586)) (and (< ($generated@@256 $generated@@583) 10) (= (ControlFlow 0 3) 2))) $generated@@587))))
$generated@@588)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@187 (T@T T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@343 (T@T T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@371 (T@U T@U) T@U)
(declare-fun $generated@@372 (Int) T@U)
(declare-fun $generated@@373 (T@U Int) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@66) $generated@@75)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@78 $generated@@60) 0))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@73 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@73 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@70)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert  (and (and (forall (($generated@@144 T@U) ) (! (= (type ($generated@@140 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@140 $generated@@144))
)) (= (type $generated@@141) $generated@@84)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@142 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@70) (= (type $generated@@147) $generated@@84)) (and (not (= $generated@@147 $generated@@141)) (= ($generated@@142 $generated@@147) ($generated@@140 $generated@@146)))) ($generated@@143 ($generated@@8 ($generated@@139 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@139 $generated@@147) ($generated@@140 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@70) (= (type $generated@@149) $generated@@84)) (= (type $generated@@150) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@149 ($generated@@140 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@141) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@149 ($generated@@140 $generated@@148) $generated@@150))
)))
(assert (= (type $generated@@151) $generated@@70))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@152 $generated@@151 $generated@@153))
 :pattern ( ($generated@@81 $generated@@152 $generated@@151 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@70) (= (type $generated@@156) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@157) $generated@@84)) (and (and ($generated@@154 $generated@@156) (and (not (= $generated@@157 $generated@@141)) (= ($generated@@142 $generated@@157) ($generated@@140 $generated@@155)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@156 $generated@@157) $generated@@60)))) ($generated@@81 ($generated@@8 ($generated@@139 $generated@@157)) $generated@@46 $generated@@156))
 :pattern ( ($generated@@139 $generated@@157) ($generated@@90 ($generated@@88 $generated@@156 $generated@@157) $generated@@60) ($generated@@140 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@143 $generated@@158 ($generated@@82 0)))
 :pattern ( ($generated@@143 $generated@@158 ($generated@@82 0)))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@70)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@70) (= (type $generated@@162) $generated@@84)) (= (type $generated@@163) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@162 ($generated@@159 $generated@@161) $generated@@163) ($generated@@81 $generated@@162 ($generated@@140 $generated@@161) $generated@@163)))
 :pattern ( ($generated@@81 $generated@@162 ($generated@@159 $generated@@161) $generated@@163))
)))
(assert  (and (= ($generated@@1 $generated@@166) 14) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@167 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@165 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@70) (= (type $generated@@170) $generated@@70)) (= (type $generated@@171) $generated@@166)) ($generated@@143 $generated@@171 ($generated@@165 $generated@@169 $generated@@170))) ($generated@@164 $generated@@171))
 :pattern ( ($generated@@164 $generated@@171) ($generated@@143 $generated@@171 ($generated@@165 $generated@@169 $generated@@170)))
)))
(assert  (and (and (= ($generated@@1 $generated@@175) 15) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@173 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@173 $generated@@176))
))) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@175)
 :pattern ( ($generated@@174 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@166) (= (type $generated@@179) $generated@@166)) true) (= ($generated@@172 $generated@@178 $generated@@179)  (and (= ($generated@@173 $generated@@178) ($generated@@173 $generated@@179)) (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)))))
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@70)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@83 $generated@@175 $generated@@2)) (= (type $generated@@184) $generated@@70)) ($generated@@143 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@143 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (= ($generated@@1 ($generated@@187 $generated@@191 $generated@@192)) 16)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@188 ($generated@@187 $generated@@193 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@187 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@189 ($generated@@187 $generated@@195 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@187 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@189 (type $generated@@197))))
(= (type ($generated@@185 $generated@@197 $generated@@198 $generated@@199)) $generated@@200))
 :pattern ( ($generated@@185 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 (type $generated@@204)))
(let (($generated@@206 (type $generated@@202)))
(= (type ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@187 $generated@@206 $generated@@205))))
 :pattern ( ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@189 (type $generated@@207))))
 (=> (= (type $generated@@210) $generated@@211) (= ($generated@@185 ($generated@@190 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@208 $generated@@209) $generated@@210)))
 :weight 0
))) (and (and (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@185 ($generated@@190 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@185 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@185 ($generated@@190 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@185 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or true (= ($generated@@185 ($generated@@190 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@185 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@187 $generated@@84 $generated@@4))
 :pattern ( ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@73 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@84) (= (type $generated@@235) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@236) ($generated@@72 $generated@@4))) (= (type $generated@@238) $generated@@84)) (= (type $generated@@239) ($generated@@72 $generated@@240))) (= ($generated@@0 ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@166)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@175)) (= (type $generated@@248) $generated@@175)) (= ($generated@@143 ($generated@@241 $generated@@247 $generated@@248) ($generated@@165 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@143 ($generated@@241 $generated@@247 $generated@@248) ($generated@@165 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@166) (= (type $generated@@250) $generated@@166)) (= ($generated@@172 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@172 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@83 $generated@@175 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@143 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@175) ($generated@@0 ($generated@@88 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@88 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@143 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@83 $generated@@175 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@143 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@175) ($generated@@0 ($generated@@88 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@88 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@143 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@175)) (= (type $generated@@271) $generated@@175)) (= (type $generated@@272) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@154 $generated@@272)) (= ($generated@@81 ($generated@@241 $generated@@270 $generated@@271) ($generated@@165 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@81 ($generated@@241 $generated@@270 $generated@@271) ($generated@@165 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@74)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@166) (= ($generated@@164 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@62)))
 :pattern ( ($generated@@164 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@166) ($generated@@164 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@175) (= (type $generated@@278) $generated@@175)) (= $generated@@276 ($generated@@241 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@164 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@175)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@81 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@83 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@86 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@83 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@88 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@70) (= (type $generated@@299) $generated@@84)) (= ($generated@@143 $generated@@299 ($generated@@159 $generated@@298))  (and ($generated@@143 $generated@@299 ($generated@@140 $generated@@298)) (or (= $generated@@299 $generated@@141) (< ($generated@@139 $generated@@299) 4294967296)))))
 :pattern ( ($generated@@143 $generated@@299 ($generated@@159 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@75)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@70) (and (= ($generated@@79 ($generated@@140 $generated@@302)) $generated@@61) (= ($generated@@300 ($generated@@140 $generated@@302)) $generated@@66)))
 :pattern ( ($generated@@140 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@70) (and (= ($generated@@79 ($generated@@159 $generated@@303)) $generated@@65) (= ($generated@@300 ($generated@@159 $generated@@303)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@83 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@88 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@88 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@83 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@88 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@88 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@86 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@83 $generated@@341 $generated@@2)) (= ($generated@@181 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@88 $generated@@340 $generated@@342))) (<= ($generated ($generated@@88 $generated@@340 $generated@@342)) ($generated@@292 $generated@@340))))
 :pattern ( ($generated@@88 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@181 $generated@@340))
)))
(assert (forall (($generated@@344 T@T) ($generated@@345 T@U) ) (! (= (type ($generated@@343 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@175) ($generated@@242 $generated@@346 $generated@@151)) (and (= ($generated@@287 ($generated@@343 $generated@@2 $generated@@346)) $generated@@346) ($generated@@143 ($generated@@343 $generated@@2 $generated@@346) $generated@@151)))
 :pattern ( ($generated@@242 $generated@@346 $generated@@151))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@70) (= (type $generated@@348) $generated@@84)) (= ($generated@@143 $generated@@348 ($generated@@140 $generated@@347))  (or (= $generated@@348 $generated@@141) (= ($generated@@142 $generated@@348) ($generated@@140 $generated@@347)))))
 :pattern ( ($generated@@143 $generated@@348 ($generated@@140 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@308 (type $generated@@349))))
(let (($generated@@351 ($generated@@307 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@306 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@305 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@88 ($generated@@304 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@304 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@308 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@83 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@308 (type $generated@@356))))
(let (($generated@@358 ($generated@@307 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@306 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@305 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@88 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@326 (type $generated@@360))))
(let (($generated@@362 ($generated@@325 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@324 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@323 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@88 ($generated@@322 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@322 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@326 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@83 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@326 (type $generated@@367))))
(let (($generated@@369 ($generated@@325 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@324 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@323 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@88 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert  (and (and (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@371 $generated@@374 $generated@@375)) ($generated@@281 $generated@@175))
 :pattern ( ($generated@@371 $generated@@374 $generated@@375))
)) (forall (($generated@@376 Int) ) (! (= (type ($generated@@372 $generated@@376)) ($generated@@72 $generated@@175))
 :pattern ( ($generated@@372 $generated@@376))
))) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (! (let (($generated@@379 ($generated@@282 (type $generated@@377))))
(= (type ($generated@@373 $generated@@377 $generated@@378)) $generated@@379))
 :pattern ( ($generated@@373 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@381) $generated@@84)) (forall (($generated@@382 Int) ) (!  (=> (and (<= 0 $generated@@382) (< $generated@@382 ($generated@@280 ($generated@@371 $generated@@380 $generated@@381)))) (= ($generated@@373 ($generated@@371 $generated@@380 $generated@@381) $generated@@382) ($generated@@90 ($generated@@88 $generated@@380 $generated@@381) ($generated@@372 $generated@@382))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@380 $generated@@381) ($generated@@372 $generated@@382)))
 :pattern ( ($generated@@373 ($generated@@371 $generated@@380 $generated@@381) $generated@@382))
)))
 :pattern ( ($generated@@371 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@83 $generated@@175 $generated@@2)) (= (type $generated@@384) $generated@@70)) (= ($generated@@143 $generated@@383 ($generated@@180 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@175) (< 0 ($generated ($generated@@88 $generated@@383 $generated@@385)))) ($generated@@242 $generated@@385 $generated@@384))
 :pattern ( ($generated@@88 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@143 $generated@@383 ($generated@@180 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@83 $generated@@175 $generated@@4)) (= (type $generated@@387) $generated@@70)) (= (type $generated@@388) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@386 ($generated@@251 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@175) ($generated@@0 ($generated@@88 $generated@@386 $generated@@389))) ($generated@@267 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@88 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@81 $generated@@386 ($generated@@251 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@83 $generated@@175 $generated@@4)) (= (type $generated@@391) $generated@@70)) (= (type $generated@@392) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@390 ($generated@@256 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@175) ($generated@@0 ($generated@@88 $generated@@390 $generated@@393))) ($generated@@267 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@88 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@81 $generated@@390 ($generated@@256 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@88 ($generated@@293 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@88 ($generated@@293 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@83 $generated@@175 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@308 (type $generated@@399))))
(let (($generated@@401 ($generated@@307 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@83 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@306 $generated@@175 $generated@@175)) (= (type $generated@@403) $generated@@175)) (= ($generated@@0 ($generated@@88 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@88 ($generated@@304 $generated@@402) ($generated@@173 ($generated@@343 $generated@@166 $generated@@403)))) (= ($generated@@88 ($generated@@397 $generated@@402) ($generated@@173 ($generated@@343 $generated@@166 $generated@@403))) ($generated@@174 ($generated@@343 $generated@@166 $generated@@403))))))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@83 $generated@@175 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@326 (type $generated@@407))))
(let (($generated@@409 ($generated@@325 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@83 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@411) $generated@@175)) (= ($generated@@0 ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@88 ($generated@@322 $generated@@410) ($generated@@173 ($generated@@343 $generated@@166 $generated@@411)))) (= ($generated@@88 ($generated@@405 $generated@@410) ($generated@@173 ($generated@@343 $generated@@166 $generated@@411))) ($generated@@174 ($generated@@343 $generated@@166 $generated@@411))))))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@307 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@306 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@88 ($generated@@353 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@88 ($generated@@304 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@88 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@88 ($generated@@304 $generated@@412) $generated@@416))
 :pattern ( ($generated@@88 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@88 ($generated@@353 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@325 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@324 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@88 ($generated@@364 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@88 ($generated@@322 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@88 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@88 ($generated@@322 $generated@@417) $generated@@421))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@88 ($generated@@364 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@306 $generated@@175 $generated@@175)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@175) ($generated@@0 ($generated@@88 ($generated@@304 $generated@@425) $generated@@429))) (and ($generated@@267 ($generated@@88 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@267 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@88 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@88 ($generated@@304 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@81 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@70)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@175) ($generated@@0 ($generated@@88 ($generated@@322 $generated@@433) $generated@@437))) (and ($generated@@267 ($generated@@88 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@267 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@88 ($generated@@322 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@81 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 Int) ) (!  (=> (and (and (= (type $generated@@438) $generated@@70) (= (type $generated@@439) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@440) $generated@@84)) (=> (and (and (and ($generated@@154 $generated@@439) (and (not (= $generated@@440 $generated@@141)) (= ($generated@@142 $generated@@440) ($generated@@140 $generated@@438)))) (and (<= 0 $generated@@441) (< $generated@@441 ($generated@@139 $generated@@440)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@439 $generated@@440) $generated@@60))) ($generated@@267 ($generated@@90 ($generated@@88 $generated@@439 $generated@@440) ($generated@@372 $generated@@441)) $generated@@438 $generated@@439)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@439 $generated@@440) ($generated@@372 $generated@@441)) ($generated@@140 $generated@@438))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@83 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@326 (type $generated@@444))))
(let (($generated@@446 ($generated@@325 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@324 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@323 $generated@@446 $generated@@445)) (= ($generated@@322 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@322 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@326 (type $generated@@447))))
(let (($generated@@449 ($generated@@325 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@324 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@323 $generated@@449 $generated@@448)) (= ($generated@@364 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@364 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@326 (type $generated@@450))))
(let (($generated@@452 ($generated@@325 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@324 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@323 $generated@@452 $generated@@451)) (= ($generated@@404 $generated@@450) ($generated@@442 $generated@@175))))))
 :pattern ( ($generated@@404 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@308 (type $generated@@453))))
(let (($generated@@455 ($generated@@307 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@306 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@305 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@175) (= (type $generated@@457) $generated@@175)) ($generated@@0 ($generated@@88 ($generated@@396 $generated@@453) ($generated@@287 ($generated@@241 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@396 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@326 (type $generated@@458))))
(let (($generated@@460 ($generated@@325 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@324 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@323 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@175) (= (type $generated@@462) $generated@@175)) ($generated@@0 ($generated@@88 ($generated@@404 $generated@@458) ($generated@@287 ($generated@@241 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@404 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@175) ($generated@@242 $generated@@463 $generated@@46)) (and (= ($generated@@287 ($generated@@343 $generated@@2 $generated@@463)) $generated@@463) ($generated@@143 ($generated@@343 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@175) ($generated@@242 $generated@@464 $generated@@47)) (and (= ($generated@@287 ($generated@@343 $generated@@3 $generated@@464)) $generated@@464) ($generated@@143 ($generated@@343 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@175) ($generated@@242 $generated@@465 $generated@@44)) (and (= ($generated@@287 ($generated@@343 $generated@@4 $generated@@465)) $generated@@465) ($generated@@143 ($generated@@343 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@175) ($generated@@242 $generated@@467 $generated@@45)) (and (= ($generated@@287 ($generated@@343 $generated@@466 $generated@@467)) $generated@@467) ($generated@@143 ($generated@@343 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@70) (= ($generated@@242 ($generated@@287 $generated@@468) $generated@@469) ($generated@@143 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@242 ($generated@@287 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@84) (<= 0 ($generated@@139 $generated@@470)))
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@86 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@83 $generated@@472 $generated@@2)) (<= 0 ($generated@@292 $generated@@471))))
 :pattern ( ($generated@@292 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@282 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@281 $generated@@474)) (<= 0 ($generated@@280 $generated@@473))))
 :pattern ( ($generated@@280 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@422 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@79 ($generated@@422 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@430 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@430 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@430 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@430 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@79 ($generated@@430 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@175) (= (type $generated@@496) $generated@@175)) (= ($generated@@273 ($generated@@241 $generated@@495 $generated@@496)) $generated@@62))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@497 ($generated@@165 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@165 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@501 ($generated@@165 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@165 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@175) (= (type $generated@@506) $generated@@175)) (= ($generated@@173 ($generated@@241 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@241 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@175) (= (type $generated@@508) $generated@@175)) (= ($generated@@174 ($generated@@241 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@241 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@281 $generated@@175)) (= (type $generated@@512) $generated@@70)) (= (type $generated@@513) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@511 ($generated@@509 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@280 $generated@@511))) ($generated@@267 ($generated@@373 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@373 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@81 $generated@@511 ($generated@@509 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@82 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@82 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@251 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@251 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@79 ($generated@@251 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@256 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@256 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@79 ($generated@@256 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@180 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@180 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@79 ($generated@@180 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@509 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@509 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@79 ($generated@@509 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@532))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@78 ($generated@@372 $generated@@533)) 1)
 :pattern ( ($generated@@372 $generated@@533))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@372 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@372 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@140 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@140 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@159 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@159 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated@@343 $generated@@543 ($generated@@287 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@287 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@306 $generated@@175 $generated@@175)) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) (= ($generated@@143 $generated@@544 ($generated@@422 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@175) ($generated@@0 ($generated@@88 ($generated@@304 $generated@@544) $generated@@547))) (and ($generated@@242 ($generated@@88 ($generated@@397 $generated@@544) $generated@@547) $generated@@546) ($generated@@242 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@88 ($generated@@397 $generated@@544) $generated@@547))
 :pattern ( ($generated@@88 ($generated@@304 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@143 $generated@@544 ($generated@@422 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) (= ($generated@@143 $generated@@548 ($generated@@430 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@175) ($generated@@0 ($generated@@88 ($generated@@322 $generated@@548) $generated@@551))) (and ($generated@@242 ($generated@@88 ($generated@@405 $generated@@548) $generated@@551) $generated@@550) ($generated@@242 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@548) $generated@@551))
 :pattern ( ($generated@@88 ($generated@@322 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@143 $generated@@548 ($generated@@430 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 Int) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@70) (= (type $generated@@553) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@554) $generated@@84)) (and (and ($generated@@154 $generated@@553) (and (not (= $generated@@554 $generated@@141)) (= ($generated@@142 $generated@@554) ($generated@@140 $generated@@552)))) (and (<= 0 $generated@@555) (< $generated@@555 ($generated@@139 $generated@@554))))) ($generated@@242 ($generated@@90 ($generated@@88 $generated@@553 $generated@@554) ($generated@@372 $generated@@555)) $generated@@552))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@553 $generated@@554) ($generated@@372 $generated@@555)) ($generated@@140 $generated@@552))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@175) (= (type $generated@@559) $generated@@175)) (< ($generated@@556 $generated@@558) ($generated@@557 ($generated@@241 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@241 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@175) (= (type $generated@@561) $generated@@175)) (< ($generated@@556 $generated@@561) ($generated@@557 ($generated@@241 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@241 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@175) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@422 $generated@@563 $generated@@564))) (and (= ($generated@@287 ($generated@@343 ($generated@@306 $generated@@175 $generated@@175) $generated@@562)) $generated@@562) ($generated@@143 ($generated@@343 ($generated@@306 $generated@@175 $generated@@175) $generated@@562) ($generated@@422 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@422 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@175) (= (type $generated@@566) $generated@@70)) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@565 ($generated@@430 $generated@@566 $generated@@567))) (and (= ($generated@@287 ($generated@@343 ($generated@@324 $generated@@175 $generated@@175) $generated@@565)) $generated@@565) ($generated@@143 ($generated@@343 ($generated@@324 $generated@@175 $generated@@175) $generated@@565) ($generated@@430 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@565 ($generated@@430 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@70) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) $generated@@175)) ($generated@@242 $generated@@570 ($generated@@165 $generated@@568 $generated@@569))) (and (= ($generated@@287 ($generated@@343 $generated@@166 $generated@@570)) $generated@@570) ($generated@@143 ($generated@@343 $generated@@166 $generated@@570) ($generated@@165 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@570 ($generated@@165 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
 (not ($generated@@0 ($generated@@88 ($generated@@442 $generated@@572) $generated@@571))))
 :pattern ( (let (($generated@@572 (type $generated@@571)))
($generated@@88 ($generated@@442 $generated@@572) $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@574) $generated@@84)) (= ($generated@@280 ($generated@@371 $generated@@573 $generated@@574)) ($generated@@139 $generated@@574)))
 :pattern ( ($generated@@280 ($generated@@371 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@70) (= (type $generated@@576) $generated@@70)) (and (= ($generated@@79 ($generated@@165 $generated@@575 $generated@@576)) $generated@@63) (= ($generated@@300 ($generated@@165 $generated@@575 $generated@@576)) $generated@@67)))
 :pattern ( ($generated@@165 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@166) (= ($generated@@556 ($generated@@287 $generated@@577)) ($generated@@557 $generated@@577)))
 :pattern ( ($generated@@556 ($generated@@287 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@175) ($generated@@242 $generated@@578 ($generated@@82 0))) (and (= ($generated@@287 ($generated@@343 $generated@@2 $generated@@578)) $generated@@578) ($generated@@143 ($generated@@343 ($generated@@83 $generated@@175 $generated@@4) $generated@@578) ($generated@@82 0))))
 :pattern ( ($generated@@242 $generated@@578 ($generated@@82 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@175) (= (type $generated@@580) $generated@@70)) ($generated@@242 $generated@@579 ($generated@@251 $generated@@580))) (and (= ($generated@@287 ($generated@@343 ($generated@@83 $generated@@175 $generated@@4) $generated@@579)) $generated@@579) ($generated@@143 ($generated@@343 ($generated@@83 $generated@@175 $generated@@4) $generated@@579) ($generated@@251 $generated@@580))))
 :pattern ( ($generated@@242 $generated@@579 ($generated@@251 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@175) (= (type $generated@@582) $generated@@70)) ($generated@@242 $generated@@581 ($generated@@256 $generated@@582))) (and (= ($generated@@287 ($generated@@343 ($generated@@83 $generated@@175 $generated@@4) $generated@@581)) $generated@@581) ($generated@@143 ($generated@@343 ($generated@@83 $generated@@175 $generated@@4) $generated@@581) ($generated@@256 $generated@@582))))
 :pattern ( ($generated@@242 $generated@@581 ($generated@@256 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@175) (= (type $generated@@584) $generated@@70)) ($generated@@242 $generated@@583 ($generated@@180 $generated@@584))) (and (= ($generated@@287 ($generated@@343 ($generated@@83 $generated@@175 $generated@@2) $generated@@583)) $generated@@583) ($generated@@143 ($generated@@343 ($generated@@83 $generated@@175 $generated@@2) $generated@@583) ($generated@@180 $generated@@584))))
 :pattern ( ($generated@@242 $generated@@583 ($generated@@180 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@175) (= (type $generated@@586) $generated@@70)) ($generated@@242 $generated@@585 ($generated@@509 $generated@@586))) (and (= ($generated@@287 ($generated@@343 ($generated@@281 $generated@@175) $generated@@585)) $generated@@585) ($generated@@143 ($generated@@343 ($generated@@281 $generated@@175) $generated@@585) ($generated@@509 $generated@@586))))
 :pattern ( ($generated@@242 $generated@@585 ($generated@@509 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@70) (= (type $generated@@588) $generated@@175)) ($generated@@242 $generated@@588 ($generated@@140 $generated@@587))) (and (= ($generated@@287 ($generated@@343 $generated@@84 $generated@@588)) $generated@@588) ($generated@@143 ($generated@@343 $generated@@84 $generated@@588) ($generated@@140 $generated@@587))))
 :pattern ( ($generated@@242 $generated@@588 ($generated@@140 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@175)) ($generated@@242 $generated@@590 ($generated@@159 $generated@@589))) (and (= ($generated@@287 ($generated@@343 $generated@@84 $generated@@590)) $generated@@590) ($generated@@143 ($generated@@343 $generated@@84 $generated@@590) ($generated@@159 $generated@@589))))
 :pattern ( ($generated@@242 $generated@@590 ($generated@@159 $generated@@589)))
)))
(assert (= ($generated@@79 $generated@@151) $generated@@64))
(assert (= ($generated@@300 $generated@@151) $generated@@68))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@83 $generated@@175 $generated@@2)) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@591 ($generated@@180 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@175) (< 0 ($generated ($generated@@88 $generated@@591 $generated@@594)))) ($generated@@267 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@88 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@81 $generated@@591 ($generated@@180 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@166) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@154 $generated@@597) (and ($generated@@164 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@81 $generated@@595 ($generated@@165 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@81 $generated@@595 ($generated@@165 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@267 ($generated@@173 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@267 ($generated@@173 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@166) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@154 $generated@@601) (and ($generated@@164 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@81 $generated@@599 ($generated@@165 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@165 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@267 ($generated@@174 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@267 ($generated@@174 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) (= ($generated@@143 $generated@@603 $generated@@151)  (and (<= ($generated@@261 0) ($generated $generated@@603)) (< ($generated $generated@@603) 256))))
 :pattern ( ($generated@@143 $generated@@603 $generated@@151))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@175) (= (type $generated@@605) $generated@@175)) (= ($generated@@241 ($generated@@263 $generated@@604) ($generated@@263 $generated@@605)) ($generated@@263 ($generated@@241 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@241 ($generated@@263 $generated@@604) ($generated@@263 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@261 $generated@@606))) ($generated@@263 ($generated@@287 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@261 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@287 ($generated@@263 $generated@@607)) ($generated@@263 ($generated@@287 $generated@@607)))
 :pattern ( ($generated@@287 ($generated@@263 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@282 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@281 $generated@@609)) (= ($generated@@280 $generated@@608) 0)) (= $generated@@608 ($generated@@279 $generated@@609))))
 :pattern ( ($generated@@280 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@83 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@292 ($generated@@89 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@292 $generated@@610) ($generated ($generated@@88 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@292 ($generated@@89 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@615) $generated@@2)) ($generated@@81 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@81 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@617) $generated@@3)) ($generated@@81 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@81 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@619) $generated@@4)) ($generated@@81 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@81 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@621) $generated@@466)) ($generated@@81 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@81 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@623) $generated@@175)) ($generated@@81 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@81 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@281 $generated@@175)) (= (type $generated@@625) $generated@@70)) (= ($generated@@143 $generated@@624 ($generated@@509 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@280 $generated@@624))) ($generated@@242 ($generated@@373 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@373 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@143 $generated@@624 ($generated@@509 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@281 $generated@@175)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@280 $generated@@628))) (< ($generated@@557 ($generated@@343 $generated@@166 ($generated@@373 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@557 ($generated@@343 $generated@@166 ($generated@@373 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@306 $generated@@175 $generated@@175)) (= (type $generated@@631) $generated@@70)) (= (type $generated@@632) $generated@@70)) ($generated@@143 $generated@@630 ($generated@@422 $generated@@631 $generated@@632))) (and (and ($generated@@143 ($generated@@304 $generated@@630) ($generated@@251 $generated@@631)) ($generated@@143 ($generated@@353 $generated@@630) ($generated@@251 $generated@@632))) ($generated@@143 ($generated@@396 $generated@@630) ($generated@@251 ($generated@@165 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@143 $generated@@630 ($generated@@422 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@324 $generated@@175 $generated@@175)) (= (type $generated@@634) $generated@@70)) (= (type $generated@@635) $generated@@70)) ($generated@@143 $generated@@633 ($generated@@430 $generated@@634 $generated@@635))) (and (and ($generated@@143 ($generated@@322 $generated@@633) ($generated@@256 $generated@@634)) ($generated@@143 ($generated@@364 $generated@@633) ($generated@@256 $generated@@635))) ($generated@@143 ($generated@@404 $generated@@633) ($generated@@256 ($generated@@165 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@143 $generated@@633 ($generated@@430 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@143 $generated@@636 $generated@@46))
 :pattern ( ($generated@@143 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@143 $generated@@637 $generated@@47))
 :pattern ( ($generated@@143 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@143 $generated@@638 $generated@@44))
 :pattern ( ($generated@@143 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@466) ($generated@@143 $generated@@639 $generated@@45))
 :pattern ( ($generated@@143 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@175) ($generated@@143 $generated@@640 $generated@@48))
 :pattern ( ($generated@@143 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 (T@U) Bool)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(assert  (and (and (and (= (type $generated@@641) ($generated@@187 $generated@@84 $generated@@4)) (= (type $generated@@642) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@643) $generated@@84)) (= (type $generated@@645) ($generated@@281 $generated@@175))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@647  (=> (and (= $generated@@641 ($generated@@186 $generated@@141 $generated@@642 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@643 $generated@@141)))))
(let (($generated@@648  (=> (and (and ($generated@@154 $generated@@642) ($generated@@644 $generated@@642)) (and ($generated@@143 $generated@@643 ($generated@@159 $generated@@151)) ($generated@@81 $generated@@643 ($generated@@159 $generated@@151) $generated@@642))) (=> (and (and (and (and ($generated@@143 $generated@@645 ($generated@@509 $generated@@151)) ($generated@@81 $generated@@645 ($generated@@509 $generated@@151) $generated@@642)) true) (= 2 $generated@@646)) (and (not (= $generated@@643 $generated@@141)) (= (ControlFlow 0 3) 2))) $generated@@647))))
$generated@@648)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 (Int) T@U)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@171 (T@T) T@U)
(declare-fun $generated@@172 (T@U) Int)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@T T@U) T@U)
(declare-fun $generated@@194 () T@T)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (let (($generated@@164 (type $generated@@163)))
(= (type ($generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@162 $generated@@165) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165))
)))
(assert  (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 Int) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))))
(assert (forall (($generated@@170 Int) ) (!  (=> (and (<= 0 $generated@@170) (< $generated@@170 65536)) (= ($generated@@167 ($generated@@166 $generated@@170)) $generated@@170))
 :pattern ( ($generated@@166 $generated@@170))
)))
(assert  (and (and (forall (($generated@@175 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@175)) 12)) (forall (($generated@@176 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@173 $generated@@176))
))) (forall (($generated@@177 T@T) ) (! (= (type ($generated@@171 $generated@@177)) ($generated@@173 $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
))))
(assert (forall (($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@178)) 0)
 :pattern ( ($generated@@171 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(= (type ($generated@@179 $generated@@180 $generated@@181)) ($generated@@173 $generated@@182)))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
 (=> (= (type $generated@@183) ($generated@@173 $generated@@185)) (= ($generated@@172 ($generated@@179 $generated@@183 $generated@@184)) (+ 1 ($generated@@172 $generated@@183)))))
 :pattern ( ($generated@@179 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> (= (type $generated@@186) $generated@@168) (and (and (= ($generated@@166 ($generated@@167 $generated@@186)) $generated@@186) (<= 0 ($generated@@167 $generated@@186))) (< ($generated@@167 $generated@@186) 65536)))
 :pattern ( ($generated@@167 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@187) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@187 $generated@@189))) (and ($generated@@44 $generated@@187 $generated@@188) ($generated@@44 $generated@@188 $generated@@189))) ($generated@@44 $generated@@187 $generated@@189))
 :pattern ( ($generated@@44 $generated@@187 $generated@@188) ($generated@@44 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@174 (type $generated@@190))))
 (=> (= (type $generated@@190) ($generated@@173 $generated@@191)) (<= 0 ($generated@@172 $generated@@190))))
 :pattern ( ($generated@@172 $generated@@190))
)))
(assert  (and (and (= ($generated@@1 $generated@@194) 13) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@192 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@U) ) (! (= (type ($generated@@193 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@193 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(= ($generated@@193 $generated@@199 ($generated@@192 $generated@@198)) $generated@@198))
 :pattern ( ($generated@@192 $generated@@198))
)))
(assert  (and (forall (($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@174 (type $generated@@202))))
(= (type ($generated@@200 $generated@@202)) ($generated@@173 $generated@@203)))
 :pattern ( ($generated@@200 $generated@@202))
)) (forall (($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@174 (type $generated@@204))))
(= (type ($generated@@201 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@201 $generated@@204))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
 (=> (= (type $generated@@206) ($generated@@173 $generated@@208)) (and (= ($generated@@200 ($generated@@179 $generated@@206 $generated@@207)) $generated@@206) (= ($generated@@201 ($generated@@179 $generated@@206 $generated@@207)) $generated@@207))))
 :pattern ( ($generated@@179 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@192 ($generated@@162 $generated@@209)) ($generated@@162 ($generated@@192 $generated@@209)))
 :pattern ( ($generated@@192 ($generated@@162 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@174 (type $generated@@210))))
 (=> (and (= (type $generated@@210) ($generated@@173 $generated@@211)) (= ($generated@@172 $generated@@210) 0)) (= $generated@@210 ($generated@@171 $generated@@211))))
 :pattern ( ($generated@@172 $generated@@210))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@183 (T@U Int) T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U) Int)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U Int) T@U)
(declare-fun $generated@@206 (T@U Int T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@221 (T@T T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@275 (T@U Int) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@287 (T@U T@U) T@U)
(declare-fun $generated@@288 (T@U T@U) Bool)
(declare-fun $generated@@295 (T@U T@U) T@U)
(declare-fun $generated@@296 (Int) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@324 (Int) Int)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@335 (Int) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 () T@T)
(declare-fun $generated@@344 (T@U T@U T@U) Bool)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@356 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@U) Int)
(declare-fun $generated@@368 (T@T) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U) Int)
(declare-fun $generated@@398 (T@T) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@T T@T) T@U)
(declare-fun $generated@@409 (T@T T@T) T@T)
(declare-fun $generated@@410 (T@T) T@T)
(declare-fun $generated@@411 (T@T) T@T)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@426 (T@T T@T) T@U)
(declare-fun $generated@@427 (T@T T@T) T@T)
(declare-fun $generated@@428 (T@T) T@T)
(declare-fun $generated@@429 (T@T) T@T)
(declare-fun $generated@@449 (T@T T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@528 (T@U T@U) T@U)
(declare-fun $generated@@536 (T@U T@U) T@U)
(declare-fun $generated@@557 (T@T) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@608 (T@U) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@636 (T@U) Int)
(declare-fun $generated@@638 (T@U) T@U)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@646 (T@U) T@U)
(declare-fun $generated@@650 (T@U) T@U)
(declare-fun $generated@@655 (T@U) Int)
(declare-fun $generated@@657 (T@U) T@U)
(declare-fun $generated@@660 (T@U) T@U)
(declare-fun $generated@@681 (T@U) Int)
(declare-fun $generated@@682 (T@U) Int)
(declare-fun $generated@@709 (T@U) T@U)
(declare-fun $generated@@710 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (= ($generated@@77 $generated@@60) 0))
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@70)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@72 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@72 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@69)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (forall (($generated@@143 T@U) ) (! (= (type ($generated@@139 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@139 $generated@@143))
)) (= (type $generated@@140) $generated@@83)) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@144)) $generated@@69)
 :pattern ( ($generated@@141 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@69) (= (type $generated@@146) $generated@@83)) (and (not (= $generated@@146 $generated@@140)) (= ($generated@@141 $generated@@146) ($generated@@139 $generated@@145)))) ($generated@@142 ($generated@@8 ($generated@@138 $generated@@146)) $generated@@46))
 :pattern ( ($generated@@138 $generated@@146) ($generated@@139 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@149) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@69) (= (type $generated@@152) $generated@@83)) (= (type $generated@@153) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@152 ($generated@@139 $generated@@151) $generated@@153)  (or (= $generated@@152 $generated@@140) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@152 ($generated@@139 $generated@@151) $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@69))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@2) (= (type $generated@@156) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
 :pattern ( ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@69) (= (type $generated@@159) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@160) $generated@@83)) (and (and ($generated@@157 $generated@@159) (and (not (= $generated@@160 $generated@@140)) (= ($generated@@141 $generated@@160) ($generated@@139 $generated@@158)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@159 $generated@@160) $generated@@60)))) ($generated@@80 ($generated@@8 ($generated@@138 $generated@@160)) $generated@@46 $generated@@159))
 :pattern ( ($generated@@138 $generated@@160) ($generated@@89 ($generated@@87 $generated@@159 $generated@@160) $generated@@60) ($generated@@139 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@142 $generated@@161 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@161 ($generated@@81 0)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@69)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@69) (= (type $generated@@165) $generated@@83)) (= (type $generated@@166) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@165 ($generated@@162 $generated@@164) $generated@@166) ($generated@@80 $generated@@165 ($generated@@139 $generated@@164) $generated@@166)))
 :pattern ( ($generated@@80 $generated@@165 ($generated@@162 $generated@@164) $generated@@166))
)))
(assert  (and (= ($generated@@1 $generated@@169) 14) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@170 $generated@@171)) $generated@@69)
 :pattern ( ($generated@@168 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@69) (= (type $generated@@173) $generated@@69)) (= (type $generated@@174) $generated@@169)) ($generated@@142 $generated@@174 ($generated@@168 $generated@@172 $generated@@173))) ($generated@@167 $generated@@174))
 :pattern ( ($generated@@167 $generated@@174) ($generated@@142 $generated@@174 ($generated@@168 $generated@@172 $generated@@173)))
)))
(assert  (and (and (= ($generated@@1 $generated@@178) 15) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@176 $generated@@179))
))) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@178)
 :pattern ( ($generated@@177 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@169) (= (type $generated@@182) $generated@@169)) true) (= ($generated@@175 $generated@@181 $generated@@182)  (and (= ($generated@@176 $generated@@181) ($generated@@176 $generated@@182)) (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)))))
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
)))
(assert  (and (and (and (forall (($generated@@188 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@188)) 16)) (forall (($generated@@189 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@185 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 Int) ) (! (let (($generated@@192 ($generated@@187 (type $generated@@190))))
(= (type ($generated@@183 $generated@@190 $generated@@191)) ($generated@@185 $generated@@192)))
 :pattern ( ($generated@@183 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= (type ($generated@@184 $generated@@193 $generated@@194)) ($generated@@185 $generated@@195)))
 :pattern ( ($generated@@184 $generated@@193 $generated@@194))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Int) ) (! (let (($generated@@199 (type $generated@@197)))
 (=> (= (type $generated@@196) ($generated@@185 $generated@@199)) (=> (and (<= 0 $generated@@198) (<= $generated@@198 ($generated@@186 $generated@@196))) (= ($generated@@183 ($generated@@184 $generated@@196 $generated@@197) $generated@@198) ($generated@@184 ($generated@@183 $generated@@196 $generated@@198) $generated@@197)))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@196 $generated@@197) $generated@@198))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@69)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@82 $generated@@178 $generated@@2)) (= (type $generated@@204) $generated@@69)) ($generated@@142 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@142 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (forall (($generated@@207 T@U) ($generated@@208 Int) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@207))))
(= (type ($generated@@205 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@205 $generated@@207 $generated@@208))
)) (forall (($generated@@210 T@U) ($generated@@211 Int) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@206 $generated@@210 $generated@@211 $generated@@212)) ($generated@@185 $generated@@213)))
 :pattern ( ($generated@@206 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 Int) ($generated@@216 T@U) ($generated@@217 Int) ) (! (let (($generated@@218 (type $generated@@216)))
 (=> (= (type $generated@@214) ($generated@@185 $generated@@218)) (=> (and (<= 0 $generated@@217) (< $generated@@217 ($generated@@186 $generated@@214))) (and (=> (= $generated@@215 $generated@@217) (= ($generated@@205 ($generated@@206 $generated@@214 $generated@@215 $generated@@216) $generated@@217) $generated@@216)) (=> (not (= $generated@@215 $generated@@217)) (= ($generated@@205 ($generated@@206 $generated@@214 $generated@@215 $generated@@216) $generated@@217) ($generated@@205 $generated@@214 $generated@@217)))))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@214 $generated@@215 $generated@@216) $generated@@217))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (= ($generated@@1 ($generated@@221 $generated@@225 $generated@@226)) 17)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@227 $generated@@228)) $generated@@227)
 :pattern ( ($generated@@221 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@223 ($generated@@221 $generated@@229 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@221 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@223 (type $generated@@231))))
(= (type ($generated@@219 $generated@@231 $generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@219 $generated@@231 $generated@@232 $generated@@233))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(let (($generated@@240 (type $generated@@236)))
(= (type ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@221 $generated@@240 $generated@@239))))
 :pattern ( ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@223 (type $generated@@241))))
 (=> (= (type $generated@@244) $generated@@245) (= ($generated@@219 ($generated@@224 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@242 $generated@@243) $generated@@244)))
 :weight 0
))) (and (and (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@248 $generated@@250) (= ($generated@@219 ($generated@@224 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@219 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@219 ($generated@@224 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@219 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or true (= ($generated@@219 ($generated@@224 $generated@@259 $generated@@260 $generated@@261 $generated@@258) $generated@@262 $generated@@263) ($generated@@219 $generated@@259 $generated@@262 $generated@@263)))
 :weight 0
)))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Bool) ) (! (= (type ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267)) ($generated@@221 $generated@@83 $generated@@4))
 :pattern ( ($generated@@220 $generated@@264 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@72 (type $generated@@273))))
 (=> (and (and (and (and (= (type $generated@@268) $generated@@83) (= (type $generated@@269) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@270) ($generated@@71 $generated@@4))) (= (type $generated@@272) $generated@@83)) (= (type $generated@@273) ($generated@@71 $generated@@274))) (= ($generated@@0 ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))  (=> (and (not (= $generated@@272 $generated@@268)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@269 $generated@@272) $generated@@270))) $generated@@271))))
 :pattern ( ($generated@@219 ($generated@@220 $generated@@268 $generated@@269 $generated@@270 $generated@@271) $generated@@272 $generated@@273))
)))
(assert  (and (forall (($generated@@277 T@U) ($generated@@278 Int) ) (! (let (($generated@@279 ($generated@@187 (type $generated@@277))))
(= (type ($generated@@275 $generated@@277 $generated@@278)) ($generated@@185 $generated@@279)))
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)) (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@187 (type $generated@@280))))
(= (type ($generated@@276 $generated@@280 $generated@@281)) ($generated@@185 $generated@@282)))
 :pattern ( ($generated@@276 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 Int) ) (! (let (($generated@@286 ($generated@@187 (type $generated@@283))))
 (=> (and (and (= (type $generated@@283) ($generated@@185 $generated@@286)) (= (type $generated@@284) ($generated@@185 $generated@@286))) (= $generated@@285 ($generated@@186 $generated@@283))) (and (= ($generated@@275 ($generated@@276 $generated@@283 $generated@@284) $generated@@285) $generated@@283) (= ($generated@@183 ($generated@@276 $generated@@283 $generated@@284) $generated@@285) $generated@@284))))
 :pattern ( ($generated@@275 ($generated@@276 $generated@@283 $generated@@284) $generated@@285))
 :pattern ( ($generated@@183 ($generated@@276 $generated@@283 $generated@@284) $generated@@285))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (! (= (type ($generated@@287 $generated@@289 $generated@@290)) $generated@@169)
 :pattern ( ($generated@@287 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (= (type $generated@@291) $generated@@69) (= (type $generated@@292) $generated@@69)) (= (type $generated@@293) $generated@@178)) (= (type $generated@@294) $generated@@178)) (= ($generated@@142 ($generated@@287 $generated@@293 $generated@@294) ($generated@@168 $generated@@291 $generated@@292))  (and ($generated@@288 $generated@@293 $generated@@291) ($generated@@288 $generated@@294 $generated@@292))))
 :pattern ( ($generated@@142 ($generated@@287 $generated@@293 $generated@@294) ($generated@@168 $generated@@291 $generated@@292)))
)))
(assert  (and (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (= (type ($generated@@295 $generated@@297 $generated@@298)) ($generated@@185 $generated@@178))
 :pattern ( ($generated@@295 $generated@@297 $generated@@298))
)) (forall (($generated@@299 Int) ) (! (= (type ($generated@@296 $generated@@299)) ($generated@@71 $generated@@178))
 :pattern ( ($generated@@296 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Int) ($generated@@303 Int) ) (!  (=> (and (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@301) $generated@@83)) (=> (and (and (= (+ $generated@@302 1) $generated@@303) (<= 0 $generated@@302)) (<= $generated@@303 ($generated@@138 $generated@@301))) (= ($generated@@275 ($generated@@295 $generated@@300 $generated@@301) $generated@@303) ($generated@@184 ($generated@@275 ($generated@@295 $generated@@300 $generated@@301) $generated@@302) ($generated@@89 ($generated@@87 $generated@@300 $generated@@301) ($generated@@296 $generated@@302))))))
 :pattern ( ($generated@@275 ($generated@@295 $generated@@300 $generated@@301) $generated@@302) ($generated@@275 ($generated@@295 $generated@@300 $generated@@301) $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 T@U) ($generated@@307 Int) ) (! (let (($generated@@308 (type $generated@@306)))
 (=> (= (type $generated@@304) ($generated@@185 $generated@@308)) (=> (and (and (<= 0 $generated@@307) (<= $generated@@307 $generated@@305)) (< $generated@@305 ($generated@@186 $generated@@304))) (= ($generated@@183 ($generated@@206 $generated@@304 $generated@@305 $generated@@306) $generated@@307) ($generated@@206 ($generated@@183 $generated@@304 $generated@@307) (- $generated@@305 $generated@@307) $generated@@306)))))
 :pattern ( ($generated@@183 ($generated@@206 $generated@@304 $generated@@305 $generated@@306) $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@169) (= (type $generated@@310) $generated@@169)) (= ($generated@@175 $generated@@309 $generated@@310) (= $generated@@309 $generated@@310)))
 :pattern ( ($generated@@175 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 Int) ) (! (let (($generated@@313 ($generated@@187 (type $generated@@311))))
 (=> (and (= (type $generated@@311) ($generated@@185 $generated@@313)) (= $generated@@312 0)) (= ($generated@@183 $generated@@311 $generated@@312) $generated@@311)))
 :pattern ( ($generated@@183 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@69)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@317) $generated@@69)) (= ($generated@@142 $generated@@316 ($generated@@314 $generated@@317)) (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@178) ($generated@@0 ($generated@@87 $generated@@316 $generated@@318))) ($generated@@288 $generated@@318 $generated@@317))
 :pattern ( ($generated@@87 $generated@@316 $generated@@318))
))))
 :pattern ( ($generated@@142 $generated@@316 ($generated@@314 $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@69)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@322) $generated@@69)) (= ($generated@@142 $generated@@321 ($generated@@319 $generated@@322)) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@178) ($generated@@0 ($generated@@87 $generated@@321 $generated@@323))) ($generated@@288 $generated@@323 $generated@@322))
 :pattern ( ($generated@@87 $generated@@321 $generated@@323))
))))
 :pattern ( ($generated@@142 $generated@@321 ($generated@@319 $generated@@322)))
)))
(assert (forall (($generated@@325 Int) ) (! (= ($generated@@324 $generated@@325) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 (type $generated@@327)))
(= (type ($generated@@326 $generated@@327)) $generated@@328))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (= ($generated@@326 $generated@@329) $generated@@329)
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@69)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (= (type $generated@@332) ($generated@@185 $generated@@178)) (= (type $generated@@333) $generated@@178)) (= (type $generated@@334) $generated@@69)) (and ($generated@@142 $generated@@332 ($generated@@330 $generated@@334)) ($generated@@288 $generated@@333 $generated@@334))) ($generated@@142 ($generated@@184 $generated@@332 $generated@@333) ($generated@@330 $generated@@334)))
 :pattern ( ($generated@@142 ($generated@@184 $generated@@332 $generated@@333) ($generated@@330 $generated@@334)))
)))
(assert  (and (= ($generated@@1 $generated@@337) 18) (forall (($generated@@338 Int) ) (! (= (type ($generated@@335 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@335 $generated@@338))
))))
(assert (forall (($generated@@339 Int) ) (!  (=> (and (<= 0 $generated@@339) (< $generated@@339 65536)) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 Int) ($generated@@342 Int) ) (! (let (($generated@@343 ($generated@@187 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@185 $generated@@343)) (=> (and (and (<= 0 $generated@@342) (< $generated@@342 $generated@@341)) (< $generated@@342 ($generated@@186 $generated@@340))) (= ($generated@@205 ($generated@@275 $generated@@340 $generated@@341) $generated@@342) ($generated@@205 $generated@@340 $generated@@342)))))
 :weight 25
 :pattern ( ($generated@@205 ($generated@@275 $generated@@340 $generated@@341) $generated@@342))
 :pattern ( ($generated@@205 $generated@@340 $generated@@342) ($generated@@275 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@345) $generated@@69) (= (type $generated@@346) $generated@@69)) (= (type $generated@@347) $generated@@178)) (= (type $generated@@348) $generated@@178)) (= (type $generated@@349) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@157 $generated@@349)) (= ($generated@@80 ($generated@@287 $generated@@347 $generated@@348) ($generated@@168 $generated@@345 $generated@@346) $generated@@349)  (and ($generated@@344 $generated@@347 $generated@@345 $generated@@349) ($generated@@344 $generated@@348 $generated@@346 $generated@@349))))
 :pattern ( ($generated@@80 ($generated@@287 $generated@@347 $generated@@348) ($generated@@168 $generated@@345 $generated@@346) $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 Int) ) (! (let (($generated@@352 ($generated@@187 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@185 $generated@@352)) (=> (and (<= 0 $generated@@351) (<= $generated@@351 ($generated@@186 $generated@@350))) (= ($generated@@186 ($generated@@183 $generated@@350 $generated@@351)) (- ($generated@@186 $generated@@350) $generated@@351)))))
 :pattern ( ($generated@@186 ($generated@@183 $generated@@350 $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@73)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@169) (= ($generated@@167 $generated@@355) (= ($generated@@353 $generated@@355) $generated@@63)))
 :pattern ( ($generated@@167 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@187 (type $generated@@357))))
 (=> (and (= (type $generated@@357) ($generated@@185 $generated@@359)) (= (type $generated@@358) ($generated@@185 $generated@@359))) (= ($generated@@356 $generated@@357 $generated@@358)  (and (= ($generated@@186 $generated@@357) ($generated@@186 $generated@@358)) (forall (($generated@@360 Int) ) (!  (=> (and (<= 0 $generated@@360) (< $generated@@360 ($generated@@186 $generated@@357))) (= ($generated@@205 $generated@@357 $generated@@360) ($generated@@205 $generated@@358 $generated@@360)))
 :pattern ( ($generated@@205 $generated@@357 $generated@@360))
 :pattern ( ($generated@@205 $generated@@358 $generated@@360))
))))))
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ) (! (let (($generated@@364 ($generated@@187 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@185 $generated@@364)) (=> (and (<= 0 $generated@@363) (< $generated@@363 ($generated@@186 $generated@@362))) (< ($generated@@361 ($generated@@275 $generated@@362 $generated@@363)) ($generated@@361 $generated@@362)))))
 :pattern ( ($generated@@361 ($generated@@275 $generated@@362 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@169) ($generated@@167 $generated@@365)) (exists (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (and (and (= (type $generated@@366) $generated@@178) (= (type $generated@@367) $generated@@178)) (= $generated@@365 ($generated@@287 $generated@@366 $generated@@367)))
 :no-pattern (type $generated@@366)
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
)))
 :pattern ( ($generated@@167 $generated@@365))
)))
(assert (forall (($generated@@369 T@T) ) (! (= (type ($generated@@368 $generated@@369)) ($generated@@185 $generated@@369))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@T) ) (! (= ($generated@@186 ($generated@@368 $generated@@370)) 0)
 :pattern ( ($generated@@368 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 Int) ) (! (let (($generated@@373 ($generated@@187 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@185 $generated@@373)) (=> (and (< 0 $generated@@372) (<= $generated@@372 ($generated@@186 $generated@@371))) (< ($generated@@361 ($generated@@183 $generated@@371 $generated@@372)) ($generated@@361 $generated@@371)))))
 :pattern ( ($generated@@361 ($generated@@183 $generated@@371 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
 (=> (= (type $generated@@374) ($generated@@185 $generated@@376)) (= ($generated@@186 ($generated@@184 $generated@@374 $generated@@375)) (+ 1 ($generated@@186 $generated@@374)))))
 :pattern ( ($generated@@184 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@337) (and (and (= ($generated@@335 ($generated@@336 $generated@@377)) $generated@@377) (<= 0 ($generated@@336 $generated@@377))) (< ($generated@@336 $generated@@377) 65536)))
 :pattern ( ($generated@@336 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@69) (= (type $generated@@379) $generated@@83)) (= ($generated@@142 $generated@@379 ($generated@@162 $generated@@378))  (and ($generated@@142 $generated@@379 ($generated@@139 $generated@@378)) (not (= $generated@@379 $generated@@140)))))
 :pattern ( ($generated@@142 $generated@@379 ($generated@@162 $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (! (= (type ($generated@@380 $generated@@381)) $generated@@178)
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@69) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@344 ($generated@@380 $generated@@382) $generated@@383 $generated@@384) ($generated@@80 $generated@@382 $generated@@383 $generated@@384)))
 :pattern ( ($generated@@344 ($generated@@380 $generated@@382) $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@386) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@387) $generated@@178)) (= (type $generated@@388) $generated@@69)) ($generated@@147 $generated@@385 $generated@@386)) ($generated@@344 $generated@@387 $generated@@388 $generated@@385)) ($generated@@344 $generated@@387 $generated@@388 $generated@@386))
 :pattern ( ($generated@@147 $generated@@385 $generated@@386) ($generated@@344 $generated@@387 $generated@@388 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@390) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@392) $generated@@69)) ($generated@@147 $generated@@389 $generated@@390)) ($generated@@80 $generated@@391 $generated@@392 $generated@@389)) ($generated@@80 $generated@@391 $generated@@392 $generated@@390))
 :pattern ( ($generated@@147 $generated@@389 $generated@@390) ($generated@@80 $generated@@391 $generated@@392 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 Int) ($generated@@395 Int) ) (! (let (($generated@@396 ($generated@@187 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@185 $generated@@396)) (=> (and (and (<= 0 $generated@@394) (<= 0 $generated@@395)) (< $generated@@395 (- ($generated@@186 $generated@@393) $generated@@394))) (= ($generated@@205 ($generated@@183 $generated@@393 $generated@@394) $generated@@395) ($generated@@205 $generated@@393 (+ $generated@@395 $generated@@394))))))
 :weight 25
 :pattern ( ($generated@@205 ($generated@@183 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@T) ) (! (= (type ($generated@@398 $generated@@399)) ($generated@@82 $generated@@399 $generated@@2))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@85 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@82 $generated@@401 $generated@@2)) (and (= (= ($generated@@397 $generated@@400) 0) (= $generated@@400 ($generated@@398 $generated@@401))) (=> (not (= ($generated@@397 $generated@@400) 0)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (< 0 ($generated ($generated@@87 $generated@@400 $generated@@402))))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ) (! (= (type ($generated@@403 $generated@@404)) $generated@@74)
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@69) (and (= ($generated@@78 ($generated@@139 $generated@@405)) $generated@@61) (= ($generated@@403 ($generated@@139 $generated@@405)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@69) (and (= ($generated@@78 ($generated@@162 $generated@@406)) $generated@@62) (= ($generated@@403 ($generated@@162 $generated@@406)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@406))
)))
(assert  (and (and (and (and (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (= ($generated@@1 ($generated@@409 $generated@@412 $generated@@413)) 19)) (forall (($generated@@414 T@T) ($generated@@415 T@T) ) (! (= ($generated@@410 ($generated@@409 $generated@@414 $generated@@415)) $generated@@414)
 :pattern ( ($generated@@409 $generated@@414 $generated@@415))
))) (forall (($generated@@416 T@T) ($generated@@417 T@T) ) (! (= ($generated@@411 ($generated@@409 $generated@@416 $generated@@417)) $generated@@417)
 :pattern ( ($generated@@409 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@410 (type $generated@@418))))
(= (type ($generated@@407 $generated@@418)) ($generated@@82 $generated@@419 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@418))
))) (forall (($generated@@420 T@T) ($generated@@421 T@T) ) (! (= (type ($generated@@408 $generated@@420 $generated@@421)) ($generated@@409 $generated@@420 $generated@@421))
 :pattern ( ($generated@@408 $generated@@420 $generated@@421))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@T) ) (! (let (($generated@@424 (type $generated@@422)))
 (not ($generated@@0 ($generated@@87 ($generated@@407 ($generated@@408 $generated@@424 $generated@@423)) $generated@@422))))
 :pattern ( (let (($generated@@424 (type $generated@@422)))
($generated@@87 ($generated@@407 ($generated@@408 $generated@@424 $generated@@423)) $generated@@422)))
)))
(assert  (and (and (and (and (forall (($generated@@430 T@T) ($generated@@431 T@T) ) (= ($generated@@1 ($generated@@427 $generated@@430 $generated@@431)) 20)) (forall (($generated@@432 T@T) ($generated@@433 T@T) ) (! (= ($generated@@428 ($generated@@427 $generated@@432 $generated@@433)) $generated@@432)
 :pattern ( ($generated@@427 $generated@@432 $generated@@433))
))) (forall (($generated@@434 T@T) ($generated@@435 T@T) ) (! (= ($generated@@429 ($generated@@427 $generated@@434 $generated@@435)) $generated@@435)
 :pattern ( ($generated@@427 $generated@@434 $generated@@435))
))) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@428 (type $generated@@436))))
(= (type ($generated@@425 $generated@@436)) ($generated@@82 $generated@@437 $generated@@4)))
 :pattern ( ($generated@@425 $generated@@436))
))) (forall (($generated@@438 T@T) ($generated@@439 T@T) ) (! (= (type ($generated@@426 $generated@@438 $generated@@439)) ($generated@@427 $generated@@438 $generated@@439))
 :pattern ( ($generated@@426 $generated@@438 $generated@@439))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@T) ) (! (let (($generated@@442 (type $generated@@440)))
 (not ($generated@@0 ($generated@@87 ($generated@@425 ($generated@@426 $generated@@442 $generated@@441)) $generated@@440))))
 :pattern ( (let (($generated@@442 (type $generated@@440)))
($generated@@87 ($generated@@425 ($generated@@426 $generated@@442 $generated@@441)) $generated@@440)))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@187 (type $generated@@443))))
 (=> (and (= (type $generated@@443) ($generated@@185 $generated@@445)) (= (type $generated@@444) ($generated@@185 $generated@@445))) (= ($generated@@186 ($generated@@276 $generated@@443 $generated@@444)) (+ ($generated@@186 $generated@@443) ($generated@@186 $generated@@444)))))
 :pattern ( ($generated@@186 ($generated@@276 $generated@@443 $generated@@444)))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@85 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@82 $generated@@447 $generated@@2)) (= ($generated@@201 $generated@@446) (forall (($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@447) (and (<= 0 ($generated ($generated@@87 $generated@@446 $generated@@448))) (<= ($generated ($generated@@87 $generated@@446 $generated@@448)) ($generated@@397 $generated@@446))))
 :pattern ( ($generated@@87 $generated@@446 $generated@@448))
)))))
 :pattern ( ($generated@@201 $generated@@446))
)))
(assert (forall (($generated@@450 T@T) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@450)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@178) ($generated@@288 $generated@@452 $generated@@154)) (and (= ($generated@@380 ($generated@@449 $generated@@2 $generated@@452)) $generated@@452) ($generated@@142 ($generated@@449 $generated@@2 $generated@@452) $generated@@154)))
 :pattern ( ($generated@@288 $generated@@452 $generated@@154))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@69) (= (type $generated@@454) $generated@@83)) (= ($generated@@142 $generated@@454 ($generated@@139 $generated@@453))  (or (= $generated@@454 $generated@@140) (= ($generated@@141 $generated@@454) ($generated@@139 $generated@@453)))))
 :pattern ( ($generated@@142 $generated@@454 ($generated@@139 $generated@@453)))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 Int) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
 (=> (= (type $generated@@455) ($generated@@185 $generated@@458)) (and (=> (= $generated@@456 ($generated@@186 $generated@@455)) (= ($generated@@205 ($generated@@184 $generated@@455 $generated@@457) $generated@@456) $generated@@457)) (=> (not (= $generated@@456 ($generated@@186 $generated@@455))) (= ($generated@@205 ($generated@@184 $generated@@455 $generated@@457) $generated@@456) ($generated@@205 $generated@@455 $generated@@456))))))
 :pattern ( ($generated@@205 ($generated@@184 $generated@@455 $generated@@457) $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@411 (type $generated@@459))))
(let (($generated@@461 ($generated@@410 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@409 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@408 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@461) ($generated@@0 ($generated@@87 ($generated@@407 $generated@@459) $generated@@462)))
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@407 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@411 (type $generated@@464))))
(= (type ($generated@@463 $generated@@464)) ($generated@@82 $generated@@465 $generated@@4)))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@411 (type $generated@@466))))
(let (($generated@@468 ($generated@@410 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@409 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@408 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ) (!  (and (= (type $generated@@469) $generated@@467) ($generated@@0 ($generated@@87 ($generated@@463 $generated@@466) $generated@@469)))
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@463 $generated@@466))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@429 (type $generated@@470))))
(let (($generated@@472 ($generated@@428 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@427 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@426 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@472) ($generated@@0 ($generated@@87 ($generated@@425 $generated@@470) $generated@@473)))
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@425 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@429 (type $generated@@475))))
(= (type ($generated@@474 $generated@@475)) ($generated@@82 $generated@@476 $generated@@4)))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@429 (type $generated@@477))))
(let (($generated@@479 ($generated@@428 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@427 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@426 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ) (!  (and (= (type $generated@@480) $generated@@478) ($generated@@0 ($generated@@87 ($generated@@474 $generated@@477) $generated@@480)))
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@474 $generated@@477))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@482) $generated@@83)) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@186 ($generated@@295 $generated@@481 $generated@@482)))) (= ($generated@@205 ($generated@@295 $generated@@481 $generated@@482) $generated@@483) ($generated@@89 ($generated@@87 $generated@@481 $generated@@482) ($generated@@296 $generated@@483))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@481 $generated@@482) ($generated@@296 $generated@@483)))
 :pattern ( ($generated@@205 ($generated@@295 $generated@@481 $generated@@482) $generated@@483))
)))
 :pattern ( ($generated@@295 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) ($generated@@82 $generated@@178 $generated@@2)) (= (type $generated@@485) $generated@@69)) (= ($generated@@142 $generated@@484 ($generated@@200 $generated@@485)) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@178) (< 0 ($generated ($generated@@87 $generated@@484 $generated@@486)))) ($generated@@288 $generated@@486 $generated@@485))
 :pattern ( ($generated@@87 $generated@@484 $generated@@486))
))))
 :pattern ( ($generated@@142 $generated@@484 ($generated@@200 $generated@@485)))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 Int) ($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 (type $generated@@489)))
 (=> (= (type $generated@@487) ($generated@@185 $generated@@491)) (=> (and (and (<= 0 $generated@@488) (< $generated@@488 $generated@@490)) (<= $generated@@490 ($generated@@186 $generated@@487))) (= ($generated@@183 ($generated@@206 $generated@@487 $generated@@488 $generated@@489) $generated@@490) ($generated@@183 $generated@@487 $generated@@490)))))
 :pattern ( ($generated@@183 ($generated@@206 $generated@@487 $generated@@488 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@493) $generated@@69)) (= (type $generated@@494) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@492 ($generated@@314 $generated@@493) $generated@@494) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@178) ($generated@@0 ($generated@@87 $generated@@492 $generated@@495))) ($generated@@344 $generated@@495 $generated@@493 $generated@@494))
 :pattern ( ($generated@@87 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@80 $generated@@492 ($generated@@314 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@82 $generated@@178 $generated@@4)) (= (type $generated@@497) $generated@@69)) (= (type $generated@@498) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@496 ($generated@@319 $generated@@497) $generated@@498) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@178) ($generated@@0 ($generated@@87 $generated@@496 $generated@@499))) ($generated@@344 $generated@@499 $generated@@497 $generated@@498))
 :pattern ( ($generated@@87 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@80 $generated@@496 ($generated@@319 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated ($generated@@87 ($generated@@398 $generated@@501) $generated@@500)) 0))
 :pattern ( (let (($generated@@501 (type $generated@@500)))
($generated@@87 ($generated@@398 $generated@@501) $generated@@500)))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) ($generated@@82 $generated@@178 $generated@@4))
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@411 (type $generated@@505))))
(let (($generated@@507 ($generated@@410 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505)) ($generated@@82 $generated@@507 $generated@@506))))
 :pattern ( ($generated@@503 $generated@@505))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) ($generated@@409 $generated@@178 $generated@@178)) (= (type $generated@@509) $generated@@178)) (= ($generated@@0 ($generated@@87 ($generated@@502 $generated@@508) $generated@@509))  (and ($generated@@0 ($generated@@87 ($generated@@407 $generated@@508) ($generated@@176 ($generated@@449 $generated@@169 $generated@@509)))) (= ($generated@@87 ($generated@@503 $generated@@508) ($generated@@176 ($generated@@449 $generated@@169 $generated@@509))) ($generated@@177 ($generated@@449 $generated@@169 $generated@@509))))))
 :pattern ( ($generated@@87 ($generated@@502 $generated@@508) $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) ($generated@@82 $generated@@178 $generated@@4))
 :pattern ( ($generated@@510 $generated@@512))
)) (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@429 (type $generated@@513))))
(let (($generated@@515 ($generated@@428 (type $generated@@513))))
(= (type ($generated@@511 $generated@@513)) ($generated@@82 $generated@@515 $generated@@514))))
 :pattern ( ($generated@@511 $generated@@513))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) ($generated@@427 $generated@@178 $generated@@178)) (= (type $generated@@517) $generated@@178)) (= ($generated@@0 ($generated@@87 ($generated@@510 $generated@@516) $generated@@517))  (and ($generated@@0 ($generated@@87 ($generated@@425 $generated@@516) ($generated@@176 ($generated@@449 $generated@@169 $generated@@517)))) (= ($generated@@87 ($generated@@511 $generated@@516) ($generated@@176 ($generated@@449 $generated@@169 $generated@@517))) ($generated@@177 ($generated@@449 $generated@@169 $generated@@517))))))
 :pattern ( ($generated@@87 ($generated@@510 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(let (($generated@@521 ($generated@@410 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@409 $generated@@521 $generated@@520)) (= ($generated@@0 ($generated@@87 ($generated@@463 $generated@@518) $generated@@519)) (exists (($generated@@522 T@U) ) (!  (and (= (type $generated@@522) $generated@@521) (and ($generated@@0 ($generated@@87 ($generated@@407 $generated@@518) $generated@@522)) (= $generated@@519 ($generated@@87 ($generated@@503 $generated@@518) $generated@@522))))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@518) $generated@@522))
 :pattern ( ($generated@@87 ($generated@@503 $generated@@518) $generated@@522))
))))))
 :pattern ( ($generated@@87 ($generated@@463 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(let (($generated@@526 ($generated@@428 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@427 $generated@@526 $generated@@525)) (= ($generated@@0 ($generated@@87 ($generated@@474 $generated@@523) $generated@@524)) (exists (($generated@@527 T@U) ) (!  (and (= (type $generated@@527) $generated@@526) (and ($generated@@0 ($generated@@87 ($generated@@425 $generated@@523) $generated@@527)) (= $generated@@524 ($generated@@87 ($generated@@511 $generated@@523) $generated@@527))))
 :pattern ( ($generated@@87 ($generated@@425 $generated@@523) $generated@@527))
 :pattern ( ($generated@@87 ($generated@@511 $generated@@523) $generated@@527))
))))))
 :pattern ( ($generated@@87 ($generated@@474 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (! (= (type ($generated@@528 $generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@528 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) ($generated@@409 $generated@@178 $generated@@178)) (= (type $generated@@532) $generated@@69)) (= (type $generated@@533) $generated@@69)) (= (type $generated@@534) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@531 ($generated@@528 $generated@@532 $generated@@533) $generated@@534) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@407 $generated@@531) $generated@@535))) (and ($generated@@344 ($generated@@87 ($generated@@503 $generated@@531) $generated@@535) $generated@@533 $generated@@534) ($generated@@344 $generated@@535 $generated@@532 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@503 $generated@@531) $generated@@535))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@531) $generated@@535))
))))
 :pattern ( ($generated@@80 $generated@@531 ($generated@@528 $generated@@532 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@537 $generated@@538)) $generated@@69)
 :pattern ( ($generated@@536 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) ($generated@@427 $generated@@178 $generated@@178)) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) (= (type $generated@@542) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@539 ($generated@@536 $generated@@540 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@425 $generated@@539) $generated@@543))) (and ($generated@@344 ($generated@@87 ($generated@@511 $generated@@539) $generated@@543) $generated@@541 $generated@@542) ($generated@@344 $generated@@543 $generated@@540 $generated@@542)))
 :pattern ( ($generated@@87 ($generated@@511 $generated@@539) $generated@@543))
 :pattern ( ($generated@@87 ($generated@@425 $generated@@539) $generated@@543))
))))
 :pattern ( ($generated@@80 $generated@@539 ($generated@@536 $generated@@540 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@187 (type $generated@@544))))
 (=> (and (and (= (type $generated@@544) ($generated@@185 $generated@@546)) (= (type $generated@@545) ($generated@@185 $generated@@546))) ($generated@@356 $generated@@544 $generated@@545)) (= $generated@@544 $generated@@545)))
 :pattern ( ($generated@@356 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@187 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@185 $generated@@549)) (=> (and (<= 0 $generated@@548) (<= $generated@@548 ($generated@@186 $generated@@547))) (= ($generated@@186 ($generated@@275 $generated@@547 $generated@@548)) $generated@@548))))
 :pattern ( ($generated@@186 ($generated@@275 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@550) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@551) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@552) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@550 $generated@@552))) (and ($generated@@147 $generated@@550 $generated@@551) ($generated@@147 $generated@@551 $generated@@552))) ($generated@@147 $generated@@550 $generated@@552))
 :pattern ( ($generated@@147 $generated@@550 $generated@@551) ($generated@@147 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 Int) ) (!  (=> (and (and (= (type $generated@@553) $generated@@69) (= (type $generated@@554) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@555) $generated@@83)) (=> (and (and (and ($generated@@157 $generated@@554) (and (not (= $generated@@555 $generated@@140)) (= ($generated@@141 $generated@@555) ($generated@@139 $generated@@553)))) (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@138 $generated@@555)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@554 $generated@@555) $generated@@60))) ($generated@@344 ($generated@@89 ($generated@@87 $generated@@554 $generated@@555) ($generated@@296 $generated@@556)) $generated@@553 $generated@@554)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@554 $generated@@555) ($generated@@296 $generated@@556)) ($generated@@139 $generated@@553))
)))
(assert (forall (($generated@@558 T@T) ) (! (= (type ($generated@@557 $generated@@558)) ($generated@@82 $generated@@558 $generated@@4))
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@429 (type $generated@@559))))
(let (($generated@@561 ($generated@@428 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@427 $generated@@561 $generated@@560)) (= (= $generated@@559 ($generated@@426 $generated@@561 $generated@@560)) (= ($generated@@425 $generated@@559) ($generated@@557 $generated@@561))))))
 :pattern ( ($generated@@425 $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@429 (type $generated@@562))))
(let (($generated@@564 ($generated@@428 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@427 $generated@@564 $generated@@563)) (= (= $generated@@562 ($generated@@426 $generated@@564 $generated@@563)) (= ($generated@@474 $generated@@562) ($generated@@557 $generated@@563))))))
 :pattern ( ($generated@@474 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@429 (type $generated@@565))))
(let (($generated@@567 ($generated@@428 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@427 $generated@@567 $generated@@566)) (= (= $generated@@565 ($generated@@426 $generated@@567 $generated@@566)) (= ($generated@@510 $generated@@565) ($generated@@557 $generated@@178))))))
 :pattern ( ($generated@@510 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@411 (type $generated@@568))))
(let (($generated@@570 ($generated@@410 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@409 $generated@@570 $generated@@569)) (or (= $generated@@568 ($generated@@408 $generated@@570 $generated@@569)) (exists (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (and (and (= (type $generated@@571) $generated@@178) (= (type $generated@@572) $generated@@178)) ($generated@@0 ($generated@@87 ($generated@@502 $generated@@568) ($generated@@380 ($generated@@287 $generated@@571 $generated@@572)))))
 :no-pattern (type $generated@@571)
 :no-pattern (type $generated@@572)
 :no-pattern ($generated $generated@@571)
 :no-pattern ($generated@@0 $generated@@571)
 :no-pattern ($generated $generated@@572)
 :no-pattern ($generated@@0 $generated@@572)
))))))
 :pattern ( ($generated@@502 $generated@@568))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@429 (type $generated@@573))))
(let (($generated@@575 ($generated@@428 (type $generated@@573))))
 (=> (= (type $generated@@573) ($generated@@427 $generated@@575 $generated@@574)) (or (= $generated@@573 ($generated@@426 $generated@@575 $generated@@574)) (exists (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (and (and (= (type $generated@@576) $generated@@178) (= (type $generated@@577) $generated@@178)) ($generated@@0 ($generated@@87 ($generated@@510 $generated@@573) ($generated@@380 ($generated@@287 $generated@@576 $generated@@577)))))
 :no-pattern (type $generated@@576)
 :no-pattern (type $generated@@577)
 :no-pattern ($generated $generated@@576)
 :no-pattern ($generated@@0 $generated@@576)
 :no-pattern ($generated $generated@@577)
 :no-pattern ($generated@@0 $generated@@577)
))))))
 :pattern ( ($generated@@510 $generated@@573))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@178) ($generated@@288 $generated@@578 $generated@@46)) (and (= ($generated@@380 ($generated@@449 $generated@@2 $generated@@578)) $generated@@578) ($generated@@142 ($generated@@449 $generated@@2 $generated@@578) $generated@@46)))
 :pattern ( ($generated@@288 $generated@@578 $generated@@46))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@178) ($generated@@288 $generated@@579 $generated@@47)) (and (= ($generated@@380 ($generated@@449 $generated@@3 $generated@@579)) $generated@@579) ($generated@@142 ($generated@@449 $generated@@3 $generated@@579) $generated@@47)))
 :pattern ( ($generated@@288 $generated@@579 $generated@@47))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@178) ($generated@@288 $generated@@580 $generated@@44)) (and (= ($generated@@380 ($generated@@449 $generated@@4 $generated@@580)) $generated@@580) ($generated@@142 ($generated@@449 $generated@@4 $generated@@580) $generated@@44)))
 :pattern ( ($generated@@288 $generated@@580 $generated@@44))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@178) ($generated@@288 $generated@@581 $generated@@45)) (and (= ($generated@@380 ($generated@@449 $generated@@337 $generated@@581)) $generated@@581) ($generated@@142 ($generated@@449 $generated@@337 $generated@@581) $generated@@45)))
 :pattern ( ($generated@@288 $generated@@581 $generated@@45))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@69) (= ($generated@@288 ($generated@@380 $generated@@582) $generated@@583) ($generated@@142 $generated@@582 $generated@@583)))
 :pattern ( ($generated@@288 ($generated@@380 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ($generated@@586 T@U) ($generated@@587 Int) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (= (type $generated@@584) ($generated@@185 $generated@@588)) (=> (and (<= $generated@@587 $generated@@585) (< $generated@@585 ($generated@@186 $generated@@584))) (= ($generated@@275 ($generated@@206 $generated@@584 $generated@@585 $generated@@586) $generated@@587) ($generated@@275 $generated@@584 $generated@@587)))))
 :pattern ( ($generated@@275 ($generated@@206 $generated@@584 $generated@@585 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@83) (<= 0 ($generated@@138 $generated@@589)))
 :no-pattern (type $generated@@589)
 :no-pattern ($generated $generated@@589)
 :no-pattern ($generated@@0 $generated@@589)
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@85 (type $generated@@590))))
 (=> (= (type $generated@@590) ($generated@@82 $generated@@591 $generated@@2)) (<= 0 ($generated@@397 $generated@@590))))
 :pattern ( ($generated@@397 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@187 (type $generated@@592))))
 (=> (= (type $generated@@592) ($generated@@185 $generated@@593)) (<= 0 ($generated@@186 $generated@@592))))
 :pattern ( ($generated@@186 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ($generated@@596 Int) ) (! (let (($generated@@597 ($generated@@187 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@185 $generated@@597)) (=> (and (and (<= 0 $generated@@595) (< $generated@@595 $generated@@596)) (<= $generated@@596 ($generated@@186 $generated@@594))) (< ($generated@@361 ($generated@@276 ($generated@@275 $generated@@594 $generated@@595) ($generated@@183 $generated@@594 $generated@@596))) ($generated@@361 $generated@@594)))))
 :pattern ( ($generated@@361 ($generated@@276 ($generated@@275 $generated@@594 $generated@@595) ($generated@@183 $generated@@594 $generated@@596))))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@69)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@69) (= (type $generated@@601) $generated@@69)) (= ($generated@@598 ($generated@@528 $generated@@600 $generated@@601)) $generated@@600))
 :pattern ( ($generated@@528 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@69)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@69) (= (type $generated@@605) $generated@@69)) (= ($generated@@602 ($generated@@528 $generated@@604 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@528 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@69) (= (type $generated@@607) $generated@@69)) (= ($generated@@78 ($generated@@528 $generated@@606 $generated@@607)) $generated@@58))
 :pattern ( ($generated@@528 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (! (= (type ($generated@@608 $generated@@609)) $generated@@69)
 :pattern ( ($generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@69) (= (type $generated@@611) $generated@@69)) (= ($generated@@608 ($generated@@536 $generated@@610 $generated@@611)) $generated@@610))
 :pattern ( ($generated@@536 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@69)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@69) (= (type $generated@@615) $generated@@69)) (= ($generated@@612 ($generated@@536 $generated@@614 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@536 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@69) (= (type $generated@@617) $generated@@69)) (= ($generated@@78 ($generated@@536 $generated@@616 $generated@@617)) $generated@@59))
 :pattern ( ($generated@@536 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@178) (= (type $generated@@619) $generated@@178)) (= ($generated@@353 ($generated@@287 $generated@@618 $generated@@619)) $generated@@63))
 :pattern ( ($generated@@287 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@69)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@69) (= (type $generated@@623) $generated@@69)) (= ($generated@@620 ($generated@@168 $generated@@622 $generated@@623)) $generated@@622))
 :pattern ( ($generated@@168 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@69)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@69) (= (type $generated@@627) $generated@@69)) (= ($generated@@624 ($generated@@168 $generated@@626 $generated@@627)) $generated@@627))
 :pattern ( ($generated@@168 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@178) (= (type $generated@@629) $generated@@178)) (= ($generated@@176 ($generated@@287 $generated@@628 $generated@@629)) $generated@@628))
 :pattern ( ($generated@@287 $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@178) (= (type $generated@@631) $generated@@178)) (= ($generated@@177 ($generated@@287 $generated@@630 $generated@@631)) $generated@@631))
 :pattern ( ($generated@@287 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@185 $generated@@178)) (= (type $generated@@633) $generated@@69)) (= (type $generated@@634) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@632 ($generated@@330 $generated@@633) $generated@@634) (forall (($generated@@635 Int) ) (!  (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@186 $generated@@632))) ($generated@@344 ($generated@@205 $generated@@632 $generated@@635) $generated@@633 $generated@@634))
 :pattern ( ($generated@@205 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@80 $generated@@632 ($generated@@330 $generated@@633) $generated@@634))
)))
(assert (forall (($generated@@637 Int) ) (! (= ($generated@@636 ($generated@@81 $generated@@637)) $generated@@637)
 :pattern ( ($generated@@81 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ) (! (= (type ($generated@@638 $generated@@639)) $generated@@69)
 :pattern ( ($generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@69) (= ($generated@@638 ($generated@@314 $generated@@640)) $generated@@640))
 :pattern ( ($generated@@314 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@69) (= ($generated@@78 ($generated@@314 $generated@@641)) $generated@@54))
 :pattern ( ($generated@@314 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (! (= (type ($generated@@642 $generated@@643)) $generated@@69)
 :pattern ( ($generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@69) (= ($generated@@642 ($generated@@319 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@319 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@69) (= ($generated@@78 ($generated@@319 $generated@@645)) $generated@@55))
 :pattern ( ($generated@@319 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ) (! (= (type ($generated@@646 $generated@@647)) $generated@@69)
 :pattern ( ($generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@69) (= ($generated@@646 ($generated@@200 $generated@@648)) $generated@@648))
 :pattern ( ($generated@@200 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@69) (= ($generated@@78 ($generated@@200 $generated@@649)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ) (! (= (type ($generated@@650 $generated@@651)) $generated@@69)
 :pattern ( ($generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@69) (= ($generated@@650 ($generated@@330 $generated@@652)) $generated@@652))
 :pattern ( ($generated@@330 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@69) (= ($generated@@78 ($generated@@330 $generated@@653)) $generated@@57))
 :pattern ( ($generated@@330 $generated@@653))
)))
(assert (forall (($generated@@654 Int) ) (! (= ($generated@@77 ($generated@@296 $generated@@654)) 1)
 :pattern ( ($generated@@296 $generated@@654))
)))
(assert (forall (($generated@@656 Int) ) (! (= ($generated@@655 ($generated@@296 $generated@@656)) $generated@@656)
 :pattern ( ($generated@@296 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ) (! (= (type ($generated@@657 $generated@@658)) $generated@@69)
 :pattern ( ($generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@69) (= ($generated@@657 ($generated@@139 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@139 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ) (! (= (type ($generated@@660 $generated@@661)) $generated@@69)
 :pattern ( ($generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@69) (= ($generated@@660 ($generated@@162 $generated@@662)) $generated@@662))
 :pattern ( ($generated@@162 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (! (let (($generated@@664 (type $generated@@663)))
(= ($generated@@449 $generated@@664 ($generated@@380 $generated@@663)) $generated@@663))
 :pattern ( ($generated@@380 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@409 $generated@@178 $generated@@178)) (= (type $generated@@666) $generated@@69)) (= (type $generated@@667) $generated@@69)) (= ($generated@@142 $generated@@665 ($generated@@528 $generated@@666 $generated@@667)) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@407 $generated@@665) $generated@@668))) (and ($generated@@288 ($generated@@87 ($generated@@503 $generated@@665) $generated@@668) $generated@@667) ($generated@@288 $generated@@668 $generated@@666)))
 :pattern ( ($generated@@87 ($generated@@503 $generated@@665) $generated@@668))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@665) $generated@@668))
))))
 :pattern ( ($generated@@142 $generated@@665 ($generated@@528 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@669) ($generated@@427 $generated@@178 $generated@@178)) (= (type $generated@@670) $generated@@69)) (= (type $generated@@671) $generated@@69)) (= ($generated@@142 $generated@@669 ($generated@@536 $generated@@670 $generated@@671)) (forall (($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@178) ($generated@@0 ($generated@@87 ($generated@@425 $generated@@669) $generated@@672))) (and ($generated@@288 ($generated@@87 ($generated@@511 $generated@@669) $generated@@672) $generated@@671) ($generated@@288 $generated@@672 $generated@@670)))
 :pattern ( ($generated@@87 ($generated@@511 $generated@@669) $generated@@672))
 :pattern ( ($generated@@87 ($generated@@425 $generated@@669) $generated@@672))
))))
 :pattern ( ($generated@@142 $generated@@669 ($generated@@536 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 Int) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@675) $generated@@178)) (= (type $generated@@676) $generated@@83)) (and (<= 0 $generated@@674) (< $generated@@674 ($generated@@138 $generated@@676)))) (= ($generated@@295 ($generated@@88 $generated@@673 $generated@@676 ($generated@@90 ($generated@@87 $generated@@673 $generated@@676) ($generated@@296 $generated@@674) $generated@@675)) $generated@@676) ($generated@@206 ($generated@@295 $generated@@673 $generated@@676) $generated@@674 $generated@@675)))
 :pattern ( ($generated@@295 ($generated@@88 $generated@@673 $generated@@676 ($generated@@90 ($generated@@87 $generated@@673 $generated@@676) ($generated@@296 $generated@@674) $generated@@675)) $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 Int) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@69) (= (type $generated@@678) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@679) $generated@@83)) (and (and ($generated@@157 $generated@@678) (and (not (= $generated@@679 $generated@@140)) (= ($generated@@141 $generated@@679) ($generated@@139 $generated@@677)))) (and (<= 0 $generated@@680) (< $generated@@680 ($generated@@138 $generated@@679))))) ($generated@@288 ($generated@@89 ($generated@@87 $generated@@678 $generated@@679) ($generated@@296 $generated@@680)) $generated@@677))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@678 $generated@@679) ($generated@@296 $generated@@680)) ($generated@@139 $generated@@677))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@178) (= (type $generated@@684) $generated@@178)) (< ($generated@@681 $generated@@683) ($generated@@682 ($generated@@287 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@287 $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@178) (= (type $generated@@686) $generated@@178)) (< ($generated@@681 $generated@@686) ($generated@@682 ($generated@@287 $generated@@685 $generated@@686))))
 :pattern ( ($generated@@287 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@178) (= (type $generated@@688) $generated@@69)) (= (type $generated@@689) $generated@@69)) ($generated@@288 $generated@@687 ($generated@@528 $generated@@688 $generated@@689))) (and (= ($generated@@380 ($generated@@449 ($generated@@409 $generated@@178 $generated@@178) $generated@@687)) $generated@@687) ($generated@@142 ($generated@@449 ($generated@@409 $generated@@178 $generated@@178) $generated@@687) ($generated@@528 $generated@@688 $generated@@689))))
 :pattern ( ($generated@@288 $generated@@687 ($generated@@528 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) $generated@@178) (= (type $generated@@691) $generated@@69)) (= (type $generated@@692) $generated@@69)) ($generated@@288 $generated@@690 ($generated@@536 $generated@@691 $generated@@692))) (and (= ($generated@@380 ($generated@@449 ($generated@@427 $generated@@178 $generated@@178) $generated@@690)) $generated@@690) ($generated@@142 ($generated@@449 ($generated@@427 $generated@@178 $generated@@178) $generated@@690) ($generated@@536 $generated@@691 $generated@@692))))
 :pattern ( ($generated@@288 $generated@@690 ($generated@@536 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) $generated@@69) (= (type $generated@@694) $generated@@69)) (= (type $generated@@695) $generated@@178)) ($generated@@288 $generated@@695 ($generated@@168 $generated@@693 $generated@@694))) (and (= ($generated@@380 ($generated@@449 $generated@@169 $generated@@695)) $generated@@695) ($generated@@142 ($generated@@449 $generated@@169 $generated@@695) ($generated@@168 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@288 $generated@@695 ($generated@@168 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@696 T@U) ) (! (let (($generated@@697 (type $generated@@696)))
 (not ($generated@@0 ($generated@@87 ($generated@@557 $generated@@697) $generated@@696))))
 :pattern ( (let (($generated@@697 (type $generated@@696)))
($generated@@87 ($generated@@557 $generated@@697) $generated@@696)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@698) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@699) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@700) $generated@@83)) (=> (and (and (and ($generated@@157 $generated@@698) ($generated@@157 $generated@@699)) ($generated@@147 $generated@@698 $generated@@699)) (= ($generated@@87 $generated@@698 $generated@@700) ($generated@@87 $generated@@699 $generated@@700))) (= ($generated@@295 $generated@@698 $generated@@700) ($generated@@295 $generated@@699 $generated@@700))))
 :pattern ( ($generated@@295 $generated@@699 $generated@@700) ($generated@@147 $generated@@698 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 Int) ($generated@@703 T@U) ) (! (let (($generated@@704 (type $generated@@703)))
 (=> (= (type $generated@@701) ($generated@@185 $generated@@704)) (=> (and (<= 0 $generated@@702) (< $generated@@702 ($generated@@186 $generated@@701))) (= ($generated@@186 ($generated@@206 $generated@@701 $generated@@702 $generated@@703)) ($generated@@186 $generated@@701)))))
 :pattern ( ($generated@@186 ($generated@@206 $generated@@701 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@706) $generated@@83)) (= ($generated@@186 ($generated@@295 $generated@@705 $generated@@706)) ($generated@@138 $generated@@706)))
 :pattern ( ($generated@@186 ($generated@@295 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@69) (= (type $generated@@708) $generated@@69)) (and (= ($generated@@78 ($generated@@168 $generated@@707 $generated@@708)) $generated@@64) (= ($generated@@403 ($generated@@168 $generated@@707 $generated@@708)) $generated@@67)))
 :pattern ( ($generated@@168 $generated@@707 $generated@@708))
)))
(assert  (and (forall (($generated@@711 T@U) ) (! (let (($generated@@712 ($generated@@187 (type $generated@@711))))
(= (type ($generated@@709 $generated@@711)) ($generated@@185 $generated@@712)))
 :pattern ( ($generated@@709 $generated@@711))
)) (forall (($generated@@713 T@U) ) (! (let (($generated@@714 ($generated@@187 (type $generated@@713))))
(= (type ($generated@@710 $generated@@713)) $generated@@714))
 :pattern ( ($generated@@710 $generated@@713))
))))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (! (let (($generated@@717 (type $generated@@716)))
 (=> (= (type $generated@@715) ($generated@@185 $generated@@717)) (and (= ($generated@@709 ($generated@@184 $generated@@715 $generated@@716)) $generated@@715) (= ($generated@@710 ($generated@@184 $generated@@715 $generated@@716)) $generated@@716))))
 :pattern ( ($generated@@184 $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@169) (= ($generated@@681 ($generated@@380 $generated@@718)) ($generated@@682 $generated@@718)))
 :pattern ( ($generated@@681 ($generated@@380 $generated@@718)))
)))
(assert (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@178) ($generated@@288 $generated@@719 ($generated@@81 0))) (and (= ($generated@@380 ($generated@@449 $generated@@2 $generated@@719)) $generated@@719) ($generated@@142 ($generated@@449 ($generated@@82 $generated@@178 $generated@@4) $generated@@719) ($generated@@81 0))))
 :pattern ( ($generated@@288 $generated@@719 ($generated@@81 0)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@720) $generated@@178) (= (type $generated@@721) $generated@@69)) ($generated@@288 $generated@@720 ($generated@@314 $generated@@721))) (and (= ($generated@@380 ($generated@@449 ($generated@@82 $generated@@178 $generated@@4) $generated@@720)) $generated@@720) ($generated@@142 ($generated@@449 ($generated@@82 $generated@@178 $generated@@4) $generated@@720) ($generated@@314 $generated@@721))))
 :pattern ( ($generated@@288 $generated@@720 ($generated@@314 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@178) (= (type $generated@@723) $generated@@69)) ($generated@@288 $generated@@722 ($generated@@319 $generated@@723))) (and (= ($generated@@380 ($generated@@449 ($generated@@82 $generated@@178 $generated@@4) $generated@@722)) $generated@@722) ($generated@@142 ($generated@@449 ($generated@@82 $generated@@178 $generated@@4) $generated@@722) ($generated@@319 $generated@@723))))
 :pattern ( ($generated@@288 $generated@@722 ($generated@@319 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@178) (= (type $generated@@725) $generated@@69)) ($generated@@288 $generated@@724 ($generated@@200 $generated@@725))) (and (= ($generated@@380 ($generated@@449 ($generated@@82 $generated@@178 $generated@@2) $generated@@724)) $generated@@724) ($generated@@142 ($generated@@449 ($generated@@82 $generated@@178 $generated@@2) $generated@@724) ($generated@@200 $generated@@725))))
 :pattern ( ($generated@@288 $generated@@724 ($generated@@200 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@178) (= (type $generated@@727) $generated@@69)) ($generated@@288 $generated@@726 ($generated@@330 $generated@@727))) (and (= ($generated@@380 ($generated@@449 ($generated@@185 $generated@@178) $generated@@726)) $generated@@726) ($generated@@142 ($generated@@449 ($generated@@185 $generated@@178) $generated@@726) ($generated@@330 $generated@@727))))
 :pattern ( ($generated@@288 $generated@@726 ($generated@@330 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (= (type $generated@@728) $generated@@69) (= (type $generated@@729) $generated@@178)) ($generated@@288 $generated@@729 ($generated@@139 $generated@@728))) (and (= ($generated@@380 ($generated@@449 $generated@@83 $generated@@729)) $generated@@729) ($generated@@142 ($generated@@449 $generated@@83 $generated@@729) ($generated@@139 $generated@@728))))
 :pattern ( ($generated@@288 $generated@@729 ($generated@@139 $generated@@728)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (= (type $generated@@730) $generated@@69) (= (type $generated@@731) $generated@@178)) ($generated@@288 $generated@@731 ($generated@@162 $generated@@730))) (and (= ($generated@@380 ($generated@@449 $generated@@83 $generated@@731)) $generated@@731) ($generated@@142 ($generated@@449 $generated@@83 $generated@@731) ($generated@@162 $generated@@730))))
 :pattern ( ($generated@@288 $generated@@731 ($generated@@162 $generated@@730)))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (! (let (($generated@@736 (type $generated@@735)))
 (=> (and (and (and (= (type $generated@@732) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@733) $generated@@83)) (= (type $generated@@734) ($generated@@71 $generated@@736))) ($generated@@157 ($generated@@88 $generated@@732 $generated@@733 ($generated@@90 ($generated@@87 $generated@@732 $generated@@733) $generated@@734 $generated@@735)))) ($generated@@147 $generated@@732 ($generated@@88 $generated@@732 $generated@@733 ($generated@@90 ($generated@@87 $generated@@732 $generated@@733) $generated@@734 $generated@@735)))))
 :pattern ( ($generated@@88 $generated@@732 $generated@@733 ($generated@@90 ($generated@@87 $generated@@732 $generated@@733) $generated@@734 $generated@@735)))
)))
(assert (= ($generated@@78 $generated@@154) $generated@@65))
(assert (= ($generated@@403 $generated@@154) $generated@@68))
(assert (forall (($generated@@737 T@U) ($generated@@738 Int) ($generated@@739 Int) ) (! (let (($generated@@740 ($generated@@187 (type $generated@@737))))
 (=> (= (type $generated@@737) ($generated@@185 $generated@@740)) (=> (and (and (<= 0 $generated@@738) (<= $generated@@738 $generated@@739)) (< $generated@@739 ($generated@@186 $generated@@737))) (= ($generated@@205 ($generated@@183 $generated@@737 $generated@@738) (- $generated@@739 $generated@@738)) ($generated@@205 $generated@@737 $generated@@739)))))
 :weight 25
 :pattern ( ($generated@@205 $generated@@737 $generated@@739) ($generated@@183 $generated@@737 $generated@@738))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (and (= (type $generated@@741) ($generated@@82 $generated@@178 $generated@@2)) (= (type $generated@@742) $generated@@69)) (= (type $generated@@743) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@741 ($generated@@200 $generated@@742) $generated@@743) (forall (($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@178) (< 0 ($generated ($generated@@87 $generated@@741 $generated@@744)))) ($generated@@344 $generated@@744 $generated@@742 $generated@@743))
 :pattern ( ($generated@@87 $generated@@741 $generated@@744))
))))
 :pattern ( ($generated@@80 $generated@@741 ($generated@@200 $generated@@742) $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 Int) ($generated@@747 Int) ) (! (let (($generated@@748 ($generated@@187 (type $generated@@745))))
 (=> (= (type $generated@@745) ($generated@@185 $generated@@748)) (=> (and (and (<= 0 $generated@@746) (<= 0 $generated@@747)) (<= (+ $generated@@746 $generated@@747) ($generated@@186 $generated@@745))) (= ($generated@@183 ($generated@@183 $generated@@745 $generated@@746) $generated@@747) ($generated@@183 $generated@@745 (+ $generated@@746 $generated@@747))))))
 :pattern ( ($generated@@183 ($generated@@183 $generated@@745 $generated@@746) $generated@@747))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (and (= (type $generated@@749) $generated@@169) (= (type $generated@@750) $generated@@69)) (= (type $generated@@751) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@157 $generated@@751) (and ($generated@@167 $generated@@749) (exists (($generated@@752 T@U) ) (!  (and (= (type $generated@@752) $generated@@69) ($generated@@80 $generated@@749 ($generated@@168 $generated@@750 $generated@@752) $generated@@751))
 :pattern ( ($generated@@80 $generated@@749 ($generated@@168 $generated@@750 $generated@@752) $generated@@751))
))))) ($generated@@344 ($generated@@176 $generated@@749) $generated@@750 $generated@@751))
 :pattern ( ($generated@@344 ($generated@@176 $generated@@749) $generated@@750 $generated@@751))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (and (and (= (type $generated@@753) $generated@@169) (= (type $generated@@754) $generated@@69)) (= (type $generated@@755) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@157 $generated@@755) (and ($generated@@167 $generated@@753) (exists (($generated@@756 T@U) ) (!  (and (= (type $generated@@756) $generated@@69) ($generated@@80 $generated@@753 ($generated@@168 $generated@@756 $generated@@754) $generated@@755))
 :pattern ( ($generated@@80 $generated@@753 ($generated@@168 $generated@@756 $generated@@754) $generated@@755))
))))) ($generated@@344 ($generated@@177 $generated@@753) $generated@@754 $generated@@755))
 :pattern ( ($generated@@344 ($generated@@177 $generated@@753) $generated@@754 $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 Int) ) (! (let (($generated@@760 ($generated@@187 (type $generated@@757))))
 (=> (and (= (type $generated@@757) ($generated@@185 $generated@@760)) (= (type $generated@@758) ($generated@@185 $generated@@760))) (and (=> (< $generated@@759 ($generated@@186 $generated@@757)) (= ($generated@@205 ($generated@@276 $generated@@757 $generated@@758) $generated@@759) ($generated@@205 $generated@@757 $generated@@759))) (=> (<= ($generated@@186 $generated@@757) $generated@@759) (= ($generated@@205 ($generated@@276 $generated@@757 $generated@@758) $generated@@759) ($generated@@205 $generated@@758 (- $generated@@759 ($generated@@186 $generated@@757))))))))
 :pattern ( ($generated@@205 ($generated@@276 $generated@@757 $generated@@758) $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ) (!  (=> (= (type $generated@@761) $generated@@2) (= ($generated@@142 $generated@@761 $generated@@154)  (and (<= ($generated@@324 0) ($generated $generated@@761)) (< ($generated $generated@@761) 4294967296))))
 :pattern ( ($generated@@142 $generated@@761 $generated@@154))
)))
(assert (forall (($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (= (type $generated@@762) $generated@@178) (= (type $generated@@763) $generated@@178)) (= ($generated@@287 ($generated@@326 $generated@@762) ($generated@@326 $generated@@763)) ($generated@@326 ($generated@@287 $generated@@762 $generated@@763))))
 :pattern ( ($generated@@287 ($generated@@326 $generated@@762) ($generated@@326 $generated@@763)))
)))
(assert (forall (($generated@@764 Int) ) (! (= ($generated@@380 ($generated@@8 ($generated@@324 $generated@@764))) ($generated@@326 ($generated@@380 ($generated@@8 $generated@@764))))
 :pattern ( ($generated@@380 ($generated@@8 ($generated@@324 $generated@@764))))
)))
(assert (forall (($generated@@765 T@U) ) (! (= ($generated@@380 ($generated@@326 $generated@@765)) ($generated@@326 ($generated@@380 $generated@@765)))
 :pattern ( ($generated@@380 ($generated@@326 $generated@@765)))
)))
(assert (forall (($generated@@766 T@U) ) (! (let (($generated@@767 ($generated@@187 (type $generated@@766))))
 (=> (and (= (type $generated@@766) ($generated@@185 $generated@@767)) (= ($generated@@186 $generated@@766) 0)) (= $generated@@766 ($generated@@368 $generated@@767))))
 :pattern ( ($generated@@186 $generated@@766))
)))
(assert (forall (($generated@@768 T@U) ($generated@@769 Int) ) (! (let (($generated@@770 ($generated@@187 (type $generated@@768))))
 (=> (and (= (type $generated@@768) ($generated@@185 $generated@@770)) (= $generated@@769 0)) (= ($generated@@275 $generated@@768 $generated@@769) ($generated@@368 $generated@@770))))
 :pattern ( ($generated@@275 $generated@@768 $generated@@769))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (! (let (($generated@@774 (type $generated@@772)))
 (=> (and (and (= (type $generated@@771) ($generated@@82 $generated@@774 $generated@@2)) (= (type $generated@@773) $generated@@2)) (<= 0 ($generated $generated@@773))) (= ($generated@@397 ($generated@@88 $generated@@771 $generated@@772 $generated@@773)) (+ (- ($generated@@397 $generated@@771) ($generated ($generated@@87 $generated@@771 $generated@@772))) ($generated $generated@@773)))))
 :pattern ( ($generated@@397 ($generated@@88 $generated@@771 $generated@@772 $generated@@773)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ) (!  (=> (and (= (type $generated@@775) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@776) $generated@@2)) ($generated@@80 $generated@@776 $generated@@46 $generated@@775))
 :pattern ( ($generated@@80 $generated@@776 $generated@@46 $generated@@775))
)))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (= (type $generated@@777) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@778) $generated@@3)) ($generated@@80 $generated@@778 $generated@@47 $generated@@777))
 :pattern ( ($generated@@80 $generated@@778 $generated@@47 $generated@@777))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (= (type $generated@@779) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@780) $generated@@4)) ($generated@@80 $generated@@780 $generated@@44 $generated@@779))
 :pattern ( ($generated@@80 $generated@@780 $generated@@44 $generated@@779))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (= (type $generated@@781) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@782) $generated@@337)) ($generated@@80 $generated@@782 $generated@@45 $generated@@781))
 :pattern ( ($generated@@80 $generated@@782 $generated@@45 $generated@@781))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (= (type $generated@@783) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@784) $generated@@178)) ($generated@@80 $generated@@784 $generated@@48 $generated@@783))
 :pattern ( ($generated@@80 $generated@@784 $generated@@48 $generated@@783))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 Int) ($generated@@787 T@U) ($generated@@788 Int) ) (! (let (($generated@@789 (type $generated@@787)))
 (=> (= (type $generated@@785) ($generated@@185 $generated@@789)) (=> (and (and (<= 0 $generated@@786) (< $generated@@786 $generated@@788)) (<= $generated@@788 ($generated@@186 $generated@@785))) (= ($generated@@275 ($generated@@206 $generated@@785 $generated@@786 $generated@@787) $generated@@788) ($generated@@206 ($generated@@275 $generated@@785 $generated@@788) $generated@@786 $generated@@787)))))
 :pattern ( ($generated@@275 ($generated@@206 $generated@@785 $generated@@786 $generated@@787) $generated@@788))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@790) ($generated@@185 $generated@@178)) (= (type $generated@@791) $generated@@69)) (= ($generated@@142 $generated@@790 ($generated@@330 $generated@@791)) (forall (($generated@@792 Int) ) (!  (=> (and (<= 0 $generated@@792) (< $generated@@792 ($generated@@186 $generated@@790))) ($generated@@288 ($generated@@205 $generated@@790 $generated@@792) $generated@@791))
 :pattern ( ($generated@@205 $generated@@790 $generated@@792))
))))
 :pattern ( ($generated@@142 $generated@@790 ($generated@@330 $generated@@791)))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 Int) ) (!  (=> (= (type $generated@@793) ($generated@@185 $generated@@178)) (=> (and (<= 0 $generated@@794) (< $generated@@794 ($generated@@186 $generated@@793))) (< ($generated@@682 ($generated@@449 $generated@@169 ($generated@@205 $generated@@793 $generated@@794))) ($generated@@361 $generated@@793))))
 :pattern ( ($generated@@682 ($generated@@449 $generated@@169 ($generated@@205 $generated@@793 $generated@@794))))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (and (and (= (type $generated@@795) ($generated@@409 $generated@@178 $generated@@178)) (= (type $generated@@796) $generated@@69)) (= (type $generated@@797) $generated@@69)) ($generated@@142 $generated@@795 ($generated@@528 $generated@@796 $generated@@797))) (and (and ($generated@@142 ($generated@@407 $generated@@795) ($generated@@314 $generated@@796)) ($generated@@142 ($generated@@463 $generated@@795) ($generated@@314 $generated@@797))) ($generated@@142 ($generated@@502 $generated@@795) ($generated@@314 ($generated@@168 $generated@@796 $generated@@797)))))
 :pattern ( ($generated@@142 $generated@@795 ($generated@@528 $generated@@796 $generated@@797)))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (and (and (= (type $generated@@798) ($generated@@427 $generated@@178 $generated@@178)) (= (type $generated@@799) $generated@@69)) (= (type $generated@@800) $generated@@69)) ($generated@@142 $generated@@798 ($generated@@536 $generated@@799 $generated@@800))) (and (and ($generated@@142 ($generated@@425 $generated@@798) ($generated@@319 $generated@@799)) ($generated@@142 ($generated@@474 $generated@@798) ($generated@@319 $generated@@800))) ($generated@@142 ($generated@@510 $generated@@798) ($generated@@319 ($generated@@168 $generated@@799 $generated@@800)))))
 :pattern ( ($generated@@142 $generated@@798 ($generated@@536 $generated@@799 $generated@@800)))
)))
(assert (forall (($generated@@801 T@U) ) (!  (=> (= (type $generated@@801) $generated@@2) ($generated@@142 $generated@@801 $generated@@46))
 :pattern ( ($generated@@142 $generated@@801 $generated@@46))
)))
(assert (forall (($generated@@802 T@U) ) (!  (=> (= (type $generated@@802) $generated@@3) ($generated@@142 $generated@@802 $generated@@47))
 :pattern ( ($generated@@142 $generated@@802 $generated@@47))
)))
(assert (forall (($generated@@803 T@U) ) (!  (=> (= (type $generated@@803) $generated@@4) ($generated@@142 $generated@@803 $generated@@44))
 :pattern ( ($generated@@142 $generated@@803 $generated@@44))
)))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@337) ($generated@@142 $generated@@804 $generated@@45))
 :pattern ( ($generated@@142 $generated@@804 $generated@@45))
)))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@178) ($generated@@142 $generated@@805 $generated@@48))
 :pattern ( ($generated@@142 $generated@@805 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@806 () T@U)
(declare-fun $generated@@807 () T@U)
(declare-fun $generated@@808 () Int)
(declare-fun $generated@@809 () Int)
(declare-fun $generated@@810 () Int)
(declare-fun $generated@@811 () Int)
(declare-fun $generated@@812 () T@U)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () Bool)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 (T@U) Bool)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 () Bool)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () Int)
(declare-fun $generated@@824 () T@U)
(declare-fun $generated@@825 () T@U)
(declare-fun $generated@@826 () Int)
(declare-fun $generated@@827 () Bool)
(declare-fun $generated@@828 () T@U)
(declare-fun $generated@@829 () T@U)
(declare-fun $generated@@830 () Int)
(declare-fun $generated@@831 () Bool)
(declare-fun $generated@@832 () T@U)
(declare-fun $generated@@833 () Int)
(declare-fun $generated@@834 () Int)
(declare-fun $generated@@835 () Int)
(declare-fun $generated@@836 () T@U)
(declare-fun $generated@@837 () T@U)
(declare-fun $generated@@838 () T@U)
(declare-fun $generated@@839 () Int)
(declare-fun $generated@@840 () Int)
(declare-fun $generated@@841 () T@U)
(declare-fun $generated@@842 () T@U)
(declare-fun $generated@@843 () T@U)
(declare-fun $generated@@844 () Bool)
(declare-fun $generated@@845 () T@U)
(declare-fun $generated@@846 () T@U)
(declare-fun $generated@@847 () T@U)
(declare-fun $generated@@848 () T@U)
(declare-fun $generated@@849 () T@U)
(declare-fun $generated@@850 () T@U)
(declare-fun $generated@@851 () T@U)
(declare-fun $generated@@852 () T@U)
(declare-fun $generated@@853 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@806) ($generated@@221 $generated@@83 $generated@@4)) (= (type $generated@@807) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@812) ($generated@@185 $generated@@178))) (= (type $generated@@813) ($generated@@185 $generated@@178))) (= (type $generated@@814) ($generated@@185 $generated@@178))) (= (type $generated@@816) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@818) ($generated@@185 $generated@@178))) (= (type $generated@@819) ($generated@@185 $generated@@178))) (= (type $generated@@820) ($generated@@185 $generated@@178))) (= (type $generated@@822) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@824) ($generated@@185 $generated@@178))) (= (type $generated@@825) ($generated@@185 $generated@@178))) (= (type $generated@@828) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@829) ($generated@@185 $generated@@178))) (= (type $generated@@832) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@836) $generated@@83)) (= (type $generated@@837) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@838) ($generated@@185 $generated@@178))) (= (type $generated@@841) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@842) ($generated@@185 $generated@@178))) (= (type $generated@@843) ($generated@@185 $generated@@178))) (= (type $generated@@845) ($generated@@185 $generated@@178))) (= (type $generated@@846) ($generated@@185 $generated@@178))) (= (type $generated@@847) ($generated@@185 $generated@@178))) (= (type $generated@@848) ($generated@@185 $generated@@178))) (= (type $generated@@849) ($generated@@185 $generated@@178))) (= (type $generated@@850) $generated@@83)) (= (type $generated@@851) ($generated@@185 $generated@@178))) (= (type $generated@@852) ($generated@@185 $generated@@178))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 32) (let (($generated@@854  (=> (and (= $generated@@806 ($generated@@220 $generated@@140 $generated@@807 $generated@@60 false)) (= $generated@@808 ($generated@@324 1))) (and (=> (= (ControlFlow 0 2) (- 0 31)) (and (<= ($generated@@324 0) $generated@@808) (< $generated@@808 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@808) (< $generated@@808 4294967296)) (=> (= $generated@@809 ($generated@@324 2)) (and (=> (= (ControlFlow 0 2) (- 0 30)) (and (<= ($generated@@324 0) $generated@@809) (< $generated@@809 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@809) (< $generated@@809 4294967296)) (=> (= $generated@@810 ($generated@@324 3)) (and (=> (= (ControlFlow 0 2) (- 0 29)) (and (<= ($generated@@324 0) $generated@@810) (< $generated@@810 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@810) (< $generated@@810 4294967296)) (=> (= $generated@@811 ($generated@@324 4)) (and (=> (= (ControlFlow 0 2) (- 0 28)) (and (<= ($generated@@324 0) $generated@@811) (< $generated@@811 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@811) (< $generated@@811 4294967296)) (=> (= $generated@@812 ($generated@@326 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@368 $generated@@178) ($generated@@380 ($generated@@8 ($generated@@324 1)))) ($generated@@380 ($generated@@8 ($generated@@324 2)))) ($generated@@380 ($generated@@8 ($generated@@324 3)))) ($generated@@380 ($generated@@8 ($generated@@324 4)))))) (and (=> (= (ControlFlow 0 2) (- 0 27)) (and (<= 0 ($generated@@324 1)) (< ($generated@@324 1) ($generated@@186 $generated@@812)))) (and (=> (= (ControlFlow 0 2) (- 0 26)) (and (<= 0 ($generated@@324 1)) (<= ($generated@@324 1) ($generated@@186 $generated@@812)))) (=> (and (<= 0 ($generated@@324 1)) (<= ($generated@@324 1) ($generated@@186 $generated@@812))) (=> (= $generated@@813 ($generated@@183 $generated@@812 ($generated@@324 1))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (and (<= 0 ($generated@@324 0)) (< ($generated@@324 0) ($generated@@186 $generated@@813)))) (=> (and (= $generated@@814 ($generated@@326 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@368 $generated@@178) ($generated@@380 ($generated@@335 72))) ($generated@@380 ($generated@@335 101))) ($generated@@380 ($generated@@335 97))) ($generated@@380 ($generated@@335 100))) ($generated@@380 ($generated@@335 32))) ($generated@@380 ($generated@@335 116))) ($generated@@380 ($generated@@335 114))) ($generated@@380 ($generated@@335 117))) ($generated@@380 ($generated@@335 110))) ($generated@@380 ($generated@@335 99))))) (= $generated@@815  (not ($generated@@356 $generated@@813 $generated@@812)))) (and (=> (= (ControlFlow 0 2) (- 0 24)) $generated@@815) (=> $generated@@815 (=> (and (and ($generated@@157 $generated@@816) ($generated@@817 $generated@@816)) (and (forall (($generated@@855 T@U) ) (!  (=> (= (type $generated@@855) $generated@@83) (=> (and (not (= $generated@@855 $generated@@140)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@807 $generated@@855) $generated@@60))) (= ($generated@@87 $generated@@816 $generated@@855) ($generated@@87 $generated@@807 $generated@@855))))
 :pattern ( ($generated@@87 $generated@@816 $generated@@855))
)) ($generated@@147 $generated@@807 $generated@@816))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (and (<= 0 ($generated@@324 1)) (<= ($generated@@324 1) ($generated@@186 $generated@@812)))) (=> (and (<= 0 ($generated@@324 1)) (<= ($generated@@324 1) ($generated@@186 $generated@@812))) (=> (and (and (= $generated@@818 ($generated@@275 $generated@@812 ($generated@@324 1))) (= $generated@@819 ($generated@@276 $generated@@818 $generated@@813))) (and (= $generated@@820 ($generated@@326 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@368 $generated@@178) ($generated@@380 ($generated@@335 67))) ($generated@@380 ($generated@@335 111))) ($generated@@380 ($generated@@335 109))) ($generated@@380 ($generated@@335 98))) ($generated@@380 ($generated@@335 105))) ($generated@@380 ($generated@@335 110))) ($generated@@380 ($generated@@335 101))))) (= $generated@@821 ($generated@@356 $generated@@819 $generated@@812)))) (and (=> (= (ControlFlow 0 2) (- 0 22)) $generated@@821) (=> $generated@@821 (=> (and (and ($generated@@157 $generated@@822) ($generated@@817 $generated@@822)) (and (forall (($generated@@856 T@U) ) (!  (=> (= (type $generated@@856) $generated@@83) (=> (and (not (= $generated@@856 $generated@@140)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@816 $generated@@856) $generated@@60))) (= ($generated@@87 $generated@@822 $generated@@856) ($generated@@87 $generated@@816 $generated@@856))))
 :pattern ( ($generated@@87 $generated@@822 $generated@@856))
)) ($generated@@147 $generated@@816 $generated@@822))) (and (=> (= (ControlFlow 0 2) (- 0 21)) (and (<= 0 ($generated@@324 0)) (< ($generated@@324 0) ($generated@@186 $generated@@812)))) (=> (and (<= 0 ($generated@@324 0)) (< ($generated@@324 0) ($generated@@186 $generated@@812))) (=> (= $generated@@823 ($generated@@324 330)) (and (=> (= (ControlFlow 0 2) (- 0 20)) (and (<= ($generated@@324 0) $generated@@823) (< $generated@@823 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@823) (< $generated@@823 4294967296)) (=> (and (= $generated@@824 ($generated@@206 $generated@@812 ($generated@@324 0) ($generated@@380 ($generated@@8 ($generated@@324 330))))) (= $generated@@825 ($generated@@326 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@368 $generated@@178) ($generated@@380 ($generated@@335 82))) ($generated@@380 ($generated@@335 101))) ($generated@@380 ($generated@@335 112))) ($generated@@380 ($generated@@335 108))) ($generated@@380 ($generated@@335 97))) ($generated@@380 ($generated@@335 99))) ($generated@@380 ($generated@@335 101))) ($generated@@380 ($generated@@335 49)))))) (and (=> (= (ControlFlow 0 2) (- 0 19)) (and (<= 0 ($generated@@324 0)) (< ($generated@@324 0) ($generated@@186 $generated@@812)))) (=> (and (<= 0 ($generated@@324 0)) (< ($generated@@324 0) ($generated@@186 $generated@@812))) (=> (= $generated@@826 ($generated@@324 330)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (and (<= ($generated@@324 0) $generated@@826) (< $generated@@826 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@826) (< $generated@@826 4294967296)) (=> (= $generated@@827 (not (= ($generated ($generated@@449 $generated@@2 ($generated@@205 $generated@@812 ($generated@@324 0)))) 330))) (and (=> (= (ControlFlow 0 2) (- 0 17)) $generated@@827) (=> $generated@@827 (=> (and (and (and ($generated@@157 $generated@@828) ($generated@@817 $generated@@828)) (forall (($generated@@857 T@U) ) (!  (=> (= (type $generated@@857) $generated@@83) (=> (and (not (= $generated@@857 $generated@@140)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@822 $generated@@857) $generated@@60))) (= ($generated@@87 $generated@@828 $generated@@857) ($generated@@87 $generated@@822 $generated@@857))))
 :pattern ( ($generated@@87 $generated@@828 $generated@@857))
))) (and ($generated@@147 $generated@@822 $generated@@828) (= $generated@@829 ($generated@@326 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@368 $generated@@178) ($generated@@380 ($generated@@335 82))) ($generated@@380 ($generated@@335 101))) ($generated@@380 ($generated@@335 112))) ($generated@@380 ($generated@@335 108))) ($generated@@380 ($generated@@335 97))) ($generated@@380 ($generated@@335 99))) ($generated@@380 ($generated@@335 101))) ($generated@@380 ($generated@@335 50))))))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (and (<= 0 ($generated@@324 0)) (< ($generated@@324 0) ($generated@@186 $generated@@812)))) (=> (and (<= 0 ($generated@@324 0)) (< ($generated@@324 0) ($generated@@186 $generated@@812))) (=> (= $generated@@830 ($generated@@324 1)) (and (=> (= (ControlFlow 0 2) (- 0 15)) (and (<= ($generated@@324 0) $generated@@830) (< $generated@@830 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@830) (< $generated@@830 4294967296)) (=> (= $generated@@831 (= ($generated ($generated@@449 $generated@@2 ($generated@@205 $generated@@812 ($generated@@324 0)))) ($generated@@324 1))) (and (=> (= (ControlFlow 0 2) (- 0 14)) $generated@@831) (=> $generated@@831 (=> (and (and ($generated@@157 $generated@@832) ($generated@@817 $generated@@832)) (and (forall (($generated@@858 T@U) ) (!  (=> (= (type $generated@@858) $generated@@83) (=> (and (not (= $generated@@858 $generated@@140)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@828 $generated@@858) $generated@@60))) (= ($generated@@87 $generated@@832 $generated@@858) ($generated@@87 $generated@@828 $generated@@858))))
 :pattern ( ($generated@@87 $generated@@832 $generated@@858))
)) ($generated@@147 $generated@@828 $generated@@832))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (<= 0 ($generated@@324 3))) (=> (<= 0 ($generated@@324 3)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (= ($generated@@324 3) 3)) (=> (= ($generated@@324 3) 3) (=> (= $generated@@833 ($generated@@324 12)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@324 0) $generated@@833) (< $generated@@833 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@833) (< $generated@@833 4294967296)) (=> (= $generated@@834 ($generated@@324 13)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@324 0) $generated@@834) (< $generated@@834 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@834) (< $generated@@834 4294967296)) (=> (= $generated@@835 ($generated@@324 14)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@324 0) $generated@@835) (< $generated@@835 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@835) (< $generated@@835 4294967296)) (=> (and (not (= $generated@@836 $generated@@140)) (= ($generated@@141 $generated@@836) ($generated@@139 $generated@@154))) (=> (and (and (and (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@832 $generated@@836) $generated@@60))) (= ($generated@@138 $generated@@836) ($generated@@324 3))) (and (= ($generated ($generated@@449 $generated@@2 ($generated@@89 ($generated@@87 $generated@@832 $generated@@836) ($generated@@296 0)))) ($generated@@324 12)) (= ($generated ($generated@@449 $generated@@2 ($generated@@89 ($generated@@87 $generated@@832 $generated@@836) ($generated@@296 1)))) ($generated@@324 13)))) (and (and (= ($generated ($generated@@449 $generated@@2 ($generated@@89 ($generated@@87 $generated@@832 $generated@@836) ($generated@@296 2)))) ($generated@@324 14)) (= $generated@@837 ($generated@@88 $generated@@832 $generated@@836 ($generated@@90 ($generated@@87 $generated@@832 $generated@@836) $generated@@60 ($generated@@11 true))))) (and ($generated@@157 $generated@@837) ($generated@@817 $generated@@837)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@836 $generated@@140))) (=> (not (= $generated@@836 $generated@@140)) (=> (= $generated@@838 ($generated@@295 $generated@@837 $generated@@836)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@836 $generated@@140))) (=> (not (= $generated@@836 $generated@@140)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@324 0)) (< ($generated@@324 0) ($generated@@138 $generated@@836)))) (=> (and (<= 0 ($generated@@324 0)) (< ($generated@@324 0) ($generated@@138 $generated@@836))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@0 ($generated@@219 $generated@@806 $generated@@836 ($generated@@296 ($generated@@324 0))))) (=> ($generated@@0 ($generated@@219 $generated@@806 $generated@@836 ($generated@@296 ($generated@@324 0)))) (=> (= $generated@@839 ($generated@@324 42)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@324 0) $generated@@839) (< $generated@@839 4294967296))) (=> (and (<= ($generated@@324 0) $generated@@839) (< $generated@@839 4294967296)) (=> (= $generated@@840 ($generated@@324 42)) (=> (and (= $generated@@841 ($generated@@88 $generated@@837 $generated@@836 ($generated@@90 ($generated@@87 $generated@@837 $generated@@836) ($generated@@296 ($generated@@324 0)) ($generated@@380 ($generated@@8 $generated@@840))))) ($generated@@157 $generated@@841)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@836 $generated@@140))) (=> (not (= $generated@@836 $generated@@140)) (=> (and (and (= $generated@@842 ($generated@@295 $generated@@841 $generated@@836)) (= $generated@@843 ($generated@@326 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@184 ($generated@@368 $generated@@178) ($generated@@380 ($generated@@335 73))) ($generated@@380 ($generated@@335 109))) ($generated@@380 ($generated@@335 109))) ($generated@@380 ($generated@@335 117))) ($generated@@380 ($generated@@335 116))) ($generated@@380 ($generated@@335 97))) ($generated@@380 ($generated@@335 98))) ($generated@@380 ($generated@@335 105))) ($generated@@380 ($generated@@335 108))) ($generated@@380 ($generated@@335 105))) ($generated@@380 ($generated@@335 116))) ($generated@@380 ($generated@@335 121)))))) (and (= $generated@@844  (not ($generated@@356 $generated@@838 $generated@@842))) (= (ControlFlow 0 2) (- 0 1)))) $generated@@844))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@859  (=> (and ($generated@@157 $generated@@807) ($generated@@817 $generated@@807)) (=> (and (and ($generated@@142 $generated@@845 ($generated@@330 $generated@@154)) ($generated@@80 $generated@@845 ($generated@@330 $generated@@154) $generated@@807)) true) (=> (and (and (and (and (and ($generated@@142 $generated@@846 ($generated@@330 $generated@@154)) ($generated@@80 $generated@@846 ($generated@@330 $generated@@154) $generated@@807)) true) (and (and ($generated@@142 $generated@@847 ($generated@@330 $generated@@154)) ($generated@@80 $generated@@847 ($generated@@330 $generated@@154) $generated@@807)) true)) (and (and (and ($generated@@142 $generated@@848 ($generated@@330 $generated@@154)) ($generated@@80 $generated@@848 ($generated@@330 $generated@@154) $generated@@807)) true) (and (and ($generated@@142 $generated@@849 ($generated@@330 $generated@@154)) ($generated@@80 $generated@@849 ($generated@@330 $generated@@154) $generated@@807)) true))) (and (and (and (and ($generated@@142 $generated@@850 ($generated@@162 $generated@@154)) ($generated@@80 $generated@@850 ($generated@@162 $generated@@154) $generated@@807)) true) (and (and ($generated@@142 $generated@@851 ($generated@@330 $generated@@154)) ($generated@@80 $generated@@851 ($generated@@330 $generated@@154) $generated@@807)) true)) (and (and (and ($generated@@142 $generated@@852 ($generated@@330 $generated@@154)) ($generated@@80 $generated@@852 ($generated@@330 $generated@@154) $generated@@807)) true) (and (= 2 $generated@@853) (= (ControlFlow 0 32) 2))))) $generated@@854)))))
$generated@@859)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U Int) T@U)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (Int) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 () T@T)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@290 (T@U Int) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@330 (T@T) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@374 (T@T T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@T) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (and (and (forall (($generated@@164 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@164)) 16)) (forall (($generated@@165 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@161 $generated@@165))
))) (forall (($generated@@166 T@U) ($generated@@167 Int) ) (! (let (($generated@@168 ($generated@@163 (type $generated@@166))))
(= (type ($generated@@159 $generated@@166 $generated@@167)) ($generated@@161 $generated@@168)))
 :pattern ( ($generated@@159 $generated@@166 $generated@@167))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 (type $generated@@170)))
(= (type ($generated@@160 $generated@@169 $generated@@170)) ($generated@@161 $generated@@171)))
 :pattern ( ($generated@@160 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Int) ) (! (let (($generated@@175 (type $generated@@173)))
 (=> (= (type $generated@@172) ($generated@@161 $generated@@175)) (=> (and (<= 0 $generated@@174) (<= $generated@@174 ($generated@@162 $generated@@172))) (= ($generated@@159 ($generated@@160 $generated@@172 $generated@@173) $generated@@174) ($generated@@160 ($generated@@159 $generated@@172 $generated@@174) $generated@@173)))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@172 $generated@@173) $generated@@174))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@66)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@180) $generated@@66)) ($generated@@141 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@141 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@79 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@69 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@79) (= (type $generated@@231) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@232) ($generated@@68 $generated@@4))) (= (type $generated@@234) $generated@@79)) (= (type $generated@@235) ($generated@@68 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@145)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@66) (= (type $generated@@242) $generated@@66)) (= (type $generated@@243) $generated@@154)) (= (type $generated@@244) $generated@@154)) (= ($generated@@141 ($generated@@237 $generated@@243 $generated@@244) ($generated@@144 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@141 ($generated@@237 $generated@@243 $generated@@244) ($generated@@144 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@145) (= (type $generated@@246) $generated@@145)) (= ($generated@@151 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@151 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 Int) ) (! (let (($generated@@249 ($generated@@163 (type $generated@@247))))
 (=> (and (= (type $generated@@247) ($generated@@161 $generated@@249)) (= $generated@@248 0)) (= ($generated@@159 $generated@@247 $generated@@248) $generated@@247)))
 :pattern ( ($generated@@159 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@66)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@253) $generated@@66)) (= ($generated@@141 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@154) ($generated@@0 ($generated@@83 $generated@@252 $generated@@254))) ($generated@@238 $generated@@254 $generated@@253))
 :pattern ( ($generated@@83 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@141 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@66)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@258) $generated@@66)) (= ($generated@@141 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@154) ($generated@@0 ($generated@@83 $generated@@257 $generated@@259))) ($generated@@238 $generated@@259 $generated@@258))
 :pattern ( ($generated@@83 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@141 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@66)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) ($generated@@161 $generated@@154)) (= (type $generated@@269) $generated@@154)) (= (type $generated@@270) $generated@@66)) (and ($generated@@141 $generated@@268 ($generated@@266 $generated@@270)) ($generated@@238 $generated@@269 $generated@@270))) ($generated@@141 ($generated@@160 $generated@@268 $generated@@269) ($generated@@266 $generated@@270)))
 :pattern ( ($generated@@141 ($generated@@160 $generated@@268 $generated@@269) ($generated@@266 $generated@@270)))
)))
(assert  (and (= ($generated@@1 $generated@@273) 18) (forall (($generated@@274 Int) ) (! (= (type ($generated@@271 $generated@@274)) $generated@@273)
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@275 Int) ) (!  (=> (and (<= 0 $generated@@275) (< $generated@@275 65536)) (= ($generated@@272 ($generated@@271 $generated@@275)) $generated@@275))
 :pattern ( ($generated@@271 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@66) (= (type $generated@@279) $generated@@66)) (= (type $generated@@280) $generated@@154)) (= (type $generated@@281) $generated@@154)) (= (type $generated@@282) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@276 $generated@@282)) (= ($generated@@76 ($generated@@237 $generated@@280 $generated@@281) ($generated@@144 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@76 ($generated@@237 $generated@@280 $generated@@281) ($generated@@144 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 Int) ) (! (let (($generated@@285 ($generated@@163 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@161 $generated@@285)) (=> (and (<= 0 $generated@@284) (<= $generated@@284 ($generated@@162 $generated@@283))) (= ($generated@@162 ($generated@@159 $generated@@283 $generated@@284)) (- ($generated@@162 $generated@@283) $generated@@284)))))
 :pattern ( ($generated@@162 ($generated@@159 $generated@@283 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@70)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@145) (= ($generated@@143 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@288))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 Int) ) (! (let (($generated@@293 ($generated@@163 (type $generated@@291))))
(= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@293))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@163 (type $generated@@294))))
 (=> (and (= (type $generated@@294) ($generated@@161 $generated@@296)) (= (type $generated@@295) ($generated@@161 $generated@@296))) (= ($generated@@289 $generated@@294 $generated@@295)  (and (= ($generated@@162 $generated@@294) ($generated@@162 $generated@@295)) (forall (($generated@@297 Int) ) (!  (=> (and (<= 0 $generated@@297) (< $generated@@297 ($generated@@162 $generated@@294))) (= ($generated@@290 $generated@@294 $generated@@297) ($generated@@290 $generated@@295 $generated@@297)))
 :pattern ( ($generated@@290 $generated@@294 $generated@@297))
 :pattern ( ($generated@@290 $generated@@295 $generated@@297))
))))))
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@145) ($generated@@143 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@154) (= (type $generated@@300) $generated@@154)) (= $generated@@298 ($generated@@237 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@143 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@161 $generated@@302))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@162 ($generated@@301 $generated@@303)) 0)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 Int) ) (! (let (($generated@@307 ($generated@@163 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@161 $generated@@307)) (=> (and (< 0 $generated@@306) (<= $generated@@306 ($generated@@162 $generated@@305))) (< ($generated@@304 ($generated@@159 $generated@@305 $generated@@306)) ($generated@@304 $generated@@305)))))
 :pattern ( ($generated@@304 ($generated@@159 $generated@@305 $generated@@306)))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 (type $generated@@309)))
 (=> (= (type $generated@@308) ($generated@@161 $generated@@310)) (= ($generated@@162 ($generated@@160 $generated@@308 $generated@@309)) (+ 1 ($generated@@162 $generated@@308)))))
 :pattern ( ($generated@@160 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@273) (and (and (= ($generated@@271 ($generated@@272 $generated@@311)) $generated@@311) (<= 0 ($generated@@272 $generated@@311))) (< ($generated@@272 $generated@@311) 65536)))
 :pattern ( ($generated@@272 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@154)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@66) (= (type $generated@@316) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@277 ($generated@@312 $generated@@314) $generated@@315 $generated@@316) ($generated@@76 $generated@@314 $generated@@315 $generated@@316)))
 :pattern ( ($generated@@277 ($generated@@312 $generated@@314) $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@317) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@318) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@319) $generated@@154)) (= (type $generated@@320) $generated@@66)) ($generated@@134 $generated@@317 $generated@@318)) ($generated@@277 $generated@@319 $generated@@320 $generated@@317)) ($generated@@277 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@134 $generated@@317 $generated@@318) ($generated@@277 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@321) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@322) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@324) $generated@@66)) ($generated@@134 $generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@324 $generated@@321)) ($generated@@76 $generated@@323 $generated@@324 $generated@@322))
 :pattern ( ($generated@@134 $generated@@321 $generated@@322) ($generated@@76 $generated@@323 $generated@@324 $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 Int) ($generated@@327 Int) ) (! (let (($generated@@328 ($generated@@163 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@161 $generated@@328)) (=> (and (and (<= 0 $generated@@326) (<= 0 $generated@@327)) (< $generated@@327 (- ($generated@@162 $generated@@325) $generated@@326))) (= ($generated@@290 ($generated@@159 $generated@@325 $generated@@326) $generated@@327) ($generated@@290 $generated@@325 (+ $generated@@327 $generated@@326))))))
 :weight 25
 :pattern ( ($generated@@290 ($generated@@159 $generated@@325 $generated@@326) $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ) (! (= (type ($generated@@330 $generated@@331)) ($generated@@78 $generated@@331 $generated@@2))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@81 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@78 $generated@@333 $generated@@2)) (and (= (= ($generated@@329 $generated@@332) 0) (= $generated@@332 ($generated@@330 $generated@@333))) (=> (not (= ($generated@@329 $generated@@332) 0)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) (< 0 ($generated ($generated@@83 $generated@@332 $generated@@334))))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@83 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@83 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 20)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@78 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@83 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@83 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@81 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@78 $generated@@372 $generated@@2)) (= ($generated@@177 $generated@@371) (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@372) (and (<= 0 ($generated ($generated@@83 $generated@@371 $generated@@373))) (<= ($generated ($generated@@83 $generated@@371 $generated@@373)) ($generated@@329 $generated@@371))))
 :pattern ( ($generated@@83 $generated@@371 $generated@@373))
)))))
 :pattern ( ($generated@@177 $generated@@371))
)))
(assert (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@154) ($generated@@238 $generated@@377 $generated@@138)) (and (= ($generated@@312 ($generated@@374 $generated@@2 $generated@@377)) $generated@@377) ($generated@@141 ($generated@@374 $generated@@2 $generated@@377) $generated@@138)))
 :pattern ( ($generated@@238 $generated@@377 $generated@@138))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 Int) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
 (=> (= (type $generated@@378) ($generated@@161 $generated@@381)) (and (=> (= $generated@@379 ($generated@@162 $generated@@378)) (= ($generated@@290 ($generated@@160 $generated@@378 $generated@@380) $generated@@379) $generated@@380)) (=> (not (= $generated@@379 ($generated@@162 $generated@@378))) (= ($generated@@290 ($generated@@160 $generated@@378 $generated@@380) $generated@@379) ($generated@@290 $generated@@378 $generated@@379))))))
 :pattern ( ($generated@@290 ($generated@@160 $generated@@378 $generated@@380) $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(let (($generated@@384 ($generated@@338 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@337 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@336 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@83 ($generated@@335 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@335 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@339 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@78 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@339 (type $generated@@389))))
(let (($generated@@391 ($generated@@338 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@337 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@336 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@83 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@357 (type $generated@@393))))
(let (($generated@@395 ($generated@@356 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@355 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@354 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@83 ($generated@@353 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@353 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@357 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@78 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@357 (type $generated@@400))))
(let (($generated@@402 ($generated@@356 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@355 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@354 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@83 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@405) $generated@@66)) (= ($generated@@141 $generated@@404 ($generated@@176 $generated@@405)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@404 $generated@@406)))) ($generated@@238 $generated@@406 $generated@@405))
 :pattern ( ($generated@@83 $generated@@404 $generated@@406))
))))
 :pattern ( ($generated@@141 $generated@@404 ($generated@@176 $generated@@405)))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@407 ($generated@@250 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@154) ($generated@@0 ($generated@@83 $generated@@407 $generated@@410))) ($generated@@277 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@83 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@76 $generated@@407 ($generated@@250 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@412) $generated@@66)) (= (type $generated@@413) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@411 ($generated@@255 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@154) ($generated@@0 ($generated@@83 $generated@@411 $generated@@414))) ($generated@@277 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@83 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@76 $generated@@411 ($generated@@255 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(= ($generated ($generated@@83 ($generated@@330 $generated@@416) $generated@@415)) 0))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@83 ($generated@@330 $generated@@416) $generated@@415)))
)))
(assert  (and (forall (($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@419)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@417 $generated@@419))
)) (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@339 (type $generated@@420))))
(let (($generated@@422 ($generated@@338 (type $generated@@420))))
(= (type ($generated@@418 $generated@@420)) ($generated@@78 $generated@@422 $generated@@421))))
 :pattern ( ($generated@@418 $generated@@420))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@337 $generated@@154 $generated@@154)) (= (type $generated@@424) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@417 $generated@@423) $generated@@424))  (and ($generated@@0 ($generated@@83 ($generated@@335 $generated@@423) ($generated@@152 ($generated@@374 $generated@@145 $generated@@424)))) (= ($generated@@83 ($generated@@418 $generated@@423) ($generated@@152 ($generated@@374 $generated@@145 $generated@@424))) ($generated@@153 ($generated@@374 $generated@@145 $generated@@424))))))
 :pattern ( ($generated@@83 ($generated@@417 $generated@@423) $generated@@424))
)))
(assert  (and (forall (($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@427)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@425 $generated@@427))
)) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@357 (type $generated@@428))))
(let (($generated@@430 ($generated@@356 (type $generated@@428))))
(= (type ($generated@@426 $generated@@428)) ($generated@@78 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@426 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@355 $generated@@154 $generated@@154)) (= (type $generated@@432) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@425 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@83 ($generated@@353 $generated@@431) ($generated@@152 ($generated@@374 $generated@@145 $generated@@432)))) (= ($generated@@83 ($generated@@426 $generated@@431) ($generated@@152 ($generated@@374 $generated@@145 $generated@@432))) ($generated@@153 ($generated@@374 $generated@@145 $generated@@432))))))
 :pattern ( ($generated@@83 ($generated@@425 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@338 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@337 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@83 ($generated@@386 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@83 ($generated@@335 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@83 ($generated@@418 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@83 ($generated@@335 $generated@@433) $generated@@437))
 :pattern ( ($generated@@83 ($generated@@418 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@83 ($generated@@386 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(let (($generated@@441 ($generated@@356 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@355 $generated@@441 $generated@@440)) (= ($generated@@0 ($generated@@83 ($generated@@397 $generated@@438) $generated@@439)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@441) (and ($generated@@0 ($generated@@83 ($generated@@353 $generated@@438) $generated@@442)) (= $generated@@439 ($generated@@83 ($generated@@426 $generated@@438) $generated@@442))))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@438) $generated@@442))
 :pattern ( ($generated@@83 ($generated@@426 $generated@@438) $generated@@442))
))))))
 :pattern ( ($generated@@83 ($generated@@397 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@66)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@337 $generated@@154 $generated@@154)) (= (type $generated@@447) $generated@@66)) (= (type $generated@@448) $generated@@66)) (= (type $generated@@449) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@335 $generated@@446) $generated@@450))) (and ($generated@@277 ($generated@@83 ($generated@@418 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@277 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@83 ($generated@@418 $generated@@446) $generated@@450))
 :pattern ( ($generated@@83 ($generated@@335 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@76 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@355 $generated@@154 $generated@@154)) (= (type $generated@@455) $generated@@66)) (= (type $generated@@456) $generated@@66)) (= (type $generated@@457) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@353 $generated@@454) $generated@@458))) (and ($generated@@277 ($generated@@83 ($generated@@426 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@277 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@83 ($generated@@426 $generated@@454) $generated@@458))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@76 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@163 (type $generated@@459))))
 (=> (and (and (= (type $generated@@459) ($generated@@161 $generated@@461)) (= (type $generated@@460) ($generated@@161 $generated@@461))) ($generated@@289 $generated@@459 $generated@@460)) (= $generated@@459 $generated@@460)))
 :pattern ( ($generated@@289 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@462) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@463) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@464) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@462 $generated@@464))) (and ($generated@@134 $generated@@462 $generated@@463) ($generated@@134 $generated@@463 $generated@@464))) ($generated@@134 $generated@@462 $generated@@464))
 :pattern ( ($generated@@134 $generated@@462 $generated@@463) ($generated@@134 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@T) ) (! (= (type ($generated@@465 $generated@@466)) ($generated@@78 $generated@@466 $generated@@4))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@357 (type $generated@@467))))
(let (($generated@@469 ($generated@@356 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@355 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@354 $generated@@469 $generated@@468)) (= ($generated@@353 $generated@@467) ($generated@@465 $generated@@469))))))
 :pattern ( ($generated@@353 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@357 (type $generated@@470))))
(let (($generated@@472 ($generated@@356 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@355 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@354 $generated@@472 $generated@@471)) (= ($generated@@397 $generated@@470) ($generated@@465 $generated@@471))))))
 :pattern ( ($generated@@397 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@357 (type $generated@@473))))
(let (($generated@@475 ($generated@@356 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@355 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@354 $generated@@475 $generated@@474)) (= ($generated@@425 $generated@@473) ($generated@@465 $generated@@154))))))
 :pattern ( ($generated@@425 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@339 (type $generated@@476))))
(let (($generated@@478 ($generated@@338 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@337 $generated@@478 $generated@@477)) (or (= $generated@@476 ($generated@@336 $generated@@478 $generated@@477)) (exists (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (and (and (= (type $generated@@479) $generated@@154) (= (type $generated@@480) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@417 $generated@@476) ($generated@@312 ($generated@@237 $generated@@479 $generated@@480)))))
 :no-pattern (type $generated@@479)
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@417 $generated@@476))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@357 (type $generated@@481))))
(let (($generated@@483 ($generated@@356 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@355 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@354 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@154) (= (type $generated@@485) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@425 $generated@@481) ($generated@@312 ($generated@@237 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@425 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) ($generated@@238 $generated@@486 $generated@@46)) (and (= ($generated@@312 ($generated@@374 $generated@@2 $generated@@486)) $generated@@486) ($generated@@141 ($generated@@374 $generated@@2 $generated@@486) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@486 $generated@@46))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@154) ($generated@@238 $generated@@487 $generated@@47)) (and (= ($generated@@312 ($generated@@374 $generated@@3 $generated@@487)) $generated@@487) ($generated@@141 ($generated@@374 $generated@@3 $generated@@487) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@487 $generated@@47))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@154) ($generated@@238 $generated@@488 $generated@@44)) (and (= ($generated@@312 ($generated@@374 $generated@@4 $generated@@488)) $generated@@488) ($generated@@141 ($generated@@374 $generated@@4 $generated@@488) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@488 $generated@@44))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@154) ($generated@@238 $generated@@489 $generated@@45)) (and (= ($generated@@312 ($generated@@374 $generated@@273 $generated@@489)) $generated@@489) ($generated@@141 ($generated@@374 $generated@@273 $generated@@489) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@489 $generated@@45))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@238 ($generated@@312 $generated@@490) $generated@@491) ($generated@@141 $generated@@490 $generated@@491)))
 :pattern ( ($generated@@238 ($generated@@312 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@81 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@78 $generated@@493 $generated@@2)) (<= 0 ($generated@@329 $generated@@492))))
 :pattern ( ($generated@@329 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@163 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@161 $generated@@495)) (<= 0 ($generated@@162 $generated@@494))))
 :pattern ( ($generated@@162 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@66) (= (type $generated@@499) $generated@@66)) (= ($generated@@496 ($generated@@443 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@443 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@66) (= (type $generated@@503) $generated@@66)) (= ($generated@@500 ($generated@@443 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@443 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@74 ($generated@@443 $generated@@504 $generated@@505)) $generated@@58))
 :pattern ( ($generated@@443 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@66) (= (type $generated@@509) $generated@@66)) (= ($generated@@506 ($generated@@451 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@451 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@66) (= (type $generated@@513) $generated@@66)) (= ($generated@@510 ($generated@@451 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@451 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@74 ($generated@@451 $generated@@514 $generated@@515)) $generated@@59))
 :pattern ( ($generated@@451 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (= ($generated@@286 ($generated@@237 $generated@@516 $generated@@517)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@66)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@66) (= (type $generated@@521) $generated@@66)) (= ($generated@@518 ($generated@@144 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@144 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@66)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@66) (= (type $generated@@525) $generated@@66)) (= ($generated@@522 ($generated@@144 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@144 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@154) (= (type $generated@@527) $generated@@154)) (= ($generated@@152 ($generated@@237 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@237 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@154) (= (type $generated@@529) $generated@@154)) (= ($generated@@153 ($generated@@237 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@237 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@161 $generated@@154)) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@530 ($generated@@266 $generated@@531) $generated@@532) (forall (($generated@@533 Int) ) (!  (=> (and (<= 0 $generated@@533) (< $generated@@533 ($generated@@162 $generated@@530))) ($generated@@277 ($generated@@290 $generated@@530 $generated@@533) $generated@@531 $generated@@532))
 :pattern ( ($generated@@290 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@76 $generated@@530 ($generated@@266 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@77 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@77 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@66)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@66) (= ($generated@@536 ($generated@@250 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@250 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@74 ($generated@@250 $generated@@539)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@66)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@66) (= ($generated@@540 ($generated@@255 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@255 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@66) (= ($generated@@74 ($generated@@255 $generated@@543)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@66) (= ($generated@@544 ($generated@@176 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@176 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@74 ($generated@@176 $generated@@547)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@66) (= ($generated@@548 ($generated@@266 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@266 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@74 ($generated@@266 $generated@@551)) $generated@@57))
 :pattern ( ($generated@@266 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@374 $generated@@553 ($generated@@312 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@312 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@337 $generated@@154 $generated@@154)) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) $generated@@66)) (= ($generated@@141 $generated@@554 ($generated@@443 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@335 $generated@@554) $generated@@557))) (and ($generated@@238 ($generated@@83 ($generated@@418 $generated@@554) $generated@@557) $generated@@556) ($generated@@238 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@83 ($generated@@418 $generated@@554) $generated@@557))
 :pattern ( ($generated@@83 ($generated@@335 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@141 $generated@@554 ($generated@@443 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@355 $generated@@154 $generated@@154)) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) $generated@@66)) (= ($generated@@141 $generated@@558 ($generated@@451 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@353 $generated@@558) $generated@@561))) (and ($generated@@238 ($generated@@83 ($generated@@426 $generated@@558) $generated@@561) $generated@@560) ($generated@@238 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@83 ($generated@@426 $generated@@558) $generated@@561))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@141 $generated@@558 ($generated@@451 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@154) (= (type $generated@@565) $generated@@154)) (< ($generated@@562 $generated@@564) ($generated@@563 ($generated@@237 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@237 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@154)) (< ($generated@@562 $generated@@567) ($generated@@563 ($generated@@237 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@237 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@238 $generated@@568 ($generated@@443 $generated@@569 $generated@@570))) (and (= ($generated@@312 ($generated@@374 ($generated@@337 $generated@@154 $generated@@154) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@374 ($generated@@337 $generated@@154 $generated@@154) $generated@@568) ($generated@@443 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@238 $generated@@568 ($generated@@443 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@154) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@66)) ($generated@@238 $generated@@571 ($generated@@451 $generated@@572 $generated@@573))) (and (= ($generated@@312 ($generated@@374 ($generated@@355 $generated@@154 $generated@@154) $generated@@571)) $generated@@571) ($generated@@141 ($generated@@374 ($generated@@355 $generated@@154 $generated@@154) $generated@@571) ($generated@@451 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@238 $generated@@571 ($generated@@451 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@66) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) $generated@@154)) ($generated@@238 $generated@@576 ($generated@@144 $generated@@574 $generated@@575))) (and (= ($generated@@312 ($generated@@374 $generated@@145 $generated@@576)) $generated@@576) ($generated@@141 ($generated@@374 $generated@@145 $generated@@576) ($generated@@144 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@238 $generated@@576 ($generated@@144 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
 (not ($generated@@0 ($generated@@83 ($generated@@465 $generated@@578) $generated@@577))))
 :pattern ( (let (($generated@@578 (type $generated@@577)))
($generated@@83 ($generated@@465 $generated@@578) $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@71)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@66) (= (type $generated@@582) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@581 $generated@@582)) $generated@@62) (= ($generated@@579 ($generated@@144 $generated@@581 $generated@@582)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@581 $generated@@582))
)))
(assert  (and (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@163 (type $generated@@585))))
(= (type ($generated@@583 $generated@@585)) ($generated@@161 $generated@@586)))
 :pattern ( ($generated@@583 $generated@@585))
)) (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@163 (type $generated@@587))))
(= (type ($generated@@584 $generated@@587)) $generated@@588))
 :pattern ( ($generated@@584 $generated@@587))
))))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (=> (= (type $generated@@589) ($generated@@161 $generated@@591)) (and (= ($generated@@583 ($generated@@160 $generated@@589 $generated@@590)) $generated@@589) (= ($generated@@584 ($generated@@160 $generated@@589 $generated@@590)) $generated@@590))))
 :pattern ( ($generated@@160 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) (= ($generated@@562 ($generated@@312 $generated@@592)) ($generated@@563 $generated@@592)))
 :pattern ( ($generated@@562 ($generated@@312 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@154) ($generated@@238 $generated@@593 ($generated@@77 0))) (and (= ($generated@@312 ($generated@@374 $generated@@2 $generated@@593)) $generated@@593) ($generated@@141 ($generated@@374 ($generated@@78 $generated@@154 $generated@@4) $generated@@593) ($generated@@77 0))))
 :pattern ( ($generated@@238 $generated@@593 ($generated@@77 0)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@154) (= (type $generated@@595) $generated@@66)) ($generated@@238 $generated@@594 ($generated@@250 $generated@@595))) (and (= ($generated@@312 ($generated@@374 ($generated@@78 $generated@@154 $generated@@4) $generated@@594)) $generated@@594) ($generated@@141 ($generated@@374 ($generated@@78 $generated@@154 $generated@@4) $generated@@594) ($generated@@250 $generated@@595))))
 :pattern ( ($generated@@238 $generated@@594 ($generated@@250 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@154) (= (type $generated@@597) $generated@@66)) ($generated@@238 $generated@@596 ($generated@@255 $generated@@597))) (and (= ($generated@@312 ($generated@@374 ($generated@@78 $generated@@154 $generated@@4) $generated@@596)) $generated@@596) ($generated@@141 ($generated@@374 ($generated@@78 $generated@@154 $generated@@4) $generated@@596) ($generated@@255 $generated@@597))))
 :pattern ( ($generated@@238 $generated@@596 ($generated@@255 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@154) (= (type $generated@@599) $generated@@66)) ($generated@@238 $generated@@598 ($generated@@176 $generated@@599))) (and (= ($generated@@312 ($generated@@374 ($generated@@78 $generated@@154 $generated@@2) $generated@@598)) $generated@@598) ($generated@@141 ($generated@@374 ($generated@@78 $generated@@154 $generated@@2) $generated@@598) ($generated@@176 $generated@@599))))
 :pattern ( ($generated@@238 $generated@@598 ($generated@@176 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@154) (= (type $generated@@601) $generated@@66)) ($generated@@238 $generated@@600 ($generated@@266 $generated@@601))) (and (= ($generated@@312 ($generated@@374 ($generated@@161 $generated@@154) $generated@@600)) $generated@@600) ($generated@@141 ($generated@@374 ($generated@@161 $generated@@154) $generated@@600) ($generated@@266 $generated@@601))))
 :pattern ( ($generated@@238 $generated@@600 ($generated@@266 $generated@@601)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@579 $generated@@138) $generated@@65))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ($generated@@604 Int) ) (! (let (($generated@@605 ($generated@@163 (type $generated@@602))))
 (=> (= (type $generated@@602) ($generated@@161 $generated@@605)) (=> (and (and (<= 0 $generated@@603) (<= $generated@@603 $generated@@604)) (< $generated@@604 ($generated@@162 $generated@@602))) (= ($generated@@290 ($generated@@159 $generated@@602 $generated@@603) (- $generated@@604 $generated@@603)) ($generated@@290 $generated@@602 $generated@@604)))))
 :weight 25
 :pattern ( ($generated@@290 $generated@@602 $generated@@604) ($generated@@159 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@607) $generated@@66)) (= (type $generated@@608) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@606 ($generated@@176 $generated@@607) $generated@@608) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@606 $generated@@609)))) ($generated@@277 $generated@@609 $generated@@607 $generated@@608))
 :pattern ( ($generated@@83 $generated@@606 $generated@@609))
))))
 :pattern ( ($generated@@76 $generated@@606 ($generated@@176 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ($generated@@612 Int) ) (! (let (($generated@@613 ($generated@@163 (type $generated@@610))))
 (=> (= (type $generated@@610) ($generated@@161 $generated@@613)) (=> (and (and (<= 0 $generated@@611) (<= 0 $generated@@612)) (<= (+ $generated@@611 $generated@@612) ($generated@@162 $generated@@610))) (= ($generated@@159 ($generated@@159 $generated@@610 $generated@@611) $generated@@612) ($generated@@159 $generated@@610 (+ $generated@@611 $generated@@612))))))
 :pattern ( ($generated@@159 ($generated@@159 $generated@@610 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@145) (= (type $generated@@615) $generated@@66)) (= (type $generated@@616) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@276 $generated@@616) (and ($generated@@143 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@66) ($generated@@76 $generated@@614 ($generated@@144 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@76 $generated@@614 ($generated@@144 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@277 ($generated@@152 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@277 ($generated@@152 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@145) (= (type $generated@@619) $generated@@66)) (= (type $generated@@620) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@276 $generated@@620) (and ($generated@@143 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@66) ($generated@@76 $generated@@618 ($generated@@144 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@76 $generated@@618 ($generated@@144 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@277 ($generated@@153 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@277 ($generated@@153 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@2) (= ($generated@@141 $generated@@622 $generated@@138)  (and (<= ($generated@@260 0) ($generated $generated@@622)) (< ($generated $generated@@622) 4294967296))))
 :pattern ( ($generated@@141 $generated@@622 $generated@@138))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@154) (= (type $generated@@624) $generated@@154)) (= ($generated@@237 ($generated@@262 $generated@@623) ($generated@@262 $generated@@624)) ($generated@@262 ($generated@@237 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@237 ($generated@@262 $generated@@623) ($generated@@262 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@312 ($generated@@8 ($generated@@260 $generated@@625))) ($generated@@262 ($generated@@312 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@312 ($generated@@8 ($generated@@260 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@312 ($generated@@262 $generated@@626)) ($generated@@262 ($generated@@312 $generated@@626)))
 :pattern ( ($generated@@312 ($generated@@262 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@163 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@161 $generated@@628)) (= ($generated@@162 $generated@@627) 0)) (= $generated@@627 ($generated@@301 $generated@@628))))
 :pattern ( ($generated@@162 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@78 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@329 ($generated@@84 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@329 $generated@@629) ($generated ($generated@@83 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@329 ($generated@@84 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@634) $generated@@2)) ($generated@@76 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@76 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@636) $generated@@3)) ($generated@@76 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@76 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@638) $generated@@4)) ($generated@@76 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@76 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@640) $generated@@273)) ($generated@@76 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@76 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) $generated@@154)) ($generated@@76 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@76 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@161 $generated@@154)) (= (type $generated@@644) $generated@@66)) (= ($generated@@141 $generated@@643 ($generated@@266 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@162 $generated@@643))) ($generated@@238 ($generated@@290 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@290 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@141 $generated@@643 ($generated@@266 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 Int) ) (!  (=> (= (type $generated@@646) ($generated@@161 $generated@@154)) (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@162 $generated@@646))) (< ($generated@@563 ($generated@@374 $generated@@145 ($generated@@290 $generated@@646 $generated@@647))) ($generated@@304 $generated@@646))))
 :pattern ( ($generated@@563 ($generated@@374 $generated@@145 ($generated@@290 $generated@@646 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@337 $generated@@154 $generated@@154)) (= (type $generated@@649) $generated@@66)) (= (type $generated@@650) $generated@@66)) ($generated@@141 $generated@@648 ($generated@@443 $generated@@649 $generated@@650))) (and (and ($generated@@141 ($generated@@335 $generated@@648) ($generated@@250 $generated@@649)) ($generated@@141 ($generated@@386 $generated@@648) ($generated@@250 $generated@@650))) ($generated@@141 ($generated@@417 $generated@@648) ($generated@@250 ($generated@@144 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@141 $generated@@648 ($generated@@443 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@355 $generated@@154 $generated@@154)) (= (type $generated@@652) $generated@@66)) (= (type $generated@@653) $generated@@66)) ($generated@@141 $generated@@651 ($generated@@451 $generated@@652 $generated@@653))) (and (and ($generated@@141 ($generated@@353 $generated@@651) ($generated@@255 $generated@@652)) ($generated@@141 ($generated@@397 $generated@@651) ($generated@@255 $generated@@653))) ($generated@@141 ($generated@@425 $generated@@651) ($generated@@255 ($generated@@144 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@141 $generated@@651 ($generated@@451 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@2) ($generated@@141 $generated@@654 $generated@@46))
 :pattern ( ($generated@@141 $generated@@654 $generated@@46))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@3) ($generated@@141 $generated@@655 $generated@@47))
 :pattern ( ($generated@@141 $generated@@655 $generated@@47))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@4) ($generated@@141 $generated@@656 $generated@@44))
 :pattern ( ($generated@@141 $generated@@656 $generated@@44))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@273) ($generated@@141 $generated@@657 $generated@@45))
 :pattern ( ($generated@@141 $generated@@657 $generated@@45))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@154) ($generated@@141 $generated@@658 $generated@@48))
 :pattern ( ($generated@@141 $generated@@658 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Bool)
(declare-fun $generated@@672 (T@U) Bool)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@659) ($generated@@183 $generated@@79 $generated@@4)) (= (type $generated@@660) $generated@@79)) (= (type $generated@@661) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@665) ($generated@@161 $generated@@154))) (= (type $generated@@666) ($generated@@161 $generated@@154))) (= (type $generated@@669) ($generated@@161 $generated@@154))) (= (type $generated@@670) ($generated@@161 $generated@@154))) (= (type $generated@@673) ($generated@@161 $generated@@154))) (= (type $generated@@674) ($generated@@161 $generated@@154))) (= (type $generated@@675) ($generated@@161 $generated@@154))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@677  (=> (and (= $generated@@659 ($generated@@182 $generated@@660 $generated@@661 $generated@@60 false)) (= $generated@@662 ($generated@@260 1))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@260 0) $generated@@662) (< $generated@@662 4294967296))) (=> (and (<= ($generated@@260 0) $generated@@662) (< $generated@@662 4294967296)) (=> (= $generated@@663 ($generated@@260 2)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@260 0) $generated@@663) (< $generated@@663 4294967296))) (=> (and (<= ($generated@@260 0) $generated@@663) (< $generated@@663 4294967296)) (=> (= $generated@@664 ($generated@@260 3)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@260 0) $generated@@664) (< $generated@@664 4294967296))) (=> (and (<= ($generated@@260 0) $generated@@664) (< $generated@@664 4294967296)) (=> (= $generated@@665 ($generated@@262 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@301 $generated@@154) ($generated@@312 ($generated@@8 ($generated@@260 1)))) ($generated@@312 ($generated@@8 ($generated@@260 2)))) ($generated@@312 ($generated@@8 ($generated@@260 3)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@260 1)) (<= ($generated@@260 1) ($generated@@162 $generated@@665)))) (=> (and (<= 0 ($generated@@260 1)) (<= ($generated@@260 1) ($generated@@162 $generated@@665))) (=> (and (= $generated@@666 ($generated@@159 $generated@@665 ($generated@@260 1))) (= $generated@@667 ($generated@@260 2))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@260 0) $generated@@667) (< $generated@@667 4294967296))) (=> (and (<= ($generated@@260 0) $generated@@667) (< $generated@@667 4294967296)) (=> (= $generated@@668 ($generated@@260 3)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@260 0) $generated@@668) (< $generated@@668 4294967296))) (=> (and (<= ($generated@@260 0) $generated@@668) (< $generated@@668 4294967296)) (=> (and (and (= $generated@@669 ($generated@@262 ($generated@@160 ($generated@@160 ($generated@@301 $generated@@154) ($generated@@312 ($generated@@8 ($generated@@260 2)))) ($generated@@312 ($generated@@8 ($generated@@260 3)))))) (= $generated@@670 ($generated@@262 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@160 ($generated@@301 $generated@@154) ($generated@@312 ($generated@@271 86))) ($generated@@312 ($generated@@271 97))) ($generated@@312 ($generated@@271 108))) ($generated@@312 ($generated@@271 117))) ($generated@@312 ($generated@@271 101))) ($generated@@312 ($generated@@271 69))) ($generated@@312 ($generated@@271 113))) ($generated@@312 ($generated@@271 117))) ($generated@@312 ($generated@@271 97))) ($generated@@312 ($generated@@271 108))) ($generated@@312 ($generated@@271 105))) ($generated@@312 ($generated@@271 116))) ($generated@@312 ($generated@@271 121)))))) (and (= $generated@@671 ($generated@@289 $generated@@666 $generated@@669)) (= (ControlFlow 0 2) (- 0 1)))) $generated@@671)))))))))))))))))))))
(let (($generated@@678  (=> (and ($generated@@276 $generated@@661) ($generated@@672 $generated@@661)) (=> (and (and (and (and ($generated@@141 $generated@@673 ($generated@@266 $generated@@138)) ($generated@@76 $generated@@673 ($generated@@266 $generated@@138) $generated@@661)) true) (and (and ($generated@@141 $generated@@674 ($generated@@266 $generated@@138)) ($generated@@76 $generated@@674 ($generated@@266 $generated@@138) $generated@@661)) true)) (and (and (and ($generated@@141 $generated@@675 ($generated@@266 $generated@@138)) ($generated@@76 $generated@@675 ($generated@@266 $generated@@138) $generated@@661)) true) (and (= 2 $generated@@676) (= (ControlFlow 0 9) 2)))) $generated@@677))))
$generated@@678)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@172 (T@T) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 () T@T)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U Int) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert  (and (and (forall (($generated@@145 T@T) ) (= ($generated@@1 ($generated@@143 $generated@@145)) 14)) (forall (($generated@@146 T@T) ) (! (= ($generated@@144 ($generated@@143 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 (type $generated@@148)))
(= (type ($generated@@142 $generated@@147 $generated@@148)) ($generated@@143 $generated@@149)))
 :pattern ( ($generated@@142 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 (type $generated@@151)))
 (=> (and (= (type $generated@@150) ($generated@@143 $generated@@153)) (= (type $generated@@152) $generated@@153)) (= ($generated@@141 ($generated@@142 $generated@@150 $generated@@151) $generated@@152)  (or (= $generated@@151 $generated@@152) ($generated@@141 $generated@@150 $generated@@152)))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@150 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@154 $generated@@155 ($generated@@77 0)))
 :pattern ( ($generated@@154 $generated@@155 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@159 $generated@@160)) $generated@@66)
 :pattern ( ($generated@@157 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@66) (= (type $generated@@162) $generated@@66)) (= (type $generated@@163) $generated@@158)) ($generated@@154 $generated@@163 ($generated@@157 $generated@@161 $generated@@162))) ($generated@@156 $generated@@163))
 :pattern ( ($generated@@156 $generated@@163) ($generated@@154 $generated@@163 ($generated@@157 $generated@@161 $generated@@162)))
)))
(assert  (and (and (= ($generated@@1 $generated@@167) 16) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@167)
 :pattern ( ($generated@@166 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@158) (= (type $generated@@171) $generated@@158)) true) (= ($generated@@164 $generated@@170 $generated@@171)  (and (= ($generated@@165 $generated@@170) ($generated@@165 $generated@@171)) (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)))))
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@T) ) (! (= (type ($generated@@172 $generated@@173)) ($generated@@143 $generated@@173))
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
 (not ($generated@@141 ($generated@@172 $generated@@175) $generated@@174)))
 :pattern ( (let (($generated@@175 (type $generated@@174)))
($generated@@141 ($generated@@172 $generated@@175) $generated@@174)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@66)
 :pattern ( ($generated@@176 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) ($generated@@78 $generated@@167 $generated@@2)) (= (type $generated@@180) $generated@@66)) ($generated@@154 $generated@@179 ($generated@@176 $generated@@180))) ($generated@@177 $generated@@179))
 :pattern ( ($generated@@154 $generated@@179 ($generated@@176 $generated@@180)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@79 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@69 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@79) (= (type $generated@@231) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@232) ($generated@@68 $generated@@4))) (= (type $generated@@234) $generated@@79)) (= (type $generated@@235) ($generated@@68 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@158)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@66) (= (type $generated@@242) $generated@@66)) (= (type $generated@@243) $generated@@167)) (= (type $generated@@244) $generated@@167)) (= ($generated@@154 ($generated@@237 $generated@@243 $generated@@244) ($generated@@157 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@154 ($generated@@237 $generated@@243 $generated@@244) ($generated@@157 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@158) (= (type $generated@@246) $generated@@158)) (= ($generated@@164 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@164 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@78 $generated@@167 $generated@@4)) (= (type $generated@@250) $generated@@66)) (= ($generated@@154 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@167) ($generated@@0 ($generated@@83 $generated@@249 $generated@@251))) ($generated@@238 $generated@@251 $generated@@250))
 :pattern ( ($generated@@83 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@154 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@66)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@78 $generated@@167 $generated@@4)) (= (type $generated@@255) $generated@@66)) (= ($generated@@154 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@167) ($generated@@0 ($generated@@83 $generated@@254 $generated@@256))) ($generated@@238 $generated@@256 $generated@@255))
 :pattern ( ($generated@@83 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@154 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@257 $generated@@258) $generated@@258)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@66)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (= (type $generated@@265) ($generated@@143 $generated@@167)) (= (type $generated@@266) $generated@@167)) (= (type $generated@@267) $generated@@66)) (and ($generated@@154 $generated@@265 ($generated@@263 $generated@@267)) ($generated@@238 $generated@@266 $generated@@267))) ($generated@@154 ($generated@@142 $generated@@265 $generated@@266) ($generated@@263 $generated@@267)))
 :pattern ( ($generated@@154 ($generated@@142 $generated@@265 $generated@@266) ($generated@@263 $generated@@267)))
)))
(assert  (and (= ($generated@@1 $generated@@270) 18) (forall (($generated@@271 Int) ) (! (= (type ($generated@@268 $generated@@271)) $generated@@270)
 :pattern ( ($generated@@268 $generated@@271))
))))
(assert (forall (($generated@@272 Int) ) (!  (=> (and (<= 0 $generated@@272) (< $generated@@272 65536)) (= ($generated@@269 ($generated@@268 $generated@@272)) $generated@@272))
 :pattern ( ($generated@@268 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@66) (= (type $generated@@276) $generated@@66)) (= (type $generated@@277) $generated@@167)) (= (type $generated@@278) $generated@@167)) (= (type $generated@@279) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@273 $generated@@279)) (= ($generated@@76 ($generated@@237 $generated@@277 $generated@@278) ($generated@@157 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@76 ($generated@@237 $generated@@277 $generated@@278) ($generated@@157 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@70)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@158) (= ($generated@@156 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@158) ($generated@@156 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@167) (= (type $generated@@285) $generated@@167)) (= $generated@@283 ($generated@@237 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@156 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@286 ($generated@@172 $generated@@287)) 0)
 :pattern ( ($generated@@172 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
 (=> (= (type $generated@@288) ($generated@@143 $generated@@290)) (= ($generated@@286 ($generated@@142 $generated@@288 $generated@@289)) (+ 1 ($generated@@286 $generated@@288)))))
 :pattern ( ($generated@@142 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@270) (and (and (= ($generated@@268 ($generated@@269 $generated@@291)) $generated@@291) (<= 0 ($generated@@269 $generated@@291))) (< ($generated@@269 $generated@@291) 65536)))
 :pattern ( ($generated@@269 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@167)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@66) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@274 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@76 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@274 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@298) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@299) $generated@@167)) (= (type $generated@@300) $generated@@66)) ($generated@@134 $generated@@297 $generated@@298)) ($generated@@274 $generated@@299 $generated@@300 $generated@@297)) ($generated@@274 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@134 $generated@@297 $generated@@298) ($generated@@274 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@302) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@304) $generated@@66)) ($generated@@134 $generated@@301 $generated@@302)) ($generated@@76 $generated@@303 $generated@@304 $generated@@301)) ($generated@@76 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@134 $generated@@301 $generated@@302) ($generated@@76 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@78 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@81 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@78 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@83 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@78 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 20)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@78 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@83 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@83 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@81 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@78 $generated@@348 $generated@@2)) (= ($generated@@177 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@83 $generated@@347 $generated@@349))) (<= ($generated ($generated@@83 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@83 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@177 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@167) ($generated@@238 $generated@@353 $generated@@138)) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@353)) $generated@@353) ($generated@@154 ($generated@@350 $generated@@2 $generated@@353) $generated@@138)))
 :pattern ( ($generated@@238 $generated@@353 $generated@@138))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 Int) ) (! (let (($generated@@357 ($generated@@144 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@357))
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 Int) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (= (type $generated@@358) ($generated@@143 $generated@@361)) (and (=> (= $generated@@359 ($generated@@286 $generated@@358)) (= ($generated@@354 ($generated@@142 $generated@@358 $generated@@360) $generated@@359) $generated@@360)) (=> (not (= $generated@@359 ($generated@@286 $generated@@358))) (= ($generated@@354 ($generated@@142 $generated@@358 $generated@@360) $generated@@359) ($generated@@354 $generated@@358 $generated@@359))))))
 :pattern ( ($generated@@354 ($generated@@142 $generated@@358 $generated@@360) $generated@@359))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@315 (type $generated@@362))))
(let (($generated@@364 ($generated@@314 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@313 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@312 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@311 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@315 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@78 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@315 (type $generated@@369))))
(let (($generated@@371 ($generated@@314 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@313 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@312 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@83 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@333 (type $generated@@373))))
(let (($generated@@375 ($generated@@332 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@331 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@330 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@83 ($generated@@329 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@329 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@333 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@78 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@333 (type $generated@@380))))
(let (($generated@@382 ($generated@@332 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@331 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@330 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@83 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@78 $generated@@167 $generated@@2)) (= (type $generated@@385) $generated@@66)) (= ($generated@@154 $generated@@384 ($generated@@176 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@167) (< 0 ($generated ($generated@@83 $generated@@384 $generated@@386)))) ($generated@@238 $generated@@386 $generated@@385))
 :pattern ( ($generated@@83 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@154 $generated@@384 ($generated@@176 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
 (=> (= (type $generated@@387) ($generated@@143 $generated@@389)) (= ($generated@@141 $generated@@387 $generated@@388) (exists (($generated@@390 Int) ) (!  (and (and (<= 0 $generated@@390) (< $generated@@390 ($generated@@286 $generated@@387))) (= ($generated@@354 $generated@@387 $generated@@390) $generated@@388))
 :pattern ( ($generated@@354 $generated@@387 $generated@@390))
)))))
 :pattern ( ($generated@@141 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@78 $generated@@167 $generated@@4)) (= (type $generated@@392) $generated@@66)) (= (type $generated@@393) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@391 ($generated@@247 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@167) ($generated@@0 ($generated@@83 $generated@@391 $generated@@394))) ($generated@@274 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@83 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@76 $generated@@391 ($generated@@247 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@78 $generated@@167 $generated@@4)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@395 ($generated@@252 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@167) ($generated@@0 ($generated@@83 $generated@@395 $generated@@398))) ($generated@@274 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@83 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@395 ($generated@@252 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@83 ($generated@@306 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@83 ($generated@@306 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@78 $generated@@167 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@315 (type $generated@@404))))
(let (($generated@@406 ($generated@@314 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@78 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@313 $generated@@167 $generated@@167)) (= (type $generated@@408) $generated@@167)) (= ($generated@@0 ($generated@@83 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@407) ($generated@@165 ($generated@@350 $generated@@158 $generated@@408)))) (= ($generated@@83 ($generated@@402 $generated@@407) ($generated@@165 ($generated@@350 $generated@@158 $generated@@408))) ($generated@@166 ($generated@@350 $generated@@158 $generated@@408))))))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@78 $generated@@167 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@333 (type $generated@@412))))
(let (($generated@@414 ($generated@@332 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@78 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@331 $generated@@167 $generated@@167)) (= (type $generated@@416) $generated@@167)) (= ($generated@@0 ($generated@@83 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@83 ($generated@@329 $generated@@415) ($generated@@165 ($generated@@350 $generated@@158 $generated@@416)))) (= ($generated@@83 ($generated@@410 $generated@@415) ($generated@@165 ($generated@@350 $generated@@158 $generated@@416))) ($generated@@166 ($generated@@350 $generated@@158 $generated@@416))))))
 :pattern ( ($generated@@83 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@314 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@313 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@83 ($generated@@366 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@83 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@417) $generated@@421))
 :pattern ( ($generated@@83 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@332 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@331 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@83 ($generated@@377 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@83 ($generated@@329 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@83 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@83 ($generated@@329 $generated@@422) $generated@@426))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@66)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@313 $generated@@167 $generated@@167)) (= (type $generated@@431) $generated@@66)) (= (type $generated@@432) $generated@@66)) (= (type $generated@@433) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@167) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@83 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@83 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@76 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@66)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@331 $generated@@167 $generated@@167)) (= (type $generated@@439) $generated@@66)) (= (type $generated@@440) $generated@@66)) (= (type $generated@@441) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@167) ($generated@@0 ($generated@@83 ($generated@@329 $generated@@438) $generated@@442))) (and ($generated@@274 ($generated@@83 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@274 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@83 ($generated@@329 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@76 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@443) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@445) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@443 $generated@@445))) (and ($generated@@134 $generated@@443 $generated@@444) ($generated@@134 $generated@@444 $generated@@445))) ($generated@@134 $generated@@443 $generated@@445))
 :pattern ( ($generated@@134 $generated@@443 $generated@@444) ($generated@@134 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@78 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@333 (type $generated@@448))))
(let (($generated@@450 ($generated@@332 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@331 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@330 $generated@@450 $generated@@449)) (= ($generated@@329 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@329 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@333 (type $generated@@451))))
(let (($generated@@453 ($generated@@332 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@331 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@330 $generated@@453 $generated@@452)) (= ($generated@@377 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@377 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@333 (type $generated@@454))))
(let (($generated@@456 ($generated@@332 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@331 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@330 $generated@@456 $generated@@455)) (= ($generated@@409 $generated@@454) ($generated@@446 $generated@@167))))))
 :pattern ( ($generated@@409 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@315 (type $generated@@457))))
(let (($generated@@459 ($generated@@314 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@313 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@312 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@167) (= (type $generated@@461) $generated@@167)) ($generated@@0 ($generated@@83 ($generated@@401 $generated@@457) ($generated@@292 ($generated@@237 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@401 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@333 (type $generated@@462))))
(let (($generated@@464 ($generated@@332 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@331 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@330 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@167) (= (type $generated@@466) $generated@@167)) ($generated@@0 ($generated@@83 ($generated@@409 $generated@@462) ($generated@@292 ($generated@@237 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@167) ($generated@@238 $generated@@467 $generated@@46)) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@467)) $generated@@467) ($generated@@154 ($generated@@350 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@167) ($generated@@238 $generated@@468 $generated@@47)) (and (= ($generated@@292 ($generated@@350 $generated@@3 $generated@@468)) $generated@@468) ($generated@@154 ($generated@@350 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@167) ($generated@@238 $generated@@469 $generated@@44)) (and (= ($generated@@292 ($generated@@350 $generated@@4 $generated@@469)) $generated@@469) ($generated@@154 ($generated@@350 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@469 $generated@@44))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@167) ($generated@@238 $generated@@470 $generated@@45)) (and (= ($generated@@292 ($generated@@350 $generated@@270 $generated@@470)) $generated@@470) ($generated@@154 ($generated@@350 $generated@@270 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@66) (= ($generated@@238 ($generated@@292 $generated@@471) $generated@@472) ($generated@@154 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@238 ($generated@@292 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@81 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@78 $generated@@474 $generated@@2)) (<= 0 ($generated@@305 $generated@@473))))
 :pattern ( ($generated@@305 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@144 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@143 $generated@@476)) (<= 0 ($generated@@286 $generated@@475))))
 :pattern ( ($generated@@286 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@427 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@427 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@427 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@427 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@74 ($generated@@427 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@66) (= (type $generated@@490) $generated@@66)) (= ($generated@@487 ($generated@@435 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@435 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@66) (= (type $generated@@494) $generated@@66)) (= ($generated@@491 ($generated@@435 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@435 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@66) (= (type $generated@@496) $generated@@66)) (= ($generated@@74 ($generated@@435 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@167) (= (type $generated@@498) $generated@@167)) (= ($generated@@280 ($generated@@237 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@66) (= (type $generated@@502) $generated@@66)) (= ($generated@@499 ($generated@@157 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@157 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@157 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@157 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@167) (= (type $generated@@508) $generated@@167)) (= ($generated@@165 ($generated@@237 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@237 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@167) (= (type $generated@@510) $generated@@167)) (= ($generated@@166 ($generated@@237 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@237 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@143 $generated@@167)) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@511 ($generated@@263 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@286 $generated@@511))) ($generated@@274 ($generated@@354 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@354 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@76 $generated@@511 ($generated@@263 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@77 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@77 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@517 ($generated@@247 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@247 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@66)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@521 ($generated@@252 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@252 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@66) (= ($generated@@74 ($generated@@252 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@525 ($generated@@176 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@176 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@66) (= ($generated@@74 ($generated@@176 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@176 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@529 ($generated@@263 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@263 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@66) (= ($generated@@74 ($generated@@263 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@263 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@350 $generated@@534 ($generated@@292 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@292 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@313 $generated@@167 $generated@@167)) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) (= ($generated@@154 $generated@@535 ($generated@@427 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@167) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@535) $generated@@538))) (and ($generated@@238 ($generated@@83 ($generated@@402 $generated@@535) $generated@@538) $generated@@537) ($generated@@238 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@83 ($generated@@402 $generated@@535) $generated@@538))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@154 $generated@@535 ($generated@@427 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@331 $generated@@167 $generated@@167)) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) (= ($generated@@154 $generated@@539 ($generated@@435 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@167) ($generated@@0 ($generated@@83 ($generated@@329 $generated@@539) $generated@@542))) (and ($generated@@238 ($generated@@83 ($generated@@410 $generated@@539) $generated@@542) $generated@@541) ($generated@@238 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@539) $generated@@542))
 :pattern ( ($generated@@83 ($generated@@329 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@154 $generated@@539 ($generated@@435 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@167) (= (type $generated@@546) $generated@@167)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@237 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@237 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@167) (= (type $generated@@548) $generated@@167)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@237 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@237 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@167) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) $generated@@66)) ($generated@@238 $generated@@549 ($generated@@427 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@350 ($generated@@313 $generated@@167 $generated@@167) $generated@@549)) $generated@@549) ($generated@@154 ($generated@@350 ($generated@@313 $generated@@167 $generated@@167) $generated@@549) ($generated@@427 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@238 $generated@@549 ($generated@@427 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@167) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) $generated@@66)) ($generated@@238 $generated@@552 ($generated@@435 $generated@@553 $generated@@554))) (and (= ($generated@@292 ($generated@@350 ($generated@@331 $generated@@167 $generated@@167) $generated@@552)) $generated@@552) ($generated@@154 ($generated@@350 ($generated@@331 $generated@@167 $generated@@167) $generated@@552) ($generated@@435 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@238 $generated@@552 ($generated@@435 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@66) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) $generated@@167)) ($generated@@238 $generated@@557 ($generated@@157 $generated@@555 $generated@@556))) (and (= ($generated@@292 ($generated@@350 $generated@@158 $generated@@557)) $generated@@557) ($generated@@154 ($generated@@350 $generated@@158 $generated@@557) ($generated@@157 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@238 $generated@@557 ($generated@@157 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@83 ($generated@@446 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@83 ($generated@@446 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@71)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@66) (= (type $generated@@563) $generated@@66)) (and (= ($generated@@74 ($generated@@157 $generated@@562 $generated@@563)) $generated@@62) (= ($generated@@560 ($generated@@157 $generated@@562 $generated@@563)) $generated@@64)))
 :pattern ( ($generated@@157 $generated@@562 $generated@@563))
)))
(assert  (and (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@144 (type $generated@@566))))
(= (type ($generated@@564 $generated@@566)) ($generated@@143 $generated@@567)))
 :pattern ( ($generated@@564 $generated@@566))
)) (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@144 (type $generated@@568))))
(= (type ($generated@@565 $generated@@568)) $generated@@569))
 :pattern ( ($generated@@565 $generated@@568))
))))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
 (=> (= (type $generated@@570) ($generated@@143 $generated@@572)) (and (= ($generated@@564 ($generated@@142 $generated@@570 $generated@@571)) $generated@@570) (= ($generated@@565 ($generated@@142 $generated@@570 $generated@@571)) $generated@@571))))
 :pattern ( ($generated@@142 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@158) (= ($generated@@543 ($generated@@292 $generated@@573)) ($generated@@544 $generated@@573)))
 :pattern ( ($generated@@543 ($generated@@292 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@167) ($generated@@238 $generated@@574 ($generated@@77 0))) (and (= ($generated@@292 ($generated@@350 $generated@@2 $generated@@574)) $generated@@574) ($generated@@154 ($generated@@350 ($generated@@78 $generated@@167 $generated@@4) $generated@@574) ($generated@@77 0))))
 :pattern ( ($generated@@238 $generated@@574 ($generated@@77 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@167) (= (type $generated@@576) $generated@@66)) ($generated@@238 $generated@@575 ($generated@@247 $generated@@576))) (and (= ($generated@@292 ($generated@@350 ($generated@@78 $generated@@167 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@350 ($generated@@78 $generated@@167 $generated@@4) $generated@@575) ($generated@@247 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@575 ($generated@@247 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@167) (= (type $generated@@578) $generated@@66)) ($generated@@238 $generated@@577 ($generated@@252 $generated@@578))) (and (= ($generated@@292 ($generated@@350 ($generated@@78 $generated@@167 $generated@@4) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@350 ($generated@@78 $generated@@167 $generated@@4) $generated@@577) ($generated@@252 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@577 ($generated@@252 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@167) (= (type $generated@@580) $generated@@66)) ($generated@@238 $generated@@579 ($generated@@176 $generated@@580))) (and (= ($generated@@292 ($generated@@350 ($generated@@78 $generated@@167 $generated@@2) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@350 ($generated@@78 $generated@@167 $generated@@2) $generated@@579) ($generated@@176 $generated@@580))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@176 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@167) (= (type $generated@@582) $generated@@66)) ($generated@@238 $generated@@581 ($generated@@263 $generated@@582))) (and (= ($generated@@292 ($generated@@350 ($generated@@143 $generated@@167) $generated@@581)) $generated@@581) ($generated@@154 ($generated@@350 ($generated@@143 $generated@@167) $generated@@581) ($generated@@263 $generated@@582))))
 :pattern ( ($generated@@238 $generated@@581 ($generated@@263 $generated@@582)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@560 $generated@@138) $generated@@65))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@78 $generated@@167 $generated@@2)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@583 ($generated@@176 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@167) (< 0 ($generated ($generated@@83 $generated@@583 $generated@@586)))) ($generated@@274 $generated@@586 $generated@@584 $generated@@585))
 :pattern ( ($generated@@83 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@76 $generated@@583 ($generated@@176 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@158) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@273 $generated@@589) (and ($generated@@156 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@66) ($generated@@76 $generated@@587 ($generated@@157 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@76 $generated@@587 ($generated@@157 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@274 ($generated@@165 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@274 ($generated@@165 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@158) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@273 $generated@@593) (and ($generated@@156 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@66) ($generated@@76 $generated@@591 ($generated@@157 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@76 $generated@@591 ($generated@@157 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@274 ($generated@@166 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@274 ($generated@@166 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) (= ($generated@@154 $generated@@595 $generated@@138)  (and (<= ($generated@@257 0) ($generated $generated@@595)) (< ($generated $generated@@595) 4294967296))))
 :pattern ( ($generated@@154 $generated@@595 $generated@@138))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@167) (= (type $generated@@597) $generated@@167)) (= ($generated@@237 ($generated@@259 $generated@@596) ($generated@@259 $generated@@597)) ($generated@@259 ($generated@@237 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@237 ($generated@@259 $generated@@596) ($generated@@259 $generated@@597)))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@257 $generated@@598))) ($generated@@259 ($generated@@292 ($generated@@8 $generated@@598))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@257 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ) (! (= ($generated@@292 ($generated@@259 $generated@@599)) ($generated@@259 ($generated@@292 $generated@@599)))
 :pattern ( ($generated@@292 ($generated@@259 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@144 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@143 $generated@@601)) (= ($generated@@286 $generated@@600) 0)) (= $generated@@600 ($generated@@172 $generated@@601))))
 :pattern ( ($generated@@286 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@603)))
 (=> (and (and (= (type $generated@@602) ($generated@@78 $generated@@605 $generated@@2)) (= (type $generated@@604) $generated@@2)) (<= 0 ($generated $generated@@604))) (= ($generated@@305 ($generated@@84 $generated@@602 $generated@@603 $generated@@604)) (+ (- ($generated@@305 $generated@@602) ($generated ($generated@@83 $generated@@602 $generated@@603))) ($generated $generated@@604)))))
 :pattern ( ($generated@@305 ($generated@@84 $generated@@602 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@607) $generated@@2)) ($generated@@76 $generated@@607 $generated@@46 $generated@@606))
 :pattern ( ($generated@@76 $generated@@607 $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@609) $generated@@3)) ($generated@@76 $generated@@609 $generated@@47 $generated@@608))
 :pattern ( ($generated@@76 $generated@@609 $generated@@47 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@611) $generated@@4)) ($generated@@76 $generated@@611 $generated@@44 $generated@@610))
 :pattern ( ($generated@@76 $generated@@611 $generated@@44 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@613) $generated@@270)) ($generated@@76 $generated@@613 $generated@@45 $generated@@612))
 :pattern ( ($generated@@76 $generated@@613 $generated@@45 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@615) $generated@@167)) ($generated@@76 $generated@@615 $generated@@48 $generated@@614))
 :pattern ( ($generated@@76 $generated@@615 $generated@@48 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@143 $generated@@167)) (= (type $generated@@617) $generated@@66)) (= ($generated@@154 $generated@@616 ($generated@@263 $generated@@617)) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@286 $generated@@616))) ($generated@@238 ($generated@@354 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@354 $generated@@616 $generated@@618))
))))
 :pattern ( ($generated@@154 $generated@@616 ($generated@@263 $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@143 $generated@@167)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@286 $generated@@620))) (< ($generated@@544 ($generated@@350 $generated@@158 ($generated@@354 $generated@@620 $generated@@621))) ($generated@@619 $generated@@620))))
 :pattern ( ($generated@@544 ($generated@@350 $generated@@158 ($generated@@354 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@313 $generated@@167 $generated@@167)) (= (type $generated@@623) $generated@@66)) (= (type $generated@@624) $generated@@66)) ($generated@@154 $generated@@622 ($generated@@427 $generated@@623 $generated@@624))) (and (and ($generated@@154 ($generated@@311 $generated@@622) ($generated@@247 $generated@@623)) ($generated@@154 ($generated@@366 $generated@@622) ($generated@@247 $generated@@624))) ($generated@@154 ($generated@@401 $generated@@622) ($generated@@247 ($generated@@157 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@154 $generated@@622 ($generated@@427 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@331 $generated@@167 $generated@@167)) (= (type $generated@@626) $generated@@66)) (= (type $generated@@627) $generated@@66)) ($generated@@154 $generated@@625 ($generated@@435 $generated@@626 $generated@@627))) (and (and ($generated@@154 ($generated@@329 $generated@@625) ($generated@@252 $generated@@626)) ($generated@@154 ($generated@@377 $generated@@625) ($generated@@252 $generated@@627))) ($generated@@154 ($generated@@409 $generated@@625) ($generated@@252 ($generated@@157 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@154 $generated@@625 ($generated@@435 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@154 $generated@@628 $generated@@46))
 :pattern ( ($generated@@154 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@154 $generated@@629 $generated@@47))
 :pattern ( ($generated@@154 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@154 $generated@@630 $generated@@44))
 :pattern ( ($generated@@154 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@270) ($generated@@154 $generated@@631 $generated@@45))
 :pattern ( ($generated@@154 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@167) ($generated@@154 $generated@@632 $generated@@48))
 :pattern ( ($generated@@154 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Bool)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Bool)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Bool)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Bool)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@633) ($generated@@183 $generated@@79 $generated@@4)) (= (type $generated@@634) $generated@@79)) (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@637) ($generated@@143 $generated@@167))) (= (type $generated@@640) ($generated@@143 $generated@@167))) (= (type $generated@@644) ($generated@@143 $generated@@167))) (= (type $generated@@648) ($generated@@143 $generated@@167))) (= (type $generated@@649) ($generated@@143 $generated@@167))) (= (type $generated@@650) ($generated@@143 $generated@@167))) (= (type $generated@@652) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@654) ($generated@@143 $generated@@167))) (= (type $generated@@656) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@657) ($generated@@143 $generated@@167))) (= (type $generated@@659) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@660) ($generated@@143 $generated@@167))) (= (type $generated@@662) ($generated@@143 $generated@@167))) (= (type $generated@@663) ($generated@@143 $generated@@167))) (= (type $generated@@664) ($generated@@143 $generated@@167))) (= (type $generated@@665) ($generated@@143 $generated@@167))) (= (type $generated@@666) ($generated@@143 $generated@@167))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@668  (=> (and (= $generated@@633 ($generated@@182 $generated@@634 $generated@@635 $generated@@60 false)) (= $generated@@636 ($generated@@257 1))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (and (<= ($generated@@257 0) $generated@@636) (< $generated@@636 4294967296))) (=> (and (<= ($generated@@257 0) $generated@@636) (< $generated@@636 4294967296)) (=> (and (= $generated@@637 ($generated@@259 ($generated@@142 ($generated@@172 $generated@@167) ($generated@@292 ($generated@@8 ($generated@@257 1)))))) (= $generated@@638 ($generated@@257 1))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= ($generated@@257 0) $generated@@638) (< $generated@@638 4294967296))) (=> (and (<= ($generated@@257 0) $generated@@638) (< $generated@@638 4294967296)) (=> (= $generated@@639 ($generated@@257 2)) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@257 0) $generated@@639) (< $generated@@639 4294967296))) (=> (and (<= ($generated@@257 0) $generated@@639) (< $generated@@639 4294967296)) (=> (and (= $generated@@640 ($generated@@259 ($generated@@142 ($generated@@142 ($generated@@172 $generated@@167) ($generated@@292 ($generated@@8 ($generated@@257 1)))) ($generated@@292 ($generated@@8 ($generated@@257 2)))))) (= $generated@@641 ($generated@@257 1))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@257 0) $generated@@641) (< $generated@@641 4294967296))) (=> (and (<= ($generated@@257 0) $generated@@641) (< $generated@@641 4294967296)) (=> (= $generated@@642 ($generated@@257 2)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@257 0) $generated@@642) (< $generated@@642 4294967296))) (=> (and (<= ($generated@@257 0) $generated@@642) (< $generated@@642 4294967296)) (=> (= $generated@@643 ($generated@@257 3)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@257 0) $generated@@643) (< $generated@@643 4294967296))) (=> (and (<= ($generated@@257 0) $generated@@643) (< $generated@@643 4294967296)) (=> (and (= $generated@@644 ($generated@@259 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@172 $generated@@167) ($generated@@292 ($generated@@8 ($generated@@257 1)))) ($generated@@292 ($generated@@8 ($generated@@257 2)))) ($generated@@292 ($generated@@8 ($generated@@257 3)))))) (= $generated@@645 ($generated@@257 1))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@257 0) $generated@@645) (< $generated@@645 4294967296))) (=> (and (<= ($generated@@257 0) $generated@@645) (< $generated@@645 4294967296)) (=> (= $generated@@646 ($generated@@257 2)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@257 0) $generated@@646) (< $generated@@646 4294967296))) (=> (and (<= ($generated@@257 0) $generated@@646) (< $generated@@646 4294967296)) (=> (= $generated@@647 ($generated@@257 3)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@257 0) $generated@@647) (< $generated@@647 4294967296))) (=> (and (<= ($generated@@257 0) $generated@@647) (< $generated@@647 4294967296)) (=> (and (and (= $generated@@648 ($generated@@259 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@172 $generated@@167) ($generated@@292 ($generated@@8 ($generated@@257 1)))) ($generated@@292 ($generated@@8 ($generated@@257 2)))) ($generated@@292 ($generated@@8 ($generated@@257 3)))))) (= $generated@@649 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@172 $generated@@167) ($generated@@292 $generated@@637)) ($generated@@292 $generated@@644)) ($generated@@292 $generated@@637)))) (and (= $generated@@650 ($generated@@259 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@172 $generated@@167) ($generated@@292 ($generated@@268 77))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 109))) ($generated@@292 ($generated@@268 98))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 114))) ($generated@@292 ($generated@@268 115))) ($generated@@292 ($generated@@268 104))) ($generated@@292 ($generated@@268 105))) ($generated@@292 ($generated@@268 112))) ($generated@@292 ($generated@@268 32))) ($generated@@292 ($generated@@268 49))))) (= $generated@@651 ($generated@@141 $generated@@649 ($generated@@292 $generated@@637))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) $generated@@651) (=> $generated@@651 (=> (and ($generated@@273 $generated@@652) ($generated@@653 $generated@@652)) (=> (and (and (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@79) (=> (and (not (= $generated@@669 $generated@@634)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@635 $generated@@669) $generated@@60))) (= ($generated@@83 $generated@@652 $generated@@669) ($generated@@83 $generated@@635 $generated@@669))))
 :pattern ( ($generated@@83 $generated@@652 $generated@@669))
)) ($generated@@134 $generated@@635 $generated@@652)) (and (= $generated@@654 ($generated@@259 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@172 $generated@@167) ($generated@@292 ($generated@@268 77))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 109))) ($generated@@292 ($generated@@268 98))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 114))) ($generated@@292 ($generated@@268 115))) ($generated@@292 ($generated@@268 104))) ($generated@@292 ($generated@@268 105))) ($generated@@292 ($generated@@268 112))) ($generated@@292 ($generated@@268 32))) ($generated@@292 ($generated@@268 50))))) (= $generated@@655  (not ($generated@@141 $generated@@649 ($generated@@292 $generated@@640)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@655) (=> $generated@@655 (=> (and ($generated@@273 $generated@@656) ($generated@@653 $generated@@656)) (=> (and (and (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@79) (=> (and (not (= $generated@@670 $generated@@634)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@652 $generated@@670) $generated@@60))) (= ($generated@@83 $generated@@656 $generated@@670) ($generated@@83 $generated@@652 $generated@@670))))
 :pattern ( ($generated@@83 $generated@@656 $generated@@670))
)) ($generated@@134 $generated@@652 $generated@@656)) (and (= $generated@@657 ($generated@@259 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@172 $generated@@167) ($generated@@292 ($generated@@268 77))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 109))) ($generated@@292 ($generated@@268 98))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 114))) ($generated@@292 ($generated@@268 115))) ($generated@@292 ($generated@@268 104))) ($generated@@292 ($generated@@268 105))) ($generated@@292 ($generated@@268 112))) ($generated@@292 ($generated@@268 32))) ($generated@@292 ($generated@@268 51))))) (= $generated@@658 ($generated@@141 $generated@@649 ($generated@@292 $generated@@644))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@658) (=> $generated@@658 (=> (and (and (and ($generated@@273 $generated@@659) ($generated@@653 $generated@@659)) (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@79) (=> (and (not (= $generated@@671 $generated@@634)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@656 $generated@@671) $generated@@60))) (= ($generated@@83 $generated@@659 $generated@@671) ($generated@@83 $generated@@656 $generated@@671))))
 :pattern ( ($generated@@83 $generated@@659 $generated@@671))
))) (and (and ($generated@@134 $generated@@656 $generated@@659) (= $generated@@660 ($generated@@259 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@142 ($generated@@172 $generated@@167) ($generated@@292 ($generated@@268 77))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 109))) ($generated@@292 ($generated@@268 98))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 114))) ($generated@@292 ($generated@@268 115))) ($generated@@292 ($generated@@268 104))) ($generated@@292 ($generated@@268 105))) ($generated@@292 ($generated@@268 112))) ($generated@@292 ($generated@@268 32))) ($generated@@292 ($generated@@268 51))) ($generated@@292 ($generated@@268 32))) ($generated@@292 ($generated@@268 118))) ($generated@@292 ($generated@@268 97))) ($generated@@292 ($generated@@268 108))) ($generated@@292 ($generated@@268 117))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 32))) ($generated@@292 ($generated@@268 101))) ($generated@@292 ($generated@@268 113))) ($generated@@292 ($generated@@268 117))) ($generated@@292 ($generated@@268 97))) ($generated@@292 ($generated@@268 108))) ($generated@@292 ($generated@@268 105))) ($generated@@292 ($generated@@268 116))) ($generated@@292 ($generated@@268 121)))))) (and (= $generated@@661 ($generated@@141 $generated@@649 ($generated@@292 $generated@@648))) (= (ControlFlow 0 2) (- 0 1))))) $generated@@661)))))))))))))))))))))))))))))))))))))))))
(let (($generated@@672  (=> (and ($generated@@273 $generated@@635) ($generated@@653 $generated@@635)) (=> (and (and (and ($generated@@154 $generated@@662 ($generated@@263 $generated@@138)) ($generated@@76 $generated@@662 ($generated@@263 $generated@@138) $generated@@635)) true) (and (and ($generated@@154 $generated@@663 ($generated@@263 $generated@@138)) ($generated@@76 $generated@@663 ($generated@@263 $generated@@138) $generated@@635)) true)) (=> (and (and (and (and ($generated@@154 $generated@@664 ($generated@@263 $generated@@138)) ($generated@@76 $generated@@664 ($generated@@263 $generated@@138) $generated@@635)) true) (and (and ($generated@@154 $generated@@665 ($generated@@263 $generated@@138)) ($generated@@76 $generated@@665 ($generated@@263 $generated@@138) $generated@@635)) true)) (and (and (and ($generated@@154 $generated@@666 ($generated@@263 ($generated@@263 $generated@@138))) ($generated@@76 $generated@@666 ($generated@@263 ($generated@@263 $generated@@138)) $generated@@635)) true) (and (= 2 $generated@@667) (= (ControlFlow 0 15) 2)))) $generated@@668)))))
$generated@@672)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@156)) (= (type $generated@@257) $generated@@156)) (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@252 $generated@@258)) (= ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@71)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@147) (= ($generated@@145 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) ($generated@@145 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@156) (= (type $generated@@264) $generated@@156)) (= $generated@@262 ($generated@@228 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@145 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@156)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@67) (= (type $generated@@277) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@77 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@280) $generated@@156)) (= (type $generated@@281) $generated@@67)) ($generated@@135 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@135 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@285) $generated@@67)) ($generated@@135 $generated@@282 $generated@@283)) ($generated@@77 $generated@@284 $generated@@285 $generated@@282)) ($generated@@77 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@135 $generated@@282 $generated@@283) ($generated@@77 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@79 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@82 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@79 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@84 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@79 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@82 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@79 $generated@@329 $generated@@2)) (= ($generated@@162 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@84 $generated@@328 $generated@@330))) (<= ($generated ($generated@@84 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@84 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@162 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@156) ($generated@@229 $generated@@334 $generated@@139)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@334)) $generated@@334) ($generated@@143 ($generated@@331 $generated@@80 $generated@@334) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@334 $generated@@139))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@156) ($generated@@229 $generated@@335 $generated@@225)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@335)) $generated@@335) ($generated@@143 ($generated@@331 $generated@@80 $generated@@335) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@335 $generated@@225))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@80) (= ($generated@@143 $generated@@336 $generated@@225)  (and ($generated@@143 $generated@@336 $generated@@139) (not (= $generated@@336 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@336 $generated@@225))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@296 (type $generated@@337))))
(let (($generated@@339 ($generated@@295 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@294 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@293 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@292 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@79 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(let (($generated@@346 ($generated@@295 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@294 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@293 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@314 (type $generated@@348))))
(let (($generated@@350 ($generated@@313 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@312 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@311 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@310 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@314 (type $generated@@355))))
(let (($generated@@357 ($generated@@313 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@312 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@311 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@360) $generated@@67)) (= ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@359 $generated@@361)))) ($generated@@229 $generated@@361 $generated@@360))
 :pattern ( ($generated@@84 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@156) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@253 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@156) ($generated@@0 ($generated@@84 $generated@@366 $generated@@369))) ($generated@@253 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@84 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@84 ($generated@@287 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@84 ($generated@@287 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@296 (type $generated@@375))))
(let (($generated@@377 ($generated@@295 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@379) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@314 (type $generated@@383))))
(let (($generated@@385 ($generated@@313 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@387) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387)))) (= ($generated@@84 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@295 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@294 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@84 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@84 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@313 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@312 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))) (and ($generated@@253 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@253 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@67)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))) (and ($generated@@253 ($generated@@84 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@253 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@415) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@414 $generated@@416))) (and ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))) ($generated@@135 $generated@@414 $generated@@416))
 :pattern ( ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@79 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@314 (type $generated@@419))))
(let (($generated@@421 ($generated@@313 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@312 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@311 $generated@@421 $generated@@420)) (= ($generated@@310 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@310 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@314 (type $generated@@422))))
(let (($generated@@424 ($generated@@313 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@312 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@311 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@314 (type $generated@@425))))
(let (($generated@@427 ($generated@@313 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@312 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@311 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@156))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@296 (type $generated@@428))))
(let (($generated@@430 ($generated@@295 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@294 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@293 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@156) (= (type $generated@@432) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@428) ($generated@@273 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@314 (type $generated@@433))))
(let (($generated@@435 ($generated@@313 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@312 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@311 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@433) ($generated@@273 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@229 $generated@@438 $generated@@46)) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@438)) $generated@@438) ($generated@@143 ($generated@@331 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@229 $generated@@439 $generated@@47)) (and (= ($generated@@273 ($generated@@331 $generated@@3 $generated@@439)) $generated@@439) ($generated@@143 ($generated@@331 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@44)) (and (= ($generated@@273 ($generated@@331 $generated@@4 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@331 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@45)) (and (= ($generated@@273 ($generated@@331 $generated@@441 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@331 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@67) (= ($generated@@229 ($generated@@273 $generated@@443) $generated@@444) ($generated@@143 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@229 ($generated@@273 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@82 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@79 $generated@@446 $generated@@2)) (<= 0 ($generated@@286 $generated@@445))))
 :pattern ( ($generated@@286 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@268 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@267 $generated@@448)) (<= 0 ($generated@@266 $generated@@447))))
 :pattern ( ($generated@@266 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@75 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) (= (type $generated@@470) $generated@@156)) (= ($generated@@259 ($generated@@228 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@146 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@146 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@146 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@156) (= (type $generated@@480) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@268 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@267 $generated@@156)) (= (type $generated@@490) $generated@@67)) (= (type $generated@@491) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@266 $generated@@489))) ($generated@@253 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@78 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@78 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@238 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@243 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@161 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@331 $generated@@512 ($generated@@273 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@273 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@84 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))) (and ($generated@@229 ($generated@@84 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@229 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) (= (type $generated@@524) $generated@@156)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@228 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@273 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527)) $generated@@527) ($generated@@143 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@273 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530)) $generated@@530) ($generated@@143 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@156)) ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534))) (and (= ($generated@@273 ($generated@@331 $generated@@147 $generated@@535)) $generated@@535) ($generated@@143 ($generated@@331 $generated@@147 $generated@@535) ($generated@@146 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@84 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@84 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@146 $generated@@540 $generated@@541)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@147) (= ($generated@@521 ($generated@@273 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@273 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@156) ($generated@@229 $generated@@543 ($generated@@78 0))) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@543)) $generated@@543) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@543) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@543 ($generated@@78 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@156) (= (type $generated@@545) $generated@@67)) ($generated@@229 $generated@@544 ($generated@@238 $generated@@545))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544)) $generated@@544) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544) ($generated@@238 $generated@@545))))
 :pattern ( ($generated@@229 $generated@@544 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@243 $generated@@547))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@243 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@243 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@161 $generated@@549))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548) ($generated@@161 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@161 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@273 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@538 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@538 $generated@@225) $generated@@66))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@552 ($generated@@161 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@552 $generated@@555)))) ($generated@@253 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@84 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@77 $generated@@552 ($generated@@161 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@147) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@558) (and ($generated@@145 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@67) ($generated@@77 $generated@@556 ($generated@@146 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@146 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@253 ($generated@@154 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@253 ($generated@@154 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@147) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@562) (and ($generated@@145 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@67) ($generated@@77 $generated@@560 ($generated@@146 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@77 $generated@@560 ($generated@@146 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@253 ($generated@@155 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@156) (= (type $generated@@565) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)) ($generated@@248 ($generated@@228 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@273 ($generated@@248 $generated@@566)) ($generated@@248 ($generated@@273 $generated@@566)))
 :pattern ( ($generated@@273 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@268 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@267 $generated@@568)) (= ($generated@@266 $generated@@567) 0)) (= $generated@@567 ($generated@@265 $generated@@568))))
 :pattern ( ($generated@@266 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@79 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@286 ($generated@@85 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@286 $generated@@569) ($generated ($generated@@84 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@286 ($generated@@85 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@2)) ($generated@@77 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@3)) ($generated@@77 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@4)) ($generated@@77 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@77 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@441)) ($generated@@77 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@156)) ($generated@@77 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@267 $generated@@156)) (= (type $generated@@584) $generated@@67)) (= ($generated@@143 $generated@@583 ($generated@@483 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@266 $generated@@583))) ($generated@@229 ($generated@@484 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@484 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@143 $generated@@583 ($generated@@483 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@267 $generated@@156)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@266 $generated@@587))) (< ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@590) $generated@@67)) (= (type $generated@@591) $generated@@67)) ($generated@@143 $generated@@589 ($generated@@398 $generated@@590 $generated@@591))) (and (and ($generated@@143 ($generated@@292 $generated@@589) ($generated@@238 $generated@@590)) ($generated@@143 ($generated@@341 $generated@@589) ($generated@@238 $generated@@591))) ($generated@@143 ($generated@@372 $generated@@589) ($generated@@238 ($generated@@146 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@143 $generated@@589 ($generated@@398 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) ($generated@@143 $generated@@592 ($generated@@406 $generated@@593 $generated@@594))) (and (and ($generated@@143 ($generated@@310 $generated@@592) ($generated@@243 $generated@@593)) ($generated@@143 ($generated@@352 $generated@@592) ($generated@@243 $generated@@594))) ($generated@@143 ($generated@@380 $generated@@592) ($generated@@243 ($generated@@146 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@143 $generated@@592 ($generated@@406 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@143 $generated@@595 $generated@@46))
 :pattern ( ($generated@@143 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@143 $generated@@596 $generated@@47))
 :pattern ( ($generated@@143 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@143 $generated@@597 $generated@@44))
 :pattern ( ($generated@@143 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@441) ($generated@@143 $generated@@598 $generated@@45))
 :pattern ( ($generated@@143 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@156) ($generated@@143 $generated@@599 $generated@@48))
 :pattern ( ($generated@@143 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
